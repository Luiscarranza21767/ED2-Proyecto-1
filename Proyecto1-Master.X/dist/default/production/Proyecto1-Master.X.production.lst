

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Mar 03 12:16:00 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41     0000                     
    42                           ; Version 2.40
    43                           ; Generated 17/11/2021 GMT
    44                           ; 
    45                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0000                     	;# 
    78     0001                     	;# 
    79     0002                     	;# 
    80     0003                     	;# 
    81     0004                     	;# 
    82     0005                     	;# 
    83     0006                     	;# 
    84     0007                     	;# 
    85     0008                     	;# 
    86     0009                     	;# 
    87     000A                     	;# 
    88     000B                     	;# 
    89     000C                     	;# 
    90     000D                     	;# 
    91     000E                     	;# 
    92     000E                     	;# 
    93     000F                     	;# 
    94     0010                     	;# 
    95     0011                     	;# 
    96     0012                     	;# 
    97     0013                     	;# 
    98     0014                     	;# 
    99     0015                     	;# 
   100     0015                     	;# 
   101     0016                     	;# 
   102     0017                     	;# 
   103     0018                     	;# 
   104     0019                     	;# 
   105     001A                     	;# 
   106     001B                     	;# 
   107     001B                     	;# 
   108     001C                     	;# 
   109     001D                     	;# 
   110     001E                     	;# 
   111     001F                     	;# 
   112     0081                     	;# 
   113     0085                     	;# 
   114     0086                     	;# 
   115     0087                     	;# 
   116     0088                     	;# 
   117     0089                     	;# 
   118     008C                     	;# 
   119     008D                     	;# 
   120     008E                     	;# 
   121     008F                     	;# 
   122     0090                     	;# 
   123     0091                     	;# 
   124     0092                     	;# 
   125     0093                     	;# 
   126     0093                     	;# 
   127     0093                     	;# 
   128     0094                     	;# 
   129     0095                     	;# 
   130     0096                     	;# 
   131     0097                     	;# 
   132     0098                     	;# 
   133     0099                     	;# 
   134     009A                     	;# 
   135     009B                     	;# 
   136     009C                     	;# 
   137     009D                     	;# 
   138     009E                     	;# 
   139     009F                     	;# 
   140     0105                     	;# 
   141     0107                     	;# 
   142     0108                     	;# 
   143     0109                     	;# 
   144     010C                     	;# 
   145     010C                     	;# 
   146     010D                     	;# 
   147     010E                     	;# 
   148     010F                     	;# 
   149     0185                     	;# 
   150     0187                     	;# 
   151     0188                     	;# 
   152     0189                     	;# 
   153     018C                     	;# 
   154     018D                     	;# 
   155     0000                     	;# 
   156     0001                     	;# 
   157     0002                     	;# 
   158     0003                     	;# 
   159     0004                     	;# 
   160     0005                     	;# 
   161     0006                     	;# 
   162     0007                     	;# 
   163     0008                     	;# 
   164     0009                     	;# 
   165     000A                     	;# 
   166     000B                     	;# 
   167     000C                     	;# 
   168     000D                     	;# 
   169     000E                     	;# 
   170     000E                     	;# 
   171     000F                     	;# 
   172     0010                     	;# 
   173     0011                     	;# 
   174     0012                     	;# 
   175     0013                     	;# 
   176     0014                     	;# 
   177     0015                     	;# 
   178     0015                     	;# 
   179     0016                     	;# 
   180     0017                     	;# 
   181     0018                     	;# 
   182     0019                     	;# 
   183     001A                     	;# 
   184     001B                     	;# 
   185     001B                     	;# 
   186     001C                     	;# 
   187     001D                     	;# 
   188     001E                     	;# 
   189     001F                     	;# 
   190     0081                     	;# 
   191     0085                     	;# 
   192     0086                     	;# 
   193     0087                     	;# 
   194     0088                     	;# 
   195     0089                     	;# 
   196     008C                     	;# 
   197     008D                     	;# 
   198     008E                     	;# 
   199     008F                     	;# 
   200     0090                     	;# 
   201     0091                     	;# 
   202     0092                     	;# 
   203     0093                     	;# 
   204     0093                     	;# 
   205     0093                     	;# 
   206     0094                     	;# 
   207     0095                     	;# 
   208     0096                     	;# 
   209     0097                     	;# 
   210     0098                     	;# 
   211     0099                     	;# 
   212     009A                     	;# 
   213     009B                     	;# 
   214     009C                     	;# 
   215     009D                     	;# 
   216     009E                     	;# 
   217     009F                     	;# 
   218     0105                     	;# 
   219     0107                     	;# 
   220     0108                     	;# 
   221     0109                     	;# 
   222     010C                     	;# 
   223     010C                     	;# 
   224     010D                     	;# 
   225     010E                     	;# 
   226     010F                     	;# 
   227     0185                     	;# 
   228     0187                     	;# 
   229     0188                     	;# 
   230     0189                     	;# 
   231     018C                     	;# 
   232     018D                     	;# 
   233     0000                     	;# 
   234     0001                     	;# 
   235     0002                     	;# 
   236     0003                     	;# 
   237     0004                     	;# 
   238     0005                     	;# 
   239     0006                     	;# 
   240     0007                     	;# 
   241     0008                     	;# 
   242     0009                     	;# 
   243     000A                     	;# 
   244     000B                     	;# 
   245     000C                     	;# 
   246     000D                     	;# 
   247     000E                     	;# 
   248     000E                     	;# 
   249     000F                     	;# 
   250     0010                     	;# 
   251     0011                     	;# 
   252     0012                     	;# 
   253     0013                     	;# 
   254     0014                     	;# 
   255     0015                     	;# 
   256     0015                     	;# 
   257     0016                     	;# 
   258     0017                     	;# 
   259     0018                     	;# 
   260     0019                     	;# 
   261     001A                     	;# 
   262     001B                     	;# 
   263     001B                     	;# 
   264     001C                     	;# 
   265     001D                     	;# 
   266     001E                     	;# 
   267     001F                     	;# 
   268     0081                     	;# 
   269     0085                     	;# 
   270     0086                     	;# 
   271     0087                     	;# 
   272     0088                     	;# 
   273     0089                     	;# 
   274     008C                     	;# 
   275     008D                     	;# 
   276     008E                     	;# 
   277     008F                     	;# 
   278     0090                     	;# 
   279     0091                     	;# 
   280     0092                     	;# 
   281     0093                     	;# 
   282     0093                     	;# 
   283     0093                     	;# 
   284     0094                     	;# 
   285     0095                     	;# 
   286     0096                     	;# 
   287     0097                     	;# 
   288     0098                     	;# 
   289     0099                     	;# 
   290     009A                     	;# 
   291     009B                     	;# 
   292     009C                     	;# 
   293     009D                     	;# 
   294     009E                     	;# 
   295     009F                     	;# 
   296     0105                     	;# 
   297     0107                     	;# 
   298     0108                     	;# 
   299     0109                     	;# 
   300     010C                     	;# 
   301     010C                     	;# 
   302     010D                     	;# 
   303     010E                     	;# 
   304     010F                     	;# 
   305     0185                     	;# 
   306     0187                     	;# 
   307     0188                     	;# 
   308     0189                     	;# 
   309     018C                     	;# 
   310     018D                     	;# 
   311     0000                     	;# 
   312     0001                     	;# 
   313     0002                     	;# 
   314     0003                     	;# 
   315     0004                     	;# 
   316     0005                     	;# 
   317     0006                     	;# 
   318     0007                     	;# 
   319     0008                     	;# 
   320     0009                     	;# 
   321     000A                     	;# 
   322     000B                     	;# 
   323     000C                     	;# 
   324     000D                     	;# 
   325     000E                     	;# 
   326     000E                     	;# 
   327     000F                     	;# 
   328     0010                     	;# 
   329     0011                     	;# 
   330     0012                     	;# 
   331     0013                     	;# 
   332     0014                     	;# 
   333     0015                     	;# 
   334     0015                     	;# 
   335     0016                     	;# 
   336     0017                     	;# 
   337     0018                     	;# 
   338     0019                     	;# 
   339     001A                     	;# 
   340     001B                     	;# 
   341     001B                     	;# 
   342     001C                     	;# 
   343     001D                     	;# 
   344     001E                     	;# 
   345     001F                     	;# 
   346     0081                     	;# 
   347     0085                     	;# 
   348     0086                     	;# 
   349     0087                     	;# 
   350     0088                     	;# 
   351     0089                     	;# 
   352     008C                     	;# 
   353     008D                     	;# 
   354     008E                     	;# 
   355     008F                     	;# 
   356     0090                     	;# 
   357     0091                     	;# 
   358     0092                     	;# 
   359     0093                     	;# 
   360     0093                     	;# 
   361     0093                     	;# 
   362     0094                     	;# 
   363     0095                     	;# 
   364     0096                     	;# 
   365     0097                     	;# 
   366     0098                     	;# 
   367     0099                     	;# 
   368     009A                     	;# 
   369     009B                     	;# 
   370     009C                     	;# 
   371     009D                     	;# 
   372     009E                     	;# 
   373     009F                     	;# 
   374     0105                     	;# 
   375     0107                     	;# 
   376     0108                     	;# 
   377     0109                     	;# 
   378     010C                     	;# 
   379     010C                     	;# 
   380     010D                     	;# 
   381     010E                     	;# 
   382     010F                     	;# 
   383     0185                     	;# 
   384     0187                     	;# 
   385     0188                     	;# 
   386     0189                     	;# 
   387     018C                     	;# 
   388     018D                     	;# 
   389     0000                     	;# 
   390     0001                     	;# 
   391     0002                     	;# 
   392     0003                     	;# 
   393     0004                     	;# 
   394     0005                     	;# 
   395     0006                     	;# 
   396     0007                     	;# 
   397     0008                     	;# 
   398     0009                     	;# 
   399     000A                     	;# 
   400     000B                     	;# 
   401     000C                     	;# 
   402     000D                     	;# 
   403     000E                     	;# 
   404     000E                     	;# 
   405     000F                     	;# 
   406     0010                     	;# 
   407     0011                     	;# 
   408     0012                     	;# 
   409     0013                     	;# 
   410     0014                     	;# 
   411     0015                     	;# 
   412     0015                     	;# 
   413     0016                     	;# 
   414     0017                     	;# 
   415     0018                     	;# 
   416     0019                     	;# 
   417     001A                     	;# 
   418     001B                     	;# 
   419     001B                     	;# 
   420     001C                     	;# 
   421     001D                     	;# 
   422     001E                     	;# 
   423     001F                     	;# 
   424     0081                     	;# 
   425     0085                     	;# 
   426     0086                     	;# 
   427     0087                     	;# 
   428     0088                     	;# 
   429     0089                     	;# 
   430     008C                     	;# 
   431     008D                     	;# 
   432     008E                     	;# 
   433     008F                     	;# 
   434     0090                     	;# 
   435     0091                     	;# 
   436     0092                     	;# 
   437     0093                     	;# 
   438     0093                     	;# 
   439     0093                     	;# 
   440     0094                     	;# 
   441     0095                     	;# 
   442     0096                     	;# 
   443     0097                     	;# 
   444     0098                     	;# 
   445     0099                     	;# 
   446     009A                     	;# 
   447     009B                     	;# 
   448     009C                     	;# 
   449     009D                     	;# 
   450     009E                     	;# 
   451     009F                     	;# 
   452     0105                     	;# 
   453     0107                     	;# 
   454     0108                     	;# 
   455     0109                     	;# 
   456     010C                     	;# 
   457     010C                     	;# 
   458     010D                     	;# 
   459     010E                     	;# 
   460     010F                     	;# 
   461     0185                     	;# 
   462     0187                     	;# 
   463     0188                     	;# 
   464     0189                     	;# 
   465     018C                     	;# 
   466     018D                     	;# 
   467     0000                     	;# 
   468     0001                     	;# 
   469     0002                     	;# 
   470     0003                     	;# 
   471     0004                     	;# 
   472     0005                     	;# 
   473     0006                     	;# 
   474     0007                     	;# 
   475     0008                     	;# 
   476     0009                     	;# 
   477     000A                     	;# 
   478     000B                     	;# 
   479     000C                     	;# 
   480     000D                     	;# 
   481     000E                     	;# 
   482     000E                     	;# 
   483     000F                     	;# 
   484     0010                     	;# 
   485     0011                     	;# 
   486     0012                     	;# 
   487     0013                     	;# 
   488     0014                     	;# 
   489     0015                     	;# 
   490     0015                     	;# 
   491     0016                     	;# 
   492     0017                     	;# 
   493     0018                     	;# 
   494     0019                     	;# 
   495     001A                     	;# 
   496     001B                     	;# 
   497     001B                     	;# 
   498     001C                     	;# 
   499     001D                     	;# 
   500     001E                     	;# 
   501     001F                     	;# 
   502     0081                     	;# 
   503     0085                     	;# 
   504     0086                     	;# 
   505     0087                     	;# 
   506     0088                     	;# 
   507     0089                     	;# 
   508     008C                     	;# 
   509     008D                     	;# 
   510     008E                     	;# 
   511     008F                     	;# 
   512     0090                     	;# 
   513     0091                     	;# 
   514     0092                     	;# 
   515     0093                     	;# 
   516     0093                     	;# 
   517     0093                     	;# 
   518     0094                     	;# 
   519     0095                     	;# 
   520     0096                     	;# 
   521     0097                     	;# 
   522     0098                     	;# 
   523     0099                     	;# 
   524     009A                     	;# 
   525     009B                     	;# 
   526     009C                     	;# 
   527     009D                     	;# 
   528     009E                     	;# 
   529     009F                     	;# 
   530     0105                     	;# 
   531     0107                     	;# 
   532     0108                     	;# 
   533     0109                     	;# 
   534     010C                     	;# 
   535     010C                     	;# 
   536     010D                     	;# 
   537     010E                     	;# 
   538     010F                     	;# 
   539     0185                     	;# 
   540     0187                     	;# 
   541     0188                     	;# 
   542     0189                     	;# 
   543     018C                     	;# 
   544     018D                     	;# 
   545     0000                     	;# 
   546     0001                     	;# 
   547     0002                     	;# 
   548     0003                     	;# 
   549     0004                     	;# 
   550     0005                     	;# 
   551     0006                     	;# 
   552     0007                     	;# 
   553     0008                     	;# 
   554     0009                     	;# 
   555     000A                     	;# 
   556     000B                     	;# 
   557     000C                     	;# 
   558     000D                     	;# 
   559     000E                     	;# 
   560     000E                     	;# 
   561     000F                     	;# 
   562     0010                     	;# 
   563     0011                     	;# 
   564     0012                     	;# 
   565     0013                     	;# 
   566     0014                     	;# 
   567     0015                     	;# 
   568     0015                     	;# 
   569     0016                     	;# 
   570     0017                     	;# 
   571     0018                     	;# 
   572     0019                     	;# 
   573     001A                     	;# 
   574     001B                     	;# 
   575     001B                     	;# 
   576     001C                     	;# 
   577     001D                     	;# 
   578     001E                     	;# 
   579     001F                     	;# 
   580     0081                     	;# 
   581     0085                     	;# 
   582     0086                     	;# 
   583     0087                     	;# 
   584     0088                     	;# 
   585     0089                     	;# 
   586     008C                     	;# 
   587     008D                     	;# 
   588     008E                     	;# 
   589     008F                     	;# 
   590     0090                     	;# 
   591     0091                     	;# 
   592     0092                     	;# 
   593     0093                     	;# 
   594     0093                     	;# 
   595     0093                     	;# 
   596     0094                     	;# 
   597     0095                     	;# 
   598     0096                     	;# 
   599     0097                     	;# 
   600     0098                     	;# 
   601     0099                     	;# 
   602     009A                     	;# 
   603     009B                     	;# 
   604     009C                     	;# 
   605     009D                     	;# 
   606     009E                     	;# 
   607     009F                     	;# 
   608     0105                     	;# 
   609     0107                     	;# 
   610     0108                     	;# 
   611     0109                     	;# 
   612     010C                     	;# 
   613     010C                     	;# 
   614     010D                     	;# 
   615     010E                     	;# 
   616     010F                     	;# 
   617     0185                     	;# 
   618     0187                     	;# 
   619     0188                     	;# 
   620     0189                     	;# 
   621     018C                     	;# 
   622     018D                     	;# 
   623     0008                     _PORTDbits	set	8
   624     0013                     _SSPBUF	set	19
   625     0014                     _SSPCON	set	20
   626     0006                     _PORTB	set	6
   627     0008                     _PORTD	set	8
   628     0006                     _PORTBbits	set	6
   629     0005                     _PORTA	set	5
   630     0043                     _RD3	set	67
   631     0047                     _RD7	set	71
   632     0046                     _RD6	set	70
   633     0045                     _RD5	set	69
   634     0044                     _RD4	set	68
   635     008F                     _OSCCONbits	set	143
   636     0091                     _SSPCON2bits	set	145
   637     0087                     _TRISCbits	set	135
   638     0094                     _SSPSTAT	set	148
   639     0093                     _SSPADD	set	147
   640     0091                     _SSPCON2	set	145
   641     0081                     _OPTION_REGbits	set	129
   642     0095                     _WPUB	set	149
   643     0086                     _TRISB	set	134
   644     0088                     _TRISD	set	136
   645     0085                     _TRISA	set	133
   646     0189                     _ANSELH	set	393
   647     0188                     _ANSEL	set	392
   648                           
   649                           	psect	strings
   650     0003                     __pstrings:
   651     0003                     stringtab:
   652     0003                     __stringtab:
   653     0003                     stringcode:	
   654                           ;	String table - string pointers are 1 byte each
   655                           
   656     0003                     stringdir:
   657     0003  3000               	movlw	high stringdir
   658     0004  008A               	movwf	10
   659     0005  0804               	movf	4,w
   660     0006  0A84               	incf	4,f
   661     0007  0782               	addwf	2,f
   662     0008                     __stringbase:
   663     0008  3400               	retlw	0
   664     0009                     __end_of__stringtab:
   665     0009                     STR_2:
   666     0009  3454               	retlw	84	;'T'
   667     000A  343A               	retlw	58	;':'
   668     000B  3420               	retlw	32	;' '
   669     000C  3420               	retlw	32	;' '
   670     000D  3420               	retlw	32	;' '
   671     000E  3420               	retlw	32	;' '
   672     000F  3443               	retlw	67	;'C'
   673     0010  3400               	retlw	0
   674     0011                     STR_1:
   675     0011  3453               	retlw	83	;'S'
   676     0012  343A               	retlw	58	;':'
   677     0013  3420               	retlw	32	;' '
   678     0014  3420               	retlw	32	;' '
   679     0015  343A               	retlw	58	;':'
   680     0016  3400               	retlw	0
   681                           
   682                           	psect	cinit
   683     07F5                     start_initialization:	
   684                           ; #config settings
   685                           
   686     07F5                     __initialization:
   687                           
   688                           ; Clear objects allocated to BANK0
   689     07F5  1383               	bcf	3,7	;select IRP bank0
   690     07F6  3020               	movlw	low __pbssBANK0
   691     07F7  0084               	movwf	4
   692     07F8  3037               	movlw	low (__pbssBANK0+23)
   693     07F9  120A  118A  224F   	fcall	clear_ram0
   694     07FC                     end_of_initialization:	
   695                           ;End of C runtime variable initialization code
   696                           
   697     07FC                     __end_of__initialization:
   698     07FC  0183               	clrf	3
   699     07FD  120A  118A  2E66   	ljmp	_main	;jump to C main() function
   700                           
   701                           	psect	bssBANK0
   702     0020                     __pbssBANK0:
   703     0020                     _temp:
   704     0020                     	ds	4
   705     0024                     _conver:
   706     0024                     	ds	4
   707     0028                     _buffer:
   708     0028                     	ds	3
   709     002B                     _valADC:
   710     002B                     	ds	3
   711     002E                     _modo:
   712     002E                     	ds	1
   713     002F                     _minutos:
   714     002F                     	ds	1
   715     0030                     _min:
   716     0030                     	ds	1
   717     0031                     _segundos:
   718     0031                     	ds	1
   719     0032                     _sec:
   720     0032                     	ds	1
   721     0033                     _tempdec:
   722     0033                     	ds	1
   723     0034                     _tempint:
   724     0034                     	ds	1
   725     0035                     _decena:
   726     0035                     	ds	1
   727     0036                     _unidad:
   728     0036                     	ds	1
   729                           
   730                           	psect	clrtext
   731     024F                     clear_ram0:	
   732                           ;	Called with FSR containing the base address, and
   733                           ;	W with the last address+1
   734                           
   735     024F  0064               	clrwdt	;clear the watchdog before getting into this loop
   736     0250                     clrloop0:
   737     0250  0180               	clrf	0	;clear RAM location pointed to by FSR
   738     0251  0A84               	incf	4,f	;increment pointer
   739     0252  0604               	xorwf	4,w	;XOR with final address
   740     0253  1903               	btfsc	3,2	;have we reached the end yet?
   741     0254  3400               	retlw	0	;all done for this memory range, return
   742     0255  0604               	xorwf	4,w	;XOR again to restore value
   743     0256  2A50               	goto	clrloop0	;do the next byte
   744                           
   745                           	psect	cstackCOMMON
   746     0070                     __pcstackCOMMON:
   747     0070                     ?_setupINTOSC:
   748     0070                     ??_setupINTOSC:	
   749                           ; 1 bytes @ 0x0
   750                           
   751     0070                     ?_portsetup:	
   752                           ; 1 bytes @ 0x0
   753                           
   754     0070                     ?_Lcd_Init:	
   755                           ; 1 bytes @ 0x0
   756                           
   757     0070                     ?_Lcd_Clear:	
   758                           ; 1 bytes @ 0x0
   759                           
   760     0070                     ?_Lcd_Write_Char:	
   761                           ; 1 bytes @ 0x0
   762                           
   763     0070                     ?_Lcd_Write_String:	
   764                           ; 1 bytes @ 0x0
   765                           
   766     0070                     ?_leer_temperatura:	
   767                           ; 1 bytes @ 0x0
   768                           
   769     0070                     ?_leer_x:	
   770                           ; 1 bytes @ 0x0
   771                           
   772     0070                     ?_inttochar:	
   773                           ; 1 bytes @ 0x0
   774                           
   775     0070                     ??_inttochar:	
   776                           ; 1 bytes @ 0x0
   777                           
   778     0070                     ?_I2C_Master_Start:	
   779                           ; 1 bytes @ 0x0
   780                           
   781     0070                     ??_I2C_Master_Start:	
   782                           ; 1 bytes @ 0x0
   783                           
   784     0070                     ?_I2C_Master_Write:	
   785                           ; 1 bytes @ 0x0
   786                           
   787     0070                     ?_I2C_Master_Stop:	
   788                           ; 1 bytes @ 0x0
   789                           
   790     0070                     ??_I2C_Master_Stop:	
   791                           ; 1 bytes @ 0x0
   792                           
   793     0070                     ?_I2C_Master_RepeatedStart:	
   794                           ; 1 bytes @ 0x0
   795                           
   796     0070                     ??_I2C_Master_RepeatedStart:	
   797                           ; 1 bytes @ 0x0
   798                           
   799     0070                     ?_main:	
   800                           ; 1 bytes @ 0x0
   801                           
   802     0070                     ?_convertir:	
   803                           ; 1 bytes @ 0x0
   804                           
   805     0070                     ?_I2C_Master_Wait:	
   806                           ; 1 bytes @ 0x0
   807                           
   808     0070                     ??_I2C_Master_Wait:	
   809                           ; 1 bytes @ 0x0
   810                           
   811     0070                     ?_Lcd_Port:	
   812                           ; 1 bytes @ 0x0
   813                           
   814     0070                     ??_Lcd_Port:	
   815                           ; 1 bytes @ 0x0
   816                           
   817     0070                     ?_Lcd_Cmd:	
   818                           ; 1 bytes @ 0x0
   819                           
   820     0070                     ?___bmul:	
   821                           ; 1 bytes @ 0x0
   822                           
   823     0070                     ?___lbdiv:	
   824                           ; 1 bytes @ 0x0
   825                           
   826     0070                     ?___lbmod:	
   827                           ; 1 bytes @ 0x0
   828                           
   829     0070                     ?_I2C_Master_Read:	
   830                           ; 1 bytes @ 0x0
   831                           
   832     0070                     ?___lldiv:	
   833                           ; 2 bytes @ 0x0
   834                           
   835     0070                     Lcd_Port@a:	
   836                           ; 4 bytes @ 0x0
   837                           
   838     0070                     inttochar@num:	
   839                           ; 1 bytes @ 0x0
   840                           
   841     0070                     setupINTOSC@IRCF:	
   842                           ; 1 bytes @ 0x0
   843                           
   844     0070                     ___bmul@multiplicand:	
   845                           ; 1 bytes @ 0x0
   846                           
   847     0070                     ___lbdiv@divisor:	
   848                           ; 1 bytes @ 0x0
   849                           
   850     0070                     ___lbmod@divisor:	
   851                           ; 1 bytes @ 0x0
   852                           
   853     0070                     I2C_Master_Write@d:	
   854                           ; 1 bytes @ 0x0
   855                           
   856     0070                     I2C_Master_Read@a:	
   857                           ; 2 bytes @ 0x0
   858                           
   859     0070                     ___lldiv@divisor:	
   860                           ; 2 bytes @ 0x0
   861                           
   862                           
   863                           ; 4 bytes @ 0x0
   864     0070                     	ds	1
   865     0071                     ??_Lcd_Write_Char:
   866     0071                     ??_Lcd_Cmd:	
   867                           ; 1 bytes @ 0x1
   868                           
   869     0071                     ??___bmul:	
   870                           ; 1 bytes @ 0x1
   871                           
   872     0071                     ??___lbdiv:	
   873                           ; 1 bytes @ 0x1
   874                           
   875     0071                     ??___lbmod:	
   876                           ; 1 bytes @ 0x1
   877                           
   878                           
   879                           ; 1 bytes @ 0x1
   880     0071                     	ds	1
   881     0072                     ?_enviar_x:
   882     0072                     ??_I2C_Master_Write:	
   883                           ; 1 bytes @ 0x2
   884                           
   885     0072                     ??_I2C_Master_Read:	
   886                           ; 1 bytes @ 0x2
   887                           
   888     0072                     enviar_x@val2:	
   889                           ; 1 bytes @ 0x2
   890                           
   891     0072                     Lcd_Write_Char@temp:	
   892                           ; 1 bytes @ 0x2
   893                           
   894     0072                     ___bmul@product:	
   895                           ; 1 bytes @ 0x2
   896                           
   897     0072                     ___lbdiv@dividend:	
   898                           ; 1 bytes @ 0x2
   899                           
   900                           
   901                           ; 1 bytes @ 0x2
   902     0072                     	ds	1
   903     0073                     ??_enviar_x:
   904     0073                     Lcd_Cmd@a:	
   905                           ; 1 bytes @ 0x3
   906                           
   907     0073                     Lcd_Write_Char@y:	
   908                           ; 1 bytes @ 0x3
   909                           
   910     0073                     ___bmul@multiplier:	
   911                           ; 1 bytes @ 0x3
   912                           
   913     0073                     ___lbdiv@counter:	
   914                           ; 1 bytes @ 0x3
   915                           
   916     0073                     ___lbmod@dividend:	
   917                           ; 1 bytes @ 0x3
   918                           
   919                           
   920                           ; 1 bytes @ 0x3
   921     0073                     	ds	1
   922     0074                     ??_Lcd_Init:
   923     0074                     ??_Lcd_Clear:	
   924                           ; 1 bytes @ 0x4
   925                           
   926     0074                     ?_Lcd_Set_Cursor:	
   927                           ; 1 bytes @ 0x4
   928                           
   929     0074                     ??_convertir:	
   930                           ; 1 bytes @ 0x4
   931                           
   932     0074                     Lcd_Set_Cursor@b:	
   933                           ; 1 bytes @ 0x4
   934                           
   935     0074                     Lcd_Write_Char@a:	
   936                           ; 1 bytes @ 0x4
   937                           
   938     0074                     ___lbdiv@quotient:	
   939                           ; 1 bytes @ 0x4
   940                           
   941     0074                     ___lbmod@counter:	
   942                           ; 1 bytes @ 0x4
   943                           
   944     0074                     I2C_Master_Read@temp:	
   945                           ; 1 bytes @ 0x4
   946                           
   947     0074                     ___lldiv@dividend:	
   948                           ; 2 bytes @ 0x4
   949                           
   950                           
   951                           ; 4 bytes @ 0x4
   952     0074                     	ds	1
   953     0075                     ??_Lcd_Set_Cursor:
   954     0075                     ??_Lcd_Write_String:	
   955                           ; 1 bytes @ 0x5
   956                           
   957     0075                     convertir@unidad:	
   958                           ; 1 bytes @ 0x5
   959                           
   960     0075                     enviar_x@val1:	
   961                           ; 1 bytes @ 0x5
   962                           
   963     0075                     ___lbmod@rem:	
   964                           ; 1 bytes @ 0x5
   965                           
   966     0075                     Lcd_Write_String@i:	
   967                           ; 1 bytes @ 0x5
   968                           
   969                           
   970                           ; 2 bytes @ 0x5
   971     0075                     	ds	1
   972     0076                     ?_descomponer:
   973     0076                     convertir@decena:	
   974                           ; 1 bytes @ 0x6
   975                           
   976     0076                     Lcd_Set_Cursor@a:	
   977                           ; 1 bytes @ 0x6
   978                           
   979     0076                     descomponer@pos:	
   980                           ; 1 bytes @ 0x6
   981                           
   982                           
   983                           ; 2 bytes @ 0x6
   984     0076                     	ds	1
   985     0077                     convertir@conversion:
   986     0077                     Lcd_Set_Cursor@z:	
   987                           ; 1 bytes @ 0x7
   988                           
   989     0077                     Lcd_Write_String@a:	
   990                           ; 1 bytes @ 0x7
   991                           
   992                           
   993                           ; 1 bytes @ 0x7
   994     0077                     	ds	1
   995     0078                     ??___lldiv:
   996     0078                     convertir@valor:	
   997                           ; 1 bytes @ 0x8
   998                           
   999     0078                     Lcd_Set_Cursor@y:	
  1000                           ; 1 bytes @ 0x8
  1001                           
  1002     0078                     descomponer@num:	
  1003                           ; 1 bytes @ 0x8
  1004                           
  1005                           
  1006                           ; 1 bytes @ 0x8
  1007     0078                     	ds	1
  1008     0079                     ??_leer_x:
  1009     0079                     ??_descomponer:	
  1010                           ; 1 bytes @ 0x9
  1011                           
  1012     0079                     Lcd_Set_Cursor@temp:	
  1013                           ; 1 bytes @ 0x9
  1014                           
  1015     0079                     descomponer@cent:	
  1016                           ; 1 bytes @ 0x9
  1017                           
  1018     0079                     ___lldiv@quotient:	
  1019                           ; 1 bytes @ 0x9
  1020                           
  1021                           
  1022                           ; 4 bytes @ 0x9
  1023     0079                     	ds	1
  1024     007A                     descomponer@uni:
  1025                           
  1026                           ; 1 bytes @ 0xA
  1027     007A                     	ds	1
  1028     007B                     leer_x@address:
  1029     007B                     descomponer@dec:	
  1030                           ; 1 bytes @ 0xB
  1031                           
  1032                           
  1033                           ; 1 bytes @ 0xB
  1034     007B                     	ds	1
  1035     007C                     ?_Escribir_dato:
  1036     007C                     Escribir_dato@posx:	
  1037                           ; 1 bytes @ 0xC
  1038                           
  1039     007C                     leer_x@valor:	
  1040                           ; 1 bytes @ 0xC
  1041                           
  1042                           
  1043                           ; 1 bytes @ 0xC
  1044     007C                     	ds	1
  1045     007D                     Escribir_dato@posy:
  1046     007D                     ___lldiv@counter:	
  1047                           ; 1 bytes @ 0xD
  1048                           
  1049                           
  1050                           ; 1 bytes @ 0xD
  1051     007D                     	ds	1
  1052     007E                     ??_portsetup:
  1053     007E                     ??_leer_temperatura:	
  1054                           ; 1 bytes @ 0xE
  1055                           
  1056     007E                     ??_Escribir_dato:	
  1057                           ; 1 bytes @ 0xE
  1058                           
  1059                           
  1060                           	psect	cstackBANK0
  1061     0037                     __pcstackBANK0:	
  1062                           ; 1 bytes @ 0xE
  1063                           
  1064     0037                     ?_I2C_Master_Init:
  1065     0037                     Escribir_dato@dato:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068     0037                     I2C_Master_Init@c:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071                           
  1072                           ; 4 bytes @ 0x0
  1073     0037                     	ds	4
  1074     003B                     ??_I2C_Master_Init:
  1075                           
  1076                           ; 1 bytes @ 0x4
  1077     003B                     	ds	4
  1078     003F                     ??_main:
  1079                           
  1080                           ; 1 bytes @ 0x8
  1081     003F                     	ds	2
  1082     0041                     _main$201:
  1083                           
  1084                           ; 1 bytes @ 0xA
  1085     0041                     	ds	1
  1086                           
  1087                           	psect	maintext
  1088     0666                     __pmaintext:	
  1089 ;;
  1090 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1091 ;;
  1092 ;; *************** function _main *****************
  1093 ;; Defined at:
  1094 ;;		line 69 in file "main.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;		None
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : B00/0
  1105 ;;		On exit  : 300/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1108 ;;      Params:         0       0       0       0       0
  1109 ;;      Locals:         0       1       0       0       0
  1110 ;;      Temps:          0       2       0       0       0
  1111 ;;      Totals:         0       3       0       0       0
  1112 ;;Total ram usage:        3 bytes
  1113 ;; Hardware stack levels required when called: 5
  1114 ;; This function calls:
  1115 ;;		_Escribir_dato
  1116 ;;		_Lcd_Clear
  1117 ;;		_Lcd_Init
  1118 ;;		_Lcd_Set_Cursor
  1119 ;;		_Lcd_Write_Char
  1120 ;;		_Lcd_Write_String
  1121 ;;		_enviar_x
  1122 ;;		_leer_temperatura
  1123 ;;		_leer_x
  1124 ;;		_portsetup
  1125 ;;		_setupINTOSC
  1126 ;; This function is called by:
  1127 ;;		Startup code after reset
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131     0666                     _main:	
  1132                           ;psect for function _main
  1133                           
  1134                           
  1135                           ;main.c: 70:     setupINTOSC(7);
  1136                           
  1137                           ;incstack = 0
  1138                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1139     0666  3007               	movlw	7
  1140     0667  120A  118A  2567  120A  118A  	fcall	_setupINTOSC
  1141                           
  1142                           ;main.c: 71:     portsetup();
  1143     066C  120A  118A  2327  120A  118A  	fcall	_portsetup
  1144                           
  1145                           ;main.c: 73:     Lcd_Init();
  1146     0671  120A  118A  25AD  120A  118A  	fcall	_Lcd_Init
  1147                           
  1148                           ;main.c: 74:     Lcd_Clear();
  1149     0676  120A  118A  2260  120A  118A  	fcall	_Lcd_Clear
  1150                           
  1151                           ;main.c: 75:     Lcd_Set_Cursor(1,13);
  1152     067B  300D               	movlw	13
  1153     067C  00F4               	movwf	Lcd_Set_Cursor@b
  1154     067D  3001               	movlw	1
  1155     067E  120A  118A  24A4  120A  118A  	fcall	_Lcd_Set_Cursor
  1156                           
  1157                           ;main.c: 76:     Lcd_Write_Char(':');
  1158     0683  303A               	movlw	58
  1159     0684  120A  118A  236E  120A  118A  	fcall	_Lcd_Write_Char
  1160                           
  1161                           ;main.c: 77:     Lcd_Set_Cursor(2,9);
  1162     0689  3009               	movlw	9
  1163     068A  00F4               	movwf	Lcd_Set_Cursor@b
  1164     068B  3002               	movlw	2
  1165     068C  120A  118A  24A4  120A  118A  	fcall	_Lcd_Set_Cursor
  1166                           
  1167                           ;main.c: 78:     Lcd_Write_String("S:  :");
  1168     0691  3009               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1169     0692  120A  118A  2305  120A  118A  	fcall	_Lcd_Write_String
  1170                           
  1171                           ;main.c: 79:     Lcd_Set_Cursor(2,1);
  1172     0697  01F4               	clrf	Lcd_Set_Cursor@b
  1173     0698  0AF4               	incf	Lcd_Set_Cursor@b,f
  1174     0699  3002               	movlw	2
  1175     069A  120A  118A  24A4  120A  118A  	fcall	_Lcd_Set_Cursor
  1176                           
  1177                           ;main.c: 81:     Lcd_Write_String("T:    C");
  1178     069F  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1179     06A0  120A  118A  2305  120A  118A  	fcall	_Lcd_Write_String
  1180                           
  1181                           ;main.c: 84:     modo = 0;
  1182     06A5  1283               	bcf	3,5	;RP0=0, select bank0
  1183     06A6  1303               	bcf	3,6	;RP1=0, select bank0
  1184     06A7  01AE               	clrf	_modo
  1185                           
  1186                           ;main.c: 85:     sec = 0;
  1187     06A8  01B2               	clrf	_sec
  1188                           
  1189                           ;main.c: 86:     min = 0;
  1190     06A9  01B0               	clrf	_min
  1191                           
  1192                           ;main.c: 88:     enviar_x(0, 0);
  1193     06AA  01F2               	clrf	enviar_x@val2
  1194     06AB  3000               	movlw	0
  1195     06AC  120A  118A  23D0  120A  118A  	fcall	_enviar_x
  1196     06B1                     l1735:
  1197                           
  1198                           ;main.c: 91:         PORTA = modo;
  1199     06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1200     06B2  082E               	movf	_modo,w
  1201     06B3  0085               	movwf	5	;volatile
  1202                           
  1203                           ;main.c: 92:         leer_temperatura();
  1204     06B4  120A  118A  2436  120A  118A  	fcall	_leer_temperatura
  1205                           
  1206                           ;main.c: 94:         _delay((unsigned long)((20)*(8000000/4000.0)));
  1207     06B9  3034               	movlw	52
  1208     06BA  1283               	bcf	3,5	;RP0=0, select bank0
  1209     06BB  1303               	bcf	3,6	;RP1=0, select bank0
  1210     06BC  00C0               	movwf	??_main+1
  1211     06BD  30F1               	movlw	241
  1212     06BE  00BF               	movwf	??_main
  1213     06BF                     u1397:
  1214     06BF  0BBF               	decfsz	??_main,f
  1215     06C0  2EBF               	goto	u1397
  1216     06C1  0BC0               	decfsz	??_main+1,f
  1217     06C2  2EBF               	goto	u1397
  1218                           
  1219                           ;main.c: 100:         enviar_x(0, 0);
  1220     06C3  01F2               	clrf	enviar_x@val2
  1221     06C4  3000               	movlw	0
  1222     06C5  120A  118A  23D0  120A  118A  	fcall	_enviar_x
  1223                           
  1224                           ;main.c: 102:         sec = leer_x(0x00);
  1225     06CA  3000               	movlw	0
  1226     06CB  120A  118A  24E2  120A  118A  	fcall	_leer_x
  1227     06D0  1283               	bcf	3,5	;RP0=0, select bank0
  1228     06D1  00B2               	movwf	_sec
  1229                           
  1230                           ;main.c: 103:         Escribir_dato(sec, 14, 1);
  1231     06D2  300E               	movlw	14
  1232     06D3  00FC               	movwf	Escribir_dato@posx
  1233     06D4  01FD               	clrf	Escribir_dato@posy
  1234     06D5  0AFD               	incf	Escribir_dato@posy,f
  1235     06D6  0832               	movf	_sec,w
  1236     06D7  120A  118A  2521  120A  118A  	fcall	_Escribir_dato
  1237                           
  1238                           ;main.c: 105:         min = leer_x(0x01);
  1239     06DC  3001               	movlw	1
  1240     06DD  120A  118A  24E2  120A  118A  	fcall	_leer_x
  1241     06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1242     06E3  00B0               	movwf	_min
  1243                           
  1244                           ;main.c: 106:         Escribir_dato(min, 11, 1);
  1245     06E4  300B               	movlw	11
  1246     06E5  00FC               	movwf	Escribir_dato@posx
  1247     06E6  01FD               	clrf	Escribir_dato@posy
  1248     06E7  0AFD               	incf	Escribir_dato@posy,f
  1249     06E8  0830               	movf	_min,w
  1250     06E9  120A  118A  2521  120A  118A  	fcall	_Escribir_dato
  1251                           
  1252                           ;main.c: 108:         if(!PORTBbits.RB4){
  1253     06EE  1A06               	btfsc	6,4	;volatile
  1254     06EF  2EB1               	goto	l1735
  1255                           
  1256                           ;main.c: 109:             _delay((unsigned long)((20)*(8000000/4000.0)));
  1257     06F0  3034               	movlw	52
  1258     06F1  1283               	bcf	3,5	;RP0=0, select bank0
  1259     06F2  1303               	bcf	3,6	;RP1=0, select bank0
  1260     06F3  00C0               	movwf	??_main+1
  1261     06F4  30F1               	movlw	241
  1262     06F5  00BF               	movwf	??_main
  1263     06F6                     u1407:
  1264     06F6  0BBF               	decfsz	??_main,f
  1265     06F7  2EF6               	goto	u1407
  1266     06F8  0BC0               	decfsz	??_main+1,f
  1267     06F9  2EF6               	goto	u1407
  1268     06FA                     l1813:	
  1269                           ;main.c: 167:                 }
  1270                           
  1271                           ;main.c: 110:             while(PORTBbits.RB3){
  1272                           
  1273                           
  1274                           ;main.c: 110:             while(PORTBbits.RB3){
  1275     06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1276     06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1277     06FC  1D86               	btfss	6,3	;volatile
  1278     06FD  2F88               	goto	l1815
  1279                           
  1280                           ;main.c: 111:                 _delay((unsigned long)((30)*(8000000/4000.0)));
  1281     06FE  304E               	movlw	78
  1282     06FF  1283               	bcf	3,5	;RP0=0, select bank0
  1283     0700  1303               	bcf	3,6	;RP1=0, select bank0
  1284     0701  00C0               	movwf	??_main+1
  1285     0702  30EA               	movlw	234
  1286     0703  00BF               	movwf	??_main
  1287     0704                     u1417:
  1288     0704  0BBF               	decfsz	??_main,f
  1289     0705  2F04               	goto	u1417
  1290     0706  0BC0               	decfsz	??_main+1,f
  1291     0707  2F04               	goto	u1417
  1292     0708  0000               	nop
  1293                           
  1294                           ;main.c: 112:                 leer_temperatura();
  1295     0709  120A  118A  2436  120A  118A  	fcall	_leer_temperatura
  1296                           
  1297                           ;main.c: 113:                 Escribir_dato(sec, 14, 1);
  1298     070E  300E               	movlw	14
  1299     070F  00FC               	movwf	Escribir_dato@posx
  1300     0710  01FD               	clrf	Escribir_dato@posy
  1301     0711  0AFD               	incf	Escribir_dato@posy,f
  1302     0712  0832               	movf	_sec,w
  1303     0713  120A  118A  2521  120A  118A  	fcall	_Escribir_dato
  1304                           
  1305                           ;main.c: 114:                 Escribir_dato(min, 11, 1);
  1306     0718  300B               	movlw	11
  1307     0719  00FC               	movwf	Escribir_dato@posx
  1308     071A  01FD               	clrf	Escribir_dato@posy
  1309     071B  0AFD               	incf	Escribir_dato@posy,f
  1310     071C  0830               	movf	_min,w
  1311     071D  120A  118A  2521  120A  118A  	fcall	_Escribir_dato
  1312                           
  1313                           ;main.c: 116:                 if(PORTBbits.RB7 == 0){
  1314     0722  1B86               	btfsc	6,7	;volatile
  1315     0723  2F39               	goto	l1773
  1316                           
  1317                           ;main.c: 117:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1318     0724  3034               	movlw	52
  1319     0725  1283               	bcf	3,5	;RP0=0, select bank0
  1320     0726  1303               	bcf	3,6	;RP1=0, select bank0
  1321     0727  00C0               	movwf	??_main+1
  1322     0728  30F1               	movlw	241
  1323     0729  00BF               	movwf	??_main
  1324     072A                     u1427:
  1325     072A  0BBF               	decfsz	??_main,f
  1326     072B  2F2A               	goto	u1427
  1327     072C  0BC0               	decfsz	??_main+1,f
  1328     072D  2F2A               	goto	u1427
  1329                           
  1330                           ;main.c: 118:                     if (modo < 1){
  1331     072E  1283               	bcf	3,5	;RP0=0, select bank0
  1332     072F  1303               	bcf	3,6	;RP1=0, select bank0
  1333     0730  082E               	movf	_modo,w
  1334     0731  1D03               	btfss	3,2
  1335     0732  2F38               	goto	l1771
  1336                           
  1337                           ;main.c: 119:                         modo += 1;
  1338     0733  3001               	movlw	1
  1339     0734  00BF               	movwf	??_main
  1340     0735  083F               	movf	??_main,w
  1341     0736  07AE               	addwf	_modo,f
  1342                           
  1343                           ;main.c: 120:                     }
  1344     0737  2F39               	goto	l1773
  1345     0738                     l1771:
  1346                           
  1347                           ;main.c: 122:                         modo = 0;
  1348     0738  01AE               	clrf	_modo
  1349     0739                     l1773:
  1350                           
  1351                           ;main.c: 126:                 if(PORTBbits.RB6 == 0){
  1352     0739  1B06               	btfsc	6,6	;volatile
  1353     073A  2F62               	goto	l1793
  1354                           
  1355                           ;main.c: 127:                     _delay((unsigned long)((50)*(8000000/4000.0)));
  1356     073B  3082               	movlw	130
  1357     073C  1283               	bcf	3,5	;RP0=0, select bank0
  1358     073D  1303               	bcf	3,6	;RP1=0, select bank0
  1359     073E  00C0               	movwf	??_main+1
  1360     073F  30DD               	movlw	221
  1361     0740  00BF               	movwf	??_main
  1362     0741                     u1437:
  1363     0741  0BBF               	decfsz	??_main,f
  1364     0742  2F41               	goto	u1437
  1365     0743  0BC0               	decfsz	??_main+1,f
  1366     0744  2F41               	goto	u1437
  1367                           
  1368                           ;main.c: 128:                     if (modo == 0){
  1369     0745  1283               	bcf	3,5	;RP0=0, select bank0
  1370     0746  1303               	bcf	3,6	;RP1=0, select bank0
  1371     0747  082E               	movf	_modo,w
  1372     0748  1D03               	btfss	3,2
  1373     0749  2F55               	goto	l1785
  1374                           
  1375                           ;main.c: 129:                         if (sec<59){
  1376     074A  303B               	movlw	59
  1377     074B  0232               	subwf	_sec,w
  1378     074C  1803               	skipnc
  1379     074D  2F53               	goto	l1783
  1380                           
  1381                           ;main.c: 130:                             sec ++;
  1382     074E  3001               	movlw	1
  1383     074F  00BF               	movwf	??_main
  1384     0750  083F               	movf	??_main,w
  1385     0751  07B2               	addwf	_sec,f
  1386                           
  1387                           ;main.c: 131:                         }
  1388     0752  2F62               	goto	l1793
  1389     0753                     l1783:
  1390                           
  1391                           ;main.c: 133:                             sec = 0;
  1392     0753  01B2               	clrf	_sec
  1393     0754  2F62               	goto	l1793
  1394     0755                     l1785:
  1395     0755  032E               	decf	_modo,w
  1396     0756  1D03               	btfss	3,2
  1397     0757  2F62               	goto	l1793
  1398                           
  1399                           ;main.c: 137:                         if (min<59){
  1400     0758  303B               	movlw	59
  1401     0759  0230               	subwf	_min,w
  1402     075A  1803               	skipnc
  1403     075B  2F61               	goto	l1791
  1404                           
  1405                           ;main.c: 138:                             min++;
  1406     075C  3001               	movlw	1
  1407     075D  00BF               	movwf	??_main
  1408     075E  083F               	movf	??_main,w
  1409     075F  07B0               	addwf	_min,f
  1410                           
  1411                           ;main.c: 139:                         }
  1412     0760  2F62               	goto	l1793
  1413     0761                     l1791:
  1414                           
  1415                           ;main.c: 141:                             min = 0;
  1416     0761  01B0               	clrf	_min
  1417     0762                     l1793:
  1418                           
  1419                           ;main.c: 148:                 if(PORTBbits.RB5 == 0){
  1420     0762  1A86               	btfsc	6,5	;volatile
  1421     0763  2EFA               	goto	l1813
  1422                           
  1423                           ;main.c: 149:                     _delay((unsigned long)((50)*(8000000/4000.0)));
  1424     0764  3082               	movlw	130
  1425     0765  1283               	bcf	3,5	;RP0=0, select bank0
  1426     0766  1303               	bcf	3,6	;RP1=0, select bank0
  1427     0767  00C0               	movwf	??_main+1
  1428     0768  30DD               	movlw	221
  1429     0769  00BF               	movwf	??_main
  1430     076A                     u1447:
  1431     076A  0BBF               	decfsz	??_main,f
  1432     076B  2F6A               	goto	u1447
  1433     076C  0BC0               	decfsz	??_main+1,f
  1434     076D  2F6A               	goto	u1447
  1435                           
  1436                           ;main.c: 151:                     if (modo == 0){
  1437     076E  1283               	bcf	3,5	;RP0=0, select bank0
  1438     076F  1303               	bcf	3,6	;RP1=0, select bank0
  1439     0770  082E               	movf	_modo,w
  1440     0771  1D03               	btfss	3,2
  1441     0772  2F7C               	goto	l1805
  1442                           
  1443                           ;main.c: 152:                         if (sec > 0){
  1444     0773  0832               	movf	_sec,w
  1445     0774  1903               	btfsc	3,2
  1446     0775  2F79               	goto	l1803
  1447                           
  1448                           ;main.c: 153:                             sec--;
  1449     0776  3001               	movlw	1
  1450     0777  02B2               	subwf	_sec,f
  1451                           
  1452                           ;main.c: 154:                         }
  1453     0778  2EFA               	goto	l1813
  1454     0779                     l1803:
  1455                           
  1456                           ;main.c: 156:                             sec = 59;
  1457     0779  303B               	movlw	59
  1458     077A  00B2               	movwf	_sec
  1459     077B  2EFA               	goto	l1813
  1460     077C                     l1805:
  1461     077C  032E               	decf	_modo,w
  1462     077D  1D03               	btfss	3,2
  1463     077E  2EFA               	goto	l1813
  1464                           
  1465                           ;main.c: 160:                         if (min > 0){
  1466     077F  0830               	movf	_min,w
  1467     0780  1903               	btfsc	3,2
  1468     0781  2F85               	goto	l1811
  1469                           
  1470                           ;main.c: 161:                             min--;
  1471     0782  3001               	movlw	1
  1472     0783  02B0               	subwf	_min,f
  1473                           
  1474                           ;main.c: 162:                         }
  1475     0784  2EFA               	goto	l1813
  1476     0785                     l1811:
  1477                           
  1478                           ;main.c: 164:                             min = 59;
  1479     0785  303B               	movlw	59
  1480     0786  00B0               	movwf	_min
  1481     0787  2EFA               	goto	l1813
  1482     0788                     l1815:
  1483                           
  1484                           ;main.c: 169:             enviar_x(0,0);
  1485     0788  01F2               	clrf	enviar_x@val2
  1486     0789  3000               	movlw	0
  1487     078A  120A  118A  23D0  120A  118A  	fcall	_enviar_x
  1488                           
  1489                           ;main.c: 170:             Escribir_dato(sec, 14, 2);
  1490     078F  300E               	movlw	14
  1491     0790  00FC               	movwf	Escribir_dato@posx
  1492     0791  3002               	movlw	2
  1493     0792  00FD               	movwf	Escribir_dato@posy
  1494     0793  1283               	bcf	3,5	;RP0=0, select bank0
  1495     0794  0832               	movf	_sec,w
  1496     0795  120A  118A  2521  120A  118A  	fcall	_Escribir_dato
  1497                           
  1498                           ;main.c: 171:             Escribir_dato(min, 11, 2);
  1499     079A  300B               	movlw	11
  1500     079B  00FC               	movwf	Escribir_dato@posx
  1501     079C  3002               	movlw	2
  1502     079D  00FD               	movwf	Escribir_dato@posy
  1503     079E  0830               	movf	_min,w
  1504     079F  120A  118A  2521  120A  118A  	fcall	_Escribir_dato
  1505                           
  1506                           ;main.c: 172:             while(PORTBbits.RB2 & !((sec == segundos) & (min == minutos)) 
      +                          ){
  1507     07A4  2FCE               	goto	l1819
  1508     07A5                     l1817:
  1509                           
  1510                           ;main.c: 173:                 segundos = leer_x(0x00);
  1511     07A5  3000               	movlw	0
  1512     07A6  120A  118A  24E2  120A  118A  	fcall	_leer_x
  1513     07AB  1283               	bcf	3,5	;RP0=0, select bank0
  1514     07AC  00B1               	movwf	_segundos
  1515                           
  1516                           ;main.c: 174:                 minutos = leer_x(0x01);
  1517     07AD  3001               	movlw	1
  1518     07AE  120A  118A  24E2  120A  118A  	fcall	_leer_x
  1519     07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1520     07B4  00AF               	movwf	_minutos
  1521                           
  1522                           ;main.c: 175:                 Escribir_dato(segundos, 14, 1);
  1523     07B5  300E               	movlw	14
  1524     07B6  00FC               	movwf	Escribir_dato@posx
  1525     07B7  01FD               	clrf	Escribir_dato@posy
  1526     07B8  0AFD               	incf	Escribir_dato@posy,f
  1527     07B9  0831               	movf	_segundos,w
  1528     07BA  120A  118A  2521  120A  118A  	fcall	_Escribir_dato
  1529                           
  1530                           ;main.c: 176:                 Escribir_dato(minutos, 11, 1);
  1531     07BF  300B               	movlw	11
  1532     07C0  00FC               	movwf	Escribir_dato@posx
  1533     07C1  01FD               	clrf	Escribir_dato@posy
  1534     07C2  0AFD               	incf	Escribir_dato@posy,f
  1535     07C3  082F               	movf	_minutos,w
  1536     07C4  120A  118A  2521  120A  118A  	fcall	_Escribir_dato
  1537                           
  1538                           ;main.c: 177:                 leer_temperatura();
  1539     07C9  120A  118A  2436  120A  118A  	fcall	_leer_temperatura
  1540     07CE                     l1819:
  1541                           
  1542                           ;main.c: 172:             while(PORTBbits.RB2 & !((sec == segundos) & (min == minutos)) 
      +                          ){
  1543     07CE  01C1               	clrf	_main$201
  1544     07CF  0AC1               	incf	_main$201,f
  1545     07D0  0832               	movf	_sec,w
  1546     07D1  0631               	xorwf	_segundos,w
  1547     07D2  1D03               	skipz
  1548     07D3  2FD9               	goto	l1827
  1549     07D4  0830               	movf	_min,w
  1550     07D5  062F               	xorwf	_minutos,w
  1551     07D6  1D03               	skipz
  1552     07D7  2FD9               	goto	l1827
  1553     07D8  01C1               	clrf	_main$201
  1554     07D9                     l1827:
  1555     07D9  0C06               	rrf	6,w	;volatile
  1556     07DA  00BF               	movwf	??_main
  1557     07DB  0C3F               	rrf	??_main,w
  1558     07DC  3901               	andlw	1
  1559     07DD  0541               	andwf	_main$201,w
  1560     07DE  1D03               	btfss	3,2
  1561     07DF  2FA5               	goto	l1817
  1562                           
  1563                           ;main.c: 179:             Escribir_dato(0, 14, 2);
  1564     07E0  300E               	movlw	14
  1565     07E1  00FC               	movwf	Escribir_dato@posx
  1566     07E2  3002               	movlw	2
  1567     07E3  00FD               	movwf	Escribir_dato@posy
  1568     07E4  3000               	movlw	0
  1569     07E5  120A  118A  2521  120A  118A  	fcall	_Escribir_dato
  1570                           
  1571                           ;main.c: 180:             Escribir_dato(0, 11, 2);
  1572     07EA  300B               	movlw	11
  1573     07EB  00FC               	movwf	Escribir_dato@posx
  1574     07EC  3002               	movlw	2
  1575     07ED  00FD               	movwf	Escribir_dato@posy
  1576     07EE  3000               	movlw	0
  1577     07EF  120A  118A  2521  120A  118A  	fcall	_Escribir_dato
  1578     07F4  2EB1               	goto	l1735
  1579     07F5                     __end_of_main:
  1580                           
  1581                           	psect	text1
  1582     0567                     __ptext1:	
  1583 ;; *************** function _setupINTOSC *****************
  1584 ;; Defined at:
  1585 ;;		line 10 in file "oscilador.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  IRCF            1    wreg     unsigned char 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  IRCF            1    0[COMMON] unsigned char 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0
  1594 ;; Tracked objects:
  1595 ;;		On entry : B00/0
  1596 ;;		On exit  : B00/100
  1597 ;;		Unchanged: 800/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1599 ;;      Params:         0       0       0       0       0
  1600 ;;      Locals:         1       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0
  1602 ;;      Totals:         1       0       0       0       0
  1603 ;;Total ram usage:        1 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_main
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612     0567                     _setupINTOSC:	
  1613                           ;psect for function _setupINTOSC
  1614                           
  1615                           
  1616                           ;incstack = 0
  1617                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  1618                           ;setupINTOSC@IRCF stored from wreg
  1619     0567  00F0               	movwf	setupINTOSC@IRCF
  1620                           
  1621                           ;oscilador.c: 11:     if (IRCF == 7){
  1622     0568  3007               	movlw	7
  1623     0569  0670               	xorwf	setupINTOSC@IRCF,w
  1624     056A  1D03               	btfss	3,2
  1625     056B  2D6F               	goto	l283
  1626                           
  1627                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  1628     056C  3070               	movlw	112
  1629     056D  1683               	bsf	3,5	;RP0=1, select bank1
  1630     056E  048F               	iorwf	15,f	;volatile
  1631     056F                     l283:	
  1632                           ;oscilador.c: 13:     }
  1633                           
  1634                           
  1635                           ;oscilador.c: 14:     if (IRCF == 6){
  1636     056F  3006               	movlw	6
  1637     0570  0670               	xorwf	setupINTOSC@IRCF,w
  1638     0571  1D03               	btfss	3,2
  1639     0572  2D78               	goto	l284
  1640                           
  1641                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  1642     0573  1683               	bsf	3,5	;RP0=1, select bank1
  1643     0574  080F               	movf	15,w	;volatile
  1644     0575  398F               	andlw	-113
  1645     0576  3860               	iorlw	96
  1646     0577  008F               	movwf	15	;volatile
  1647     0578                     l284:	
  1648                           ;oscilador.c: 16:     }
  1649                           
  1650                           
  1651                           ;oscilador.c: 17:     if (IRCF == 5){
  1652     0578  3005               	movlw	5
  1653     0579  0670               	xorwf	setupINTOSC@IRCF,w
  1654     057A  1D03               	btfss	3,2
  1655     057B  2D81               	goto	l285
  1656                           
  1657                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  1658     057C  1683               	bsf	3,5	;RP0=1, select bank1
  1659     057D  080F               	movf	15,w	;volatile
  1660     057E  398F               	andlw	-113
  1661     057F  3850               	iorlw	80
  1662     0580  008F               	movwf	15	;volatile
  1663     0581                     l285:	
  1664                           ;oscilador.c: 19:     }
  1665                           
  1666                           
  1667                           ;oscilador.c: 20:     if (IRCF == 4){
  1668     0581  3004               	movlw	4
  1669     0582  0670               	xorwf	setupINTOSC@IRCF,w
  1670     0583  1D03               	btfss	3,2
  1671     0584  2D8A               	goto	l286
  1672                           
  1673                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  1674     0585  1683               	bsf	3,5	;RP0=1, select bank1
  1675     0586  080F               	movf	15,w	;volatile
  1676     0587  398F               	andlw	-113
  1677     0588  3840               	iorlw	64
  1678     0589  008F               	movwf	15	;volatile
  1679     058A                     l286:	
  1680                           ;oscilador.c: 22:     }
  1681                           
  1682                           
  1683                           ;oscilador.c: 23:     if (IRCF == 3){
  1684     058A  3003               	movlw	3
  1685     058B  0670               	xorwf	setupINTOSC@IRCF,w
  1686     058C  1D03               	btfss	3,2
  1687     058D  2D93               	goto	l287
  1688                           
  1689                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  1690     058E  1683               	bsf	3,5	;RP0=1, select bank1
  1691     058F  080F               	movf	15,w	;volatile
  1692     0590  398F               	andlw	-113
  1693     0591  3830               	iorlw	48
  1694     0592  008F               	movwf	15	;volatile
  1695     0593                     l287:	
  1696                           ;oscilador.c: 25:     }
  1697                           
  1698                           
  1699                           ;oscilador.c: 26:     if (IRCF == 2){
  1700     0593  3002               	movlw	2
  1701     0594  0670               	xorwf	setupINTOSC@IRCF,w
  1702     0595  1D03               	btfss	3,2
  1703     0596  2D9C               	goto	l288
  1704                           
  1705                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  1706     0597  1683               	bsf	3,5	;RP0=1, select bank1
  1707     0598  080F               	movf	15,w	;volatile
  1708     0599  398F               	andlw	-113
  1709     059A  3820               	iorlw	32
  1710     059B  008F               	movwf	15	;volatile
  1711     059C                     l288:	
  1712                           ;oscilador.c: 28:     }
  1713                           
  1714                           
  1715                           ;oscilador.c: 29:     if (IRCF == 1){
  1716     059C  0370               	decf	setupINTOSC@IRCF,w
  1717     059D  1D03               	btfss	3,2
  1718     059E  2DA4               	goto	l289
  1719                           
  1720                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  1721     059F  1683               	bsf	3,5	;RP0=1, select bank1
  1722     05A0  080F               	movf	15,w	;volatile
  1723     05A1  398F               	andlw	-113
  1724     05A2  3810               	iorlw	16
  1725     05A3  008F               	movwf	15	;volatile
  1726     05A4                     l289:	
  1727                           ;oscilador.c: 31:     }
  1728                           
  1729                           
  1730                           ;oscilador.c: 32:     if (IRCF == 0){
  1731     05A4  0870               	movf	setupINTOSC@IRCF,w
  1732     05A5  1D03               	btfss	3,2
  1733     05A6  2DAA               	goto	l1677
  1734                           
  1735                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  1736     05A7  308F               	movlw	-113
  1737     05A8  1683               	bsf	3,5	;RP0=1, select bank1
  1738     05A9  058F               	andwf	15,f	;volatile
  1739     05AA                     l1677:
  1740                           
  1741                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  1742     05AA  1683               	bsf	3,5	;RP0=1, select bank1
  1743     05AB  140F               	bsf	15,0	;volatile
  1744     05AC  0008               	return
  1745     05AD                     __end_of_setupINTOSC:
  1746                           
  1747                           	psect	text2
  1748     0327                     __ptext2:	
  1749 ;; *************** function _portsetup *****************
  1750 ;; Defined at:
  1751 ;;		line 185 in file "main.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;		None
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;		None
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		wreg, status,2, status,0, pclath, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : B00/100
  1762 ;;		On exit  : B00/100
  1763 ;;		Unchanged: 800/0
  1764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1765 ;;      Params:         0       0       0       0       0
  1766 ;;      Locals:         0       0       0       0       0
  1767 ;;      Temps:          0       0       0       0       0
  1768 ;;      Totals:         0       0       0       0       0
  1769 ;;Total ram usage:        0 bytes
  1770 ;; Hardware stack levels used: 1
  1771 ;; Hardware stack levels required when called: 2
  1772 ;; This function calls:
  1773 ;;		_I2C_Master_Init
  1774 ;; This function is called by:
  1775 ;;		_main
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779     0327                     _portsetup:	
  1780                           ;psect for function _portsetup
  1781                           
  1782                           
  1783                           ;main.c: 186:     ANSEL = 0;
  1784                           
  1785                           ;incstack = 0
  1786                           ; Regs used in _portsetup: [wreg+status,2+status,0+pclath+cstack]
  1787     0327  1703               	bsf	3,6	;RP1=1, select bank3
  1788     0328  0188               	clrf	8	;volatile
  1789                           
  1790                           ;main.c: 187:     ANSELH = 0;
  1791     0329  0189               	clrf	9	;volatile
  1792                           
  1793                           ;main.c: 188:     TRISA = 0;
  1794     032A  1303               	bcf	3,6	;RP1=0, select bank1
  1795     032B  0185               	clrf	5	;volatile
  1796                           
  1797                           ;main.c: 189:     PORTA = 0;
  1798     032C  1283               	bcf	3,5	;RP0=0, select bank0
  1799     032D  0185               	clrf	5	;volatile
  1800                           
  1801                           ;main.c: 190:     TRISD = 0;
  1802     032E  1683               	bsf	3,5	;RP0=1, select bank1
  1803     032F  0188               	clrf	8	;volatile
  1804                           
  1805                           ;main.c: 191:     PORTD = 0;
  1806     0330  1283               	bcf	3,5	;RP0=0, select bank0
  1807     0331  0188               	clrf	8	;volatile
  1808                           
  1809                           ;main.c: 194:     TRISB = 0b11111100;
  1810     0332  30FC               	movlw	252
  1811     0333  1683               	bsf	3,5	;RP0=1, select bank1
  1812     0334  0086               	movwf	6	;volatile
  1813                           
  1814                           ;main.c: 195:     PORTB = 0b11111100;
  1815     0335  30FC               	movlw	252
  1816     0336  1283               	bcf	3,5	;RP0=0, select bank0
  1817     0337  0086               	movwf	6	;volatile
  1818                           
  1819                           ;main.c: 196:     WPUB = 0b11111100;
  1820     0338  30FC               	movlw	252
  1821     0339  1683               	bsf	3,5	;RP0=1, select bank1
  1822     033A  0095               	movwf	21	;volatile
  1823                           
  1824                           ;main.c: 197:     OPTION_REGbits.nRBPU = 0;
  1825     033B  1381               	bcf	1,7	;volatile
  1826                           
  1827                           ;main.c: 199:     I2C_Master_Init(100000);
  1828     033C  3000               	movlw	0
  1829     033D  1283               	bcf	3,5	;RP0=0, select bank0
  1830     033E  00BA               	movwf	I2C_Master_Init@c+3
  1831     033F  3001               	movlw	1
  1832     0340  00B9               	movwf	I2C_Master_Init@c+2
  1833     0341  3086               	movlw	134
  1834     0342  00B8               	movwf	I2C_Master_Init@c+1
  1835     0343  30A0               	movlw	160
  1836     0344  00B7               	movwf	I2C_Master_Init@c
  1837     0345  120A  118A  239F   	fcall	_I2C_Master_Init
  1838     0348  0008               	return
  1839     0349                     __end_of_portsetup:
  1840                           
  1841                           	psect	text3
  1842     039F                     __ptext3:	
  1843 ;; *************** function _I2C_Master_Init *****************
  1844 ;; Defined at:
  1845 ;;		line 16 in file "I2C.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  c               4    0[BANK0 ] const unsigned long 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;		None
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, status,2, status,0, pclath, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : B00/0
  1856 ;;		On exit  : B00/100
  1857 ;;		Unchanged: 800/0
  1858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1859 ;;      Params:         0       4       0       0       0
  1860 ;;      Locals:         0       0       0       0       0
  1861 ;;      Temps:          0       4       0       0       0
  1862 ;;      Totals:         0       8       0       0       0
  1863 ;;Total ram usage:        8 bytes
  1864 ;; Hardware stack levels used: 1
  1865 ;; Hardware stack levels required when called: 1
  1866 ;; This function calls:
  1867 ;;		___lldiv
  1868 ;; This function is called by:
  1869 ;;		_portsetup
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873     039F                     _I2C_Master_Init:	
  1874                           ;psect for function _I2C_Master_Init
  1875                           
  1876                           
  1877                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1878                           
  1879                           ;incstack = 0
  1880                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1881     039F  3028               	movlw	40
  1882     03A0  0094               	movwf	20	;volatile
  1883                           
  1884                           ;I2C.c: 19:     SSPCON2 = 0;
  1885     03A1  1683               	bsf	3,5	;RP0=1, select bank1
  1886     03A2  0191               	clrf	17	;volatile
  1887                           
  1888                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1889     03A3  1283               	bcf	3,5	;RP0=0, select bank0
  1890     03A4  0837               	movf	I2C_Master_Init@c,w
  1891     03A5  00BB               	movwf	??_I2C_Master_Init
  1892     03A6  0838               	movf	I2C_Master_Init@c+1,w
  1893     03A7  00BC               	movwf	??_I2C_Master_Init+1
  1894     03A8  0839               	movf	I2C_Master_Init@c+2,w
  1895     03A9  00BD               	movwf	??_I2C_Master_Init+2
  1896     03AA  083A               	movf	I2C_Master_Init@c+3,w
  1897     03AB  00BE               	movwf	??_I2C_Master_Init+3
  1898     03AC  3002               	movlw	2
  1899     03AD                     u1105:
  1900     03AD  1003               	clrc
  1901     03AE  0DBB               	rlf	??_I2C_Master_Init,f
  1902     03AF  0DBC               	rlf	??_I2C_Master_Init+1,f
  1903     03B0  0DBD               	rlf	??_I2C_Master_Init+2,f
  1904     03B1  0DBE               	rlf	??_I2C_Master_Init+3,f
  1905     03B2  3EFF               	addlw	-1
  1906     03B3  1D03               	skipz
  1907     03B4  2BAD               	goto	u1105
  1908     03B5  083E               	movf	??_I2C_Master_Init+3,w
  1909     03B6  00F3               	movwf	___lldiv@divisor+3
  1910     03B7  083D               	movf	??_I2C_Master_Init+2,w
  1911     03B8  00F2               	movwf	___lldiv@divisor+2
  1912     03B9  083C               	movf	??_I2C_Master_Init+1,w
  1913     03BA  00F1               	movwf	___lldiv@divisor+1
  1914     03BB  083B               	movf	??_I2C_Master_Init,w
  1915     03BC  00F0               	movwf	___lldiv@divisor
  1916     03BD  3000               	movlw	0
  1917     03BE  00F7               	movwf	___lldiv@dividend+3
  1918     03BF  307A               	movlw	122
  1919     03C0  00F6               	movwf	___lldiv@dividend+2
  1920     03C1  3012               	movlw	18
  1921     03C2  00F5               	movwf	___lldiv@dividend+1
  1922     03C3  3000               	movlw	0
  1923     03C4  00F4               	movwf	___lldiv@dividend
  1924     03C5  120A  118A  2608   	fcall	___lldiv
  1925     03C8  0870               	movf	?___lldiv,w
  1926     03C9  3EFF               	addlw	255
  1927     03CA  1683               	bsf	3,5	;RP0=1, select bank1
  1928     03CB  0093               	movwf	19	;volatile
  1929                           
  1930                           ;I2C.c: 21:     SSPSTAT = 0;
  1931     03CC  0194               	clrf	20	;volatile
  1932                           
  1933                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1934     03CD  1587               	bsf	7,3	;volatile
  1935                           
  1936                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1937     03CE  1607               	bsf	7,4	;volatile
  1938     03CF  0008               	return
  1939     03D0                     __end_of_I2C_Master_Init:
  1940                           
  1941                           	psect	text4
  1942     0608                     __ptext4:	
  1943 ;; *************** function ___lldiv *****************
  1944 ;; Defined at:
  1945 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  divisor         4    0[COMMON] unsigned long 
  1948 ;;  dividend        4    4[COMMON] unsigned long 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  quotient        4    9[COMMON] unsigned long 
  1951 ;;  counter         1   13[COMMON] unsigned char 
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  4    0[COMMON] unsigned long 
  1954 ;; Registers used:
  1955 ;;		wreg, status,2, status,0
  1956 ;; Tracked objects:
  1957 ;;		On entry : B00/0
  1958 ;;		On exit  : B00/0
  1959 ;;		Unchanged: B00/0
  1960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1961 ;;      Params:         8       0       0       0       0
  1962 ;;      Locals:         5       0       0       0       0
  1963 ;;      Temps:          1       0       0       0       0
  1964 ;;      Totals:        14       0       0       0       0
  1965 ;;Total ram usage:       14 bytes
  1966 ;; Hardware stack levels used: 1
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_I2C_Master_Init
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974     0608                     ___lldiv:	
  1975                           ;psect for function ___lldiv
  1976                           
  1977                           
  1978                           ;incstack = 0
  1979                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1980     0608  3000               	movlw	0
  1981     0609  00FC               	movwf	___lldiv@quotient+3
  1982     060A  3000               	movlw	0
  1983     060B  00FB               	movwf	___lldiv@quotient+2
  1984     060C  3000               	movlw	0
  1985     060D  00FA               	movwf	___lldiv@quotient+1
  1986     060E  3000               	movlw	0
  1987     060F  00F9               	movwf	___lldiv@quotient
  1988     0610  0873               	movf	___lldiv@divisor+3,w
  1989     0611  0472               	iorwf	___lldiv@divisor+2,w
  1990     0612  0471               	iorwf	___lldiv@divisor+1,w
  1991     0613  0470               	iorwf	___lldiv@divisor,w
  1992     0614  1903               	skipnz
  1993     0615  2E5D               	goto	l1599
  1994     0616  01FD               	clrf	___lldiv@counter
  1995     0617  0AFD               	incf	___lldiv@counter,f
  1996     0618                     l1585:
  1997     0618  1BF3               	btfsc	___lldiv@divisor+3,7
  1998     0619  2E28               	goto	l1587
  1999     061A  3001               	movlw	1
  2000     061B  00F8               	movwf	??___lldiv
  2001     061C                     u1045:
  2002     061C  1003               	clrc
  2003     061D  0DF0               	rlf	___lldiv@divisor,f
  2004     061E  0DF1               	rlf	___lldiv@divisor+1,f
  2005     061F  0DF2               	rlf	___lldiv@divisor+2,f
  2006     0620  0DF3               	rlf	___lldiv@divisor+3,f
  2007     0621  0BF8               	decfsz	??___lldiv,f
  2008     0622  2E1C               	goto	u1045
  2009     0623  3001               	movlw	1
  2010     0624  00F8               	movwf	??___lldiv
  2011     0625  0878               	movf	??___lldiv,w
  2012     0626  07FD               	addwf	___lldiv@counter,f
  2013     0627  2E18               	goto	l1585
  2014     0628                     l1587:
  2015     0628  3001               	movlw	1
  2016     0629  00F8               	movwf	??___lldiv
  2017     062A                     u1065:
  2018     062A  1003               	clrc
  2019     062B  0DF9               	rlf	___lldiv@quotient,f
  2020     062C  0DFA               	rlf	___lldiv@quotient+1,f
  2021     062D  0DFB               	rlf	___lldiv@quotient+2,f
  2022     062E  0DFC               	rlf	___lldiv@quotient+3,f
  2023     062F  0BF8               	decfsz	??___lldiv,f
  2024     0630  2E2A               	goto	u1065
  2025     0631  0873               	movf	___lldiv@divisor+3,w
  2026     0632  0277               	subwf	___lldiv@dividend+3,w
  2027     0633  1D03               	skipz
  2028     0634  2E3F               	goto	u1075
  2029     0635  0872               	movf	___lldiv@divisor+2,w
  2030     0636  0276               	subwf	___lldiv@dividend+2,w
  2031     0637  1D03               	skipz
  2032     0638  2E3F               	goto	u1075
  2033     0639  0871               	movf	___lldiv@divisor+1,w
  2034     063A  0275               	subwf	___lldiv@dividend+1,w
  2035     063B  1D03               	skipz
  2036     063C  2E3F               	goto	u1075
  2037     063D  0870               	movf	___lldiv@divisor,w
  2038     063E  0274               	subwf	___lldiv@dividend,w
  2039     063F                     u1075:
  2040     063F  1C03               	skipc
  2041     0640  2E50               	goto	l1595
  2042     0641  0870               	movf	___lldiv@divisor,w
  2043     0642  02F4               	subwf	___lldiv@dividend,f
  2044     0643  0871               	movf	___lldiv@divisor+1,w
  2045     0644  1C03               	skipc
  2046     0645  0F71               	incfsz	___lldiv@divisor+1,w
  2047     0646  02F5               	subwf	___lldiv@dividend+1,f
  2048     0647  0872               	movf	___lldiv@divisor+2,w
  2049     0648  1C03               	skipc
  2050     0649  0F72               	incfsz	___lldiv@divisor+2,w
  2051     064A  02F6               	subwf	___lldiv@dividend+2,f
  2052     064B  0873               	movf	___lldiv@divisor+3,w
  2053     064C  1C03               	skipc
  2054     064D  0F73               	incfsz	___lldiv@divisor+3,w
  2055     064E  02F7               	subwf	___lldiv@dividend+3,f
  2056     064F  1479               	bsf	___lldiv@quotient,0
  2057     0650                     l1595:
  2058     0650  3001               	movlw	1
  2059     0651                     u1085:
  2060     0651  1003               	clrc
  2061     0652  0CF3               	rrf	___lldiv@divisor+3,f
  2062     0653  0CF2               	rrf	___lldiv@divisor+2,f
  2063     0654  0CF1               	rrf	___lldiv@divisor+1,f
  2064     0655  0CF0               	rrf	___lldiv@divisor,f
  2065     0656  3EFF               	addlw	-1
  2066     0657  1D03               	skipz
  2067     0658  2E51               	goto	u1085
  2068     0659  3001               	movlw	1
  2069     065A  02FD               	subwf	___lldiv@counter,f
  2070     065B  1D03               	btfss	3,2
  2071     065C  2E28               	goto	l1587
  2072     065D                     l1599:
  2073     065D  087C               	movf	___lldiv@quotient+3,w
  2074     065E  00F3               	movwf	?___lldiv+3
  2075     065F  087B               	movf	___lldiv@quotient+2,w
  2076     0660  00F2               	movwf	?___lldiv+2
  2077     0661  087A               	movf	___lldiv@quotient+1,w
  2078     0662  00F1               	movwf	?___lldiv+1
  2079     0663  0879               	movf	___lldiv@quotient,w
  2080     0664  00F0               	movwf	?___lldiv
  2081     0665  0008               	return
  2082     0666                     __end_of___lldiv:
  2083                           
  2084                           	psect	text5
  2085     04E2                     __ptext5:	
  2086 ;; *************** function _leer_x *****************
  2087 ;; Defined at:
  2088 ;;		line 24 in file "DS3231.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  address         1    wreg     unsigned char 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;  address         1   11[COMMON] unsigned char 
  2093 ;;  valor           1   12[COMMON] unsigned char 
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      unsigned char 
  2096 ;; Registers used:
  2097 ;;		wreg, status,2, status,0, pclath, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 200/100
  2100 ;;		On exit  : 300/100
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2103 ;;      Params:         0       0       0       0       0
  2104 ;;      Locals:         2       0       0       0       0
  2105 ;;      Temps:          2       0       0       0       0
  2106 ;;      Totals:         4       0       0       0       0
  2107 ;;Total ram usage:        4 bytes
  2108 ;; Hardware stack levels used: 1
  2109 ;; Hardware stack levels required when called: 2
  2110 ;; This function calls:
  2111 ;;		_I2C_Master_Read
  2112 ;;		_I2C_Master_RepeatedStart
  2113 ;;		_I2C_Master_Start
  2114 ;;		_I2C_Master_Stop
  2115 ;;		_I2C_Master_Write
  2116 ;;		_convertir
  2117 ;; This function is called by:
  2118 ;;		_main
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122     04E2                     _leer_x:	
  2123                           ;psect for function _leer_x
  2124                           
  2125                           
  2126                           ;incstack = 0
  2127                           ; Regs used in _leer_x: [wreg+status,2+status,0+pclath+cstack]
  2128                           ;leer_x@address stored from wreg
  2129     04E2  00FB               	movwf	leer_x@address
  2130                           
  2131                           ;DS3231.c: 25:     uint8_t valor;;DS3231.c: 26:     I2C_Master_Start();
  2132     04E3  120A  118A  2239  120A  118A  	fcall	_I2C_Master_Start
  2133                           
  2134                           ;DS3231.c: 27:     I2C_Master_Write(0xD0);
  2135     04E8  30D0               	movlw	208
  2136     04E9  00F0               	movwf	I2C_Master_Write@d
  2137     04EA  3000               	movlw	0
  2138     04EB  00F1               	movwf	I2C_Master_Write@d+1
  2139     04EC  120A  118A  2248  120A  118A  	fcall	_I2C_Master_Write
  2140                           
  2141                           ;DS3231.c: 28:     I2C_Master_Write(address);
  2142     04F1  087B               	movf	leer_x@address,w
  2143     04F2  00F9               	movwf	??_leer_x
  2144     04F3  01FA               	clrf	??_leer_x+1
  2145     04F4  0879               	movf	??_leer_x,w
  2146     04F5  00F0               	movwf	I2C_Master_Write@d
  2147     04F6  087A               	movf	??_leer_x+1,w
  2148     04F7  00F1               	movwf	I2C_Master_Write@d+1
  2149     04F8  120A  118A  2248  120A  118A  	fcall	_I2C_Master_Write
  2150                           
  2151                           ;DS3231.c: 29:     I2C_Master_RepeatedStart();
  2152     04FD  120A  118A  2243  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2153                           
  2154                           ;DS3231.c: 30:     I2C_Master_Write(0xD1);
  2155     0502  30D1               	movlw	209
  2156     0503  00F0               	movwf	I2C_Master_Write@d
  2157     0504  3000               	movlw	0
  2158     0505  00F1               	movwf	I2C_Master_Write@d+1
  2159     0506  120A  118A  2248  120A  118A  	fcall	_I2C_Master_Write
  2160                           
  2161                           ;DS3231.c: 31:     valor = I2C_Master_Read(0);
  2162     050B  3000               	movlw	0
  2163     050C  00F0               	movwf	I2C_Master_Read@a
  2164     050D  00F1               	movwf	I2C_Master_Read@a+1
  2165     050E  120A  118A  2349  120A  118A  	fcall	_I2C_Master_Read
  2166     0513  0870               	movf	?_I2C_Master_Read,w
  2167     0514  00FC               	movwf	leer_x@valor
  2168                           
  2169                           ;DS3231.c: 32:     I2C_Master_Stop();
  2170     0515  120A  118A  223E  120A  118A  	fcall	_I2C_Master_Stop
  2171                           
  2172                           ;DS3231.c: 33:     valor = convertir(valor);
  2173     051A  087C               	movf	leer_x@valor,w
  2174     051B  120A  118A  22AC   	fcall	_convertir
  2175     051E  00FC               	movwf	leer_x@valor
  2176                           
  2177                           ;DS3231.c: 35:     return valor;
  2178     051F  087C               	movf	leer_x@valor,w
  2179     0520  0008               	return
  2180     0521                     __end_of_leer_x:
  2181                           
  2182                           	psect	text6
  2183     02AC                     __ptext6:	
  2184 ;; *************** function _convertir *****************
  2185 ;; Defined at:
  2186 ;;		line 5 in file "DS3231.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  valor           1    wreg     unsigned char 
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;  valor           1    8[COMMON] unsigned char 
  2191 ;;  conversion      1    7[COMMON] unsigned char 
  2192 ;;  decena          1    6[COMMON] unsigned char 
  2193 ;;  unidad          1    5[COMMON] unsigned char 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      unsigned char 
  2196 ;; Registers used:
  2197 ;;		wreg, status,2, status,0, pclath, cstack
  2198 ;; Tracked objects:
  2199 ;;		On entry : 300/100
  2200 ;;		On exit  : 300/100
  2201 ;;		Unchanged: 300/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2203 ;;      Params:         0       0       0       0       0
  2204 ;;      Locals:         4       0       0       0       0
  2205 ;;      Temps:          1       0       0       0       0
  2206 ;;      Totals:         5       0       0       0       0
  2207 ;;Total ram usage:        5 bytes
  2208 ;; Hardware stack levels used: 1
  2209 ;; Hardware stack levels required when called: 1
  2210 ;; This function calls:
  2211 ;;		___bmul
  2212 ;; This function is called by:
  2213 ;;		_leer_x
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217     02AC                     _convertir:	
  2218                           ;psect for function _convertir
  2219                           
  2220                           
  2221                           ;incstack = 0
  2222                           ; Regs used in _convertir: [wreg+status,2+status,0+pclath+cstack]
  2223                           ;convertir@valor stored from wreg
  2224     02AC  00F8               	movwf	convertir@valor
  2225                           
  2226                           ;DS3231.c: 6:     uint8_t unidad;;DS3231.c: 7:     uint8_t decena;;DS3231.c: 8:     uint
      +                          8_t conversion;;DS3231.c: 9:     unidad = valor & 0x0F;
  2227     02AD  0878               	movf	convertir@valor,w
  2228     02AE  390F               	andlw	15
  2229     02AF  00F5               	movwf	convertir@unidad
  2230                           
  2231                           ;DS3231.c: 10:     decena = ((valor & 0xF0) >> 4);
  2232     02B0  0878               	movf	convertir@valor,w
  2233     02B1  00F4               	movwf	??_convertir
  2234     02B2  3004               	movlw	4
  2235     02B3                     u1125:
  2236     02B3  1003               	clrc
  2237     02B4  0CF4               	rrf	??_convertir,f
  2238     02B5  3EFF               	addlw	-1
  2239     02B6  1D03               	skipz
  2240     02B7  2AB3               	goto	u1125
  2241     02B8  0874               	movf	??_convertir,w
  2242     02B9  390F               	andlw	15
  2243     02BA  00F6               	movwf	convertir@decena
  2244                           
  2245                           ;DS3231.c: 11:     conversion = unidad+(decena*10);
  2246     02BB  300A               	movlw	10
  2247     02BC  00F0               	movwf	___bmul@multiplicand
  2248     02BD  0876               	movf	convertir@decena,w
  2249     02BE  120A  118A  226B   	fcall	___bmul
  2250     02C1  0775               	addwf	convertir@unidad,w
  2251     02C2  00F7               	movwf	convertir@conversion
  2252                           
  2253                           ;DS3231.c: 12:     return conversion;
  2254     02C3  0877               	movf	convertir@conversion,w
  2255     02C4  0008               	return
  2256     02C5                     __end_of_convertir:
  2257                           
  2258                           	psect	text7
  2259     026B                     __ptext7:	
  2260 ;; *************** function ___bmul *****************
  2261 ;; Defined at:
  2262 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  multiplier      1    wreg     unsigned char 
  2265 ;;  multiplicand    1    0[COMMON] unsigned char 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  multiplier      1    3[COMMON] unsigned char 
  2268 ;;  product         1    2[COMMON] unsigned char 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      unsigned char 
  2271 ;; Registers used:
  2272 ;;		wreg, status,2, status,0
  2273 ;; Tracked objects:
  2274 ;;		On entry : 300/100
  2275 ;;		On exit  : 300/100
  2276 ;;		Unchanged: 300/0
  2277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2278 ;;      Params:         1       0       0       0       0
  2279 ;;      Locals:         2       0       0       0       0
  2280 ;;      Temps:          1       0       0       0       0
  2281 ;;      Totals:         4       0       0       0       0
  2282 ;;Total ram usage:        4 bytes
  2283 ;; Hardware stack levels used: 1
  2284 ;; This function calls:
  2285 ;;		Nothing
  2286 ;; This function is called by:
  2287 ;;		_convertir
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291     026B                     ___bmul:	
  2292                           ;psect for function ___bmul
  2293                           
  2294                           
  2295                           ;incstack = 0
  2296                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2297                           ;___bmul@multiplier stored from wreg
  2298     026B  00F3               	movwf	___bmul@multiplier
  2299     026C  01F2               	clrf	___bmul@product
  2300     026D                     l1567:
  2301     026D  1C73               	btfss	___bmul@multiplier,0
  2302     026E  2A73               	goto	l1571
  2303     026F  0870               	movf	___bmul@multiplicand,w
  2304     0270  00F1               	movwf	??___bmul
  2305     0271  0871               	movf	??___bmul,w
  2306     0272  07F2               	addwf	___bmul@product,f
  2307     0273                     l1571:
  2308     0273  1003               	clrc
  2309     0274  0DF0               	rlf	___bmul@multiplicand,f
  2310     0275  1003               	clrc
  2311     0276  0CF3               	rrf	___bmul@multiplier,f
  2312     0277  0873               	movf	___bmul@multiplier,w
  2313     0278  1D03               	btfss	3,2
  2314     0279  2A6D               	goto	l1567
  2315     027A  0872               	movf	___bmul@product,w
  2316     027B  0008               	return
  2317     027C                     __end_of___bmul:
  2318                           
  2319                           	psect	text8
  2320     0243                     __ptext8:	
  2321 ;; *************** function _I2C_Master_RepeatedStart *****************
  2322 ;; Defined at:
  2323 ;;		line 47 in file "I2C.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;		None
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg, status,2, status,0, pclath, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 300/0
  2334 ;;		On exit  : 300/100
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2337 ;;      Params:         0       0       0       0       0
  2338 ;;      Locals:         0       0       0       0       0
  2339 ;;      Temps:          0       0       0       0       0
  2340 ;;      Totals:         0       0       0       0       0
  2341 ;;Total ram usage:        0 bytes
  2342 ;; Hardware stack levels used: 1
  2343 ;; Hardware stack levels required when called: 1
  2344 ;; This function calls:
  2345 ;;		_I2C_Master_Wait
  2346 ;; This function is called by:
  2347 ;;		_leer_x
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351     0243                     _I2C_Master_RepeatedStart:	
  2352                           ;psect for function _I2C_Master_RepeatedStart
  2353                           
  2354                           
  2355                           ;I2C.c: 49:     I2C_Master_Wait();
  2356                           
  2357                           ;incstack = 0
  2358                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2359     0243  120A  118A  2257   	fcall	_I2C_Master_Wait
  2360                           
  2361                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2362     0246  1491               	bsf	17,1	;volatile
  2363     0247  0008               	return
  2364     0248                     __end_of_I2C_Master_RepeatedStart:
  2365                           
  2366                           	psect	text9
  2367     0436                     __ptext9:	
  2368 ;; *************** function _leer_temperatura *****************
  2369 ;; Defined at:
  2370 ;;		line 218 in file "main.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;		None
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;		None
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      void 
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, status,0, pclath, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 300/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2384 ;;      Params:         0       0       0       0       0
  2385 ;;      Locals:         0       0       0       0       0
  2386 ;;      Temps:          0       0       0       0       0
  2387 ;;      Totals:         0       0       0       0       0
  2388 ;;Total ram usage:        0 bytes
  2389 ;; Hardware stack levels used: 1
  2390 ;; Hardware stack levels required when called: 4
  2391 ;; This function calls:
  2392 ;;		_Escribir_dato
  2393 ;;		_I2C_Master_Read
  2394 ;;		_I2C_Master_Start
  2395 ;;		_I2C_Master_Stop
  2396 ;;		_I2C_Master_Write
  2397 ;; This function is called by:
  2398 ;;		_main
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402     0436                     _leer_temperatura:	
  2403                           ;psect for function _leer_temperatura
  2404                           
  2405                           
  2406                           ;main.c: 219:     I2C_Master_Start();
  2407                           
  2408                           ;incstack = 0
  2409                           ; Regs used in _leer_temperatura: [wreg+status,2+status,0+pclath+cstack]
  2410     0436  120A  118A  2239  120A  118A  	fcall	_I2C_Master_Start
  2411                           
  2412                           ;main.c: 220:     I2C_Master_Write(0x11);
  2413     043B  3011               	movlw	17
  2414     043C  00F0               	movwf	I2C_Master_Write@d
  2415     043D  3000               	movlw	0
  2416     043E  00F1               	movwf	I2C_Master_Write@d+1
  2417     043F  120A  118A  2248  120A  118A  	fcall	_I2C_Master_Write
  2418                           
  2419                           ;main.c: 221:     tempint = I2C_Master_Read(0);
  2420     0444  3000               	movlw	0
  2421     0445  00F0               	movwf	I2C_Master_Read@a
  2422     0446  00F1               	movwf	I2C_Master_Read@a+1
  2423     0447  120A  118A  2349  120A  118A  	fcall	_I2C_Master_Read
  2424     044C  0870               	movf	?_I2C_Master_Read,w
  2425     044D  1283               	bcf	3,5	;RP0=0, select bank0
  2426     044E  00B4               	movwf	_tempint
  2427                           
  2428                           ;main.c: 222:     tempdec = I2C_Master_Read(0);
  2429     044F  3000               	movlw	0
  2430     0450  00F0               	movwf	I2C_Master_Read@a
  2431     0451  00F1               	movwf	I2C_Master_Read@a+1
  2432     0452  120A  118A  2349  120A  118A  	fcall	_I2C_Master_Read
  2433     0457  0870               	movf	?_I2C_Master_Read,w
  2434     0458  1283               	bcf	3,5	;RP0=0, select bank0
  2435     0459  00B3               	movwf	_tempdec
  2436                           
  2437                           ;main.c: 223:     I2C_Master_Stop();
  2438     045A  120A  118A  223E  120A  118A  	fcall	_I2C_Master_Stop
  2439                           
  2440                           ;main.c: 224:     Escribir_dato(tempint, 4, 2);
  2441     045F  3004               	movlw	4
  2442     0460  00FC               	movwf	Escribir_dato@posx
  2443     0461  3002               	movlw	2
  2444     0462  00FD               	movwf	Escribir_dato@posy
  2445     0463  1283               	bcf	3,5	;RP0=0, select bank0
  2446     0464  0834               	movf	_tempint,w
  2447     0465  120A  118A  2521   	fcall	_Escribir_dato
  2448     0468  0008               	return
  2449     0469                     __end_of_leer_temperatura:
  2450                           
  2451                           	psect	text10
  2452     0349                     __ptext10:	
  2453 ;; *************** function _I2C_Master_Read *****************
  2454 ;; Defined at:
  2455 ;;		line 74 in file "I2C.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  a               2    0[COMMON] unsigned short 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  temp            2    4[COMMON] unsigned short 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  2    0[COMMON] unsigned short 
  2462 ;; Registers used:
  2463 ;;		wreg, status,2, status,0, pclath, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 300/0
  2466 ;;		On exit  : 300/100
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2469 ;;      Params:         2       0       0       0       0
  2470 ;;      Locals:         2       0       0       0       0
  2471 ;;      Temps:          2       0       0       0       0
  2472 ;;      Totals:         6       0       0       0       0
  2473 ;;Total ram usage:        6 bytes
  2474 ;; Hardware stack levels used: 1
  2475 ;; Hardware stack levels required when called: 1
  2476 ;; This function calls:
  2477 ;;		_I2C_Master_Wait
  2478 ;; This function is called by:
  2479 ;;		_leer_temperatura
  2480 ;;		_leer_x
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484     0349                     _I2C_Master_Read:	
  2485                           ;psect for function _I2C_Master_Read
  2486                           
  2487                           
  2488                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2489                           
  2490                           ;incstack = 0
  2491                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2492     0349  120A  118A  2257  120A  118A  	fcall	_I2C_Master_Wait
  2493                           
  2494                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2495     034E  1591               	bsf	17,3	;volatile
  2496                           
  2497                           ;I2C.c: 79:     I2C_Master_Wait();
  2498     034F  120A  118A  2257  120A  118A  	fcall	_I2C_Master_Wait
  2499                           
  2500                           ;I2C.c: 80:     temp = SSPBUF;
  2501     0354  1283               	bcf	3,5	;RP0=0, select bank0
  2502     0355  0813               	movf	19,w	;volatile
  2503     0356  00F2               	movwf	??_I2C_Master_Read
  2504     0357  01F3               	clrf	??_I2C_Master_Read+1
  2505     0358  0872               	movf	??_I2C_Master_Read,w
  2506     0359  00F4               	movwf	I2C_Master_Read@temp
  2507     035A  0873               	movf	??_I2C_Master_Read+1,w
  2508     035B  00F5               	movwf	I2C_Master_Read@temp+1
  2509                           
  2510                           ;I2C.c: 81:     I2C_Master_Wait();
  2511     035C  120A  118A  2257  120A  118A  	fcall	_I2C_Master_Wait
  2512                           
  2513                           ;I2C.c: 82:     if(a == 1){
  2514     0361  0370               	decf	I2C_Master_Read@a,w
  2515     0362  0471               	iorwf	I2C_Master_Read@a+1,w
  2516     0363  1D03               	btfss	3,2
  2517     0364  2B67               	goto	l197
  2518                           
  2519                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2520     0365  1291               	bcf	17,5	;volatile
  2521                           
  2522                           ;I2C.c: 84:     }else{
  2523     0366  2B68               	goto	l198
  2524     0367                     l197:
  2525                           
  2526                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2527     0367  1691               	bsf	17,5	;volatile
  2528     0368                     l198:	
  2529                           ;I2C.c: 86:     }
  2530                           
  2531                           
  2532                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2533     0368  1611               	bsf	17,4	;volatile
  2534                           
  2535                           ;I2C.c: 88:     return temp;
  2536     0369  0875               	movf	I2C_Master_Read@temp+1,w
  2537     036A  00F1               	movwf	?_I2C_Master_Read+1
  2538     036B  0874               	movf	I2C_Master_Read@temp,w
  2539     036C  00F0               	movwf	?_I2C_Master_Read
  2540     036D  0008               	return
  2541     036E                     __end_of_I2C_Master_Read:
  2542                           
  2543                           	psect	text11
  2544     0521                     __ptext11:	
  2545 ;; *************** function _Escribir_dato *****************
  2546 ;; Defined at:
  2547 ;;		line 202 in file "main.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  dato            1    wreg     unsigned char 
  2550 ;;  posx            1   12[COMMON] unsigned char 
  2551 ;;  posy            1   13[COMMON] unsigned char 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  dato            1    0[BANK0 ] unsigned char 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0, pclath, cstack
  2558 ;; Tracked objects:
  2559 ;;		On entry : 300/0
  2560 ;;		On exit  : 300/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2563 ;;      Params:         2       0       0       0       0
  2564 ;;      Locals:         0       1       0       0       0
  2565 ;;      Temps:          0       0       0       0       0
  2566 ;;      Totals:         2       1       0       0       0
  2567 ;;Total ram usage:        3 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; Hardware stack levels required when called: 3
  2570 ;; This function calls:
  2571 ;;		_Lcd_Set_Cursor
  2572 ;;		_Lcd_Write_Char
  2573 ;;		_descomponer
  2574 ;;		_inttochar
  2575 ;; This function is called by:
  2576 ;;		_main
  2577 ;;		_leer_temperatura
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581     0521                     _Escribir_dato:	
  2582                           ;psect for function _Escribir_dato
  2583                           
  2584                           
  2585                           ;incstack = 0
  2586                           ; Regs used in _Escribir_dato: [wreg+status,2+status,0+pclath+cstack]
  2587                           ;Escribir_dato@dato stored from wreg
  2588     0521  00B7               	movwf	Escribir_dato@dato
  2589                           
  2590                           ;main.c: 203:     Lcd_Set_Cursor(posy, posx+1);
  2591     0522  087C               	movf	Escribir_dato@posx,w
  2592     0523  3E01               	addlw	1
  2593     0524  00F4               	movwf	Lcd_Set_Cursor@b
  2594     0525  087D               	movf	Escribir_dato@posy,w
  2595     0526  120A  118A  24A4  120A  118A  	fcall	_Lcd_Set_Cursor
  2596                           
  2597                           ;main.c: 204:     unidad = inttochar(descomponer(0, dato));
  2598     052B  3000               	movlw	0
  2599     052C  00F6               	movwf	descomponer@pos
  2600     052D  00F7               	movwf	descomponer@pos+1
  2601     052E  1283               	bcf	3,5	;RP0=0, select bank0
  2602     052F  1303               	bcf	3,6	;RP1=0, select bank0
  2603     0530  0837               	movf	Escribir_dato@dato,w
  2604     0531  00F8               	movwf	descomponer@num
  2605     0532  120A  118A  2403  120A  118A  	fcall	_descomponer
  2606     0537  120A  118A  2469  120A  118A  	fcall	_inttochar
  2607     053C  1283               	bcf	3,5	;RP0=0, select bank0
  2608     053D  1303               	bcf	3,6	;RP1=0, select bank0
  2609     053E  00B6               	movwf	_unidad
  2610                           
  2611                           ;main.c: 205:     Lcd_Write_Char(unidad);
  2612     053F  0836               	movf	_unidad,w
  2613     0540  120A  118A  236E  120A  118A  	fcall	_Lcd_Write_Char
  2614                           
  2615                           ;main.c: 206:     Lcd_Set_Cursor(posy, posx);
  2616     0545  087C               	movf	Escribir_dato@posx,w
  2617     0546  00F4               	movwf	Lcd_Set_Cursor@b
  2618     0547  087D               	movf	Escribir_dato@posy,w
  2619     0548  120A  118A  24A4  120A  118A  	fcall	_Lcd_Set_Cursor
  2620                           
  2621                           ;main.c: 207:     decena = inttochar(descomponer(1, dato));
  2622     054D  3001               	movlw	1
  2623     054E  00F6               	movwf	descomponer@pos
  2624     054F  3000               	movlw	0
  2625     0550  00F7               	movwf	descomponer@pos+1
  2626     0551  1283               	bcf	3,5	;RP0=0, select bank0
  2627     0552  1303               	bcf	3,6	;RP1=0, select bank0
  2628     0553  0837               	movf	Escribir_dato@dato,w
  2629     0554  00F8               	movwf	descomponer@num
  2630     0555  120A  118A  2403  120A  118A  	fcall	_descomponer
  2631     055A  120A  118A  2469  120A  118A  	fcall	_inttochar
  2632     055F  1283               	bcf	3,5	;RP0=0, select bank0
  2633     0560  1303               	bcf	3,6	;RP1=0, select bank0
  2634     0561  00B5               	movwf	_decena
  2635                           
  2636                           ;main.c: 208:     Lcd_Write_Char(decena);
  2637     0562  0835               	movf	_decena,w
  2638     0563  120A  118A  236E   	fcall	_Lcd_Write_Char
  2639     0566  0008               	return
  2640     0567                     __end_of_Escribir_dato:
  2641                           
  2642                           	psect	text12
  2643     0469                     __ptext12:	
  2644 ;; *************** function _inttochar *****************
  2645 ;; Defined at:
  2646 ;;		line 12 in file "conversiones.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;  num             1    wreg     unsigned char 
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;  num             1    0[COMMON] unsigned char 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      unsigned char 
  2653 ;; Registers used:
  2654 ;;		wreg, status,2, status,0
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2660 ;;      Params:         0       0       0       0       0
  2661 ;;      Locals:         1       0       0       0       0
  2662 ;;      Temps:          0       0       0       0       0
  2663 ;;      Totals:         1       0       0       0       0
  2664 ;;Total ram usage:        1 bytes
  2665 ;; Hardware stack levels used: 1
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_Escribir_dato
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673     0469                     _inttochar:	
  2674                           ;psect for function _inttochar
  2675                           
  2676                           
  2677                           ;incstack = 0
  2678                           ; Regs used in _inttochar: [wreg+status,2+status,0]
  2679                           ;inttochar@num stored from wreg
  2680     0469  00F0               	movwf	inttochar@num
  2681                           
  2682                           ;conversiones.c: 13:     if(num == 0){
  2683     046A  0870               	movf	inttochar@num,w
  2684     046B  1D03               	btfss	3,2
  2685     046C  2C6F               	goto	l1491
  2686                           
  2687                           ;conversiones.c: 14:         return '0';
  2688     046D  3030               	movlw	48
  2689     046E  0008               	return
  2690     046F                     l1491:
  2691     046F  0370               	decf	inttochar@num,w
  2692     0470  1D03               	btfss	3,2
  2693     0471  2C74               	goto	l1499
  2694                           
  2695                           ;conversiones.c: 17:         return '1';
  2696     0472  3031               	movlw	49
  2697     0473  0008               	return
  2698     0474                     l1499:
  2699     0474  3002               	movlw	2
  2700     0475  0670               	xorwf	inttochar@num,w
  2701     0476  1D03               	btfss	3,2
  2702     0477  2C7A               	goto	l1507
  2703                           
  2704                           ;conversiones.c: 20:         return '2';
  2705     0478  3032               	movlw	50
  2706     0479  0008               	return
  2707     047A                     l1507:
  2708     047A  3003               	movlw	3
  2709     047B  0670               	xorwf	inttochar@num,w
  2710     047C  1D03               	btfss	3,2
  2711     047D  2C80               	goto	l1515
  2712                           
  2713                           ;conversiones.c: 23:         return '3';
  2714     047E  3033               	movlw	51
  2715     047F  0008               	return
  2716     0480                     l1515:
  2717     0480  3004               	movlw	4
  2718     0481  0670               	xorwf	inttochar@num,w
  2719     0482  1D03               	btfss	3,2
  2720     0483  2C86               	goto	l1523
  2721                           
  2722                           ;conversiones.c: 26:         return '4';
  2723     0484  3034               	movlw	52
  2724     0485  0008               	return
  2725     0486                     l1523:
  2726     0486  3005               	movlw	5
  2727     0487  0670               	xorwf	inttochar@num,w
  2728     0488  1D03               	btfss	3,2
  2729     0489  2C8C               	goto	l1531
  2730                           
  2731                           ;conversiones.c: 29:         return '5';
  2732     048A  3035               	movlw	53
  2733     048B  0008               	return
  2734     048C                     l1531:
  2735     048C  3006               	movlw	6
  2736     048D  0670               	xorwf	inttochar@num,w
  2737     048E  1D03               	btfss	3,2
  2738     048F  2C92               	goto	l1539
  2739                           
  2740                           ;conversiones.c: 32:         return '6';
  2741     0490  3036               	movlw	54
  2742     0491  0008               	return
  2743     0492                     l1539:
  2744     0492  3007               	movlw	7
  2745     0493  0670               	xorwf	inttochar@num,w
  2746     0494  1D03               	btfss	3,2
  2747     0495  2C98               	goto	l1547
  2748                           
  2749                           ;conversiones.c: 35:         return '7';
  2750     0496  3037               	movlw	55
  2751     0497  0008               	return
  2752     0498                     l1547:
  2753     0498  3008               	movlw	8
  2754     0499  0670               	xorwf	inttochar@num,w
  2755     049A  1D03               	btfss	3,2
  2756     049B  2C9E               	goto	l1555
  2757                           
  2758                           ;conversiones.c: 38:         return '8';
  2759     049C  3038               	movlw	56
  2760     049D  0008               	return
  2761     049E                     l1555:
  2762     049E  3009               	movlw	9
  2763     049F  0670               	xorwf	inttochar@num,w
  2764     04A0  1D03               	btfss	3,2
  2765     04A1  0008               	return
  2766                           
  2767                           ;conversiones.c: 41:         return '9';
  2768     04A2  3039               	movlw	57
  2769     04A3  0008               	return
  2770     04A4                     __end_of_inttochar:
  2771                           
  2772                           	psect	text13
  2773     0403                     __ptext13:	
  2774 ;; *************** function _descomponer *****************
  2775 ;; Defined at:
  2776 ;;		line 45 in file "conversiones.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;  pos             2    6[COMMON] int 
  2779 ;;  num             1    8[COMMON] unsigned char 
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;  dec             1   11[COMMON] unsigned char 
  2782 ;;  uni             1   10[COMMON] unsigned char 
  2783 ;;  cent            1    9[COMMON] unsigned char 
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  1    wreg      unsigned char 
  2786 ;; Registers used:
  2787 ;;		wreg, status,2, status,0, pclath, cstack
  2788 ;; Tracked objects:
  2789 ;;		On entry : 300/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2793 ;;      Params:         3       0       0       0       0
  2794 ;;      Locals:         3       0       0       0       0
  2795 ;;      Temps:          0       0       0       0       0
  2796 ;;      Totals:         6       0       0       0       0
  2797 ;;Total ram usage:        6 bytes
  2798 ;; Hardware stack levels used: 1
  2799 ;; Hardware stack levels required when called: 1
  2800 ;; This function calls:
  2801 ;;		___lbdiv
  2802 ;;		___lbmod
  2803 ;; This function is called by:
  2804 ;;		_Escribir_dato
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808     0403                     _descomponer:	
  2809                           ;psect for function _descomponer
  2810                           
  2811                           
  2812                           ;conversiones.c: 46:     uint8_t cent;;conversiones.c: 47:     uint8_t dec;;conversiones
      +                          .c: 48:     uint8_t uni;;conversiones.c: 49:     cent = (num/100);
  2813                           
  2814                           ;incstack = 0
  2815                           ; Regs used in _descomponer: [wreg+status,2+status,0+pclath+cstack]
  2816     0403  3064               	movlw	100
  2817     0404  00F0               	movwf	___lbdiv@divisor
  2818     0405  0878               	movf	descomponer@num,w
  2819     0406  120A  118A  22E4  120A  118A  	fcall	___lbdiv
  2820     040B  00F9               	movwf	descomponer@cent
  2821                           
  2822                           ;conversiones.c: 50:     dec = (num%100);
  2823     040C  3064               	movlw	100
  2824     040D  00F0               	movwf	___lbmod@divisor
  2825     040E  0878               	movf	descomponer@num,w
  2826     040F  120A  118A  22C5  120A  118A  	fcall	___lbmod
  2827     0414  00FB               	movwf	descomponer@dec
  2828                           
  2829                           ;conversiones.c: 51:     uni = (dec%10);
  2830     0415  300A               	movlw	10
  2831     0416  00F0               	movwf	___lbmod@divisor
  2832     0417  087B               	movf	descomponer@dec,w
  2833     0418  120A  118A  22C5  120A  118A  	fcall	___lbmod
  2834     041D  00FA               	movwf	descomponer@uni
  2835                           
  2836                           ;conversiones.c: 52:     if(pos == 2){
  2837     041E  3002               	movlw	2
  2838     041F  0676               	xorwf	descomponer@pos,w
  2839     0420  0477               	iorwf	descomponer@pos+1,w
  2840     0421  1D03               	btfss	3,2
  2841     0422  2C25               	goto	l1469
  2842                           
  2843                           ;conversiones.c: 53:         return cent;
  2844     0423  0879               	movf	descomponer@cent,w
  2845     0424  0008               	return
  2846     0425                     l1469:
  2847     0425  0376               	decf	descomponer@pos,w
  2848     0426  0477               	iorwf	descomponer@pos+1,w
  2849     0427  1D03               	btfss	3,2
  2850     0428  2C30               	goto	l1477
  2851                           
  2852                           ;conversiones.c: 56:         return (dec/10);
  2853     0429  300A               	movlw	10
  2854     042A  00F0               	movwf	___lbdiv@divisor
  2855     042B  087B               	movf	descomponer@dec,w
  2856     042C  120A  118A  22E4   	fcall	___lbdiv
  2857     042F  0008               	return
  2858     0430                     l1477:
  2859     0430  0876               	movf	descomponer@pos,w
  2860     0431  0477               	iorwf	descomponer@pos+1,w
  2861     0432  1D03               	btfss	3,2
  2862     0433  0008               	return
  2863                           
  2864                           ;conversiones.c: 59:         return uni;
  2865     0434  087A               	movf	descomponer@uni,w
  2866     0435  0008               	return
  2867     0436                     __end_of_descomponer:
  2868                           
  2869                           	psect	text14
  2870     02C5                     __ptext14:	
  2871 ;; *************** function ___lbmod *****************
  2872 ;; Defined at:
  2873 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  dividend        1    wreg     unsigned char 
  2876 ;;  divisor         1    0[COMMON] unsigned char 
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;  dividend        1    3[COMMON] unsigned char 
  2879 ;;  rem             1    5[COMMON] unsigned char 
  2880 ;;  counter         1    4[COMMON] unsigned char 
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  1    wreg      unsigned char 
  2883 ;; Registers used:
  2884 ;;		wreg, status,2, status,0
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2890 ;;      Params:         1       0       0       0       0
  2891 ;;      Locals:         3       0       0       0       0
  2892 ;;      Temps:          2       0       0       0       0
  2893 ;;      Totals:         6       0       0       0       0
  2894 ;;Total ram usage:        6 bytes
  2895 ;; Hardware stack levels used: 1
  2896 ;; This function calls:
  2897 ;;		Nothing
  2898 ;; This function is called by:
  2899 ;;		_descomponer
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903     02C5                     ___lbmod:	
  2904                           ;psect for function ___lbmod
  2905                           
  2906                           
  2907                           ;incstack = 0
  2908                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  2909                           ;___lbmod@dividend stored from wreg
  2910     02C5  00F3               	movwf	___lbmod@dividend
  2911     02C6  3008               	movlw	8
  2912     02C7  00F4               	movwf	___lbmod@counter
  2913     02C8  01F5               	clrf	___lbmod@rem
  2914     02C9                     l1407:
  2915     02C9  0873               	movf	___lbmod@dividend,w
  2916     02CA  00F1               	movwf	??___lbmod
  2917     02CB  3007               	movlw	7
  2918     02CC                     u785:
  2919     02CC  1003               	clrc
  2920     02CD  0CF1               	rrf	??___lbmod,f
  2921     02CE  3EFF               	addlw	-1
  2922     02CF  1D03               	skipz
  2923     02D0  2ACC               	goto	u785
  2924     02D1  0875               	movf	___lbmod@rem,w
  2925     02D2  00F2               	movwf	??___lbmod+1
  2926     02D3  0772               	addwf	??___lbmod+1,w
  2927     02D4  0471               	iorwf	??___lbmod,w
  2928     02D5  00F5               	movwf	___lbmod@rem
  2929     02D6  1003               	clrc
  2930     02D7  0DF3               	rlf	___lbmod@dividend,f
  2931     02D8  0870               	movf	___lbmod@divisor,w
  2932     02D9  0275               	subwf	___lbmod@rem,w
  2933     02DA  1C03               	skipc
  2934     02DB  2ADE               	goto	l587
  2935     02DC  0870               	movf	___lbmod@divisor,w
  2936     02DD  02F5               	subwf	___lbmod@rem,f
  2937     02DE                     l587:
  2938     02DE  3001               	movlw	1
  2939     02DF  02F4               	subwf	___lbmod@counter,f
  2940     02E0  1D03               	btfss	3,2
  2941     02E1  2AC9               	goto	l1407
  2942     02E2  0875               	movf	___lbmod@rem,w
  2943     02E3  0008               	return
  2944     02E4                     __end_of___lbmod:
  2945                           
  2946                           	psect	text15
  2947     02E4                     __ptext15:	
  2948 ;; *************** function ___lbdiv *****************
  2949 ;; Defined at:
  2950 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  dividend        1    wreg     unsigned char 
  2953 ;;  divisor         1    0[COMMON] unsigned char 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  dividend        1    2[COMMON] unsigned char 
  2956 ;;  quotient        1    4[COMMON] unsigned char 
  2957 ;;  counter         1    3[COMMON] unsigned char 
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  1    wreg      unsigned char 
  2960 ;; Registers used:
  2961 ;;		wreg, status,2, status,0
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2967 ;;      Params:         1       0       0       0       0
  2968 ;;      Locals:         3       0       0       0       0
  2969 ;;      Temps:          1       0       0       0       0
  2970 ;;      Totals:         5       0       0       0       0
  2971 ;;Total ram usage:        5 bytes
  2972 ;; Hardware stack levels used: 1
  2973 ;; This function calls:
  2974 ;;		Nothing
  2975 ;; This function is called by:
  2976 ;;		_descomponer
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980     02E4                     ___lbdiv:	
  2981                           ;psect for function ___lbdiv
  2982                           
  2983                           
  2984                           ;incstack = 0
  2985                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  2986                           ;___lbdiv@dividend stored from wreg
  2987     02E4  00F2               	movwf	___lbdiv@dividend
  2988     02E5  01F4               	clrf	___lbdiv@quotient
  2989     02E6  0870               	movf	___lbdiv@divisor,w
  2990     02E7  1903               	btfsc	3,2
  2991     02E8  2B03               	goto	l1399
  2992     02E9  01F3               	clrf	___lbdiv@counter
  2993     02EA  0AF3               	incf	___lbdiv@counter,f
  2994     02EB                     l1387:
  2995     02EB  1BF0               	btfsc	___lbdiv@divisor,7
  2996     02EC  2AF4               	goto	l1389
  2997     02ED  1003               	clrc
  2998     02EE  0DF0               	rlf	___lbdiv@divisor,f
  2999     02EF  3001               	movlw	1
  3000     02F0  00F1               	movwf	??___lbdiv
  3001     02F1  0871               	movf	??___lbdiv,w
  3002     02F2  07F3               	addwf	___lbdiv@counter,f
  3003     02F3  2AEB               	goto	l1387
  3004     02F4                     l1389:
  3005     02F4  1003               	clrc
  3006     02F5  0DF4               	rlf	___lbdiv@quotient,f
  3007     02F6  0870               	movf	___lbdiv@divisor,w
  3008     02F7  0272               	subwf	___lbdiv@dividend,w
  3009     02F8  1C03               	skipc
  3010     02F9  2AFE               	goto	L1
  3011     02FA  0870               	movf	___lbdiv@divisor,w
  3012     02FB  02F2               	subwf	___lbdiv@dividend,f
  3013     02FC  1474               	bsf	___lbdiv@quotient,0
  3014     02FD  1003               	clrc
  3015     02FE                     L1:
  3016     02FE  0CF0               	rrf	___lbdiv@divisor,f
  3017     02FF  3001               	movlw	1
  3018     0300  02F3               	subwf	___lbdiv@counter,f
  3019     0301  1D03               	btfss	3,2
  3020     0302  2AF4               	goto	l1389
  3021     0303                     l1399:
  3022     0303  0874               	movf	___lbdiv@quotient,w
  3023     0304  0008               	return
  3024     0305                     __end_of___lbdiv:
  3025                           
  3026                           	psect	text16
  3027     04A4                     __ptext16:	
  3028 ;; *************** function _Lcd_Set_Cursor *****************
  3029 ;; Defined at:
  3030 ;;		line 48 in file "LCD.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  a               1    wreg     unsigned char 
  3033 ;;  b               1    4[COMMON] unsigned char 
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  a               1    6[COMMON] unsigned char 
  3036 ;;  temp            1    9[COMMON] unsigned char 
  3037 ;;  y               1    8[COMMON] unsigned char 
  3038 ;;  z               1    7[COMMON] unsigned char 
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2, status,0, pclath, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3048 ;;      Params:         1       0       0       0       0
  3049 ;;      Locals:         4       0       0       0       0
  3050 ;;      Temps:          1       0       0       0       0
  3051 ;;      Totals:         6       0       0       0       0
  3052 ;;Total ram usage:        6 bytes
  3053 ;; Hardware stack levels used: 1
  3054 ;; Hardware stack levels required when called: 2
  3055 ;; This function calls:
  3056 ;;		_Lcd_Cmd
  3057 ;; This function is called by:
  3058 ;;		_main
  3059 ;;		_Escribir_dato
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063     04A4                     _Lcd_Set_Cursor:	
  3064                           ;psect for function _Lcd_Set_Cursor
  3065                           
  3066                           
  3067                           ;incstack = 0
  3068                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3069                           ;Lcd_Set_Cursor@a stored from wreg
  3070     04A4  00F6               	movwf	Lcd_Set_Cursor@a
  3071                           
  3072                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  3073     04A5  0376               	decf	Lcd_Set_Cursor@a,w
  3074     04A6  1D03               	btfss	3,2
  3075     04A7  2CC3               	goto	l1429
  3076                           
  3077                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  3078     04A8  0874               	movf	Lcd_Set_Cursor@b,w
  3079     04A9  3E7F               	addlw	127
  3080     04AA  00F9               	movwf	Lcd_Set_Cursor@temp
  3081                           
  3082                           ;LCD.c: 52:         z = temp >> 4;
  3083     04AB  0879               	movf	Lcd_Set_Cursor@temp,w
  3084     04AC  00F5               	movwf	??_Lcd_Set_Cursor
  3085     04AD  3004               	movlw	4
  3086     04AE                     u825:
  3087     04AE  1003               	clrc
  3088     04AF  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3089     04B0  3EFF               	addlw	-1
  3090     04B1  1D03               	skipz
  3091     04B2  2CAE               	goto	u825
  3092     04B3  0875               	movf	??_Lcd_Set_Cursor,w
  3093     04B4  00F7               	movwf	Lcd_Set_Cursor@z
  3094                           
  3095                           ;LCD.c: 53:         y = temp & 0x0F;
  3096     04B5  0879               	movf	Lcd_Set_Cursor@temp,w
  3097     04B6  390F               	andlw	15
  3098     04B7  00F8               	movwf	Lcd_Set_Cursor@y
  3099                           
  3100                           ;LCD.c: 54:         Lcd_Cmd(z);
  3101     04B8  0877               	movf	Lcd_Set_Cursor@z,w
  3102     04B9  120A  118A  2294  120A  118A  	fcall	_Lcd_Cmd
  3103                           
  3104                           ;LCD.c: 55:         Lcd_Cmd(y);
  3105     04BE  0878               	movf	Lcd_Set_Cursor@y,w
  3106     04BF  120A  118A  2294   	fcall	_Lcd_Cmd
  3107                           
  3108                           ;LCD.c: 56:     } else if (a == 2) {
  3109     04C2  0008               	return
  3110     04C3                     l1429:
  3111     04C3  3002               	movlw	2
  3112     04C4  0676               	xorwf	Lcd_Set_Cursor@a,w
  3113     04C5  1D03               	btfss	3,2
  3114     04C6  0008               	return
  3115                           
  3116                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  3117     04C7  0874               	movf	Lcd_Set_Cursor@b,w
  3118     04C8  3EBF               	addlw	191
  3119     04C9  00F9               	movwf	Lcd_Set_Cursor@temp
  3120                           
  3121                           ;LCD.c: 58:         z = temp >> 4;
  3122     04CA  0879               	movf	Lcd_Set_Cursor@temp,w
  3123     04CB  00F5               	movwf	??_Lcd_Set_Cursor
  3124     04CC  3004               	movlw	4
  3125     04CD                     u845:
  3126     04CD  1003               	clrc
  3127     04CE  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3128     04CF  3EFF               	addlw	-1
  3129     04D0  1D03               	skipz
  3130     04D1  2CCD               	goto	u845
  3131     04D2  0875               	movf	??_Lcd_Set_Cursor,w
  3132     04D3  00F7               	movwf	Lcd_Set_Cursor@z
  3133                           
  3134                           ;LCD.c: 59:         y = temp & 0x0F;
  3135     04D4  0879               	movf	Lcd_Set_Cursor@temp,w
  3136     04D5  390F               	andlw	15
  3137     04D6  00F8               	movwf	Lcd_Set_Cursor@y
  3138                           
  3139                           ;LCD.c: 60:         Lcd_Cmd(z);
  3140     04D7  0877               	movf	Lcd_Set_Cursor@z,w
  3141     04D8  120A  118A  2294  120A  118A  	fcall	_Lcd_Cmd
  3142                           
  3143                           ;LCD.c: 61:         Lcd_Cmd(y);
  3144     04DD  0878               	movf	Lcd_Set_Cursor@y,w
  3145     04DE  120A  118A  2294   	fcall	_Lcd_Cmd
  3146     04E1  0008               	return
  3147     04E2                     __end_of_Lcd_Set_Cursor:
  3148                           
  3149                           	psect	text17
  3150     03D0                     __ptext17:	
  3151 ;; *************** function _enviar_x *****************
  3152 ;; Defined at:
  3153 ;;		line 38 in file "DS3231.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  val1            1    wreg     unsigned char 
  3156 ;;  val2            1    2[COMMON] unsigned char 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  val1            1    5[COMMON] unsigned char 
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  1    wreg      void 
  3161 ;; Registers used:
  3162 ;;		wreg, status,2, status,0, pclath, cstack
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 300/100
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3168 ;;      Params:         1       0       0       0       0
  3169 ;;      Locals:         1       0       0       0       0
  3170 ;;      Temps:          2       0       0       0       0
  3171 ;;      Totals:         4       0       0       0       0
  3172 ;;Total ram usage:        4 bytes
  3173 ;; Hardware stack levels used: 1
  3174 ;; Hardware stack levels required when called: 2
  3175 ;; This function calls:
  3176 ;;		_I2C_Master_Start
  3177 ;;		_I2C_Master_Stop
  3178 ;;		_I2C_Master_Write
  3179 ;; This function is called by:
  3180 ;;		_main
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184     03D0                     _enviar_x:	
  3185                           ;psect for function _enviar_x
  3186                           
  3187                           
  3188                           ;incstack = 0
  3189                           ; Regs used in _enviar_x: [wreg+status,2+status,0+pclath+cstack]
  3190                           ;enviar_x@val1 stored from wreg
  3191     03D0  00F5               	movwf	enviar_x@val1
  3192                           
  3193                           ;DS3231.c: 39:     I2C_Master_Start();
  3194     03D1  120A  118A  2239  120A  118A  	fcall	_I2C_Master_Start
  3195                           
  3196                           ;DS3231.c: 40:     I2C_Master_Write(0xD0);
  3197     03D6  30D0               	movlw	208
  3198     03D7  00F0               	movwf	I2C_Master_Write@d
  3199     03D8  3000               	movlw	0
  3200     03D9  00F1               	movwf	I2C_Master_Write@d+1
  3201     03DA  120A  118A  2248  120A  118A  	fcall	_I2C_Master_Write
  3202                           
  3203                           ;DS3231.c: 41:     I2C_Master_Write(0);
  3204     03DF  3000               	movlw	0
  3205     03E0  00F0               	movwf	I2C_Master_Write@d
  3206     03E1  00F1               	movwf	I2C_Master_Write@d+1
  3207     03E2  120A  118A  2248  120A  118A  	fcall	_I2C_Master_Write
  3208                           
  3209                           ;DS3231.c: 42:     I2C_Master_Write(val1);
  3210     03E7  0875               	movf	enviar_x@val1,w
  3211     03E8  00F3               	movwf	??_enviar_x
  3212     03E9  01F4               	clrf	??_enviar_x+1
  3213     03EA  0873               	movf	??_enviar_x,w
  3214     03EB  00F0               	movwf	I2C_Master_Write@d
  3215     03EC  0874               	movf	??_enviar_x+1,w
  3216     03ED  00F1               	movwf	I2C_Master_Write@d+1
  3217     03EE  120A  118A  2248  120A  118A  	fcall	_I2C_Master_Write
  3218                           
  3219                           ;DS3231.c: 43:     I2C_Master_Write(val2);
  3220     03F3  0872               	movf	enviar_x@val2,w
  3221     03F4  00F3               	movwf	??_enviar_x
  3222     03F5  01F4               	clrf	??_enviar_x+1
  3223     03F6  0873               	movf	??_enviar_x,w
  3224     03F7  00F0               	movwf	I2C_Master_Write@d
  3225     03F8  0874               	movf	??_enviar_x+1,w
  3226     03F9  00F1               	movwf	I2C_Master_Write@d+1
  3227     03FA  120A  118A  2248  120A  118A  	fcall	_I2C_Master_Write
  3228                           
  3229                           ;DS3231.c: 44:     I2C_Master_Stop();
  3230     03FF  120A  118A  223E   	fcall	_I2C_Master_Stop
  3231     0402  0008               	return
  3232     0403                     __end_of_enviar_x:
  3233                           
  3234                           	psect	text18
  3235     0248                     __ptext18:	
  3236 ;; *************** function _I2C_Master_Write *****************
  3237 ;; Defined at:
  3238 ;;		line 65 in file "I2C.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  d               2    0[COMMON] unsigned int 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;		None
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  1    wreg      void 
  3245 ;; Registers used:
  3246 ;;		wreg, status,2, status,0, pclath, cstack
  3247 ;; Tracked objects:
  3248 ;;		On entry : 200/100
  3249 ;;		On exit  : 300/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3252 ;;      Params:         2       0       0       0       0
  3253 ;;      Locals:         0       0       0       0       0
  3254 ;;      Temps:          0       0       0       0       0
  3255 ;;      Totals:         2       0       0       0       0
  3256 ;;Total ram usage:        2 bytes
  3257 ;; Hardware stack levels used: 1
  3258 ;; Hardware stack levels required when called: 1
  3259 ;; This function calls:
  3260 ;;		_I2C_Master_Wait
  3261 ;; This function is called by:
  3262 ;;		_leer_temperatura
  3263 ;;		_leer_x
  3264 ;;		_enviar_x
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268     0248                     _I2C_Master_Write:	
  3269                           ;psect for function _I2C_Master_Write
  3270                           
  3271                           
  3272                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3273                           
  3274                           ;incstack = 0
  3275                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3276     0248  120A  118A  2257   	fcall	_I2C_Master_Wait
  3277                           
  3278                           ;I2C.c: 68:     SSPBUF = d;
  3279     024B  0870               	movf	I2C_Master_Write@d,w
  3280     024C  1283               	bcf	3,5	;RP0=0, select bank0
  3281     024D  0093               	movwf	19	;volatile
  3282     024E  0008               	return
  3283     024F                     __end_of_I2C_Master_Write:
  3284                           
  3285                           	psect	text19
  3286     023E                     __ptext19:	
  3287 ;; *************** function _I2C_Master_Stop *****************
  3288 ;; Defined at:
  3289 ;;		line 55 in file "I2C.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;		None
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;		None
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      void 
  3296 ;; Registers used:
  3297 ;;		wreg, status,2, status,0, pclath, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 200/100
  3300 ;;		On exit  : 300/100
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3303 ;;      Params:         0       0       0       0       0
  3304 ;;      Locals:         0       0       0       0       0
  3305 ;;      Temps:          0       0       0       0       0
  3306 ;;      Totals:         0       0       0       0       0
  3307 ;;Total ram usage:        0 bytes
  3308 ;; Hardware stack levels used: 1
  3309 ;; Hardware stack levels required when called: 1
  3310 ;; This function calls:
  3311 ;;		_I2C_Master_Wait
  3312 ;; This function is called by:
  3313 ;;		_leer_temperatura
  3314 ;;		_leer_x
  3315 ;;		_enviar_x
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319     023E                     _I2C_Master_Stop:	
  3320                           ;psect for function _I2C_Master_Stop
  3321                           
  3322                           
  3323                           ;I2C.c: 57:     I2C_Master_Wait();
  3324                           
  3325                           ;incstack = 0
  3326                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3327     023E  120A  118A  2257   	fcall	_I2C_Master_Wait
  3328                           
  3329                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3330     0241  1511               	bsf	17,2	;volatile
  3331     0242  0008               	return
  3332     0243                     __end_of_I2C_Master_Stop:
  3333                           
  3334                           	psect	text20
  3335     0239                     __ptext20:	
  3336 ;; *************** function _I2C_Master_Start *****************
  3337 ;; Defined at:
  3338 ;;		line 39 in file "I2C.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		wreg, status,2, status,0, pclath, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/100
  3349 ;;		On exit  : 300/100
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3352 ;;      Params:         0       0       0       0       0
  3353 ;;      Locals:         0       0       0       0       0
  3354 ;;      Temps:          0       0       0       0       0
  3355 ;;      Totals:         0       0       0       0       0
  3356 ;;Total ram usage:        0 bytes
  3357 ;; Hardware stack levels used: 1
  3358 ;; Hardware stack levels required when called: 1
  3359 ;; This function calls:
  3360 ;;		_I2C_Master_Wait
  3361 ;; This function is called by:
  3362 ;;		_leer_temperatura
  3363 ;;		_leer_x
  3364 ;;		_enviar_x
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368     0239                     _I2C_Master_Start:	
  3369                           ;psect for function _I2C_Master_Start
  3370                           
  3371                           
  3372                           ;I2C.c: 41:     I2C_Master_Wait();
  3373                           
  3374                           ;incstack = 0
  3375                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3376     0239  120A  118A  2257   	fcall	_I2C_Master_Wait
  3377                           
  3378                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3379     023C  1411               	bsf	17,0	;volatile
  3380     023D  0008               	return
  3381     023E                     __end_of_I2C_Master_Start:
  3382                           
  3383                           	psect	text21
  3384     0257                     __ptext21:	
  3385 ;; *************** function _I2C_Master_Wait *****************
  3386 ;; Defined at:
  3387 ;;		line 32 in file "I2C.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;		None
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;		None
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg, status,2
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 300/100
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3401 ;;      Params:         0       0       0       0       0
  3402 ;;      Locals:         0       0       0       0       0
  3403 ;;      Temps:          0       0       0       0       0
  3404 ;;      Totals:         0       0       0       0       0
  3405 ;;Total ram usage:        0 bytes
  3406 ;; Hardware stack levels used: 1
  3407 ;; This function calls:
  3408 ;;		Nothing
  3409 ;; This function is called by:
  3410 ;;		_I2C_Master_Start
  3411 ;;		_I2C_Master_RepeatedStart
  3412 ;;		_I2C_Master_Stop
  3413 ;;		_I2C_Master_Write
  3414 ;;		_I2C_Master_Read
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418     0257                     _I2C_Master_Wait:	
  3419                           ;psect for function _I2C_Master_Wait
  3420                           
  3421     0257                     l179:	
  3422                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3423                           
  3424                           ;incstack = 0
  3425                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3426                           
  3427     0257  1683               	bsf	3,5	;RP0=1, select bank1
  3428     0258  1303               	bcf	3,6	;RP1=0, select bank1
  3429     0259  1914               	btfsc	20,2	;volatile
  3430     025A  2A57               	goto	l179
  3431     025B  0811               	movf	17,w	;volatile
  3432     025C  391F               	andlw	31
  3433     025D  1903               	btfsc	3,2
  3434     025E  0008               	return
  3435     025F  2A57               	goto	l179
  3436     0260                     __end_of_I2C_Master_Wait:
  3437                           
  3438                           	psect	text22
  3439     0305                     __ptext22:	
  3440 ;; *************** function _Lcd_Write_String *****************
  3441 ;; Defined at:
  3442 ;;		line 98 in file "LCD.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  a               1    wreg     PTR unsigned char 
  3445 ;;		 -> STR_2(8), STR_1(6), 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  a               1    7[COMMON] PTR unsigned char 
  3448 ;;		 -> STR_2(8), STR_1(6), 
  3449 ;;  i               2    5[COMMON] int 
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      void 
  3452 ;; Registers used:
  3453 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3459 ;;      Params:         0       0       0       0       0
  3460 ;;      Locals:         3       0       0       0       0
  3461 ;;      Temps:          0       0       0       0       0
  3462 ;;      Totals:         3       0       0       0       0
  3463 ;;Total ram usage:        3 bytes
  3464 ;; Hardware stack levels used: 1
  3465 ;; Hardware stack levels required when called: 2
  3466 ;; This function calls:
  3467 ;;		_Lcd_Write_Char
  3468 ;; This function is called by:
  3469 ;;		_main
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473     0305                     _Lcd_Write_String:	
  3474                           ;psect for function _Lcd_Write_String
  3475                           
  3476                           
  3477                           ;incstack = 0
  3478                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3479                           ;Lcd_Write_String@a stored from wreg
  3480     0305  00F7               	movwf	Lcd_Write_String@a
  3481                           
  3482                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  3483     0306  01F5               	clrf	Lcd_Write_String@i
  3484     0307  01F6               	clrf	Lcd_Write_String@i+1
  3485     0308                     l1709:
  3486     0308  0875               	movf	Lcd_Write_String@i,w
  3487     0309  0777               	addwf	Lcd_Write_String@a,w
  3488     030A  0084               	movwf	4
  3489     030B  120A  118A  2003  120A  118A  	fcall	stringdir
  3490     0310  3A00               	xorlw	0
  3491     0311  1903               	btfsc	3,2
  3492     0312  0008               	return
  3493                           
  3494                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  3495     0313  0875               	movf	Lcd_Write_String@i,w
  3496     0314  0777               	addwf	Lcd_Write_String@a,w
  3497     0315  0084               	movwf	4
  3498     0316  120A  118A  2003  120A  118A  	fcall	stringdir
  3499     031B  120A  118A  236E  120A  118A  	fcall	_Lcd_Write_Char
  3500     0320  3001               	movlw	1
  3501     0321  07F5               	addwf	Lcd_Write_String@i,f
  3502     0322  1803               	skipnc
  3503     0323  0AF6               	incf	Lcd_Write_String@i+1,f
  3504     0324  3000               	movlw	0
  3505     0325  07F6               	addwf	Lcd_Write_String@i+1,f
  3506     0326  2B08               	goto	l1709
  3507     0327                     __end_of_Lcd_Write_String:
  3508                           
  3509                           	psect	text23
  3510     036E                     __ptext23:	
  3511 ;; *************** function _Lcd_Write_Char *****************
  3512 ;; Defined at:
  3513 ;;		line 83 in file "LCD.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;  a               1    wreg     unsigned char 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  a               1    4[COMMON] unsigned char 
  3518 ;;  y               1    3[COMMON] unsigned char 
  3519 ;;  temp            1    2[COMMON] unsigned char 
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      void 
  3522 ;; Registers used:
  3523 ;;		wreg, status,2, status,0, pclath, cstack
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 300/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3529 ;;      Params:         0       0       0       0       0
  3530 ;;      Locals:         3       0       0       0       0
  3531 ;;      Temps:          1       0       0       0       0
  3532 ;;      Totals:         4       0       0       0       0
  3533 ;;Total ram usage:        4 bytes
  3534 ;; Hardware stack levels used: 1
  3535 ;; Hardware stack levels required when called: 1
  3536 ;; This function calls:
  3537 ;;		_Lcd_Port
  3538 ;; This function is called by:
  3539 ;;		_main
  3540 ;;		_Escribir_dato
  3541 ;;		_Lcd_Write_String
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545     036E                     _Lcd_Write_Char:	
  3546                           ;psect for function _Lcd_Write_Char
  3547                           
  3548                           
  3549                           ;incstack = 0
  3550                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3551                           ;Lcd_Write_Char@a stored from wreg
  3552     036E  00F4               	movwf	Lcd_Write_Char@a
  3553                           
  3554                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  3555     036F  0874               	movf	Lcd_Write_Char@a,w
  3556     0370  390F               	andlw	15
  3557     0371  00F2               	movwf	Lcd_Write_Char@temp
  3558                           
  3559                           ;LCD.c: 86:     y = a & 0xF0;
  3560     0372  0874               	movf	Lcd_Write_Char@a,w
  3561     0373  39F0               	andlw	240
  3562     0374  00F3               	movwf	Lcd_Write_Char@y
  3563                           
  3564                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  3565     0375  1283               	bcf	3,5	;RP0=0, select bank0
  3566     0376  1303               	bcf	3,6	;RP1=0, select bank0
  3567     0377  1508               	bsf	8,2	;volatile
  3568                           
  3569                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  3570     0378  0873               	movf	Lcd_Write_Char@y,w
  3571     0379  00F1               	movwf	??_Lcd_Write_Char
  3572     037A  3004               	movlw	4
  3573     037B                     u855:
  3574     037B  1003               	clrc
  3575     037C  0CF1               	rrf	??_Lcd_Write_Char,f
  3576     037D  3EFF               	addlw	-1
  3577     037E  1D03               	skipz
  3578     037F  2B7B               	goto	u855
  3579     0380  0871               	movf	??_Lcd_Write_Char,w
  3580     0381  120A  118A  227C  120A  118A  	fcall	_Lcd_Port
  3581                           
  3582                           ;LCD.c: 89:     RD3 = 1;
  3583     0386  1588               	bsf	8,3	;volatile
  3584                           
  3585                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3586     0387  301A               	movlw	26
  3587     0388  00F1               	movwf	??_Lcd_Write_Char
  3588     0389                     u1457:
  3589     0389  0BF1               	decfsz	??_Lcd_Write_Char,f
  3590     038A  2B89               	goto	u1457
  3591     038B  0000               	nop
  3592                           
  3593                           ;LCD.c: 91:     RD3 = 0;
  3594     038C  1283               	bcf	3,5	;RP0=0, select bank0
  3595     038D  1303               	bcf	3,6	;RP1=0, select bank0
  3596     038E  1188               	bcf	8,3	;volatile
  3597                           
  3598                           ;LCD.c: 92:     Lcd_Port(temp);
  3599     038F  0872               	movf	Lcd_Write_Char@temp,w
  3600     0390  120A  118A  227C  120A  118A  	fcall	_Lcd_Port
  3601                           
  3602                           ;LCD.c: 93:     RD3 = 1;
  3603     0395  1588               	bsf	8,3	;volatile
  3604                           
  3605                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3606     0396  301A               	movlw	26
  3607     0397  00F1               	movwf	??_Lcd_Write_Char
  3608     0398                     u1467:
  3609     0398  0BF1               	decfsz	??_Lcd_Write_Char,f
  3610     0399  2B98               	goto	u1467
  3611     039A  0000               	nop
  3612                           
  3613                           ;LCD.c: 95:     RD3 = 0;
  3614     039B  1283               	bcf	3,5	;RP0=0, select bank0
  3615     039C  1303               	bcf	3,6	;RP1=0, select bank0
  3616     039D  1188               	bcf	8,3	;volatile
  3617     039E  0008               	return
  3618     039F                     __end_of_Lcd_Write_Char:
  3619                           
  3620                           	psect	text24
  3621     05AD                     __ptext24:	
  3622 ;; *************** function _Lcd_Init *****************
  3623 ;; Defined at:
  3624 ;;		line 65 in file "LCD.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;		None
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;		None
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  1    wreg      void 
  3631 ;; Registers used:
  3632 ;;		wreg, status,2, status,0, pclath, cstack
  3633 ;; Tracked objects:
  3634 ;;		On entry : B00/100
  3635 ;;		On exit  : 300/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3638 ;;      Params:         0       0       0       0       0
  3639 ;;      Locals:         0       0       0       0       0
  3640 ;;      Temps:          2       0       0       0       0
  3641 ;;      Totals:         2       0       0       0       0
  3642 ;;Total ram usage:        2 bytes
  3643 ;; Hardware stack levels used: 1
  3644 ;; Hardware stack levels required when called: 2
  3645 ;; This function calls:
  3646 ;;		_Lcd_Cmd
  3647 ;;		_Lcd_Port
  3648 ;; This function is called by:
  3649 ;;		_main
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653     05AD                     _Lcd_Init:	
  3654                           ;psect for function _Lcd_Init
  3655                           
  3656                           
  3657                           ;LCD.c: 66:     Lcd_Port(0x00);
  3658                           
  3659                           ;incstack = 0
  3660                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3661     05AD  3000               	movlw	0
  3662     05AE  120A  118A  227C  120A  118A  	fcall	_Lcd_Port
  3663                           
  3664                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3665     05B3  3034               	movlw	52
  3666     05B4  00F5               	movwf	??_Lcd_Init+1
  3667     05B5  30F1               	movlw	241
  3668     05B6  00F4               	movwf	??_Lcd_Init
  3669     05B7                     u1477:
  3670     05B7  0BF4               	decfsz	??_Lcd_Init,f
  3671     05B8  2DB7               	goto	u1477
  3672     05B9  0BF5               	decfsz	??_Lcd_Init+1,f
  3673     05BA  2DB7               	goto	u1477
  3674     05BB  2DBC               	nop2
  3675                           
  3676                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  3677     05BC  3003               	movlw	3
  3678     05BD  120A  118A  2294  120A  118A  	fcall	_Lcd_Cmd
  3679                           
  3680                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3681     05C2  300D               	movlw	13
  3682     05C3  00F5               	movwf	??_Lcd_Init+1
  3683     05C4  30FB               	movlw	251
  3684     05C5  00F4               	movwf	??_Lcd_Init
  3685     05C6                     u1487:
  3686     05C6  0BF4               	decfsz	??_Lcd_Init,f
  3687     05C7  2DC6               	goto	u1487
  3688     05C8  0BF5               	decfsz	??_Lcd_Init+1,f
  3689     05C9  2DC6               	goto	u1487
  3690     05CA  2DCB               	nop2
  3691                           
  3692                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  3693     05CB  3003               	movlw	3
  3694     05CC  120A  118A  2294  120A  118A  	fcall	_Lcd_Cmd
  3695                           
  3696                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3697     05D1  301D               	movlw	29
  3698     05D2  00F5               	movwf	??_Lcd_Init+1
  3699     05D3  3091               	movlw	145
  3700     05D4  00F4               	movwf	??_Lcd_Init
  3701     05D5                     u1497:
  3702     05D5  0BF4               	decfsz	??_Lcd_Init,f
  3703     05D6  2DD5               	goto	u1497
  3704     05D7  0BF5               	decfsz	??_Lcd_Init+1,f
  3705     05D8  2DD5               	goto	u1497
  3706                           
  3707                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  3708     05D9  3003               	movlw	3
  3709     05DA  120A  118A  2294  120A  118A  	fcall	_Lcd_Cmd
  3710                           
  3711                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  3712     05DF  3002               	movlw	2
  3713     05E0  120A  118A  2294  120A  118A  	fcall	_Lcd_Cmd
  3714                           
  3715                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  3716     05E5  3002               	movlw	2
  3717     05E6  120A  118A  2294  120A  118A  	fcall	_Lcd_Cmd
  3718                           
  3719                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  3720     05EB  3008               	movlw	8
  3721     05EC  120A  118A  2294  120A  118A  	fcall	_Lcd_Cmd
  3722                           
  3723                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  3724     05F1  3000               	movlw	0
  3725     05F2  120A  118A  2294  120A  118A  	fcall	_Lcd_Cmd
  3726                           
  3727                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  3728     05F7  300C               	movlw	12
  3729     05F8  120A  118A  2294  120A  118A  	fcall	_Lcd_Cmd
  3730                           
  3731                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  3732     05FD  3000               	movlw	0
  3733     05FE  120A  118A  2294  120A  118A  	fcall	_Lcd_Cmd
  3734                           
  3735                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  3736     0603  3006               	movlw	6
  3737     0604  120A  118A  2294   	fcall	_Lcd_Cmd
  3738     0607  0008               	return
  3739     0608                     __end_of_Lcd_Init:
  3740                           
  3741                           	psect	text25
  3742     0260                     __ptext25:	
  3743 ;; *************** function _Lcd_Clear *****************
  3744 ;; Defined at:
  3745 ;;		line 43 in file "LCD.c"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;		None
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;		None
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  1    wreg      void 
  3752 ;; Registers used:
  3753 ;;		wreg, status,2, status,0, pclath, cstack
  3754 ;; Tracked objects:
  3755 ;;		On entry : 300/0
  3756 ;;		On exit  : 300/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3759 ;;      Params:         0       0       0       0       0
  3760 ;;      Locals:         0       0       0       0       0
  3761 ;;      Temps:          0       0       0       0       0
  3762 ;;      Totals:         0       0       0       0       0
  3763 ;;Total ram usage:        0 bytes
  3764 ;; Hardware stack levels used: 1
  3765 ;; Hardware stack levels required when called: 2
  3766 ;; This function calls:
  3767 ;;		_Lcd_Cmd
  3768 ;; This function is called by:
  3769 ;;		_main
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773     0260                     _Lcd_Clear:	
  3774                           ;psect for function _Lcd_Clear
  3775                           
  3776                           
  3777                           ;LCD.c: 44:     Lcd_Cmd(0);
  3778                           
  3779                           ;incstack = 0
  3780                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3781     0260  3000               	movlw	0
  3782     0261  120A  118A  2294  120A  118A  	fcall	_Lcd_Cmd
  3783                           
  3784                           ;LCD.c: 45:     Lcd_Cmd(1);
  3785     0266  3001               	movlw	1
  3786     0267  120A  118A  2294   	fcall	_Lcd_Cmd
  3787     026A  0008               	return
  3788     026B                     __end_of_Lcd_Clear:
  3789                           
  3790                           	psect	text26
  3791     0294                     __ptext26:	
  3792 ;; *************** function _Lcd_Cmd *****************
  3793 ;; Defined at:
  3794 ;;		line 35 in file "LCD.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;  a               1    wreg     unsigned char 
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;  a               1    3[COMMON] unsigned char 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      void 
  3801 ;; Registers used:
  3802 ;;		wreg, status,2, status,0, pclath, cstack
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 300/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3808 ;;      Params:         0       0       0       0       0
  3809 ;;      Locals:         1       0       0       0       0
  3810 ;;      Temps:          2       0       0       0       0
  3811 ;;      Totals:         3       0       0       0       0
  3812 ;;Total ram usage:        3 bytes
  3813 ;; Hardware stack levels used: 1
  3814 ;; Hardware stack levels required when called: 1
  3815 ;; This function calls:
  3816 ;;		_Lcd_Port
  3817 ;; This function is called by:
  3818 ;;		_Lcd_Clear
  3819 ;;		_Lcd_Set_Cursor
  3820 ;;		_Lcd_Init
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824     0294                     _Lcd_Cmd:	
  3825                           ;psect for function _Lcd_Cmd
  3826                           
  3827                           
  3828                           ;incstack = 0
  3829                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3830                           ;Lcd_Cmd@a stored from wreg
  3831     0294  00F3               	movwf	Lcd_Cmd@a
  3832                           
  3833                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  3834     0295  1283               	bcf	3,5	;RP0=0, select bank0
  3835     0296  1303               	bcf	3,6	;RP1=0, select bank0
  3836     0297  1108               	bcf	8,2	;volatile
  3837                           
  3838                           ;LCD.c: 37:     Lcd_Port(a);
  3839     0298  0873               	movf	Lcd_Cmd@a,w
  3840     0299  120A  118A  227C  120A  118A  	fcall	_Lcd_Port
  3841                           
  3842                           ;LCD.c: 38:     RD3 = 1;
  3843     029E  1588               	bsf	8,3	;volatile
  3844                           
  3845                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3846     029F  300B               	movlw	11
  3847     02A0  00F2               	movwf	??_Lcd_Cmd+1
  3848     02A1  3062               	movlw	98
  3849     02A2  00F1               	movwf	??_Lcd_Cmd
  3850     02A3                     u1507:
  3851     02A3  0BF1               	decfsz	??_Lcd_Cmd,f
  3852     02A4  2AA3               	goto	u1507
  3853     02A5  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3854     02A6  2AA3               	goto	u1507
  3855     02A7  0000               	nop
  3856                           
  3857                           ;LCD.c: 40:     RD3 = 0;
  3858     02A8  1283               	bcf	3,5	;RP0=0, select bank0
  3859     02A9  1303               	bcf	3,6	;RP1=0, select bank0
  3860     02AA  1188               	bcf	8,3	;volatile
  3861     02AB  0008               	return
  3862     02AC                     __end_of_Lcd_Cmd:
  3863                           
  3864                           	psect	text27
  3865     027C                     __ptext27:	
  3866 ;; *************** function _Lcd_Port *****************
  3867 ;; Defined at:
  3868 ;;		line 13 in file "LCD.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  a               1    wreg     unsigned char 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;  a               1    0[COMMON] unsigned char 
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      void 
  3875 ;; Registers used:
  3876 ;;		wreg
  3877 ;; Tracked objects:
  3878 ;;		On entry : 200/0
  3879 ;;		On exit  : 300/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3882 ;;      Params:         0       0       0       0       0
  3883 ;;      Locals:         1       0       0       0       0
  3884 ;;      Temps:          0       0       0       0       0
  3885 ;;      Totals:         1       0       0       0       0
  3886 ;;Total ram usage:        1 bytes
  3887 ;; Hardware stack levels used: 1
  3888 ;; This function calls:
  3889 ;;		Nothing
  3890 ;; This function is called by:
  3891 ;;		_Lcd_Cmd
  3892 ;;		_Lcd_Init
  3893 ;;		_Lcd_Write_Char
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897     027C                     _Lcd_Port:	
  3898                           ;psect for function _Lcd_Port
  3899                           
  3900                           
  3901                           ;incstack = 0
  3902                           ; Regs used in _Lcd_Port: [wreg]
  3903                           ;Lcd_Port@a stored from wreg
  3904     027C  00F0               	movwf	Lcd_Port@a
  3905                           
  3906                           ;LCD.c: 14:     if (a & 1)
  3907     027D  1C70               	btfss	Lcd_Port@a,0
  3908     027E  2A82               	goto	l216
  3909                           
  3910                           ;LCD.c: 15:         RD4 = 1;
  3911     027F  1283               	bcf	3,5	;RP0=0, select bank0
  3912     0280  1608               	bsf	8,4	;volatile
  3913     0281  2A84               	goto	l217
  3914     0282                     l216:	
  3915                           ;LCD.c: 16:     else
  3916                           
  3917                           
  3918                           ;LCD.c: 17:         RD4 = 0;
  3919     0282  1283               	bcf	3,5	;RP0=0, select bank0
  3920     0283  1208               	bcf	8,4	;volatile
  3921     0284                     l217:
  3922                           
  3923                           ;LCD.c: 19:     if (a & 2)
  3924     0284  1CF0               	btfss	Lcd_Port@a,1
  3925     0285  2A88               	goto	l218
  3926                           
  3927                           ;LCD.c: 20:         RD5 = 1;
  3928     0286  1688               	bsf	8,5	;volatile
  3929     0287  2A89               	goto	l219
  3930     0288                     l218:	
  3931                           ;LCD.c: 21:     else
  3932                           
  3933                           
  3934                           ;LCD.c: 22:         RD5 = 0;
  3935     0288  1288               	bcf	8,5	;volatile
  3936     0289                     l219:
  3937                           
  3938                           ;LCD.c: 24:     if (a & 4)
  3939     0289  1D70               	btfss	Lcd_Port@a,2
  3940     028A  2A8D               	goto	l220
  3941                           
  3942                           ;LCD.c: 25:         RD6 = 1;
  3943     028B  1708               	bsf	8,6	;volatile
  3944     028C  2A8E               	goto	l221
  3945     028D                     l220:	
  3946                           ;LCD.c: 26:     else
  3947                           
  3948                           
  3949                           ;LCD.c: 27:         RD6 = 0;
  3950     028D  1308               	bcf	8,6	;volatile
  3951     028E                     l221:
  3952                           
  3953                           ;LCD.c: 29:     if (a & 8)
  3954     028E  1DF0               	btfss	Lcd_Port@a,3
  3955     028F  2A92               	goto	l222
  3956                           
  3957                           ;LCD.c: 30:         RD7 = 1;
  3958     0290  1788               	bsf	8,7	;volatile
  3959     0291  0008               	return
  3960     0292                     l222:	
  3961                           ;LCD.c: 31:     else
  3962                           
  3963                           
  3964                           ;LCD.c: 32:         RD7 = 0;
  3965     0292  1388               	bcf	8,7	;volatile
  3966     0293  0008               	return
  3967     0294                     __end_of_Lcd_Port:
  3968     007E                     btemp	set	126	;btemp
  3969     007E                     wtemp0	set	126
  3970                           
  3971                           	psect	idloc
  3972                           
  3973                           ;Config register IDLOC0 @ 0x2000
  3974                           ;	unspecified, using default values
  3975     2000                     	org	8192
  3976     2000  3FFF               	dw	16383
  3977                           
  3978                           ;Config register IDLOC1 @ 0x2001
  3979                           ;	unspecified, using default values
  3980     2001                     	org	8193
  3981     2001  3FFF               	dw	16383
  3982                           
  3983                           ;Config register IDLOC2 @ 0x2002
  3984                           ;	unspecified, using default values
  3985     2002                     	org	8194
  3986     2002  3FFF               	dw	16383
  3987                           
  3988                           ;Config register IDLOC3 @ 0x2003
  3989                           ;	unspecified, using default values
  3990     2003                     	org	8195
  3991     2003  3FFF               	dw	16383
  3992                           
  3993                           	psect	config
  3994                           
  3995                           ;Config register CONFIG1 @ 0x2007
  3996                           ;	Oscillator Selection bits
  3997                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3998                           ;	Watchdog Timer Enable bit
  3999                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4000                           ;	Power-up Timer Enable bit
  4001                           ;	PWRTE = OFF, PWRT disabled
  4002                           ;	RE3/MCLR pin function select bit
  4003                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4004                           ;	Code Protection bit
  4005                           ;	CP = OFF, Program memory code protection is disabled
  4006                           ;	Data Code Protection bit
  4007                           ;	CPD = OFF, Data memory code protection is disabled
  4008                           ;	Brown Out Reset Selection bits
  4009                           ;	BOREN = OFF, BOR disabled
  4010                           ;	Internal External Switchover bit
  4011                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4012                           ;	Fail-Safe Clock Monitor Enabled bit
  4013                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4014                           ;	Low Voltage Programming Enable bit
  4015                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4016                           ;	In-Circuit Debugger Mode bit
  4017                           ;	DEBUG = 0x1, unprogramme  4018     2007                     	org	8199
  4019     2007  20D4               	dw	8404
  4020                           
  4021                           ;Config register CONFIG2 @ 0x2008
  4022                           ;	Brown-out Reset Selection bit
  4023                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4024                           ;	Flash Program Memory Self Write Enable bits
  4025                           ;	WRT = OFF, Write protection off
  4026     2008                     	org	8200
  4027     2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_Escribir_dato
    _I2C_Master_Init->___lldiv
    _leer_x->_convertir
    _convertir->___bmul
    _leer_temperatura->_Escribir_dato
    _Escribir_dato->_descomponer
    _descomponer->___lbmod
    _Lcd_Set_Cursor->_Lcd_Cmd
    _enviar_x->_I2C_Master_Write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _portsetup->_I2C_Master_Init
    _leer_temperatura->_Escribir_dato

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   13685
                                              8 BANK0      3     3      0
                      _Escribir_dato
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _enviar_x
                   _leer_temperatura
                             _leer_x
                          _portsetup
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _portsetup                                            0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _leer_x                                               4     4      0    1252
                                              9 COMMON     4     4      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _convertir
 ---------------------------------------------------------------------------------
 (2) _convertir                                            5     5      0     281
                                              4 COMMON     5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _leer_temperatura                                     0     0      0    5121
                      _Escribir_dato
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _Escribir_dato                                        3     1      2    4218
                                             12 COMMON     2     0      2
                                              0 BANK0      1     1      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                        _descomponer
                          _inttochar
 ---------------------------------------------------------------------------------
 (3) _inttochar                                            1     1      0     220
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _descomponer                                          6     3      3    1256
                                              6 COMMON     6     3      3
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              6     5      1     374
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              5     4      1     377
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       6     5      1     760
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _enviar_x                                             4     3      1     902
                                              2 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     630
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     334
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_dato
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _descomponer
       ___lbdiv
       ___lbmod
     _inttochar
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_Char
   _Lcd_Write_String
     _Lcd_Write_Char
   _enviar_x
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _leer_temperatura
     _Escribir_dato
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _leer_x
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _convertir
       ___bmul
   _portsetup
     _I2C_Master_Init
       ___lldiv
   _setupINTOSC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      30       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      22       5       42.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      30      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Mar 03 12:16:00 2023

                               pc 0002                    ___bmul@product 0072                    ?_Escribir_dato 007C  
                              fsr 0004                               l220 028D                               l221 028E  
                             l222 0292                               l216 0282                               l217 0284  
                             l218 0288                               l219 0289                               l179 0257  
                             l283 056F                               l284 0578                               l197 0367  
                             l285 0581                               l198 0368                               l286 058A  
                             l287 0593                               l288 059C                               l289 05A4  
                             l587 02DE                               _RD3 0043                               _RD4 0044  
                             _RD5 0045                               _RD6 0046                               _RD7 0047  
                             u825 04AE                               u845 04CD                               u855 037B  
                             u785 02CC                               _min 0030                               _sec 0032  
                             fsr0 0004                               indf 0000                              l1407 02C9  
                            l1531 048C                              l1523 0486                              l1515 0480  
                            l1507 047A                              l1429 04C3                              l1387 02EB  
                            l1555 049E                              l1547 0498                              l1539 0492  
                            l1491 046F                              l1571 0273                              l1811 0785  
                            l1803 0779                              l1709 0308                              l1389 02F4  
                            l1477 0430                              l1469 0425                              l1805 077C  
                            l1813 06FA                              l1399 0303                              l1567 026D  
                            l1815 0788                              l1735 06B1                              l1585 0618  
                            l1817 07A5                              l1499 0474                              l1595 0650  
                            l1587 0628                              l1827 07D9                              l1819 07CE  
                            l1771 0738                              l1677 05AA                              l1773 0739  
                            l1599 065D                              l1791 0761                              l1783 0753  
                            l1785 0755                              l1793 0762                              STR_1 0011  
                            STR_2 0009                              u1105 03AD                              u1125 02B3  
                            u1045 061C                              u1065 062A                              u1075 063F  
                            u1085 0651                              u1407 06F6                              u1417 0704  
                            u1507 02A3                              u1427 072A                              u1437 0741  
                            u1447 076A                              u1457 0389                              u1467 0398  
                            u1477 05B7                              u1397 06BF                              u1487 05C6  
                            u1497 05D5                              _WPUB 0095                 ?_Lcd_Write_String 0070  
__end_of_I2C_Master_RepeatedStart 0248                              _main 0666                              _modo 002E  
                            _temp 0020                              btemp 007E                              start 0000  
              ??_Lcd_Write_String 0075                   __end_of_Lcd_Cmd 02AC                 ___bmul@multiplier 0073  
                ?_I2C_Master_Init 0037                  ?_I2C_Master_Read 0070                  ?_I2C_Master_Wait 0070  
                ?_I2C_Master_Stop 0070                             ?_main 0070                   __end_of___lbdiv 0305  
                 __end_of___lbmod 02E4                             _ANSEL 0188                   __end_of___lldiv 0666  
                           _PORTA 0005                             _PORTB 0006                             _PORTD 0008  
                           _TRISA 0085                             _TRISB 0086                             _TRISD 0088  
                           pclath 000A                             status 0003                             wtemp0 007E  
                 ___lbdiv@divisor 0070                       leer_x@valor 007C                   ___lbdiv@counter 0073  
                _leer_temperatura 0436                  __end_of_Lcd_Init 0608                  __end_of_Lcd_Port 0294  
                 __initialization 07F5                   ??_Escribir_dato 007E                      __end_of_main 07F5  
                          ??_main 003F                 ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0070  
              ??_I2C_Master_Start 0070                ??_I2C_Master_Write 0072                            _ANSELH 0189  
                       ??_Lcd_Cmd 0071                            _SSPADD 0093                            _SSPCON 0014  
                          _SSPBUF 0013          _I2C_Master_RepeatedStart 0243                            ___bmul 026B  
                          _decena 0035                         ??___lbdiv 0071                         ??___lbmod 0071  
                       ??___lldiv 0078                  __end_of_enviar_x 0403                            _buffer 0028  
                          _conver 0024                            _leer_x 04E2                            _valADC 002B  
                          _unidad 0036                      ?_setupINTOSC 0070                  ___lbdiv@dividend 0072  
                 Lcd_Set_Cursor@a 0076                   Lcd_Set_Cursor@b 0074                   Lcd_Set_Cursor@y 0078  
                 Lcd_Set_Cursor@z 0077                   ___lbmod@divisor 0070           __end_of__initialization 07FC  
                 ___lbmod@counter 0074                 __end_of_Lcd_Clear 026B               ___bmul@multiplicand 0070  
                 descomponer@cent 0079                    __pcstackCOMMON 0070                  ___lbdiv@quotient 0074  
                  _Lcd_Set_Cursor 04A4                    _OPTION_REGbits 0081                         ?_Lcd_Init 0070  
                       ?_Lcd_Port 0070                      enviar_x@val1 0075                      enviar_x@val2 0072  
                      __pbssBANK0 0020                        __pmaintext 0666                           ?___bmul 0070  
             convertir@conversion 0077                           ?_leer_x 0070            __end_of_Lcd_Set_Cursor 04E2  
        __end_of_leer_temperatura 0469                        ??_Lcd_Init 0074                        ??_Lcd_Port 0070  
                         _SSPCON2 0091                           _SSPSTAT 0094                        __stringtab 0003  
                       ?_enviar_x 0072                    _Lcd_Write_Char 036E                           _Lcd_Cmd 0294  
                         ___lbdiv 02E4                           ___lbmod 02C5                           ___lldiv 0608  
               __end_of_convertir 02C5                   ?_Lcd_Set_Cursor 0074                           __ptext1 0567  
                         __ptext2 0327                           __ptext3 039F                           __ptext4 0608  
                         __ptext5 04E2                           __ptext6 02AC                           __ptext7 026B  
                         __ptext8 0243                           __ptext9 0436                           _minutos 002F  
                         _tempdec 0033                           _tempint 0034                           clrloop0 0250  
               __end_of_inttochar 04A4            __end_of_Lcd_Write_Char 039F              end_of_initialization 07FC  
      ??_I2C_Master_RepeatedStart 0070                        ??_enviar_x 0073                   ___lldiv@divisor 0070  
                 ___lldiv@counter 007D                  I2C_Master_Init@c 0037                  I2C_Master_Read@a 0070  
                   leer_x@address 007B                         Lcd_Port@a 0070                 __end_of_portsetup 0349  
           __end_of_Escribir_dato 0567                         _PORTBbits 0006                         _PORTDbits 0008  
                   ??_descomponer 0079                  ___lbmod@dividend 0073                         _TRISCbits 0087  
                 ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0077                 Lcd_Write_String@i 0075  
                     ___lbmod@rem 0075                         _Lcd_Clear 0260                    __end_of___bmul 027C  
                _Lcd_Write_String 0305                    __end_of_leer_x 0521               start_initialization 07F5  
             __end_of_descomponer 0436                 ??_I2C_Master_Init 003B                 ??_I2C_Master_Read 0072  
               ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070                 Escribir_dato@dato 0037  
               Escribir_dato@posx 007C                 Escribir_dato@posy 007D                        ?_Lcd_Clear 0070  
                        ??___bmul 0071                          ??_leer_x 0079                   Lcd_Write_Char@a 0074  
                 Lcd_Write_Char@y 0073                         ___latbits 0002                    descomponer@dec 007B  
                   __pcstackBANK0 0037                 ?_leer_temperatura 0070                    descomponer@num 0078  
                  descomponer@pos 0076                    descomponer@uni 007A                ??_leer_temperatura 007E  
                 setupINTOSC@IRCF 0070                          ?_Lcd_Cmd 0070                  _I2C_Master_Start 0239  
                _I2C_Master_Write 0248                  ??_Lcd_Set_Cursor 0075                      inttochar@num 0070  
                        ?___lbdiv 0070                          ?___lbmod 0070                          ?___lldiv 0070  
                       __pstrings 0003                         _convertir 02AC                       _descomponer 0403  
                       _inttochar 0469                         clear_ram0 024F                          Lcd_Cmd@a 0073  
                     ??_Lcd_Clear 0074                       __stringbase 0008                     ??_setupINTOSC 0070  
                       _portsetup 0327                        ?_convertir 0070                  ??_Lcd_Write_Char 0071  
                 convertir@decena 0076                          _Lcd_Init 05AD                          _Lcd_Port 027C  
             I2C_Master_Read@temp 0074                   convertir@unidad 0075          __end_of_Lcd_Write_String 0327  
                      ?_inttochar 0070         ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0009  
                      ?_portsetup 0070                   _I2C_Master_Init 039F                   _I2C_Master_Read 0349  
                 _I2C_Master_Wait 0257                   _I2C_Master_Stop 023E                          _main$201 0041  
                        __ptext10 0349                          __ptext11 0521                          __ptext20 0239  
                        __ptext12 0469                          __ptext21 0257                          __ptext13 0403  
                        __ptext22 0305                          __ptext14 02C5                          __ptext23 036E  
                        __ptext15 02E4                          __ptext24 05AD                          __ptext16 04A4  
                        __ptext25 0260                          __ptext17 03D0                          __ptext26 0294  
                        __ptext18 0248                          __ptext27 027C                          __ptext19 023E  
             __end_of_setupINTOSC 05AD                          _enviar_x 03D0                          _segundos 0031  
                  convertir@valor 0078                       ??_convertir 0074          __end_of_I2C_Master_Start 023E  
        __end_of_I2C_Master_Write 024F                Lcd_Write_Char@temp 0072                  ___lldiv@dividend 0074  
                     ??_inttochar 0070                         stringcode 0003                        _OSCCONbits 008F  
         __end_of_I2C_Master_Init 03D0           __end_of_I2C_Master_Read 036E           __end_of_I2C_Master_Wait 0260  
                   _Escribir_dato 0521           __end_of_I2C_Master_Stop 0243                Lcd_Set_Cursor@temp 0079  
                     ??_portsetup 007E                       _setupINTOSC 0567                      ?_descomponer 0076  
                ___lldiv@quotient 0079                 I2C_Master_Write@d 0070                          stringdir 0003  
                        stringtab 0003                       _SSPCON2bits 0091  
