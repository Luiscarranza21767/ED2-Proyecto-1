

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 07 22:54:55 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41     0000                     
    42                           ; Version 2.40
    43                           ; Generated 17/11/2021 GMT
    44                           ; 
    45                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0000                     	;# 
    78     0001                     	;# 
    79     0002                     	;# 
    80     0003                     	;# 
    81     0004                     	;# 
    82     0005                     	;# 
    83     0006                     	;# 
    84     0007                     	;# 
    85     0008                     	;# 
    86     0009                     	;# 
    87     000A                     	;# 
    88     000B                     	;# 
    89     000C                     	;# 
    90     000D                     	;# 
    91     000E                     	;# 
    92     000E                     	;# 
    93     000F                     	;# 
    94     0010                     	;# 
    95     0011                     	;# 
    96     0012                     	;# 
    97     0013                     	;# 
    98     0014                     	;# 
    99     0015                     	;# 
   100     0015                     	;# 
   101     0016                     	;# 
   102     0017                     	;# 
   103     0018                     	;# 
   104     0019                     	;# 
   105     001A                     	;# 
   106     001B                     	;# 
   107     001B                     	;# 
   108     001C                     	;# 
   109     001D                     	;# 
   110     001E                     	;# 
   111     001F                     	;# 
   112     0081                     	;# 
   113     0085                     	;# 
   114     0086                     	;# 
   115     0087                     	;# 
   116     0088                     	;# 
   117     0089                     	;# 
   118     008C                     	;# 
   119     008D                     	;# 
   120     008E                     	;# 
   121     008F                     	;# 
   122     0090                     	;# 
   123     0091                     	;# 
   124     0092                     	;# 
   125     0093                     	;# 
   126     0093                     	;# 
   127     0093                     	;# 
   128     0094                     	;# 
   129     0095                     	;# 
   130     0096                     	;# 
   131     0097                     	;# 
   132     0098                     	;# 
   133     0099                     	;# 
   134     009A                     	;# 
   135     009B                     	;# 
   136     009C                     	;# 
   137     009D                     	;# 
   138     009E                     	;# 
   139     009F                     	;# 
   140     0105                     	;# 
   141     0107                     	;# 
   142     0108                     	;# 
   143     0109                     	;# 
   144     010C                     	;# 
   145     010C                     	;# 
   146     010D                     	;# 
   147     010E                     	;# 
   148     010F                     	;# 
   149     0185                     	;# 
   150     0187                     	;# 
   151     0188                     	;# 
   152     0189                     	;# 
   153     018C                     	;# 
   154     018D                     	;# 
   155     0000                     	;# 
   156     0001                     	;# 
   157     0002                     	;# 
   158     0003                     	;# 
   159     0004                     	;# 
   160     0005                     	;# 
   161     0006                     	;# 
   162     0007                     	;# 
   163     0008                     	;# 
   164     0009                     	;# 
   165     000A                     	;# 
   166     000B                     	;# 
   167     000C                     	;# 
   168     000D                     	;# 
   169     000E                     	;# 
   170     000E                     	;# 
   171     000F                     	;# 
   172     0010                     	;# 
   173     0011                     	;# 
   174     0012                     	;# 
   175     0013                     	;# 
   176     0014                     	;# 
   177     0015                     	;# 
   178     0015                     	;# 
   179     0016                     	;# 
   180     0017                     	;# 
   181     0018                     	;# 
   182     0019                     	;# 
   183     001A                     	;# 
   184     001B                     	;# 
   185     001B                     	;# 
   186     001C                     	;# 
   187     001D                     	;# 
   188     001E                     	;# 
   189     001F                     	;# 
   190     0081                     	;# 
   191     0085                     	;# 
   192     0086                     	;# 
   193     0087                     	;# 
   194     0088                     	;# 
   195     0089                     	;# 
   196     008C                     	;# 
   197     008D                     	;# 
   198     008E                     	;# 
   199     008F                     	;# 
   200     0090                     	;# 
   201     0091                     	;# 
   202     0092                     	;# 
   203     0093                     	;# 
   204     0093                     	;# 
   205     0093                     	;# 
   206     0094                     	;# 
   207     0095                     	;# 
   208     0096                     	;# 
   209     0097                     	;# 
   210     0098                     	;# 
   211     0099                     	;# 
   212     009A                     	;# 
   213     009B                     	;# 
   214     009C                     	;# 
   215     009D                     	;# 
   216     009E                     	;# 
   217     009F                     	;# 
   218     0105                     	;# 
   219     0107                     	;# 
   220     0108                     	;# 
   221     0109                     	;# 
   222     010C                     	;# 
   223     010C                     	;# 
   224     010D                     	;# 
   225     010E                     	;# 
   226     010F                     	;# 
   227     0185                     	;# 
   228     0187                     	;# 
   229     0188                     	;# 
   230     0189                     	;# 
   231     018C                     	;# 
   232     018D                     	;# 
   233     0000                     	;# 
   234     0001                     	;# 
   235     0002                     	;# 
   236     0003                     	;# 
   237     0004                     	;# 
   238     0005                     	;# 
   239     0006                     	;# 
   240     0007                     	;# 
   241     0008                     	;# 
   242     0009                     	;# 
   243     000A                     	;# 
   244     000B                     	;# 
   245     000C                     	;# 
   246     000D                     	;# 
   247     000E                     	;# 
   248     000E                     	;# 
   249     000F                     	;# 
   250     0010                     	;# 
   251     0011                     	;# 
   252     0012                     	;# 
   253     0013                     	;# 
   254     0014                     	;# 
   255     0015                     	;# 
   256     0015                     	;# 
   257     0016                     	;# 
   258     0017                     	;# 
   259     0018                     	;# 
   260     0019                     	;# 
   261     001A                     	;# 
   262     001B                     	;# 
   263     001B                     	;# 
   264     001C                     	;# 
   265     001D                     	;# 
   266     001E                     	;# 
   267     001F                     	;# 
   268     0081                     	;# 
   269     0085                     	;# 
   270     0086                     	;# 
   271     0087                     	;# 
   272     0088                     	;# 
   273     0089                     	;# 
   274     008C                     	;# 
   275     008D                     	;# 
   276     008E                     	;# 
   277     008F                     	;# 
   278     0090                     	;# 
   279     0091                     	;# 
   280     0092                     	;# 
   281     0093                     	;# 
   282     0093                     	;# 
   283     0093                     	;# 
   284     0094                     	;# 
   285     0095                     	;# 
   286     0096                     	;# 
   287     0097                     	;# 
   288     0098                     	;# 
   289     0099                     	;# 
   290     009A                     	;# 
   291     009B                     	;# 
   292     009C                     	;# 
   293     009D                     	;# 
   294     009E                     	;# 
   295     009F                     	;# 
   296     0105                     	;# 
   297     0107                     	;# 
   298     0108                     	;# 
   299     0109                     	;# 
   300     010C                     	;# 
   301     010C                     	;# 
   302     010D                     	;# 
   303     010E                     	;# 
   304     010F                     	;# 
   305     0185                     	;# 
   306     0187                     	;# 
   307     0188                     	;# 
   308     0189                     	;# 
   309     018C                     	;# 
   310     018D                     	;# 
   311     0000                     	;# 
   312     0001                     	;# 
   313     0002                     	;# 
   314     0003                     	;# 
   315     0004                     	;# 
   316     0005                     	;# 
   317     0006                     	;# 
   318     0007                     	;# 
   319     0008                     	;# 
   320     0009                     	;# 
   321     000A                     	;# 
   322     000B                     	;# 
   323     000C                     	;# 
   324     000D                     	;# 
   325     000E                     	;# 
   326     000E                     	;# 
   327     000F                     	;# 
   328     0010                     	;# 
   329     0011                     	;# 
   330     0012                     	;# 
   331     0013                     	;# 
   332     0014                     	;# 
   333     0015                     	;# 
   334     0015                     	;# 
   335     0016                     	;# 
   336     0017                     	;# 
   337     0018                     	;# 
   338     0019                     	;# 
   339     001A                     	;# 
   340     001B                     	;# 
   341     001B                     	;# 
   342     001C                     	;# 
   343     001D                     	;# 
   344     001E                     	;# 
   345     001F                     	;# 
   346     0081                     	;# 
   347     0085                     	;# 
   348     0086                     	;# 
   349     0087                     	;# 
   350     0088                     	;# 
   351     0089                     	;# 
   352     008C                     	;# 
   353     008D                     	;# 
   354     008E                     	;# 
   355     008F                     	;# 
   356     0090                     	;# 
   357     0091                     	;# 
   358     0092                     	;# 
   359     0093                     	;# 
   360     0093                     	;# 
   361     0093                     	;# 
   362     0094                     	;# 
   363     0095                     	;# 
   364     0096                     	;# 
   365     0097                     	;# 
   366     0098                     	;# 
   367     0099                     	;# 
   368     009A                     	;# 
   369     009B                     	;# 
   370     009C                     	;# 
   371     009D                     	;# 
   372     009E                     	;# 
   373     009F                     	;# 
   374     0105                     	;# 
   375     0107                     	;# 
   376     0108                     	;# 
   377     0109                     	;# 
   378     010C                     	;# 
   379     010C                     	;# 
   380     010D                     	;# 
   381     010E                     	;# 
   382     010F                     	;# 
   383     0185                     	;# 
   384     0187                     	;# 
   385     0188                     	;# 
   386     0189                     	;# 
   387     018C                     	;# 
   388     018D                     	;# 
   389     0000                     	;# 
   390     0001                     	;# 
   391     0002                     	;# 
   392     0003                     	;# 
   393     0004                     	;# 
   394     0005                     	;# 
   395     0006                     	;# 
   396     0007                     	;# 
   397     0008                     	;# 
   398     0009                     	;# 
   399     000A                     	;# 
   400     000B                     	;# 
   401     000C                     	;# 
   402     000D                     	;# 
   403     000E                     	;# 
   404     000E                     	;# 
   405     000F                     	;# 
   406     0010                     	;# 
   407     0011                     	;# 
   408     0012                     	;# 
   409     0013                     	;# 
   410     0014                     	;# 
   411     0015                     	;# 
   412     0015                     	;# 
   413     0016                     	;# 
   414     0017                     	;# 
   415     0018                     	;# 
   416     0019                     	;# 
   417     001A                     	;# 
   418     001B                     	;# 
   419     001B                     	;# 
   420     001C                     	;# 
   421     001D                     	;# 
   422     001E                     	;# 
   423     001F                     	;# 
   424     0081                     	;# 
   425     0085                     	;# 
   426     0086                     	;# 
   427     0087                     	;# 
   428     0088                     	;# 
   429     0089                     	;# 
   430     008C                     	;# 
   431     008D                     	;# 
   432     008E                     	;# 
   433     008F                     	;# 
   434     0090                     	;# 
   435     0091                     	;# 
   436     0092                     	;# 
   437     0093                     	;# 
   438     0093                     	;# 
   439     0093                     	;# 
   440     0094                     	;# 
   441     0095                     	;# 
   442     0096                     	;# 
   443     0097                     	;# 
   444     0098                     	;# 
   445     0099                     	;# 
   446     009A                     	;# 
   447     009B                     	;# 
   448     009C                     	;# 
   449     009D                     	;# 
   450     009E                     	;# 
   451     009F                     	;# 
   452     0105                     	;# 
   453     0107                     	;# 
   454     0108                     	;# 
   455     0109                     	;# 
   456     010C                     	;# 
   457     010C                     	;# 
   458     010D                     	;# 
   459     010E                     	;# 
   460     010F                     	;# 
   461     0185                     	;# 
   462     0187                     	;# 
   463     0188                     	;# 
   464     0189                     	;# 
   465     018C                     	;# 
   466     018D                     	;# 
   467     0000                     	;# 
   468     0001                     	;# 
   469     0002                     	;# 
   470     0003                     	;# 
   471     0004                     	;# 
   472     0005                     	;# 
   473     0006                     	;# 
   474     0007                     	;# 
   475     0008                     	;# 
   476     0009                     	;# 
   477     000A                     	;# 
   478     000B                     	;# 
   479     000C                     	;# 
   480     000D                     	;# 
   481     000E                     	;# 
   482     000E                     	;# 
   483     000F                     	;# 
   484     0010                     	;# 
   485     0011                     	;# 
   486     0012                     	;# 
   487     0013                     	;# 
   488     0014                     	;# 
   489     0015                     	;# 
   490     0015                     	;# 
   491     0016                     	;# 
   492     0017                     	;# 
   493     0018                     	;# 
   494     0019                     	;# 
   495     001A                     	;# 
   496     001B                     	;# 
   497     001B                     	;# 
   498     001C                     	;# 
   499     001D                     	;# 
   500     001E                     	;# 
   501     001F                     	;# 
   502     0081                     	;# 
   503     0085                     	;# 
   504     0086                     	;# 
   505     0087                     	;# 
   506     0088                     	;# 
   507     0089                     	;# 
   508     008C                     	;# 
   509     008D                     	;# 
   510     008E                     	;# 
   511     008F                     	;# 
   512     0090                     	;# 
   513     0091                     	;# 
   514     0092                     	;# 
   515     0093                     	;# 
   516     0093                     	;# 
   517     0093                     	;# 
   518     0094                     	;# 
   519     0095                     	;# 
   520     0096                     	;# 
   521     0097                     	;# 
   522     0098                     	;# 
   523     0099                     	;# 
   524     009A                     	;# 
   525     009B                     	;# 
   526     009C                     	;# 
   527     009D                     	;# 
   528     009E                     	;# 
   529     009F                     	;# 
   530     0105                     	;# 
   531     0107                     	;# 
   532     0108                     	;# 
   533     0109                     	;# 
   534     010C                     	;# 
   535     010C                     	;# 
   536     010D                     	;# 
   537     010E                     	;# 
   538     010F                     	;# 
   539     0185                     	;# 
   540     0187                     	;# 
   541     0188                     	;# 
   542     0189                     	;# 
   543     018C                     	;# 
   544     018D                     	;# 
   545     0000                     	;# 
   546     0001                     	;# 
   547     0002                     	;# 
   548     0003                     	;# 
   549     0004                     	;# 
   550     0005                     	;# 
   551     0006                     	;# 
   552     0007                     	;# 
   553     0008                     	;# 
   554     0009                     	;# 
   555     000A                     	;# 
   556     000B                     	;# 
   557     000C                     	;# 
   558     000D                     	;# 
   559     000E                     	;# 
   560     000E                     	;# 
   561     000F                     	;# 
   562     0010                     	;# 
   563     0011                     	;# 
   564     0012                     	;# 
   565     0013                     	;# 
   566     0014                     	;# 
   567     0015                     	;# 
   568     0015                     	;# 
   569     0016                     	;# 
   570     0017                     	;# 
   571     0018                     	;# 
   572     0019                     	;# 
   573     001A                     	;# 
   574     001B                     	;# 
   575     001B                     	;# 
   576     001C                     	;# 
   577     001D                     	;# 
   578     001E                     	;# 
   579     001F                     	;# 
   580     0081                     	;# 
   581     0085                     	;# 
   582     0086                     	;# 
   583     0087                     	;# 
   584     0088                     	;# 
   585     0089                     	;# 
   586     008C                     	;# 
   587     008D                     	;# 
   588     008E                     	;# 
   589     008F                     	;# 
   590     0090                     	;# 
   591     0091                     	;# 
   592     0092                     	;# 
   593     0093                     	;# 
   594     0093                     	;# 
   595     0093                     	;# 
   596     0094                     	;# 
   597     0095                     	;# 
   598     0096                     	;# 
   599     0097                     	;# 
   600     0098                     	;# 
   601     0099                     	;# 
   602     009A                     	;# 
   603     009B                     	;# 
   604     009C                     	;# 
   605     009D                     	;# 
   606     009E                     	;# 
   607     009F                     	;# 
   608     0105                     	;# 
   609     0107                     	;# 
   610     0108                     	;# 
   611     0109                     	;# 
   612     010C                     	;# 
   613     010C                     	;# 
   614     010D                     	;# 
   615     010E                     	;# 
   616     010F                     	;# 
   617     0185                     	;# 
   618     0187                     	;# 
   619     0188                     	;# 
   620     0189                     	;# 
   621     018C                     	;# 
   622     018D                     	;# 
   623     0008                     _PORTDbits	set	8
   624     0013                     _SSPBUF	set	19
   625     0014                     _SSPCON	set	20
   626     0006                     _PORTB	set	6
   627     0008                     _PORTD	set	8
   628     0006                     _PORTBbits	set	6
   629     0043                     _RD3	set	67
   630     0047                     _RD7	set	71
   631     0046                     _RD6	set	70
   632     0045                     _RD5	set	69
   633     0044                     _RD4	set	68
   634     008F                     _OSCCONbits	set	143
   635     0091                     _SSPCON2bits	set	145
   636     0087                     _TRISCbits	set	135
   637     0094                     _SSPSTAT	set	148
   638     0093                     _SSPADD	set	147
   639     0091                     _SSPCON2	set	145
   640     0081                     _OPTION_REGbits	set	129
   641     0095                     _WPUB	set	149
   642     0086                     _TRISB	set	134
   643     0088                     _TRISD	set	136
   644     0189                     _ANSELH	set	393
   645     0188                     _ANSEL	set	392
   646                           
   647                           	psect	strings
   648     0003                     __pstrings:
   649     0003                     stringtab:
   650     0003                     __stringtab:
   651     0003                     stringcode:	
   652                           ;	String table - string pointers are 1 byte each
   653                           
   654     0003                     stringdir:
   655     0003  3000               	movlw	high stringdir
   656     0004  008A               	movwf	10
   657     0005  0804               	movf	4,w
   658     0006  0A84               	incf	4,f
   659     0007  0782               	addwf	2,f
   660     0008                     __stringbase:
   661     0008  3400               	retlw	0
   662     0009                     __end_of__stringtab:
   663     0009                     STR_2:
   664     0009  3454               	retlw	84	;'T'
   665     000A  343A               	retlw	58	;':'
   666     000B  3420               	retlw	32	;' '
   667     000C  3420               	retlw	32	;' '
   668     000D  3420               	retlw	32	;' '
   669     000E  3420               	retlw	32	;' '
   670     000F  3443               	retlw	67	;'C'
   671     0010  3400               	retlw	0
   672     0011                     STR_1:
   673     0011  3453               	retlw	83	;'S'
   674     0012  343A               	retlw	58	;':'
   675     0013  3420               	retlw	32	;' '
   676     0014  3420               	retlw	32	;' '
   677     0015  343A               	retlw	58	;':'
   678     0016  3400               	retlw	0
   679                           
   680                           	psect	cinit
   681     07F5                     start_initialization:	
   682                           ; #config settings
   683                           
   684     07F5                     __initialization:
   685                           
   686                           ; Clear objects allocated to BANK0
   687     07F5  1383               	bcf	3,7	;select IRP bank0
   688     07F6  3020               	movlw	low __pbssBANK0
   689     07F7  0084               	movwf	4
   690     07F8  3033               	movlw	low (__pbssBANK0+19)
   691     07F9  120A  118A  2279   	fcall	clear_ram0
   692     07FC                     end_of_initialization:	
   693                           ;End of C runtime variable initialization code
   694                           
   695     07FC                     __end_of__initialization:
   696     07FC  0183               	clrf	3
   697     07FD  120A  118A  2E93   	ljmp	_main	;jump to C main() function
   698                           
   699                           	psect	bssBANK0
   700     0020                     __pbssBANK0:
   701     0020                     _conver:
   702     0020                     	ds	4
   703     0024                     _buffer:
   704     0024                     	ds	3
   705     0027                     _valADC:
   706     0027                     	ds	3
   707     002A                     _SERVO:
   708     002A                     	ds	1
   709     002B                     _modo:
   710     002B                     	ds	1
   711     002C                     _minutos:
   712     002C                     	ds	1
   713     002D                     _min:
   714     002D                     	ds	1
   715     002E                     _segundos:
   716     002E                     	ds	1
   717     002F                     _sec:
   718     002F                     	ds	1
   719     0030                     _tempint:
   720     0030                     	ds	1
   721     0031                     _decena:
   722     0031                     	ds	1
   723     0032                     _unidad:
   724     0032                     	ds	1
   725                           
   726                           	psect	clrtext
   727     0279                     clear_ram0:	
   728                           ;	Called with FSR containing the base address, and
   729                           ;	W with the last address+1
   730                           
   731     0279  0064               	clrwdt	;clear the watchdog before getting into this loop
   732     027A                     clrloop0:
   733     027A  0180               	clrf	0	;clear RAM location pointed to by FSR
   734     027B  0A84               	incf	4,f	;increment pointer
   735     027C  0604               	xorwf	4,w	;XOR with final address
   736     027D  1903               	btfsc	3,2	;have we reached the end yet?
   737     027E  3400               	retlw	0	;all done for this memory range, return
   738     027F  0604               	xorwf	4,w	;XOR again to restore value
   739     0280  2A7A               	goto	clrloop0	;do the next byte
   740                           
   741                           	psect	cstackCOMMON
   742     0070                     __pcstackCOMMON:
   743     0070                     ?_setupINTOSC:
   744     0070                     ??_setupINTOSC:	
   745                           ; 1 bytes @ 0x0
   746                           
   747     0070                     ?_portsetup:	
   748                           ; 1 bytes @ 0x0
   749                           
   750     0070                     ?_Lcd_Init:	
   751                           ; 1 bytes @ 0x0
   752                           
   753     0070                     ?_Lcd_Clear:	
   754                           ; 1 bytes @ 0x0
   755                           
   756     0070                     ?_Lcd_Write_Char:	
   757                           ; 1 bytes @ 0x0
   758                           
   759     0070                     ?_Lcd_Write_String:	
   760                           ; 1 bytes @ 0x0
   761                           
   762     0070                     ?_leer_temperatura:	
   763                           ; 1 bytes @ 0x0
   764                           
   765     0070                     ?_leer_x:	
   766                           ; 1 bytes @ 0x0
   767                           
   768     0070                     ?_inttochar:	
   769                           ; 1 bytes @ 0x0
   770                           
   771     0070                     ??_inttochar:	
   772                           ; 1 bytes @ 0x0
   773                           
   774     0070                     ?_I2C_Master_Start:	
   775                           ; 1 bytes @ 0x0
   776                           
   777     0070                     ??_I2C_Master_Start:	
   778                           ; 1 bytes @ 0x0
   779                           
   780     0070                     ?_I2C_Master_Write:	
   781                           ; 1 bytes @ 0x0
   782                           
   783     0070                     ?_I2C_Master_Stop:	
   784                           ; 1 bytes @ 0x0
   785                           
   786     0070                     ??_I2C_Master_Stop:	
   787                           ; 1 bytes @ 0x0
   788                           
   789     0070                     ?_I2C_Master_RepeatedStart:	
   790                           ; 1 bytes @ 0x0
   791                           
   792     0070                     ??_I2C_Master_RepeatedStart:	
   793                           ; 1 bytes @ 0x0
   794                           
   795     0070                     ?_main:	
   796                           ; 1 bytes @ 0x0
   797                           
   798     0070                     ?_convertir:	
   799                           ; 1 bytes @ 0x0
   800                           
   801     0070                     ?_I2C_Master_Wait:	
   802                           ; 1 bytes @ 0x0
   803                           
   804     0070                     ??_I2C_Master_Wait:	
   805                           ; 1 bytes @ 0x0
   806                           
   807     0070                     ?_Lcd_Port:	
   808                           ; 1 bytes @ 0x0
   809                           
   810     0070                     ??_Lcd_Port:	
   811                           ; 1 bytes @ 0x0
   812                           
   813     0070                     ?_Lcd_Cmd:	
   814                           ; 1 bytes @ 0x0
   815                           
   816     0070                     ?___bmul:	
   817                           ; 1 bytes @ 0x0
   818                           
   819     0070                     ?___lbdiv:	
   820                           ; 1 bytes @ 0x0
   821                           
   822     0070                     ?___lbmod:	
   823                           ; 1 bytes @ 0x0
   824                           
   825     0070                     ?_I2C_Master_Read:	
   826                           ; 1 bytes @ 0x0
   827                           
   828     0070                     ?___lldiv:	
   829                           ; 2 bytes @ 0x0
   830                           
   831     0070                     Lcd_Port@a:	
   832                           ; 4 bytes @ 0x0
   833                           
   834     0070                     inttochar@num:	
   835                           ; 1 bytes @ 0x0
   836                           
   837     0070                     setupINTOSC@IRCF:	
   838                           ; 1 bytes @ 0x0
   839                           
   840     0070                     ___bmul@multiplicand:	
   841                           ; 1 bytes @ 0x0
   842                           
   843     0070                     ___lbdiv@divisor:	
   844                           ; 1 bytes @ 0x0
   845                           
   846     0070                     ___lbmod@divisor:	
   847                           ; 1 bytes @ 0x0
   848                           
   849     0070                     I2C_Master_Write@d:	
   850                           ; 1 bytes @ 0x0
   851                           
   852     0070                     I2C_Master_Read@a:	
   853                           ; 2 bytes @ 0x0
   854                           
   855     0070                     ___lldiv@divisor:	
   856                           ; 2 bytes @ 0x0
   857                           
   858                           
   859                           ; 4 bytes @ 0x0
   860     0070                     	ds	1
   861     0071                     ??_Lcd_Write_Char:
   862     0071                     ??_Lcd_Cmd:	
   863                           ; 1 bytes @ 0x1
   864                           
   865     0071                     ??___bmul:	
   866                           ; 1 bytes @ 0x1
   867                           
   868     0071                     ??___lbdiv:	
   869                           ; 1 bytes @ 0x1
   870                           
   871     0071                     ??___lbmod:	
   872                           ; 1 bytes @ 0x1
   873                           
   874                           
   875                           ; 1 bytes @ 0x1
   876     0071                     	ds	1
   877     0072                     ?_enviar_x:
   878     0072                     ??_I2C_Master_Write:	
   879                           ; 1 bytes @ 0x2
   880                           
   881     0072                     ??_I2C_Master_Read:	
   882                           ; 1 bytes @ 0x2
   883                           
   884     0072                     enviar_x@val2:	
   885                           ; 1 bytes @ 0x2
   886                           
   887     0072                     Lcd_Write_Char@temp:	
   888                           ; 1 bytes @ 0x2
   889                           
   890     0072                     ___bmul@product:	
   891                           ; 1 bytes @ 0x2
   892                           
   893     0072                     ___lbdiv@dividend:	
   894                           ; 1 bytes @ 0x2
   895                           
   896                           
   897                           ; 1 bytes @ 0x2
   898     0072                     	ds	1
   899     0073                     ??_enviar_x:
   900     0073                     Lcd_Cmd@a:	
   901                           ; 1 bytes @ 0x3
   902                           
   903     0073                     Lcd_Write_Char@y:	
   904                           ; 1 bytes @ 0x3
   905                           
   906     0073                     ___bmul@multiplier:	
   907                           ; 1 bytes @ 0x3
   908                           
   909     0073                     ___lbdiv@counter:	
   910                           ; 1 bytes @ 0x3
   911                           
   912     0073                     ___lbmod@dividend:	
   913                           ; 1 bytes @ 0x3
   914                           
   915                           
   916                           ; 1 bytes @ 0x3
   917     0073                     	ds	1
   918     0074                     ??_Lcd_Init:
   919     0074                     ??_Lcd_Clear:	
   920                           ; 1 bytes @ 0x4
   921                           
   922     0074                     ?_Lcd_Set_Cursor:	
   923                           ; 1 bytes @ 0x4
   924                           
   925     0074                     ??_convertir:	
   926                           ; 1 bytes @ 0x4
   927                           
   928     0074                     Lcd_Set_Cursor@b:	
   929                           ; 1 bytes @ 0x4
   930                           
   931     0074                     Lcd_Write_Char@a:	
   932                           ; 1 bytes @ 0x4
   933                           
   934     0074                     ___lbdiv@quotient:	
   935                           ; 1 bytes @ 0x4
   936                           
   937     0074                     ___lbmod@counter:	
   938                           ; 1 bytes @ 0x4
   939                           
   940     0074                     I2C_Master_Read@temp:	
   941                           ; 1 bytes @ 0x4
   942                           
   943     0074                     ___lldiv@dividend:	
   944                           ; 2 bytes @ 0x4
   945                           
   946                           
   947                           ; 4 bytes @ 0x4
   948     0074                     	ds	1
   949     0075                     ??_Lcd_Set_Cursor:
   950     0075                     ??_Lcd_Write_String:	
   951                           ; 1 bytes @ 0x5
   952                           
   953     0075                     convertir@unidad:	
   954                           ; 1 bytes @ 0x5
   955                           
   956     0075                     enviar_x@val1:	
   957                           ; 1 bytes @ 0x5
   958                           
   959     0075                     ___lbmod@rem:	
   960                           ; 1 bytes @ 0x5
   961                           
   962     0075                     Lcd_Write_String@i:	
   963                           ; 1 bytes @ 0x5
   964                           
   965                           
   966                           ; 2 bytes @ 0x5
   967     0075                     	ds	1
   968     0076                     ?_descomponer:
   969     0076                     convertir@decena:	
   970                           ; 1 bytes @ 0x6
   971                           
   972     0076                     Lcd_Set_Cursor@a:	
   973                           ; 1 bytes @ 0x6
   974                           
   975     0076                     descomponer@pos:	
   976                           ; 1 bytes @ 0x6
   977                           
   978                           
   979                           ; 2 bytes @ 0x6
   980     0076                     	ds	1
   981     0077                     convertir@conversion:
   982     0077                     Lcd_Set_Cursor@z:	
   983                           ; 1 bytes @ 0x7
   984                           
   985     0077                     Lcd_Write_String@a:	
   986                           ; 1 bytes @ 0x7
   987                           
   988                           
   989                           ; 1 bytes @ 0x7
   990     0077                     	ds	1
   991     0078                     ??___lldiv:
   992     0078                     convertir@valor:	
   993                           ; 1 bytes @ 0x8
   994                           
   995     0078                     Lcd_Set_Cursor@y:	
   996                           ; 1 bytes @ 0x8
   997                           
   998     0078                     descomponer@num:	
   999                           ; 1 bytes @ 0x8
  1000                           
  1001                           
  1002                           ; 1 bytes @ 0x8
  1003     0078                     	ds	1
  1004     0079                     ??_leer_x:
  1005     0079                     ??_descomponer:	
  1006                           ; 1 bytes @ 0x9
  1007                           
  1008     0079                     Lcd_Set_Cursor@temp:	
  1009                           ; 1 bytes @ 0x9
  1010                           
  1011     0079                     descomponer@cent:	
  1012                           ; 1 bytes @ 0x9
  1013                           
  1014     0079                     ___lldiv@quotient:	
  1015                           ; 1 bytes @ 0x9
  1016                           
  1017                           
  1018                           ; 4 bytes @ 0x9
  1019     0079                     	ds	1
  1020     007A                     descomponer@uni:
  1021                           
  1022                           ; 1 bytes @ 0xA
  1023     007A                     	ds	1
  1024     007B                     leer_x@address:
  1025     007B                     descomponer@dec:	
  1026                           ; 1 bytes @ 0xB
  1027                           
  1028                           
  1029                           ; 1 bytes @ 0xB
  1030     007B                     	ds	1
  1031     007C                     ?_Escribir_dato:
  1032     007C                     Escribir_dato@posx:	
  1033                           ; 1 bytes @ 0xC
  1034                           
  1035     007C                     leer_x@valor:	
  1036                           ; 1 bytes @ 0xC
  1037                           
  1038                           
  1039                           ; 1 bytes @ 0xC
  1040     007C                     	ds	1
  1041     007D                     Escribir_dato@posy:
  1042     007D                     ___lldiv@counter:	
  1043                           ; 1 bytes @ 0xD
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0xD
  1047     007D                     	ds	1
  1048     007E                     ??_Escribir_dato:
  1049                           
  1050                           	psect	cstackBANK0
  1051     0033                     __pcstackBANK0:	
  1052                           ; 1 bytes @ 0xE
  1053                           
  1054     0033                     ?_I2C_Master_Init:
  1055     0033                     Escribir_dato@dato:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058     0033                     I2C_Master_Init@c:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061                           
  1062                           ; 4 bytes @ 0x0
  1063     0033                     	ds	1
  1064     0034                     ??_leer_temperatura:
  1065                           
  1066                           ; 1 bytes @ 0x1
  1067     0034                     	ds	3
  1068     0037                     ??_I2C_Master_Init:
  1069                           
  1070                           ; 1 bytes @ 0x4
  1071     0037                     	ds	4
  1072     003B                     ??_portsetup:
  1073                           
  1074                           ; 1 bytes @ 0x8
  1075     003B                     	ds	3
  1076     003E                     ??_main:
  1077                           
  1078                           ; 1 bytes @ 0xB
  1079     003E                     	ds	2
  1080     0040                     _main$198:
  1081                           
  1082                           ; 1 bytes @ 0xD
  1083     0040                     	ds	1
  1084                           
  1085                           	psect	maintext
  1086     0693                     __pmaintext:	
  1087 ;;
  1088 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1089 ;;
  1090 ;; *************** function _main *****************
  1091 ;; Defined at:
  1092 ;;		line 69 in file "main.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;		None
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;		None
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : B00/0
  1103 ;;		On exit  : 300/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1106 ;;      Params:         0       0       0       0       0
  1107 ;;      Locals:         0       1       0       0       0
  1108 ;;      Temps:          0       2       0       0       0
  1109 ;;      Totals:         0       3       0       0       0
  1110 ;;Total ram usage:        3 bytes
  1111 ;; Hardware stack levels required when called: 5
  1112 ;; This function calls:
  1113 ;;		_Escribir_dato
  1114 ;;		_Lcd_Clear
  1115 ;;		_Lcd_Init
  1116 ;;		_Lcd_Set_Cursor
  1117 ;;		_Lcd_Write_Char
  1118 ;;		_Lcd_Write_String
  1119 ;;		_enviar_x
  1120 ;;		_leer_temperatura
  1121 ;;		_leer_x
  1122 ;;		_portsetup
  1123 ;;		_setupINTOSC
  1124 ;; This function is called by:
  1125 ;;		Startup code after reset
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129     0693                     _main:	
  1130                           ;psect for function _main
  1131                           
  1132                           
  1133                           ;main.c: 71:     setupINTOSC(7);
  1134                           
  1135                           ;incstack = 0
  1136                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1137     0693  3007               	movlw	7
  1138     0694  120A  118A  2594  120A  118A  	fcall	_setupINTOSC
  1139                           
  1140                           ;main.c: 73:     portsetup();
  1141     0699  120A  118A  236D  120A  118A  	fcall	_portsetup
  1142                           
  1143                           ;main.c: 75:     Lcd_Init();
  1144     069E  120A  118A  25DA  120A  118A  	fcall	_Lcd_Init
  1145                           
  1146                           ;main.c: 76:     Lcd_Clear();
  1147     06A3  120A  118A  2281  120A  118A  	fcall	_Lcd_Clear
  1148                           
  1149                           ;main.c: 77:     Lcd_Set_Cursor(1,13);
  1150     06A8  300D               	movlw	13
  1151     06A9  00F4               	movwf	Lcd_Set_Cursor@b
  1152     06AA  3001               	movlw	1
  1153     06AB  120A  118A  24D1  120A  118A  	fcall	_Lcd_Set_Cursor
  1154                           
  1155                           ;main.c: 78:     Lcd_Write_Char(':');
  1156     06B0  303A               	movlw	58
  1157     06B1  120A  118A  239A  120A  118A  	fcall	_Lcd_Write_Char
  1158                           
  1159                           ;main.c: 79:     Lcd_Set_Cursor(2,9);
  1160     06B6  3009               	movlw	9
  1161     06B7  00F4               	movwf	Lcd_Set_Cursor@b
  1162     06B8  3002               	movlw	2
  1163     06B9  120A  118A  24D1  120A  118A  	fcall	_Lcd_Set_Cursor
  1164                           
  1165                           ;main.c: 80:     Lcd_Write_String("S:  :");
  1166     06BE  3009               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1167     06BF  120A  118A  2326  120A  118A  	fcall	_Lcd_Write_String
  1168                           
  1169                           ;main.c: 81:     Lcd_Set_Cursor(2,1);
  1170     06C4  01F4               	clrf	Lcd_Set_Cursor@b
  1171     06C5  0AF4               	incf	Lcd_Set_Cursor@b,f
  1172     06C6  3002               	movlw	2
  1173     06C7  120A  118A  24D1  120A  118A  	fcall	_Lcd_Set_Cursor
  1174                           
  1175                           ;main.c: 82:     Lcd_Write_String("T:    C");
  1176     06CC  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1177     06CD  120A  118A  2326  120A  118A  	fcall	_Lcd_Write_String
  1178                           
  1179                           ;main.c: 85:     modo = 0;
  1180     06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1181     06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1182     06D4  01AB               	clrf	_modo
  1183                           
  1184                           ;main.c: 86:     sec = 0;
  1185     06D5  01AF               	clrf	_sec
  1186                           
  1187                           ;main.c: 87:     min = 0;
  1188     06D6  01AD               	clrf	_min
  1189                           
  1190                           ;main.c: 89:     enviar_x(0, 0);
  1191     06D7  01F2               	clrf	enviar_x@val2
  1192     06D8  3000               	movlw	0
  1193     06D9  120A  118A  23FC  120A  118A  	fcall	_enviar_x
  1194     06DE                     l1738:
  1195                           
  1196                           ;main.c: 93:         leer_temperatura();
  1197     06DE  120A  118A  2462  120A  118A  	fcall	_leer_temperatura
  1198                           
  1199                           ;main.c: 95:         enviar_x(0, 0);
  1200     06E3  01F2               	clrf	enviar_x@val2
  1201     06E4  3000               	movlw	0
  1202     06E5  120A  118A  23FC  120A  118A  	fcall	_enviar_x
  1203                           
  1204                           ;main.c: 97:         sec = leer_x(0x00);
  1205     06EA  3000               	movlw	0
  1206     06EB  120A  118A  250F  120A  118A  	fcall	_leer_x
  1207     06F0  1283               	bcf	3,5	;RP0=0, select bank0
  1208     06F1  00AF               	movwf	_sec
  1209                           
  1210                           ;main.c: 98:         Escribir_dato(sec, 14, 1);
  1211     06F2  300E               	movlw	14
  1212     06F3  00FC               	movwf	Escribir_dato@posx
  1213     06F4  01FD               	clrf	Escribir_dato@posy
  1214     06F5  0AFD               	incf	Escribir_dato@posy,f
  1215     06F6  082F               	movf	_sec,w
  1216     06F7  120A  118A  254E  120A  118A  	fcall	_Escribir_dato
  1217                           
  1218                           ;main.c: 100:         min = leer_x(0x01);
  1219     06FC  3001               	movlw	1
  1220     06FD  120A  118A  250F  120A  118A  	fcall	_leer_x
  1221     0702  1283               	bcf	3,5	;RP0=0, select bank0
  1222     0703  00AD               	movwf	_min
  1223                           
  1224                           ;main.c: 101:         Escribir_dato(min, 11, 1);
  1225     0704  300B               	movlw	11
  1226     0705  00FC               	movwf	Escribir_dato@posx
  1227     0706  01FD               	clrf	Escribir_dato@posy
  1228     0707  0AFD               	incf	Escribir_dato@posy,f
  1229     0708  082D               	movf	_min,w
  1230     0709  120A  118A  254E  120A  118A  	fcall	_Escribir_dato
  1231                           
  1232                           ;main.c: 104:         if (!PORTBbits.RB1){
  1233     070E  1886               	btfsc	6,1	;volatile
  1234     070F  2F1C               	goto	l86
  1235     0710                     l87:
  1236     0710  1C86               	btfss	6,1	;volatile
  1237     0711  2F10               	goto	l87
  1238                           
  1239                           ;main.c: 106:             if (SERVO != 0){
  1240     0712  082A               	movf	_SERVO,w
  1241     0713  1903               	btfsc	3,2
  1242     0714  2F17               	goto	l1758
  1243                           
  1244                           ;main.c: 107:                 SERVO = 0;
  1245     0715  01AA               	clrf	_SERVO
  1246                           
  1247                           ;main.c: 108:             }
  1248     0716  2F1C               	goto	l86
  1249     0717                     l1758:
  1250     0717  082A               	movf	_SERVO,w
  1251     0718  1D03               	btfss	3,2
  1252     0719  2F1C               	goto	l86
  1253                           
  1254                           ;main.c: 110:                 SERVO = 1;
  1255     071A  01AA               	clrf	_SERVO
  1256     071B  0AAA               	incf	_SERVO,f
  1257     071C                     l86:	
  1258                           ;main.c: 113:         }
  1259                           
  1260                           
  1261                           ;main.c: 115:         if(!PORTBbits.RB4){
  1262     071C  1E06               	btfss	6,4	;volatile
  1263     071D  2F79               	goto	l1810
  1264     071E  2EDE               	goto	l1738
  1265     071F                     l1764:
  1266                           
  1267                           ;main.c: 119:                 leer_temperatura();
  1268     071F  120A  118A  2462  120A  118A  	fcall	_leer_temperatura
  1269                           
  1270                           ;main.c: 121:                 Escribir_dato(sec, 14, 1);
  1271     0724  300E               	movlw	14
  1272     0725  00FC               	movwf	Escribir_dato@posx
  1273     0726  01FD               	clrf	Escribir_dato@posy
  1274     0727  0AFD               	incf	Escribir_dato@posy,f
  1275     0728  082F               	movf	_sec,w
  1276     0729  120A  118A  254E  120A  118A  	fcall	_Escribir_dato
  1277                           
  1278                           ;main.c: 122:                 Escribir_dato(min, 11, 1);
  1279     072E  300B               	movlw	11
  1280     072F  00FC               	movwf	Escribir_dato@posx
  1281     0730  01FD               	clrf	Escribir_dato@posy
  1282     0731  0AFD               	incf	Escribir_dato@posy,f
  1283     0732  082D               	movf	_min,w
  1284     0733  120A  118A  254E  120A  118A  	fcall	_Escribir_dato
  1285                           
  1286                           ;main.c: 124:                 if(PORTBbits.RB7 == 0){
  1287     0738  1B86               	btfsc	6,7	;volatile
  1288     0739  2F43               	goto	l1774
  1289                           
  1290                           ;main.c: 126:                     if (modo < 1){
  1291     073A  082B               	movf	_modo,w
  1292     073B  1D03               	btfss	3,2
  1293     073C  2F42               	goto	l1772
  1294                           
  1295                           ;main.c: 127:                         modo += 1;
  1296     073D  3001               	movlw	1
  1297     073E  00BE               	movwf	??_main
  1298     073F  083E               	movf	??_main,w
  1299     0740  07AB               	addwf	_modo,f
  1300                           
  1301                           ;main.c: 128:                     }
  1302     0741  2F43               	goto	l1774
  1303     0742                     l1772:
  1304                           
  1305                           ;main.c: 130:                         modo = 0;
  1306     0742  01AB               	clrf	_modo
  1307     0743                     l1774:
  1308                           
  1309                           ;main.c: 134:                 if(PORTBbits.RB6 == 0){
  1310     0743  1B06               	btfsc	6,6	;volatile
  1311     0744  2F60               	goto	l1792
  1312                           
  1313                           ;main.c: 136:                     if (modo == 0){
  1314     0745  082B               	movf	_modo,w
  1315     0746  1D03               	btfss	3,2
  1316     0747  2F53               	goto	l1784
  1317                           
  1318                           ;main.c: 137:                         if (sec<59){
  1319     0748  303B               	movlw	59
  1320     0749  022F               	subwf	_sec,w
  1321     074A  1803               	skipnc
  1322     074B  2F51               	goto	l1782
  1323                           
  1324                           ;main.c: 138:                             sec ++;
  1325     074C  3001               	movlw	1
  1326     074D  00BE               	movwf	??_main
  1327     074E  083E               	movf	??_main,w
  1328     074F  07AF               	addwf	_sec,f
  1329                           
  1330                           ;main.c: 139:                         }
  1331     0750  2F60               	goto	l1792
  1332     0751                     l1782:
  1333                           
  1334                           ;main.c: 141:                             sec = 0;
  1335     0751  01AF               	clrf	_sec
  1336     0752  2F60               	goto	l1792
  1337     0753                     l1784:
  1338     0753  032B               	decf	_modo,w
  1339     0754  1D03               	btfss	3,2
  1340     0755  2F60               	goto	l1792
  1341                           
  1342                           ;main.c: 145:                         if (min<59){
  1343     0756  303B               	movlw	59
  1344     0757  022D               	subwf	_min,w
  1345     0758  1803               	skipnc
  1346     0759  2F5F               	goto	l1790
  1347                           
  1348                           ;main.c: 146:                             min++;
  1349     075A  3001               	movlw	1
  1350     075B  00BE               	movwf	??_main
  1351     075C  083E               	movf	??_main,w
  1352     075D  07AD               	addwf	_min,f
  1353                           
  1354                           ;main.c: 147:                         }
  1355     075E  2F60               	goto	l1792
  1356     075F                     l1790:
  1357                           
  1358                           ;main.c: 149:                             min = 0;
  1359     075F  01AD               	clrf	_min
  1360     0760                     l1792:
  1361                           
  1362                           ;main.c: 156:                 if(PORTBbits.RB5 == 0){
  1363     0760  1A86               	btfsc	6,5	;volatile
  1364     0761  2F79               	goto	l1810
  1365                           
  1366                           ;main.c: 159:                     if (modo == 0){
  1367     0762  082B               	movf	_modo,w
  1368     0763  1D03               	btfss	3,2
  1369     0764  2F6E               	goto	l1802
  1370                           
  1371                           ;main.c: 160:                         if (sec > 0){
  1372     0765  082F               	movf	_sec,w
  1373     0766  1903               	btfsc	3,2
  1374     0767  2F6B               	goto	l1800
  1375                           
  1376                           ;main.c: 161:                             sec--;
  1377     0768  3001               	movlw	1
  1378     0769  02AF               	subwf	_sec,f
  1379                           
  1380                           ;main.c: 162:                         }
  1381     076A  2F79               	goto	l1810
  1382     076B                     l1800:
  1383                           
  1384                           ;main.c: 164:                             sec = 59;
  1385     076B  303B               	movlw	59
  1386     076C  00AF               	movwf	_sec
  1387     076D  2F79               	goto	l1810
  1388     076E                     l1802:
  1389     076E  032B               	decf	_modo,w
  1390     076F  1D03               	btfss	3,2
  1391     0770  2F79               	goto	l1810
  1392                           
  1393                           ;main.c: 168:                         if (min > 0){
  1394     0771  082D               	movf	_min,w
  1395     0772  1903               	btfsc	3,2
  1396     0773  2F77               	goto	l1808
  1397                           
  1398                           ;main.c: 169:                             min--;
  1399     0774  3001               	movlw	1
  1400     0775  02AD               	subwf	_min,f
  1401                           
  1402                           ;main.c: 170:                         }
  1403     0776  2F79               	goto	l1810
  1404     0777                     l1808:
  1405                           
  1406                           ;main.c: 172:                             min = 59;
  1407     0777  303B               	movlw	59
  1408     0778  00AD               	movwf	_min
  1409     0779                     l1810:
  1410                           
  1411                           ;main.c: 117:             while(PORTBbits.RB3){
  1412     0779  1986               	btfsc	6,3	;volatile
  1413     077A  2F1F               	goto	l1764
  1414                           
  1415                           ;main.c: 177:             enviar_x(0,0);
  1416     077B  01F2               	clrf	enviar_x@val2
  1417     077C  3000               	movlw	0
  1418     077D  120A  118A  23FC  120A  118A  	fcall	_enviar_x
  1419                           
  1420                           ;main.c: 178:             Escribir_dato(sec, 14, 2);
  1421     0782  300E               	movlw	14
  1422     0783  00FC               	movwf	Escribir_dato@posx
  1423     0784  3002               	movlw	2
  1424     0785  00FD               	movwf	Escribir_dato@posy
  1425     0786  1283               	bcf	3,5	;RP0=0, select bank0
  1426     0787  082F               	movf	_sec,w
  1427     0788  120A  118A  254E  120A  118A  	fcall	_Escribir_dato
  1428                           
  1429                           ;main.c: 179:             Escribir_dato(min, 11, 2);
  1430     078D  300B               	movlw	11
  1431     078E  00FC               	movwf	Escribir_dato@posx
  1432     078F  3002               	movlw	2
  1433     0790  00FD               	movwf	Escribir_dato@posy
  1434     0791  082D               	movf	_min,w
  1435     0792  120A  118A  254E  120A  118A  	fcall	_Escribir_dato
  1436                           
  1437                           ;main.c: 180:             while(PORTBbits.RB2 & !((sec == segundos) & (min == minutos)) 
      +                          ){
  1438     0797  2FCC               	goto	l1818
  1439     0798                     l1814:
  1440                           
  1441                           ;main.c: 181:                 segundos = leer_x(0x00);
  1442     0798  3000               	movlw	0
  1443     0799  120A  118A  250F  120A  118A  	fcall	_leer_x
  1444     079E  1283               	bcf	3,5	;RP0=0, select bank0
  1445     079F  00AE               	movwf	_segundos
  1446                           
  1447                           ;main.c: 182:                 minutos = leer_x(0x01);
  1448     07A0  3001               	movlw	1
  1449     07A1  120A  118A  250F  120A  118A  	fcall	_leer_x
  1450     07A6  1283               	bcf	3,5	;RP0=0, select bank0
  1451     07A7  00AC               	movwf	_minutos
  1452                           
  1453                           ;main.c: 183:                 Escribir_dato(segundos, 14, 1);
  1454     07A8  300E               	movlw	14
  1455     07A9  00FC               	movwf	Escribir_dato@posx
  1456     07AA  01FD               	clrf	Escribir_dato@posy
  1457     07AB  0AFD               	incf	Escribir_dato@posy,f
  1458     07AC  082E               	movf	_segundos,w
  1459     07AD  120A  118A  254E  120A  118A  	fcall	_Escribir_dato
  1460                           
  1461                           ;main.c: 184:                 Escribir_dato(minutos, 11, 1);
  1462     07B2  300B               	movlw	11
  1463     07B3  00FC               	movwf	Escribir_dato@posx
  1464     07B4  01FD               	clrf	Escribir_dato@posy
  1465     07B5  0AFD               	incf	Escribir_dato@posy,f
  1466     07B6  082C               	movf	_minutos,w
  1467     07B7  120A  118A  254E  120A  118A  	fcall	_Escribir_dato
  1468                           
  1469                           ;main.c: 185:                 leer_temperatura();
  1470     07BC  120A  118A  2462  120A  118A  	fcall	_leer_temperatura
  1471                           
  1472                           ;main.c: 186:                 _delay((unsigned long)((10)*(8000000/4000.0)));
  1473     07C1  301A               	movlw	26
  1474     07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1475     07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1476     07C4  00BF               	movwf	??_main+1
  1477     07C5  30F7               	movlw	247
  1478     07C6  00BE               	movwf	??_main
  1479     07C7                     u1477:
  1480     07C7  0BBE               	decfsz	??_main,f
  1481     07C8  2FC7               	goto	u1477
  1482     07C9  0BBF               	decfsz	??_main+1,f
  1483     07CA  2FC7               	goto	u1477
  1484     07CB  2FCC               	nop2
  1485     07CC                     l1818:
  1486                           
  1487                           ;main.c: 180:             while(PORTBbits.RB2 & !((sec == segundos) & (min == minutos)) 
      +                          ){
  1488     07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1489     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1490     07CE  01C0               	clrf	_main$198
  1491     07CF  0AC0               	incf	_main$198,f
  1492     07D0  082F               	movf	_sec,w
  1493     07D1  062E               	xorwf	_segundos,w
  1494     07D2  1D03               	skipz
  1495     07D3  2FD9               	goto	l1826
  1496     07D4  082D               	movf	_min,w
  1497     07D5  062C               	xorwf	_minutos,w
  1498     07D6  1D03               	skipz
  1499     07D7  2FD9               	goto	l1826
  1500     07D8  01C0               	clrf	_main$198
  1501     07D9                     l1826:
  1502     07D9  0C06               	rrf	6,w	;volatile
  1503     07DA  00BE               	movwf	??_main
  1504     07DB  0C3E               	rrf	??_main,w
  1505     07DC  3901               	andlw	1
  1506     07DD  0540               	andwf	_main$198,w
  1507     07DE  1D03               	btfss	3,2
  1508     07DF  2F98               	goto	l1814
  1509                           
  1510                           ;main.c: 189:             Escribir_dato(0, 14, 2);
  1511     07E0  300E               	movlw	14
  1512     07E1  00FC               	movwf	Escribir_dato@posx
  1513     07E2  3002               	movlw	2
  1514     07E3  00FD               	movwf	Escribir_dato@posy
  1515     07E4  3000               	movlw	0
  1516     07E5  120A  118A  254E  120A  118A  	fcall	_Escribir_dato
  1517                           
  1518                           ;main.c: 190:             Escribir_dato(0, 11, 2);
  1519     07EA  300B               	movlw	11
  1520     07EB  00FC               	movwf	Escribir_dato@posx
  1521     07EC  3002               	movlw	2
  1522     07ED  00FD               	movwf	Escribir_dato@posy
  1523     07EE  3000               	movlw	0
  1524     07EF  120A  118A  254E  120A  118A  	fcall	_Escribir_dato
  1525     07F4  2EDE               	goto	l1738
  1526     07F5                     __end_of_main:
  1527                           
  1528                           	psect	text1
  1529     0594                     __ptext1:	
  1530 ;; *************** function _setupINTOSC *****************
  1531 ;; Defined at:
  1532 ;;		line 10 in file "oscilador.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  IRCF            1    wreg     unsigned char 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  IRCF            1    0[COMMON] unsigned char 
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  1    wreg      void 
  1539 ;; Registers used:
  1540 ;;		wreg, status,2, status,0
  1541 ;; Tracked objects:
  1542 ;;		On entry : B00/0
  1543 ;;		On exit  : B00/100
  1544 ;;		Unchanged: 800/0
  1545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1546 ;;      Params:         0       0       0       0       0
  1547 ;;      Locals:         1       0       0       0       0
  1548 ;;      Temps:          0       0       0       0       0
  1549 ;;      Totals:         1       0       0       0       0
  1550 ;;Total ram usage:        1 bytes
  1551 ;; Hardware stack levels used: 1
  1552 ;; This function calls:
  1553 ;;		Nothing
  1554 ;; This function is called by:
  1555 ;;		_main
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559     0594                     _setupINTOSC:	
  1560                           ;psect for function _setupINTOSC
  1561                           
  1562                           
  1563                           ;incstack = 0
  1564                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  1565                           ;setupINTOSC@IRCF stored from wreg
  1566     0594  00F0               	movwf	setupINTOSC@IRCF
  1567                           
  1568                           ;oscilador.c: 11:     if (IRCF == 7){
  1569     0595  3007               	movlw	7
  1570     0596  0670               	xorwf	setupINTOSC@IRCF,w
  1571     0597  1D03               	btfss	3,2
  1572     0598  2D9C               	goto	l278
  1573                           
  1574                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  1575     0599  3070               	movlw	112
  1576     059A  1683               	bsf	3,5	;RP0=1, select bank1
  1577     059B  048F               	iorwf	15,f	;volatile
  1578     059C                     l278:	
  1579                           ;oscilador.c: 13:     }
  1580                           
  1581                           
  1582                           ;oscilador.c: 14:     if (IRCF == 6){
  1583     059C  3006               	movlw	6
  1584     059D  0670               	xorwf	setupINTOSC@IRCF,w
  1585     059E  1D03               	btfss	3,2
  1586     059F  2DA5               	goto	l279
  1587                           
  1588                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  1589     05A0  1683               	bsf	3,5	;RP0=1, select bank1
  1590     05A1  080F               	movf	15,w	;volatile
  1591     05A2  398F               	andlw	-113
  1592     05A3  3860               	iorlw	96
  1593     05A4  008F               	movwf	15	;volatile
  1594     05A5                     l279:	
  1595                           ;oscilador.c: 16:     }
  1596                           
  1597                           
  1598                           ;oscilador.c: 17:     if (IRCF == 5){
  1599     05A5  3005               	movlw	5
  1600     05A6  0670               	xorwf	setupINTOSC@IRCF,w
  1601     05A7  1D03               	btfss	3,2
  1602     05A8  2DAE               	goto	l280
  1603                           
  1604                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  1605     05A9  1683               	bsf	3,5	;RP0=1, select bank1
  1606     05AA  080F               	movf	15,w	;volatile
  1607     05AB  398F               	andlw	-113
  1608     05AC  3850               	iorlw	80
  1609     05AD  008F               	movwf	15	;volatile
  1610     05AE                     l280:	
  1611                           ;oscilador.c: 19:     }
  1612                           
  1613                           
  1614                           ;oscilador.c: 20:     if (IRCF == 4){
  1615     05AE  3004               	movlw	4
  1616     05AF  0670               	xorwf	setupINTOSC@IRCF,w
  1617     05B0  1D03               	btfss	3,2
  1618     05B1  2DB7               	goto	l281
  1619                           
  1620                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  1621     05B2  1683               	bsf	3,5	;RP0=1, select bank1
  1622     05B3  080F               	movf	15,w	;volatile
  1623     05B4  398F               	andlw	-113
  1624     05B5  3840               	iorlw	64
  1625     05B6  008F               	movwf	15	;volatile
  1626     05B7                     l281:	
  1627                           ;oscilador.c: 22:     }
  1628                           
  1629                           
  1630                           ;oscilador.c: 23:     if (IRCF == 3){
  1631     05B7  3003               	movlw	3
  1632     05B8  0670               	xorwf	setupINTOSC@IRCF,w
  1633     05B9  1D03               	btfss	3,2
  1634     05BA  2DC0               	goto	l282
  1635                           
  1636                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  1637     05BB  1683               	bsf	3,5	;RP0=1, select bank1
  1638     05BC  080F               	movf	15,w	;volatile
  1639     05BD  398F               	andlw	-113
  1640     05BE  3830               	iorlw	48
  1641     05BF  008F               	movwf	15	;volatile
  1642     05C0                     l282:	
  1643                           ;oscilador.c: 25:     }
  1644                           
  1645                           
  1646                           ;oscilador.c: 26:     if (IRCF == 2){
  1647     05C0  3002               	movlw	2
  1648     05C1  0670               	xorwf	setupINTOSC@IRCF,w
  1649     05C2  1D03               	btfss	3,2
  1650     05C3  2DC9               	goto	l283
  1651                           
  1652                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  1653     05C4  1683               	bsf	3,5	;RP0=1, select bank1
  1654     05C5  080F               	movf	15,w	;volatile
  1655     05C6  398F               	andlw	-113
  1656     05C7  3820               	iorlw	32
  1657     05C8  008F               	movwf	15	;volatile
  1658     05C9                     l283:	
  1659                           ;oscilador.c: 28:     }
  1660                           
  1661                           
  1662                           ;oscilador.c: 29:     if (IRCF == 1){
  1663     05C9  0370               	decf	setupINTOSC@IRCF,w
  1664     05CA  1D03               	btfss	3,2
  1665     05CB  2DD1               	goto	l284
  1666                           
  1667                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  1668     05CC  1683               	bsf	3,5	;RP0=1, select bank1
  1669     05CD  080F               	movf	15,w	;volatile
  1670     05CE  398F               	andlw	-113
  1671     05CF  3810               	iorlw	16
  1672     05D0  008F               	movwf	15	;volatile
  1673     05D1                     l284:	
  1674                           ;oscilador.c: 31:     }
  1675                           
  1676                           
  1677                           ;oscilador.c: 32:     if (IRCF == 0){
  1678     05D1  0870               	movf	setupINTOSC@IRCF,w
  1679     05D2  1D03               	btfss	3,2
  1680     05D3  2DD7               	goto	l1674
  1681                           
  1682                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  1683     05D4  308F               	movlw	-113
  1684     05D5  1683               	bsf	3,5	;RP0=1, select bank1
  1685     05D6  058F               	andwf	15,f	;volatile
  1686     05D7                     l1674:
  1687                           
  1688                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  1689     05D7  1683               	bsf	3,5	;RP0=1, select bank1
  1690     05D8  140F               	bsf	15,0	;volatile
  1691     05D9  0008               	return
  1692     05DA                     __end_of_setupINTOSC:
  1693                           
  1694                           	psect	text2
  1695     036D                     __ptext2:	
  1696 ;; *************** function _portsetup *****************
  1697 ;; Defined at:
  1698 ;;		line 195 in file "main.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2, status,0, pclath, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : B00/100
  1709 ;;		On exit  : 300/100
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1712 ;;      Params:         0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0
  1714 ;;      Temps:          0       3       0       0       0
  1715 ;;      Totals:         0       3       0       0       0
  1716 ;;Total ram usage:        3 bytes
  1717 ;; Hardware stack levels used: 1
  1718 ;; Hardware stack levels required when called: 2
  1719 ;; This function calls:
  1720 ;;		_I2C_Master_Init
  1721 ;; This function is called by:
  1722 ;;		_main
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726     036D                     _portsetup:	
  1727                           ;psect for function _portsetup
  1728                           
  1729                           
  1730                           ;main.c: 196:     ANSEL = 0;
  1731                           
  1732                           ;incstack = 0
  1733                           ; Regs used in _portsetup: [wreg+status,2+status,0+pclath+cstack]
  1734     036D  1703               	bsf	3,6	;RP1=1, select bank3
  1735     036E  0188               	clrf	8	;volatile
  1736                           
  1737                           ;main.c: 197:     ANSELH = 0;
  1738     036F  0189               	clrf	9	;volatile
  1739                           
  1740                           ;main.c: 198:     TRISD = 0;
  1741     0370  1303               	bcf	3,6	;RP1=0, select bank1
  1742     0371  0188               	clrf	8	;volatile
  1743                           
  1744                           ;main.c: 199:     PORTD = 0;
  1745     0372  1283               	bcf	3,5	;RP0=0, select bank0
  1746     0373  0188               	clrf	8	;volatile
  1747                           
  1748                           ;main.c: 202:     TRISB = 0b11111110;
  1749     0374  30FE               	movlw	254
  1750     0375  1683               	bsf	3,5	;RP0=1, select bank1
  1751     0376  0086               	movwf	6	;volatile
  1752                           
  1753                           ;main.c: 203:     PORTB = 0b11111110;
  1754     0377  30FE               	movlw	254
  1755     0378  1283               	bcf	3,5	;RP0=0, select bank0
  1756     0379  0086               	movwf	6	;volatile
  1757                           
  1758                           ;main.c: 204:     WPUB = 0b11111110;
  1759     037A  30FE               	movlw	254
  1760     037B  1683               	bsf	3,5	;RP0=1, select bank1
  1761     037C  0095               	movwf	21	;volatile
  1762                           
  1763                           ;main.c: 205:     OPTION_REGbits.nRBPU = 0;
  1764     037D  1381               	bcf	1,7	;volatile
  1765                           
  1766                           ;main.c: 206:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1767     037E  300B               	movlw	11
  1768     037F  1283               	bcf	3,5	;RP0=0, select bank0
  1769     0380  1303               	bcf	3,6	;RP1=0, select bank0
  1770     0381  00BD               	movwf	??_portsetup+2
  1771     0382  3026               	movlw	38
  1772     0383  00BC               	movwf	??_portsetup+1
  1773     0384  305D               	movlw	93
  1774     0385  00BB               	movwf	??_portsetup
  1775     0386                     u1487:
  1776     0386  0BBB               	decfsz	??_portsetup,f
  1777     0387  2B86               	goto	u1487
  1778     0388  0BBC               	decfsz	??_portsetup+1,f
  1779     0389  2B86               	goto	u1487
  1780     038A  0BBD               	decfsz	??_portsetup+2,f
  1781     038B  2B86               	goto	u1487
  1782                           
  1783                           ;main.c: 207:     I2C_Master_Init(100000);
  1784     038C  3000               	movlw	0
  1785     038D  1283               	bcf	3,5	;RP0=0, select bank0
  1786     038E  1303               	bcf	3,6	;RP1=0, select bank0
  1787     038F  00B6               	movwf	I2C_Master_Init@c+3
  1788     0390  3001               	movlw	1
  1789     0391  00B5               	movwf	I2C_Master_Init@c+2
  1790     0392  3086               	movlw	134
  1791     0393  00B4               	movwf	I2C_Master_Init@c+1
  1792     0394  30A0               	movlw	160
  1793     0395  00B3               	movwf	I2C_Master_Init@c
  1794     0396  120A  118A  23CB   	fcall	_I2C_Master_Init
  1795     0399  0008               	return
  1796     039A                     __end_of_portsetup:
  1797                           
  1798                           	psect	text3
  1799     03CB                     __ptext3:	
  1800 ;; *************** function _I2C_Master_Init *****************
  1801 ;; Defined at:
  1802 ;;		line 16 in file "I2C.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  c               4    0[BANK0 ] const unsigned long 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;		None
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      void 
  1809 ;; Registers used:
  1810 ;;		wreg, status,2, status,0, pclath, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 300/0
  1813 ;;		On exit  : 300/100
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1816 ;;      Params:         0       4       0       0       0
  1817 ;;      Locals:         0       0       0       0       0
  1818 ;;      Temps:          0       4       0       0       0
  1819 ;;      Totals:         0       8       0       0       0
  1820 ;;Total ram usage:        8 bytes
  1821 ;; Hardware stack levels used: 1
  1822 ;; Hardware stack levels required when called: 1
  1823 ;; This function calls:
  1824 ;;		___lldiv
  1825 ;; This function is called by:
  1826 ;;		_portsetup
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830     03CB                     _I2C_Master_Init:	
  1831                           ;psect for function _I2C_Master_Init
  1832                           
  1833                           
  1834                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1835                           
  1836                           ;incstack = 0
  1837                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1838     03CB  3028               	movlw	40
  1839     03CC  0094               	movwf	20	;volatile
  1840                           
  1841                           ;I2C.c: 19:     SSPCON2 = 0;
  1842     03CD  1683               	bsf	3,5	;RP0=1, select bank1
  1843     03CE  0191               	clrf	17	;volatile
  1844                           
  1845                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1846     03CF  1283               	bcf	3,5	;RP0=0, select bank0
  1847     03D0  0833               	movf	I2C_Master_Init@c,w
  1848     03D1  00B7               	movwf	??_I2C_Master_Init
  1849     03D2  0834               	movf	I2C_Master_Init@c+1,w
  1850     03D3  00B8               	movwf	??_I2C_Master_Init+1
  1851     03D4  0835               	movf	I2C_Master_Init@c+2,w
  1852     03D5  00B9               	movwf	??_I2C_Master_Init+2
  1853     03D6  0836               	movf	I2C_Master_Init@c+3,w
  1854     03D7  00BA               	movwf	??_I2C_Master_Init+3
  1855     03D8  3002               	movlw	2
  1856     03D9                     u1145:
  1857     03D9  1003               	clrc
  1858     03DA  0DB7               	rlf	??_I2C_Master_Init,f
  1859     03DB  0DB8               	rlf	??_I2C_Master_Init+1,f
  1860     03DC  0DB9               	rlf	??_I2C_Master_Init+2,f
  1861     03DD  0DBA               	rlf	??_I2C_Master_Init+3,f
  1862     03DE  3EFF               	addlw	-1
  1863     03DF  1D03               	skipz
  1864     03E0  2BD9               	goto	u1145
  1865     03E1  083A               	movf	??_I2C_Master_Init+3,w
  1866     03E2  00F3               	movwf	___lldiv@divisor+3
  1867     03E3  0839               	movf	??_I2C_Master_Init+2,w
  1868     03E4  00F2               	movwf	___lldiv@divisor+2
  1869     03E5  0838               	movf	??_I2C_Master_Init+1,w
  1870     03E6  00F1               	movwf	___lldiv@divisor+1
  1871     03E7  0837               	movf	??_I2C_Master_Init,w
  1872     03E8  00F0               	movwf	___lldiv@divisor
  1873     03E9  3000               	movlw	0
  1874     03EA  00F7               	movwf	___lldiv@dividend+3
  1875     03EB  307A               	movlw	122
  1876     03EC  00F6               	movwf	___lldiv@dividend+2
  1877     03ED  3012               	movlw	18
  1878     03EE  00F5               	movwf	___lldiv@dividend+1
  1879     03EF  3000               	movlw	0
  1880     03F0  00F4               	movwf	___lldiv@dividend
  1881     03F1  120A  118A  2635   	fcall	___lldiv
  1882     03F4  0870               	movf	?___lldiv,w
  1883     03F5  3EFF               	addlw	255
  1884     03F6  1683               	bsf	3,5	;RP0=1, select bank1
  1885     03F7  0093               	movwf	19	;volatile
  1886                           
  1887                           ;I2C.c: 21:     SSPSTAT = 0;
  1888     03F8  0194               	clrf	20	;volatile
  1889                           
  1890                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1891     03F9  1587               	bsf	7,3	;volatile
  1892                           
  1893                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1894     03FA  1607               	bsf	7,4	;volatile
  1895     03FB  0008               	return
  1896     03FC                     __end_of_I2C_Master_Init:
  1897                           
  1898                           	psect	text4
  1899     0635                     __ptext4:	
  1900 ;; *************** function ___lldiv *****************
  1901 ;; Defined at:
  1902 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  divisor         4    0[COMMON] unsigned long 
  1905 ;;  dividend        4    4[COMMON] unsigned long 
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;  quotient        4    9[COMMON] unsigned long 
  1908 ;;  counter         1   13[COMMON] unsigned char 
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  4    0[COMMON] unsigned long 
  1911 ;; Registers used:
  1912 ;;		wreg, status,2, status,0
  1913 ;; Tracked objects:
  1914 ;;		On entry : 300/0
  1915 ;;		On exit  : 300/0
  1916 ;;		Unchanged: 300/0
  1917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1918 ;;      Params:         8       0       0       0       0
  1919 ;;      Locals:         5       0       0       0       0
  1920 ;;      Temps:          1       0       0       0       0
  1921 ;;      Totals:        14       0       0       0       0
  1922 ;;Total ram usage:       14 bytes
  1923 ;; Hardware stack levels used: 1
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_I2C_Master_Init
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931     0635                     ___lldiv:	
  1932                           ;psect for function ___lldiv
  1933                           
  1934                           
  1935                           ;incstack = 0
  1936                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1937     0635  3000               	movlw	0
  1938     0636  00FC               	movwf	___lldiv@quotient+3
  1939     0637  3000               	movlw	0
  1940     0638  00FB               	movwf	___lldiv@quotient+2
  1941     0639  3000               	movlw	0
  1942     063A  00FA               	movwf	___lldiv@quotient+1
  1943     063B  3000               	movlw	0
  1944     063C  00F9               	movwf	___lldiv@quotient
  1945     063D  0873               	movf	___lldiv@divisor+3,w
  1946     063E  0472               	iorwf	___lldiv@divisor+2,w
  1947     063F  0471               	iorwf	___lldiv@divisor+1,w
  1948     0640  0470               	iorwf	___lldiv@divisor,w
  1949     0641  1903               	skipnz
  1950     0642  2E8A               	goto	l1596
  1951     0643  01FD               	clrf	___lldiv@counter
  1952     0644  0AFD               	incf	___lldiv@counter,f
  1953     0645                     l1582:
  1954     0645  1BF3               	btfsc	___lldiv@divisor+3,7
  1955     0646  2E55               	goto	l1584
  1956     0647  3001               	movlw	1
  1957     0648  00F8               	movwf	??___lldiv
  1958     0649                     u1085:
  1959     0649  1003               	clrc
  1960     064A  0DF0               	rlf	___lldiv@divisor,f
  1961     064B  0DF1               	rlf	___lldiv@divisor+1,f
  1962     064C  0DF2               	rlf	___lldiv@divisor+2,f
  1963     064D  0DF3               	rlf	___lldiv@divisor+3,f
  1964     064E  0BF8               	decfsz	??___lldiv,f
  1965     064F  2E49               	goto	u1085
  1966     0650  3001               	movlw	1
  1967     0651  00F8               	movwf	??___lldiv
  1968     0652  0878               	movf	??___lldiv,w
  1969     0653  07FD               	addwf	___lldiv@counter,f
  1970     0654  2E45               	goto	l1582
  1971     0655                     l1584:
  1972     0655  3001               	movlw	1
  1973     0656  00F8               	movwf	??___lldiv
  1974     0657                     u1105:
  1975     0657  1003               	clrc
  1976     0658  0DF9               	rlf	___lldiv@quotient,f
  1977     0659  0DFA               	rlf	___lldiv@quotient+1,f
  1978     065A  0DFB               	rlf	___lldiv@quotient+2,f
  1979     065B  0DFC               	rlf	___lldiv@quotient+3,f
  1980     065C  0BF8               	decfsz	??___lldiv,f
  1981     065D  2E57               	goto	u1105
  1982     065E  0873               	movf	___lldiv@divisor+3,w
  1983     065F  0277               	subwf	___lldiv@dividend+3,w
  1984     0660  1D03               	skipz
  1985     0661  2E6C               	goto	u1115
  1986     0662  0872               	movf	___lldiv@divisor+2,w
  1987     0663  0276               	subwf	___lldiv@dividend+2,w
  1988     0664  1D03               	skipz
  1989     0665  2E6C               	goto	u1115
  1990     0666  0871               	movf	___lldiv@divisor+1,w
  1991     0667  0275               	subwf	___lldiv@dividend+1,w
  1992     0668  1D03               	skipz
  1993     0669  2E6C               	goto	u1115
  1994     066A  0870               	movf	___lldiv@divisor,w
  1995     066B  0274               	subwf	___lldiv@dividend,w
  1996     066C                     u1115:
  1997     066C  1C03               	skipc
  1998     066D  2E7D               	goto	l1592
  1999     066E  0870               	movf	___lldiv@divisor,w
  2000     066F  02F4               	subwf	___lldiv@dividend,f
  2001     0670  0871               	movf	___lldiv@divisor+1,w
  2002     0671  1C03               	skipc
  2003     0672  0F71               	incfsz	___lldiv@divisor+1,w
  2004     0673  02F5               	subwf	___lldiv@dividend+1,f
  2005     0674  0872               	movf	___lldiv@divisor+2,w
  2006     0675  1C03               	skipc
  2007     0676  0F72               	incfsz	___lldiv@divisor+2,w
  2008     0677  02F6               	subwf	___lldiv@dividend+2,f
  2009     0678  0873               	movf	___lldiv@divisor+3,w
  2010     0679  1C03               	skipc
  2011     067A  0F73               	incfsz	___lldiv@divisor+3,w
  2012     067B  02F7               	subwf	___lldiv@dividend+3,f
  2013     067C  1479               	bsf	___lldiv@quotient,0
  2014     067D                     l1592:
  2015     067D  3001               	movlw	1
  2016     067E                     u1125:
  2017     067E  1003               	clrc
  2018     067F  0CF3               	rrf	___lldiv@divisor+3,f
  2019     0680  0CF2               	rrf	___lldiv@divisor+2,f
  2020     0681  0CF1               	rrf	___lldiv@divisor+1,f
  2021     0682  0CF0               	rrf	___lldiv@divisor,f
  2022     0683  3EFF               	addlw	-1
  2023     0684  1D03               	skipz
  2024     0685  2E7E               	goto	u1125
  2025     0686  3001               	movlw	1
  2026     0687  02FD               	subwf	___lldiv@counter,f
  2027     0688  1D03               	btfss	3,2
  2028     0689  2E55               	goto	l1584
  2029     068A                     l1596:
  2030     068A  087C               	movf	___lldiv@quotient+3,w
  2031     068B  00F3               	movwf	?___lldiv+3
  2032     068C  087B               	movf	___lldiv@quotient+2,w
  2033     068D  00F2               	movwf	?___lldiv+2
  2034     068E  087A               	movf	___lldiv@quotient+1,w
  2035     068F  00F1               	movwf	?___lldiv+1
  2036     0690  0879               	movf	___lldiv@quotient,w
  2037     0691  00F0               	movwf	?___lldiv
  2038     0692  0008               	return
  2039     0693                     __end_of___lldiv:
  2040                           
  2041                           	psect	text5
  2042     050F                     __ptext5:	
  2043 ;; *************** function _leer_x *****************
  2044 ;; Defined at:
  2045 ;;		line 24 in file "DS3231.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;  address         1    wreg     unsigned char 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;  address         1   11[COMMON] unsigned char 
  2050 ;;  valor           1   12[COMMON] unsigned char 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      unsigned char 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2, status,0, pclath, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 200/100
  2057 ;;		On exit  : 300/100
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2060 ;;      Params:         0       0       0       0       0
  2061 ;;      Locals:         2       0       0       0       0
  2062 ;;      Temps:          2       0       0       0       0
  2063 ;;      Totals:         4       0       0       0       0
  2064 ;;Total ram usage:        4 bytes
  2065 ;; Hardware stack levels used: 1
  2066 ;; Hardware stack levels required when called: 2
  2067 ;; This function calls:
  2068 ;;		_I2C_Master_Read
  2069 ;;		_I2C_Master_RepeatedStart
  2070 ;;		_I2C_Master_Start
  2071 ;;		_I2C_Master_Stop
  2072 ;;		_I2C_Master_Write
  2073 ;;		_convertir
  2074 ;; This function is called by:
  2075 ;;		_main
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079     050F                     _leer_x:	
  2080                           ;psect for function _leer_x
  2081                           
  2082                           
  2083                           ;incstack = 0
  2084                           ; Regs used in _leer_x: [wreg+status,2+status,0+pclath+cstack]
  2085                           ;leer_x@address stored from wreg
  2086     050F  00FB               	movwf	leer_x@address
  2087                           
  2088                           ;DS3231.c: 25:     uint8_t valor;;DS3231.c: 26:     I2C_Master_Start();
  2089     0510  120A  118A  225B  120A  118A  	fcall	_I2C_Master_Start
  2090                           
  2091                           ;DS3231.c: 27:     I2C_Master_Write(0xD0);
  2092     0515  30D0               	movlw	208
  2093     0516  00F0               	movwf	I2C_Master_Write@d
  2094     0517  3000               	movlw	0
  2095     0518  00F1               	movwf	I2C_Master_Write@d+1
  2096     0519  120A  118A  226A  120A  118A  	fcall	_I2C_Master_Write
  2097                           
  2098                           ;DS3231.c: 28:     I2C_Master_Write(address);
  2099     051E  087B               	movf	leer_x@address,w
  2100     051F  00F9               	movwf	??_leer_x
  2101     0520  01FA               	clrf	??_leer_x+1
  2102     0521  0879               	movf	??_leer_x,w
  2103     0522  00F0               	movwf	I2C_Master_Write@d
  2104     0523  087A               	movf	??_leer_x+1,w
  2105     0524  00F1               	movwf	I2C_Master_Write@d+1
  2106     0525  120A  118A  226A  120A  118A  	fcall	_I2C_Master_Write
  2107                           
  2108                           ;DS3231.c: 29:     I2C_Master_RepeatedStart();
  2109     052A  120A  118A  2265  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2110                           
  2111                           ;DS3231.c: 30:     I2C_Master_Write(0xD1);
  2112     052F  30D1               	movlw	209
  2113     0530  00F0               	movwf	I2C_Master_Write@d
  2114     0531  3000               	movlw	0
  2115     0532  00F1               	movwf	I2C_Master_Write@d+1
  2116     0533  120A  118A  226A  120A  118A  	fcall	_I2C_Master_Write
  2117                           
  2118                           ;DS3231.c: 31:     valor = I2C_Master_Read(0);
  2119     0538  3000               	movlw	0
  2120     0539  00F0               	movwf	I2C_Master_Read@a
  2121     053A  00F1               	movwf	I2C_Master_Read@a+1
  2122     053B  120A  118A  2348  120A  118A  	fcall	_I2C_Master_Read
  2123     0540  0870               	movf	?_I2C_Master_Read,w
  2124     0541  00FC               	movwf	leer_x@valor
  2125                           
  2126                           ;DS3231.c: 32:     I2C_Master_Stop();
  2127     0542  120A  118A  2260  120A  118A  	fcall	_I2C_Master_Stop
  2128                           
  2129                           ;DS3231.c: 33:     valor = convertir(valor);
  2130     0547  087C               	movf	leer_x@valor,w
  2131     0548  120A  118A  22CD   	fcall	_convertir
  2132     054B  00FC               	movwf	leer_x@valor
  2133                           
  2134                           ;DS3231.c: 35:     return valor;
  2135     054C  087C               	movf	leer_x@valor,w
  2136     054D  0008               	return
  2137     054E                     __end_of_leer_x:
  2138                           
  2139                           	psect	text6
  2140     02CD                     __ptext6:	
  2141 ;; *************** function _convertir *****************
  2142 ;; Defined at:
  2143 ;;		line 5 in file "DS3231.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  valor           1    wreg     unsigned char 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  valor           1    8[COMMON] unsigned char 
  2148 ;;  conversion      1    7[COMMON] unsigned char 
  2149 ;;  decena          1    6[COMMON] unsigned char 
  2150 ;;  unidad          1    5[COMMON] unsigned char 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      unsigned char 
  2153 ;; Registers used:
  2154 ;;		wreg, status,2, status,0, pclath, cstack
  2155 ;; Tracked objects:
  2156 ;;		On entry : 300/100
  2157 ;;		On exit  : 300/100
  2158 ;;		Unchanged: 300/0
  2159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2160 ;;      Params:         0       0       0       0       0
  2161 ;;      Locals:         4       0       0       0       0
  2162 ;;      Temps:          1       0       0       0       0
  2163 ;;      Totals:         5       0       0       0       0
  2164 ;;Total ram usage:        5 bytes
  2165 ;; Hardware stack levels used: 1
  2166 ;; Hardware stack levels required when called: 1
  2167 ;; This function calls:
  2168 ;;		___bmul
  2169 ;; This function is called by:
  2170 ;;		_leer_x
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174     02CD                     _convertir:	
  2175                           ;psect for function _convertir
  2176                           
  2177                           
  2178                           ;incstack = 0
  2179                           ; Regs used in _convertir: [wreg+status,2+status,0+pclath+cstack]
  2180                           ;convertir@valor stored from wreg
  2181     02CD  00F8               	movwf	convertir@valor
  2182                           
  2183                           ;DS3231.c: 6:     uint8_t unidad;;DS3231.c: 7:     uint8_t decena;;DS3231.c: 8:     uint
      +                          8_t conversion;;DS3231.c: 9:     unidad = valor & 0x0F;
  2184     02CE  0878               	movf	convertir@valor,w
  2185     02CF  390F               	andlw	15
  2186     02D0  00F5               	movwf	convertir@unidad
  2187                           
  2188                           ;DS3231.c: 10:     decena = ((valor & 0xF0) >> 4);
  2189     02D1  0878               	movf	convertir@valor,w
  2190     02D2  00F4               	movwf	??_convertir
  2191     02D3  3004               	movlw	4
  2192     02D4                     u1165:
  2193     02D4  1003               	clrc
  2194     02D5  0CF4               	rrf	??_convertir,f
  2195     02D6  3EFF               	addlw	-1
  2196     02D7  1D03               	skipz
  2197     02D8  2AD4               	goto	u1165
  2198     02D9  0874               	movf	??_convertir,w
  2199     02DA  390F               	andlw	15
  2200     02DB  00F6               	movwf	convertir@decena
  2201                           
  2202                           ;DS3231.c: 11:     conversion = unidad+(decena*10);
  2203     02DC  300A               	movlw	10
  2204     02DD  00F0               	movwf	___bmul@multiplicand
  2205     02DE  0876               	movf	convertir@decena,w
  2206     02DF  120A  118A  228C   	fcall	___bmul
  2207     02E2  0775               	addwf	convertir@unidad,w
  2208     02E3  00F7               	movwf	convertir@conversion
  2209                           
  2210                           ;DS3231.c: 12:     return conversion;
  2211     02E4  0877               	movf	convertir@conversion,w
  2212     02E5  0008               	return
  2213     02E6                     __end_of_convertir:
  2214                           
  2215                           	psect	text7
  2216     028C                     __ptext7:	
  2217 ;; *************** function ___bmul *****************
  2218 ;; Defined at:
  2219 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  multiplier      1    wreg     unsigned char 
  2222 ;;  multiplicand    1    0[COMMON] unsigned char 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  multiplier      1    3[COMMON] unsigned char 
  2225 ;;  product         1    2[COMMON] unsigned char 
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      unsigned char 
  2228 ;; Registers used:
  2229 ;;		wreg, status,2, status,0
  2230 ;; Tracked objects:
  2231 ;;		On entry : 300/100
  2232 ;;		On exit  : 300/100
  2233 ;;		Unchanged: 300/0
  2234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2235 ;;      Params:         1       0       0       0       0
  2236 ;;      Locals:         2       0       0       0       0
  2237 ;;      Temps:          1       0       0       0       0
  2238 ;;      Totals:         4       0       0       0       0
  2239 ;;Total ram usage:        4 bytes
  2240 ;; Hardware stack levels used: 1
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_convertir
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248     028C                     ___bmul:	
  2249                           ;psect for function ___bmul
  2250                           
  2251                           
  2252                           ;incstack = 0
  2253                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2254                           ;___bmul@multiplier stored from wreg
  2255     028C  00F3               	movwf	___bmul@multiplier
  2256     028D  01F2               	clrf	___bmul@product
  2257     028E                     l1564:
  2258     028E  1C73               	btfss	___bmul@multiplier,0
  2259     028F  2A94               	goto	l1568
  2260     0290  0870               	movf	___bmul@multiplicand,w
  2261     0291  00F1               	movwf	??___bmul
  2262     0292  0871               	movf	??___bmul,w
  2263     0293  07F2               	addwf	___bmul@product,f
  2264     0294                     l1568:
  2265     0294  1003               	clrc
  2266     0295  0DF0               	rlf	___bmul@multiplicand,f
  2267     0296  1003               	clrc
  2268     0297  0CF3               	rrf	___bmul@multiplier,f
  2269     0298  0873               	movf	___bmul@multiplier,w
  2270     0299  1D03               	btfss	3,2
  2271     029A  2A8E               	goto	l1564
  2272     029B  0872               	movf	___bmul@product,w
  2273     029C  0008               	return
  2274     029D                     __end_of___bmul:
  2275                           
  2276                           	psect	text8
  2277     0265                     __ptext8:	
  2278 ;; *************** function _I2C_Master_RepeatedStart *****************
  2279 ;; Defined at:
  2280 ;;		line 47 in file "I2C.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;		None
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;		None
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      void 
  2287 ;; Registers used:
  2288 ;;		wreg, status,2, status,0, pclath, cstack
  2289 ;; Tracked objects:
  2290 ;;		On entry : 300/0
  2291 ;;		On exit  : 300/100
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2294 ;;      Params:         0       0       0       0       0
  2295 ;;      Locals:         0       0       0       0       0
  2296 ;;      Temps:          0       0       0       0       0
  2297 ;;      Totals:         0       0       0       0       0
  2298 ;;Total ram usage:        0 bytes
  2299 ;; Hardware stack levels used: 1
  2300 ;; Hardware stack levels required when called: 1
  2301 ;; This function calls:
  2302 ;;		_I2C_Master_Wait
  2303 ;; This function is called by:
  2304 ;;		_leer_x
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308     0265                     _I2C_Master_RepeatedStart:	
  2309                           ;psect for function _I2C_Master_RepeatedStart
  2310                           
  2311                           
  2312                           ;I2C.c: 49:     I2C_Master_Wait();
  2313                           
  2314                           ;incstack = 0
  2315                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2316     0265  120A  118A  2271   	fcall	_I2C_Master_Wait
  2317                           
  2318                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2319     0268  1491               	bsf	17,1	;volatile
  2320     0269  0008               	return
  2321     026A                     __end_of_I2C_Master_RepeatedStart:
  2322                           
  2323                           	psect	text9
  2324     0462                     __ptext9:	
  2325 ;; *************** function _leer_temperatura *****************
  2326 ;; Defined at:
  2327 ;;		line 219 in file "main.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;		None
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;		None
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      void 
  2334 ;; Registers used:
  2335 ;;		wreg, status,2, status,0, pclath, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 200/100
  2338 ;;		On exit  : 300/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2341 ;;      Params:         0       0       0       0       0
  2342 ;;      Locals:         0       0       0       0       0
  2343 ;;      Temps:          0       2       0       0       0
  2344 ;;      Totals:         0       2       0       0       0
  2345 ;;Total ram usage:        2 bytes
  2346 ;; Hardware stack levels used: 1
  2347 ;; Hardware stack levels required when called: 4
  2348 ;; This function calls:
  2349 ;;		_Escribir_dato
  2350 ;;		_I2C_Master_Read
  2351 ;;		_I2C_Master_Start
  2352 ;;		_I2C_Master_Stop
  2353 ;;		_I2C_Master_Write
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359     0462                     _leer_temperatura:	
  2360                           ;psect for function _leer_temperatura
  2361                           
  2362                           
  2363                           ;main.c: 220:     I2C_Master_Start();
  2364                           
  2365                           ;incstack = 0
  2366                           ; Regs used in _leer_temperatura: [wreg+status,2+status,0+pclath+cstack]
  2367     0462  120A  118A  225B  120A  118A  	fcall	_I2C_Master_Start
  2368                           
  2369                           ;main.c: 221:     I2C_Master_Write(0xa1);
  2370     0467  30A1               	movlw	161
  2371     0468  00F0               	movwf	I2C_Master_Write@d
  2372     0469  3000               	movlw	0
  2373     046A  00F1               	movwf	I2C_Master_Write@d+1
  2374     046B  120A  118A  226A  120A  118A  	fcall	_I2C_Master_Write
  2375                           
  2376                           ;main.c: 222:     tempint = I2C_Master_Read(0);
  2377     0470  3000               	movlw	0
  2378     0471  00F0               	movwf	I2C_Master_Read@a
  2379     0472  00F1               	movwf	I2C_Master_Read@a+1
  2380     0473  120A  118A  2348  120A  118A  	fcall	_I2C_Master_Read
  2381     0478  0870               	movf	?_I2C_Master_Read,w
  2382     0479  1283               	bcf	3,5	;RP0=0, select bank0
  2383     047A  00B0               	movwf	_tempint
  2384                           
  2385                           ;main.c: 224:     I2C_Master_Stop();
  2386     047B  120A  118A  2260  120A  118A  	fcall	_I2C_Master_Stop
  2387                           
  2388                           ;main.c: 225:     _delay((unsigned long)((30)*(8000000/4000.0)));
  2389     0480  304E               	movlw	78
  2390     0481  1283               	bcf	3,5	;RP0=0, select bank0
  2391     0482  1303               	bcf	3,6	;RP1=0, select bank0
  2392     0483  00B5               	movwf	??_leer_temperatura+1
  2393     0484  30EA               	movlw	234
  2394     0485  00B4               	movwf	??_leer_temperatura
  2395     0486                     u1497:
  2396     0486  0BB4               	decfsz	??_leer_temperatura,f
  2397     0487  2C86               	goto	u1497
  2398     0488  0BB5               	decfsz	??_leer_temperatura+1,f
  2399     0489  2C86               	goto	u1497
  2400     048A  0000               	nop
  2401                           
  2402                           ;main.c: 226:     Escribir_dato(tempint, 4, 2);
  2403     048B  3004               	movlw	4
  2404     048C  00FC               	movwf	Escribir_dato@posx
  2405     048D  3002               	movlw	2
  2406     048E  00FD               	movwf	Escribir_dato@posy
  2407     048F  1283               	bcf	3,5	;RP0=0, select bank0
  2408     0490  1303               	bcf	3,6	;RP1=0, select bank0
  2409     0491  0830               	movf	_tempint,w
  2410     0492  120A  118A  254E   	fcall	_Escribir_dato
  2411     0495  0008               	return
  2412     0496                     __end_of_leer_temperatura:
  2413                           
  2414                           	psect	text10
  2415     0348                     __ptext10:	
  2416 ;; *************** function _I2C_Master_Read *****************
  2417 ;; Defined at:
  2418 ;;		line 74 in file "I2C.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  a               2    0[COMMON] unsigned short 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  temp            2    4[COMMON] unsigned short 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  2    0[COMMON] unsigned short 
  2425 ;; Registers used:
  2426 ;;		wreg, status,2, status,0, pclath, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 300/0
  2429 ;;		On exit  : 300/100
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2432 ;;      Params:         2       0       0       0       0
  2433 ;;      Locals:         2       0       0       0       0
  2434 ;;      Temps:          2       0       0       0       0
  2435 ;;      Totals:         6       0       0       0       0
  2436 ;;Total ram usage:        6 bytes
  2437 ;; Hardware stack levels used: 1
  2438 ;; Hardware stack levels required when called: 1
  2439 ;; This function calls:
  2440 ;;		_I2C_Master_Wait
  2441 ;; This function is called by:
  2442 ;;		_leer_temperatura
  2443 ;;		_leer_x
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447     0348                     _I2C_Master_Read:	
  2448                           ;psect for function _I2C_Master_Read
  2449                           
  2450                           
  2451                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2452                           
  2453                           ;incstack = 0
  2454                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2455     0348  120A  118A  2271  120A  118A  	fcall	_I2C_Master_Wait
  2456                           
  2457                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2458     034D  1591               	bsf	17,3	;volatile
  2459                           
  2460                           ;I2C.c: 79:     I2C_Master_Wait();
  2461     034E  120A  118A  2271  120A  118A  	fcall	_I2C_Master_Wait
  2462                           
  2463                           ;I2C.c: 80:     temp = SSPBUF;
  2464     0353  1283               	bcf	3,5	;RP0=0, select bank0
  2465     0354  0813               	movf	19,w	;volatile
  2466     0355  00F2               	movwf	??_I2C_Master_Read
  2467     0356  01F3               	clrf	??_I2C_Master_Read+1
  2468     0357  0872               	movf	??_I2C_Master_Read,w
  2469     0358  00F4               	movwf	I2C_Master_Read@temp
  2470     0359  0873               	movf	??_I2C_Master_Read+1,w
  2471     035A  00F5               	movwf	I2C_Master_Read@temp+1
  2472                           
  2473                           ;I2C.c: 81:     I2C_Master_Wait();
  2474     035B  120A  118A  2271  120A  118A  	fcall	_I2C_Master_Wait
  2475                           
  2476                           ;I2C.c: 82:     if(a == 1){
  2477     0360  0370               	decf	I2C_Master_Read@a,w
  2478     0361  0471               	iorwf	I2C_Master_Read@a+1,w
  2479     0362  1D03               	btfss	3,2
  2480     0363  2B66               	goto	l192
  2481                           
  2482                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2483     0364  1291               	bcf	17,5	;volatile
  2484                           
  2485                           ;I2C.c: 84:     }else{
  2486     0365  2B67               	goto	l193
  2487     0366                     l192:
  2488                           
  2489                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2490     0366  1691               	bsf	17,5	;volatile
  2491     0367                     l193:	
  2492                           ;I2C.c: 86:     }
  2493                           
  2494                           
  2495                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2496     0367  1611               	bsf	17,4	;volatile
  2497                           
  2498                           ;I2C.c: 88:     return temp;
  2499     0368  0875               	movf	I2C_Master_Read@temp+1,w
  2500     0369  00F1               	movwf	?_I2C_Master_Read+1
  2501     036A  0874               	movf	I2C_Master_Read@temp,w
  2502     036B  00F0               	movwf	?_I2C_Master_Read
  2503     036C  0008               	return
  2504     036D                     __end_of_I2C_Master_Read:
  2505                           
  2506                           	psect	text11
  2507     054E                     __ptext11:	
  2508 ;; *************** function _Escribir_dato *****************
  2509 ;; Defined at:
  2510 ;;		line 210 in file "main.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;  dato            1    wreg     unsigned char 
  2513 ;;  posx            1   12[COMMON] unsigned char 
  2514 ;;  posy            1   13[COMMON] unsigned char 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  dato            1    0[BANK0 ] unsigned char 
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg, status,2, status,0, pclath, cstack
  2521 ;; Tracked objects:
  2522 ;;		On entry : 300/0
  2523 ;;		On exit  : 300/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2526 ;;      Params:         2       0       0       0       0
  2527 ;;      Locals:         0       1       0       0       0
  2528 ;;      Temps:          0       0       0       0       0
  2529 ;;      Totals:         2       1       0       0       0
  2530 ;;Total ram usage:        3 bytes
  2531 ;; Hardware stack levels used: 1
  2532 ;; Hardware stack levels required when called: 3
  2533 ;; This function calls:
  2534 ;;		_Lcd_Set_Cursor
  2535 ;;		_Lcd_Write_Char
  2536 ;;		_descomponer
  2537 ;;		_inttochar
  2538 ;; This function is called by:
  2539 ;;		_main
  2540 ;;		_leer_temperatura
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544     054E                     _Escribir_dato:	
  2545                           ;psect for function _Escribir_dato
  2546                           
  2547                           
  2548                           ;incstack = 0
  2549                           ; Regs used in _Escribir_dato: [wreg+status,2+status,0+pclath+cstack]
  2550                           ;Escribir_dato@dato stored from wreg
  2551     054E  00B3               	movwf	Escribir_dato@dato
  2552                           
  2553                           ;main.c: 211:     Lcd_Set_Cursor(posy, posx+1);
  2554     054F  087C               	movf	Escribir_dato@posx,w
  2555     0550  3E01               	addlw	1
  2556     0551  00F4               	movwf	Lcd_Set_Cursor@b
  2557     0552  087D               	movf	Escribir_dato@posy,w
  2558     0553  120A  118A  24D1  120A  118A  	fcall	_Lcd_Set_Cursor
  2559                           
  2560                           ;main.c: 212:     unidad = inttochar(descomponer(0, dato));
  2561     0558  3000               	movlw	0
  2562     0559  00F6               	movwf	descomponer@pos
  2563     055A  00F7               	movwf	descomponer@pos+1
  2564     055B  1283               	bcf	3,5	;RP0=0, select bank0
  2565     055C  1303               	bcf	3,6	;RP1=0, select bank0
  2566     055D  0833               	movf	Escribir_dato@dato,w
  2567     055E  00F8               	movwf	descomponer@num
  2568     055F  120A  118A  242F  120A  118A  	fcall	_descomponer
  2569     0564  120A  118A  2496  120A  118A  	fcall	_inttochar
  2570     0569  1283               	bcf	3,5	;RP0=0, select bank0
  2571     056A  1303               	bcf	3,6	;RP1=0, select bank0
  2572     056B  00B2               	movwf	_unidad
  2573                           
  2574                           ;main.c: 213:     Lcd_Write_Char(unidad);
  2575     056C  0832               	movf	_unidad,w
  2576     056D  120A  118A  239A  120A  118A  	fcall	_Lcd_Write_Char
  2577                           
  2578                           ;main.c: 214:     Lcd_Set_Cursor(posy, posx);
  2579     0572  087C               	movf	Escribir_dato@posx,w
  2580     0573  00F4               	movwf	Lcd_Set_Cursor@b
  2581     0574  087D               	movf	Escribir_dato@posy,w
  2582     0575  120A  118A  24D1  120A  118A  	fcall	_Lcd_Set_Cursor
  2583                           
  2584                           ;main.c: 215:     decena = inttochar(descomponer(1, dato));
  2585     057A  3001               	movlw	1
  2586     057B  00F6               	movwf	descomponer@pos
  2587     057C  3000               	movlw	0
  2588     057D  00F7               	movwf	descomponer@pos+1
  2589     057E  1283               	bcf	3,5	;RP0=0, select bank0
  2590     057F  1303               	bcf	3,6	;RP1=0, select bank0
  2591     0580  0833               	movf	Escribir_dato@dato,w
  2592     0581  00F8               	movwf	descomponer@num
  2593     0582  120A  118A  242F  120A  118A  	fcall	_descomponer
  2594     0587  120A  118A  2496  120A  118A  	fcall	_inttochar
  2595     058C  1283               	bcf	3,5	;RP0=0, select bank0
  2596     058D  1303               	bcf	3,6	;RP1=0, select bank0
  2597     058E  00B1               	movwf	_decena
  2598                           
  2599                           ;main.c: 216:     Lcd_Write_Char(decena);
  2600     058F  0831               	movf	_decena,w
  2601     0590  120A  118A  239A   	fcall	_Lcd_Write_Char
  2602     0593  0008               	return
  2603     0594                     __end_of_Escribir_dato:
  2604                           
  2605                           	psect	text12
  2606     0496                     __ptext12:	
  2607 ;; *************** function _inttochar *****************
  2608 ;; Defined at:
  2609 ;;		line 12 in file "conversiones.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  num             1    wreg     unsigned char 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;  num             1    0[COMMON] unsigned char 
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1    wreg      unsigned char 
  2616 ;; Registers used:
  2617 ;;		wreg, status,2, status,0
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2623 ;;      Params:         0       0       0       0       0
  2624 ;;      Locals:         1       0       0       0       0
  2625 ;;      Temps:          0       0       0       0       0
  2626 ;;      Totals:         1       0       0       0       0
  2627 ;;Total ram usage:        1 bytes
  2628 ;; Hardware stack levels used: 1
  2629 ;; This function calls:
  2630 ;;		Nothing
  2631 ;; This function is called by:
  2632 ;;		_Escribir_dato
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636     0496                     _inttochar:	
  2637                           ;psect for function _inttochar
  2638                           
  2639                           
  2640                           ;incstack = 0
  2641                           ; Regs used in _inttochar: [wreg+status,2+status,0]
  2642                           ;inttochar@num stored from wreg
  2643     0496  00F0               	movwf	inttochar@num
  2644                           
  2645                           ;conversiones.c: 13:     if(num == 0){
  2646     0497  0870               	movf	inttochar@num,w
  2647     0498  1D03               	btfss	3,2
  2648     0499  2C9C               	goto	l1488
  2649                           
  2650                           ;conversiones.c: 14:         return '0';
  2651     049A  3030               	movlw	48
  2652     049B  0008               	return
  2653     049C                     l1488:
  2654     049C  0370               	decf	inttochar@num,w
  2655     049D  1D03               	btfss	3,2
  2656     049E  2CA1               	goto	l1496
  2657                           
  2658                           ;conversiones.c: 17:         return '1';
  2659     049F  3031               	movlw	49
  2660     04A0  0008               	return
  2661     04A1                     l1496:
  2662     04A1  3002               	movlw	2
  2663     04A2  0670               	xorwf	inttochar@num,w
  2664     04A3  1D03               	btfss	3,2
  2665     04A4  2CA7               	goto	l1504
  2666                           
  2667                           ;conversiones.c: 20:         return '2';
  2668     04A5  3032               	movlw	50
  2669     04A6  0008               	return
  2670     04A7                     l1504:
  2671     04A7  3003               	movlw	3
  2672     04A8  0670               	xorwf	inttochar@num,w
  2673     04A9  1D03               	btfss	3,2
  2674     04AA  2CAD               	goto	l1512
  2675                           
  2676                           ;conversiones.c: 23:         return '3';
  2677     04AB  3033               	movlw	51
  2678     04AC  0008               	return
  2679     04AD                     l1512:
  2680     04AD  3004               	movlw	4
  2681     04AE  0670               	xorwf	inttochar@num,w
  2682     04AF  1D03               	btfss	3,2
  2683     04B0  2CB3               	goto	l1520
  2684                           
  2685                           ;conversiones.c: 26:         return '4';
  2686     04B1  3034               	movlw	52
  2687     04B2  0008               	return
  2688     04B3                     l1520:
  2689     04B3  3005               	movlw	5
  2690     04B4  0670               	xorwf	inttochar@num,w
  2691     04B5  1D03               	btfss	3,2
  2692     04B6  2CB9               	goto	l1528
  2693                           
  2694                           ;conversiones.c: 29:         return '5';
  2695     04B7  3035               	movlw	53
  2696     04B8  0008               	return
  2697     04B9                     l1528:
  2698     04B9  3006               	movlw	6
  2699     04BA  0670               	xorwf	inttochar@num,w
  2700     04BB  1D03               	btfss	3,2
  2701     04BC  2CBF               	goto	l1536
  2702                           
  2703                           ;conversiones.c: 32:         return '6';
  2704     04BD  3036               	movlw	54
  2705     04BE  0008               	return
  2706     04BF                     l1536:
  2707     04BF  3007               	movlw	7
  2708     04C0  0670               	xorwf	inttochar@num,w
  2709     04C1  1D03               	btfss	3,2
  2710     04C2  2CC5               	goto	l1544
  2711                           
  2712                           ;conversiones.c: 35:         return '7';
  2713     04C3  3037               	movlw	55
  2714     04C4  0008               	return
  2715     04C5                     l1544:
  2716     04C5  3008               	movlw	8
  2717     04C6  0670               	xorwf	inttochar@num,w
  2718     04C7  1D03               	btfss	3,2
  2719     04C8  2CCB               	goto	l1552
  2720                           
  2721                           ;conversiones.c: 38:         return '8';
  2722     04C9  3038               	movlw	56
  2723     04CA  0008               	return
  2724     04CB                     l1552:
  2725     04CB  3009               	movlw	9
  2726     04CC  0670               	xorwf	inttochar@num,w
  2727     04CD  1D03               	btfss	3,2
  2728     04CE  0008               	return
  2729                           
  2730                           ;conversiones.c: 41:         return '9';
  2731     04CF  3039               	movlw	57
  2732     04D0  0008               	return
  2733     04D1                     __end_of_inttochar:
  2734                           
  2735                           	psect	text13
  2736     042F                     __ptext13:	
  2737 ;; *************** function _descomponer *****************
  2738 ;; Defined at:
  2739 ;;		line 45 in file "conversiones.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  pos             2    6[COMMON] int 
  2742 ;;  num             1    8[COMMON] unsigned char 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;  dec             1   11[COMMON] unsigned char 
  2745 ;;  uni             1   10[COMMON] unsigned char 
  2746 ;;  cent            1    9[COMMON] unsigned char 
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      unsigned char 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0, pclath, cstack
  2751 ;; Tracked objects:
  2752 ;;		On entry : 300/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2756 ;;      Params:         3       0       0       0       0
  2757 ;;      Locals:         3       0       0       0       0
  2758 ;;      Temps:          0       0       0       0       0
  2759 ;;      Totals:         6       0       0       0       0
  2760 ;;Total ram usage:        6 bytes
  2761 ;; Hardware stack levels used: 1
  2762 ;; Hardware stack levels required when called: 1
  2763 ;; This function calls:
  2764 ;;		___lbdiv
  2765 ;;		___lbmod
  2766 ;; This function is called by:
  2767 ;;		_Escribir_dato
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771     042F                     _descomponer:	
  2772                           ;psect for function _descomponer
  2773                           
  2774                           
  2775                           ;conversiones.c: 46:     uint8_t cent;;conversiones.c: 47:     uint8_t dec;;conversiones
      +                          .c: 48:     uint8_t uni;;conversiones.c: 49:     cent = (num/100);
  2776                           
  2777                           ;incstack = 0
  2778                           ; Regs used in _descomponer: [wreg+status,2+status,0+pclath+cstack]
  2779     042F  3064               	movlw	100
  2780     0430  00F0               	movwf	___lbdiv@divisor
  2781     0431  0878               	movf	descomponer@num,w
  2782     0432  120A  118A  2305  120A  118A  	fcall	___lbdiv
  2783     0437  00F9               	movwf	descomponer@cent
  2784                           
  2785                           ;conversiones.c: 50:     dec = (num%100);
  2786     0438  3064               	movlw	100
  2787     0439  00F0               	movwf	___lbmod@divisor
  2788     043A  0878               	movf	descomponer@num,w
  2789     043B  120A  118A  22E6  120A  118A  	fcall	___lbmod
  2790     0440  00FB               	movwf	descomponer@dec
  2791                           
  2792                           ;conversiones.c: 51:     uni = (dec%10);
  2793     0441  300A               	movlw	10
  2794     0442  00F0               	movwf	___lbmod@divisor
  2795     0443  087B               	movf	descomponer@dec,w
  2796     0444  120A  118A  22E6  120A  118A  	fcall	___lbmod
  2797     0449  00FA               	movwf	descomponer@uni
  2798                           
  2799                           ;conversiones.c: 52:     if(pos == 2){
  2800     044A  3002               	movlw	2
  2801     044B  0676               	xorwf	descomponer@pos,w
  2802     044C  0477               	iorwf	descomponer@pos+1,w
  2803     044D  1D03               	btfss	3,2
  2804     044E  2C51               	goto	l1466
  2805                           
  2806                           ;conversiones.c: 53:         return cent;
  2807     044F  0879               	movf	descomponer@cent,w
  2808     0450  0008               	return
  2809     0451                     l1466:
  2810     0451  0376               	decf	descomponer@pos,w
  2811     0452  0477               	iorwf	descomponer@pos+1,w
  2812     0453  1D03               	btfss	3,2
  2813     0454  2C5C               	goto	l1474
  2814                           
  2815                           ;conversiones.c: 56:         return (dec/10);
  2816     0455  300A               	movlw	10
  2817     0456  00F0               	movwf	___lbdiv@divisor
  2818     0457  087B               	movf	descomponer@dec,w
  2819     0458  120A  118A  2305   	fcall	___lbdiv
  2820     045B  0008               	return
  2821     045C                     l1474:
  2822     045C  0876               	movf	descomponer@pos,w
  2823     045D  0477               	iorwf	descomponer@pos+1,w
  2824     045E  1D03               	btfss	3,2
  2825     045F  0008               	return
  2826                           
  2827                           ;conversiones.c: 59:         return uni;
  2828     0460  087A               	movf	descomponer@uni,w
  2829     0461  0008               	return
  2830     0462                     __end_of_descomponer:
  2831                           
  2832                           	psect	text14
  2833     02E6                     __ptext14:	
  2834 ;; *************** function ___lbmod *****************
  2835 ;; Defined at:
  2836 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  dividend        1    wreg     unsigned char 
  2839 ;;  divisor         1    0[COMMON] unsigned char 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  dividend        1    3[COMMON] unsigned char 
  2842 ;;  rem             1    5[COMMON] unsigned char 
  2843 ;;  counter         1    4[COMMON] unsigned char 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      unsigned char 
  2846 ;; Registers used:
  2847 ;;		wreg, status,2, status,0
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2853 ;;      Params:         1       0       0       0       0
  2854 ;;      Locals:         3       0       0       0       0
  2855 ;;      Temps:          2       0       0       0       0
  2856 ;;      Totals:         6       0       0       0       0
  2857 ;;Total ram usage:        6 bytes
  2858 ;; Hardware stack levels used: 1
  2859 ;; This function calls:
  2860 ;;		Nothing
  2861 ;; This function is called by:
  2862 ;;		_descomponer
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866     02E6                     ___lbmod:	
  2867                           ;psect for function ___lbmod
  2868                           
  2869                           
  2870                           ;incstack = 0
  2871                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  2872                           ;___lbmod@dividend stored from wreg
  2873     02E6  00F3               	movwf	___lbmod@dividend
  2874     02E7  3008               	movlw	8
  2875     02E8  00F4               	movwf	___lbmod@counter
  2876     02E9  01F5               	clrf	___lbmod@rem
  2877     02EA                     l1404:
  2878     02EA  0873               	movf	___lbmod@dividend,w
  2879     02EB  00F1               	movwf	??___lbmod
  2880     02EC  3007               	movlw	7
  2881     02ED                     u825:
  2882     02ED  1003               	clrc
  2883     02EE  0CF1               	rrf	??___lbmod,f
  2884     02EF  3EFF               	addlw	-1
  2885     02F0  1D03               	skipz
  2886     02F1  2AED               	goto	u825
  2887     02F2  0875               	movf	___lbmod@rem,w
  2888     02F3  00F2               	movwf	??___lbmod+1
  2889     02F4  0772               	addwf	??___lbmod+1,w
  2890     02F5  0471               	iorwf	??___lbmod,w
  2891     02F6  00F5               	movwf	___lbmod@rem
  2892     02F7  1003               	clrc
  2893     02F8  0DF3               	rlf	___lbmod@dividend,f
  2894     02F9  0870               	movf	___lbmod@divisor,w
  2895     02FA  0275               	subwf	___lbmod@rem,w
  2896     02FB  1C03               	skipc
  2897     02FC  2AFF               	goto	l582
  2898     02FD  0870               	movf	___lbmod@divisor,w
  2899     02FE  02F5               	subwf	___lbmod@rem,f
  2900     02FF                     l582:
  2901     02FF  3001               	movlw	1
  2902     0300  02F4               	subwf	___lbmod@counter,f
  2903     0301  1D03               	btfss	3,2
  2904     0302  2AEA               	goto	l1404
  2905     0303  0875               	movf	___lbmod@rem,w
  2906     0304  0008               	return
  2907     0305                     __end_of___lbmod:
  2908                           
  2909                           	psect	text15
  2910     0305                     __ptext15:	
  2911 ;; *************** function ___lbdiv *****************
  2912 ;; Defined at:
  2913 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  dividend        1    wreg     unsigned char 
  2916 ;;  divisor         1    0[COMMON] unsigned char 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  dividend        1    2[COMMON] unsigned char 
  2919 ;;  quotient        1    4[COMMON] unsigned char 
  2920 ;;  counter         1    3[COMMON] unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      unsigned char 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2, status,0
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2930 ;;      Params:         1       0       0       0       0
  2931 ;;      Locals:         3       0       0       0       0
  2932 ;;      Temps:          1       0       0       0       0
  2933 ;;      Totals:         5       0       0       0       0
  2934 ;;Total ram usage:        5 bytes
  2935 ;; Hardware stack levels used: 1
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		_descomponer
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943     0305                     ___lbdiv:	
  2944                           ;psect for function ___lbdiv
  2945                           
  2946                           
  2947                           ;incstack = 0
  2948                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  2949                           ;___lbdiv@dividend stored from wreg
  2950     0305  00F2               	movwf	___lbdiv@dividend
  2951     0306  01F4               	clrf	___lbdiv@quotient
  2952     0307  0870               	movf	___lbdiv@divisor,w
  2953     0308  1903               	btfsc	3,2
  2954     0309  2B24               	goto	l1396
  2955     030A  01F3               	clrf	___lbdiv@counter
  2956     030B  0AF3               	incf	___lbdiv@counter,f
  2957     030C                     l1384:
  2958     030C  1BF0               	btfsc	___lbdiv@divisor,7
  2959     030D  2B15               	goto	l1386
  2960     030E  1003               	clrc
  2961     030F  0DF0               	rlf	___lbdiv@divisor,f
  2962     0310  3001               	movlw	1
  2963     0311  00F1               	movwf	??___lbdiv
  2964     0312  0871               	movf	??___lbdiv,w
  2965     0313  07F3               	addwf	___lbdiv@counter,f
  2966     0314  2B0C               	goto	l1384
  2967     0315                     l1386:
  2968     0315  1003               	clrc
  2969     0316  0DF4               	rlf	___lbdiv@quotient,f
  2970     0317  0870               	movf	___lbdiv@divisor,w
  2971     0318  0272               	subwf	___lbdiv@dividend,w
  2972     0319  1C03               	skipc
  2973     031A  2B1F               	goto	L1
  2974     031B  0870               	movf	___lbdiv@divisor,w
  2975     031C  02F2               	subwf	___lbdiv@dividend,f
  2976     031D  1474               	bsf	___lbdiv@quotient,0
  2977     031E  1003               	clrc
  2978     031F                     L1:
  2979     031F  0CF0               	rrf	___lbdiv@divisor,f
  2980     0320  3001               	movlw	1
  2981     0321  02F3               	subwf	___lbdiv@counter,f
  2982     0322  1D03               	btfss	3,2
  2983     0323  2B15               	goto	l1386
  2984     0324                     l1396:
  2985     0324  0874               	movf	___lbdiv@quotient,w
  2986     0325  0008               	return
  2987     0326                     __end_of___lbdiv:
  2988                           
  2989                           	psect	text16
  2990     04D1                     __ptext16:	
  2991 ;; *************** function _Lcd_Set_Cursor *****************
  2992 ;; Defined at:
  2993 ;;		line 48 in file "LCD.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  a               1    wreg     unsigned char 
  2996 ;;  b               1    4[COMMON] unsigned char 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  a               1    6[COMMON] unsigned char 
  2999 ;;  temp            1    9[COMMON] unsigned char 
  3000 ;;  y               1    8[COMMON] unsigned char 
  3001 ;;  z               1    7[COMMON] unsigned char 
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  1    wreg      void 
  3004 ;; Registers used:
  3005 ;;		wreg, status,2, status,0, pclath, cstack
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3011 ;;      Params:         1       0       0       0       0
  3012 ;;      Locals:         4       0       0       0       0
  3013 ;;      Temps:          1       0       0       0       0
  3014 ;;      Totals:         6       0       0       0       0
  3015 ;;Total ram usage:        6 bytes
  3016 ;; Hardware stack levels used: 1
  3017 ;; Hardware stack levels required when called: 2
  3018 ;; This function calls:
  3019 ;;		_Lcd_Cmd
  3020 ;; This function is called by:
  3021 ;;		_main
  3022 ;;		_Escribir_dato
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026     04D1                     _Lcd_Set_Cursor:	
  3027                           ;psect for function _Lcd_Set_Cursor
  3028                           
  3029                           
  3030                           ;incstack = 0
  3031                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3032                           ;Lcd_Set_Cursor@a stored from wreg
  3033     04D1  00F6               	movwf	Lcd_Set_Cursor@a
  3034                           
  3035                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  3036     04D2  0376               	decf	Lcd_Set_Cursor@a,w
  3037     04D3  1D03               	btfss	3,2
  3038     04D4  2CF0               	goto	l1426
  3039                           
  3040                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  3041     04D5  0874               	movf	Lcd_Set_Cursor@b,w
  3042     04D6  3E7F               	addlw	127
  3043     04D7  00F9               	movwf	Lcd_Set_Cursor@temp
  3044                           
  3045                           ;LCD.c: 52:         z = temp >> 4;
  3046     04D8  0879               	movf	Lcd_Set_Cursor@temp,w
  3047     04D9  00F5               	movwf	??_Lcd_Set_Cursor
  3048     04DA  3004               	movlw	4
  3049     04DB                     u865:
  3050     04DB  1003               	clrc
  3051     04DC  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3052     04DD  3EFF               	addlw	-1
  3053     04DE  1D03               	skipz
  3054     04DF  2CDB               	goto	u865
  3055     04E0  0875               	movf	??_Lcd_Set_Cursor,w
  3056     04E1  00F7               	movwf	Lcd_Set_Cursor@z
  3057                           
  3058                           ;LCD.c: 53:         y = temp & 0x0F;
  3059     04E2  0879               	movf	Lcd_Set_Cursor@temp,w
  3060     04E3  390F               	andlw	15
  3061     04E4  00F8               	movwf	Lcd_Set_Cursor@y
  3062                           
  3063                           ;LCD.c: 54:         Lcd_Cmd(z);
  3064     04E5  0877               	movf	Lcd_Set_Cursor@z,w
  3065     04E6  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  3066                           
  3067                           ;LCD.c: 55:         Lcd_Cmd(y);
  3068     04EB  0878               	movf	Lcd_Set_Cursor@y,w
  3069     04EC  120A  118A  22B5   	fcall	_Lcd_Cmd
  3070                           
  3071                           ;LCD.c: 56:     } else if (a == 2) {
  3072     04EF  0008               	return
  3073     04F0                     l1426:
  3074     04F0  3002               	movlw	2
  3075     04F1  0676               	xorwf	Lcd_Set_Cursor@a,w
  3076     04F2  1D03               	btfss	3,2
  3077     04F3  0008               	return
  3078                           
  3079                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  3080     04F4  0874               	movf	Lcd_Set_Cursor@b,w
  3081     04F5  3EBF               	addlw	191
  3082     04F6  00F9               	movwf	Lcd_Set_Cursor@temp
  3083                           
  3084                           ;LCD.c: 58:         z = temp >> 4;
  3085     04F7  0879               	movf	Lcd_Set_Cursor@temp,w
  3086     04F8  00F5               	movwf	??_Lcd_Set_Cursor
  3087     04F9  3004               	movlw	4
  3088     04FA                     u885:
  3089     04FA  1003               	clrc
  3090     04FB  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3091     04FC  3EFF               	addlw	-1
  3092     04FD  1D03               	skipz
  3093     04FE  2CFA               	goto	u885
  3094     04FF  0875               	movf	??_Lcd_Set_Cursor,w
  3095     0500  00F7               	movwf	Lcd_Set_Cursor@z
  3096                           
  3097                           ;LCD.c: 59:         y = temp & 0x0F;
  3098     0501  0879               	movf	Lcd_Set_Cursor@temp,w
  3099     0502  390F               	andlw	15
  3100     0503  00F8               	movwf	Lcd_Set_Cursor@y
  3101                           
  3102                           ;LCD.c: 60:         Lcd_Cmd(z);
  3103     0504  0877               	movf	Lcd_Set_Cursor@z,w
  3104     0505  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  3105                           
  3106                           ;LCD.c: 61:         Lcd_Cmd(y);
  3107     050A  0878               	movf	Lcd_Set_Cursor@y,w
  3108     050B  120A  118A  22B5   	fcall	_Lcd_Cmd
  3109     050E  0008               	return
  3110     050F                     __end_of_Lcd_Set_Cursor:
  3111                           
  3112                           	psect	text17
  3113     03FC                     __ptext17:	
  3114 ;; *************** function _enviar_x *****************
  3115 ;; Defined at:
  3116 ;;		line 38 in file "DS3231.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  val1            1    wreg     unsigned char 
  3119 ;;  val2            1    2[COMMON] unsigned char 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  val1            1    5[COMMON] unsigned char 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0, pclath, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : 300/0
  3128 ;;		On exit  : 300/100
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3131 ;;      Params:         1       0       0       0       0
  3132 ;;      Locals:         1       0       0       0       0
  3133 ;;      Temps:          2       0       0       0       0
  3134 ;;      Totals:         4       0       0       0       0
  3135 ;;Total ram usage:        4 bytes
  3136 ;; Hardware stack levels used: 1
  3137 ;; Hardware stack levels required when called: 2
  3138 ;; This function calls:
  3139 ;;		_I2C_Master_Start
  3140 ;;		_I2C_Master_Stop
  3141 ;;		_I2C_Master_Write
  3142 ;; This function is called by:
  3143 ;;		_main
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147     03FC                     _enviar_x:	
  3148                           ;psect for function _enviar_x
  3149                           
  3150                           
  3151                           ;incstack = 0
  3152                           ; Regs used in _enviar_x: [wreg+status,2+status,0+pclath+cstack]
  3153                           ;enviar_x@val1 stored from wreg
  3154     03FC  00F5               	movwf	enviar_x@val1
  3155                           
  3156                           ;DS3231.c: 39:     I2C_Master_Start();
  3157     03FD  120A  118A  225B  120A  118A  	fcall	_I2C_Master_Start
  3158                           
  3159                           ;DS3231.c: 40:     I2C_Master_Write(0xD0);
  3160     0402  30D0               	movlw	208
  3161     0403  00F0               	movwf	I2C_Master_Write@d
  3162     0404  3000               	movlw	0
  3163     0405  00F1               	movwf	I2C_Master_Write@d+1
  3164     0406  120A  118A  226A  120A  118A  	fcall	_I2C_Master_Write
  3165                           
  3166                           ;DS3231.c: 41:     I2C_Master_Write(0);
  3167     040B  3000               	movlw	0
  3168     040C  00F0               	movwf	I2C_Master_Write@d
  3169     040D  00F1               	movwf	I2C_Master_Write@d+1
  3170     040E  120A  118A  226A  120A  118A  	fcall	_I2C_Master_Write
  3171                           
  3172                           ;DS3231.c: 42:     I2C_Master_Write(val1);
  3173     0413  0875               	movf	enviar_x@val1,w
  3174     0414  00F3               	movwf	??_enviar_x
  3175     0415  01F4               	clrf	??_enviar_x+1
  3176     0416  0873               	movf	??_enviar_x,w
  3177     0417  00F0               	movwf	I2C_Master_Write@d
  3178     0418  0874               	movf	??_enviar_x+1,w
  3179     0419  00F1               	movwf	I2C_Master_Write@d+1
  3180     041A  120A  118A  226A  120A  118A  	fcall	_I2C_Master_Write
  3181                           
  3182                           ;DS3231.c: 43:     I2C_Master_Write(val2);
  3183     041F  0872               	movf	enviar_x@val2,w
  3184     0420  00F3               	movwf	??_enviar_x
  3185     0421  01F4               	clrf	??_enviar_x+1
  3186     0422  0873               	movf	??_enviar_x,w
  3187     0423  00F0               	movwf	I2C_Master_Write@d
  3188     0424  0874               	movf	??_enviar_x+1,w
  3189     0425  00F1               	movwf	I2C_Master_Write@d+1
  3190     0426  120A  118A  226A  120A  118A  	fcall	_I2C_Master_Write
  3191                           
  3192                           ;DS3231.c: 44:     I2C_Master_Stop();
  3193     042B  120A  118A  2260   	fcall	_I2C_Master_Stop
  3194     042E  0008               	return
  3195     042F                     __end_of_enviar_x:
  3196                           
  3197                           	psect	text18
  3198     026A                     __ptext18:	
  3199 ;; *************** function _I2C_Master_Write *****************
  3200 ;; Defined at:
  3201 ;;		line 65 in file "I2C.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;  d               2    0[COMMON] unsigned int 
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg, status,2, status,0, pclath, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 200/100
  3212 ;;		On exit  : 300/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3215 ;;      Params:         2       0       0       0       0
  3216 ;;      Locals:         0       0       0       0       0
  3217 ;;      Temps:          0       0       0       0       0
  3218 ;;      Totals:         2       0       0       0       0
  3219 ;;Total ram usage:        2 bytes
  3220 ;; Hardware stack levels used: 1
  3221 ;; Hardware stack levels required when called: 1
  3222 ;; This function calls:
  3223 ;;		_I2C_Master_Wait
  3224 ;; This function is called by:
  3225 ;;		_leer_temperatura
  3226 ;;		_leer_x
  3227 ;;		_enviar_x
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231     026A                     _I2C_Master_Write:	
  3232                           ;psect for function _I2C_Master_Write
  3233                           
  3234                           
  3235                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3236                           
  3237                           ;incstack = 0
  3238                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3239     026A  120A  118A  2271   	fcall	_I2C_Master_Wait
  3240                           
  3241                           ;I2C.c: 68:     SSPBUF = d;
  3242     026D  0870               	movf	I2C_Master_Write@d,w
  3243     026E  1283               	bcf	3,5	;RP0=0, select bank0
  3244     026F  0093               	movwf	19	;volatile
  3245     0270  0008               	return
  3246     0271                     __end_of_I2C_Master_Write:
  3247                           
  3248                           	psect	text19
  3249     0260                     __ptext19:	
  3250 ;; *************** function _I2C_Master_Stop *****************
  3251 ;; Defined at:
  3252 ;;		line 55 in file "I2C.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;		None
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;		None
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg, status,2, status,0, pclath, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 200/100
  3263 ;;		On exit  : 300/100
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3266 ;;      Params:         0       0       0       0       0
  3267 ;;      Locals:         0       0       0       0       0
  3268 ;;      Temps:          0       0       0       0       0
  3269 ;;      Totals:         0       0       0       0       0
  3270 ;;Total ram usage:        0 bytes
  3271 ;; Hardware stack levels used: 1
  3272 ;; Hardware stack levels required when called: 1
  3273 ;; This function calls:
  3274 ;;		_I2C_Master_Wait
  3275 ;; This function is called by:
  3276 ;;		_leer_temperatura
  3277 ;;		_leer_x
  3278 ;;		_enviar_x
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282     0260                     _I2C_Master_Stop:	
  3283                           ;psect for function _I2C_Master_Stop
  3284                           
  3285                           
  3286                           ;I2C.c: 57:     I2C_Master_Wait();
  3287                           
  3288                           ;incstack = 0
  3289                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3290     0260  120A  118A  2271   	fcall	_I2C_Master_Wait
  3291                           
  3292                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3293     0263  1511               	bsf	17,2	;volatile
  3294     0264  0008               	return
  3295     0265                     __end_of_I2C_Master_Stop:
  3296                           
  3297                           	psect	text20
  3298     025B                     __ptext20:	
  3299 ;; *************** function _I2C_Master_Start *****************
  3300 ;; Defined at:
  3301 ;;		line 39 in file "I2C.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2, status,0, pclath, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 200/100
  3312 ;;		On exit  : 300/100
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3315 ;;      Params:         0       0       0       0       0
  3316 ;;      Locals:         0       0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0
  3318 ;;      Totals:         0       0       0       0       0
  3319 ;;Total ram usage:        0 bytes
  3320 ;; Hardware stack levels used: 1
  3321 ;; Hardware stack levels required when called: 1
  3322 ;; This function calls:
  3323 ;;		_I2C_Master_Wait
  3324 ;; This function is called by:
  3325 ;;		_leer_temperatura
  3326 ;;		_leer_x
  3327 ;;		_enviar_x
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331     025B                     _I2C_Master_Start:	
  3332                           ;psect for function _I2C_Master_Start
  3333                           
  3334                           
  3335                           ;I2C.c: 41:     I2C_Master_Wait();
  3336                           
  3337                           ;incstack = 0
  3338                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3339     025B  120A  118A  2271   	fcall	_I2C_Master_Wait
  3340                           
  3341                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3342     025E  1411               	bsf	17,0	;volatile
  3343     025F  0008               	return
  3344     0260                     __end_of_I2C_Master_Start:
  3345                           
  3346                           	psect	text21
  3347     0271                     __ptext21:	
  3348 ;; *************** function _I2C_Master_Wait *****************
  3349 ;; Defined at:
  3350 ;;		line 32 in file "I2C.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg, status,2
  3359 ;; Tracked objects:
  3360 ;;		On entry : 200/0
  3361 ;;		On exit  : 300/100
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3364 ;;      Params:         0       0       0       0       0
  3365 ;;      Locals:         0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0
  3367 ;;      Totals:         0       0       0       0       0
  3368 ;;Total ram usage:        0 bytes
  3369 ;; Hardware stack levels used: 1
  3370 ;; This function calls:
  3371 ;;		Nothing
  3372 ;; This function is called by:
  3373 ;;		_I2C_Master_Start
  3374 ;;		_I2C_Master_RepeatedStart
  3375 ;;		_I2C_Master_Stop
  3376 ;;		_I2C_Master_Write
  3377 ;;		_I2C_Master_Read
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381     0271                     _I2C_Master_Wait:	
  3382                           ;psect for function _I2C_Master_Wait
  3383                           
  3384     0271                     l174:	
  3385                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3386                           
  3387                           ;incstack = 0
  3388                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3389                           
  3390     0271  1683               	bsf	3,5	;RP0=1, select bank1
  3391     0272  1914               	btfsc	20,2	;volatile
  3392     0273  2A71               	goto	l174
  3393     0274  0811               	movf	17,w	;volatile
  3394     0275  391F               	andlw	31
  3395     0276  1903               	btfsc	3,2
  3396     0277  0008               	return
  3397     0278  2A71               	goto	l174
  3398     0279                     __end_of_I2C_Master_Wait:
  3399                           
  3400                           	psect	text22
  3401     0326                     __ptext22:	
  3402 ;; *************** function _Lcd_Write_String *****************
  3403 ;; Defined at:
  3404 ;;		line 98 in file "LCD.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;  a               1    wreg     PTR unsigned char 
  3407 ;;		 -> STR_2(8), STR_1(6), 
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  a               1    7[COMMON] PTR unsigned char 
  3410 ;;		 -> STR_2(8), STR_1(6), 
  3411 ;;  i               2    5[COMMON] int 
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      void 
  3414 ;; Registers used:
  3415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3421 ;;      Params:         0       0       0       0       0
  3422 ;;      Locals:         3       0       0       0       0
  3423 ;;      Temps:          0       0       0       0       0
  3424 ;;      Totals:         3       0       0       0       0
  3425 ;;Total ram usage:        3 bytes
  3426 ;; Hardware stack levels used: 1
  3427 ;; Hardware stack levels required when called: 2
  3428 ;; This function calls:
  3429 ;;		_Lcd_Write_Char
  3430 ;; This function is called by:
  3431 ;;		_main
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435     0326                     _Lcd_Write_String:	
  3436                           ;psect for function _Lcd_Write_String
  3437                           
  3438                           
  3439                           ;incstack = 0
  3440                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3441                           ;Lcd_Write_String@a stored from wreg
  3442     0326  00F7               	movwf	Lcd_Write_String@a
  3443                           
  3444                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  3445     0327  01F5               	clrf	Lcd_Write_String@i
  3446     0328  01F6               	clrf	Lcd_Write_String@i+1
  3447     0329                     l1708:
  3448     0329  0875               	movf	Lcd_Write_String@i,w
  3449     032A  0777               	addwf	Lcd_Write_String@a,w
  3450     032B  0084               	movwf	4
  3451     032C  120A  118A  2003  120A  118A  	fcall	stringdir
  3452     0331  3A00               	xorlw	0
  3453     0332  1903               	btfsc	3,2
  3454     0333  0008               	return
  3455                           
  3456                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  3457     0334  0875               	movf	Lcd_Write_String@i,w
  3458     0335  0777               	addwf	Lcd_Write_String@a,w
  3459     0336  0084               	movwf	4
  3460     0337  120A  118A  2003  120A  118A  	fcall	stringdir
  3461     033C  120A  118A  239A  120A  118A  	fcall	_Lcd_Write_Char
  3462     0341  3001               	movlw	1
  3463     0342  07F5               	addwf	Lcd_Write_String@i,f
  3464     0343  1803               	skipnc
  3465     0344  0AF6               	incf	Lcd_Write_String@i+1,f
  3466     0345  3000               	movlw	0
  3467     0346  07F6               	addwf	Lcd_Write_String@i+1,f
  3468     0347  2B29               	goto	l1708
  3469     0348                     __end_of_Lcd_Write_String:
  3470                           
  3471                           	psect	text23
  3472     039A                     __ptext23:	
  3473 ;; *************** function _Lcd_Write_Char *****************
  3474 ;; Defined at:
  3475 ;;		line 83 in file "LCD.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;  a               1    wreg     unsigned char 
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;  a               1    4[COMMON] unsigned char 
  3480 ;;  y               1    3[COMMON] unsigned char 
  3481 ;;  temp            1    2[COMMON] unsigned char 
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  1    wreg      void 
  3484 ;; Registers used:
  3485 ;;		wreg, status,2, status,0, pclath, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 300/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3491 ;;      Params:         0       0       0       0       0
  3492 ;;      Locals:         3       0       0       0       0
  3493 ;;      Temps:          1       0       0       0       0
  3494 ;;      Totals:         4       0       0       0       0
  3495 ;;Total ram usage:        4 bytes
  3496 ;; Hardware stack levels used: 1
  3497 ;; Hardware stack levels required when called: 1
  3498 ;; This function calls:
  3499 ;;		_Lcd_Port
  3500 ;; This function is called by:
  3501 ;;		_main
  3502 ;;		_Escribir_dato
  3503 ;;		_Lcd_Write_String
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507     039A                     _Lcd_Write_Char:	
  3508                           ;psect for function _Lcd_Write_Char
  3509                           
  3510                           
  3511                           ;incstack = 0
  3512                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3513                           ;Lcd_Write_Char@a stored from wreg
  3514     039A  00F4               	movwf	Lcd_Write_Char@a
  3515                           
  3516                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  3517     039B  0874               	movf	Lcd_Write_Char@a,w
  3518     039C  390F               	andlw	15
  3519     039D  00F2               	movwf	Lcd_Write_Char@temp
  3520                           
  3521                           ;LCD.c: 86:     y = a & 0xF0;
  3522     039E  0874               	movf	Lcd_Write_Char@a,w
  3523     039F  39F0               	andlw	240
  3524     03A0  00F3               	movwf	Lcd_Write_Char@y
  3525                           
  3526                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  3527     03A1  1283               	bcf	3,5	;RP0=0, select bank0
  3528     03A2  1303               	bcf	3,6	;RP1=0, select bank0
  3529     03A3  1508               	bsf	8,2	;volatile
  3530                           
  3531                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  3532     03A4  0873               	movf	Lcd_Write_Char@y,w
  3533     03A5  00F1               	movwf	??_Lcd_Write_Char
  3534     03A6  3004               	movlw	4
  3535     03A7                     u895:
  3536     03A7  1003               	clrc
  3537     03A8  0CF1               	rrf	??_Lcd_Write_Char,f
  3538     03A9  3EFF               	addlw	-1
  3539     03AA  1D03               	skipz
  3540     03AB  2BA7               	goto	u895
  3541     03AC  0871               	movf	??_Lcd_Write_Char,w
  3542     03AD  120A  118A  229D  120A  118A  	fcall	_Lcd_Port
  3543                           
  3544                           ;LCD.c: 89:     RD3 = 1;
  3545     03B2  1588               	bsf	8,3	;volatile
  3546                           
  3547                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3548     03B3  301A               	movlw	26
  3549     03B4  00F1               	movwf	??_Lcd_Write_Char
  3550     03B5                     u1507:
  3551     03B5  0BF1               	decfsz	??_Lcd_Write_Char,f
  3552     03B6  2BB5               	goto	u1507
  3553     03B7  0000               	nop
  3554                           
  3555                           ;LCD.c: 91:     RD3 = 0;
  3556     03B8  1283               	bcf	3,5	;RP0=0, select bank0
  3557     03B9  1303               	bcf	3,6	;RP1=0, select bank0
  3558     03BA  1188               	bcf	8,3	;volatile
  3559                           
  3560                           ;LCD.c: 92:     Lcd_Port(temp);
  3561     03BB  0872               	movf	Lcd_Write_Char@temp,w
  3562     03BC  120A  118A  229D  120A  118A  	fcall	_Lcd_Port
  3563                           
  3564                           ;LCD.c: 93:     RD3 = 1;
  3565     03C1  1588               	bsf	8,3	;volatile
  3566                           
  3567                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3568     03C2  301A               	movlw	26
  3569     03C3  00F1               	movwf	??_Lcd_Write_Char
  3570     03C4                     u1517:
  3571     03C4  0BF1               	decfsz	??_Lcd_Write_Char,f
  3572     03C5  2BC4               	goto	u1517
  3573     03C6  0000               	nop
  3574                           
  3575                           ;LCD.c: 95:     RD3 = 0;
  3576     03C7  1283               	bcf	3,5	;RP0=0, select bank0
  3577     03C8  1303               	bcf	3,6	;RP1=0, select bank0
  3578     03C9  1188               	bcf	8,3	;volatile
  3579     03CA  0008               	return
  3580     03CB                     __end_of_Lcd_Write_Char:
  3581                           
  3582                           	psect	text24
  3583     05DA                     __ptext24:	
  3584 ;; *************** function _Lcd_Init *****************
  3585 ;; Defined at:
  3586 ;;		line 65 in file "LCD.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;		None
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      void 
  3593 ;; Registers used:
  3594 ;;		wreg, status,2, status,0, pclath, cstack
  3595 ;; Tracked objects:
  3596 ;;		On entry : 300/100
  3597 ;;		On exit  : 300/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3600 ;;      Params:         0       0       0       0       0
  3601 ;;      Locals:         0       0       0       0       0
  3602 ;;      Temps:          2       0       0       0       0
  3603 ;;      Totals:         2       0       0       0       0
  3604 ;;Total ram usage:        2 bytes
  3605 ;; Hardware stack levels used: 1
  3606 ;; Hardware stack levels required when called: 2
  3607 ;; This function calls:
  3608 ;;		_Lcd_Cmd
  3609 ;;		_Lcd_Port
  3610 ;; This function is called by:
  3611 ;;		_main
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615     05DA                     _Lcd_Init:	
  3616                           ;psect for function _Lcd_Init
  3617                           
  3618                           
  3619                           ;LCD.c: 66:     Lcd_Port(0x00);
  3620                           
  3621                           ;incstack = 0
  3622                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3623     05DA  3000               	movlw	0
  3624     05DB  120A  118A  229D  120A  118A  	fcall	_Lcd_Port
  3625                           
  3626                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3627     05E0  3034               	movlw	52
  3628     05E1  00F5               	movwf	??_Lcd_Init+1
  3629     05E2  30F1               	movlw	241
  3630     05E3  00F4               	movwf	??_Lcd_Init
  3631     05E4                     u1527:
  3632     05E4  0BF4               	decfsz	??_Lcd_Init,f
  3633     05E5  2DE4               	goto	u1527
  3634     05E6  0BF5               	decfsz	??_Lcd_Init+1,f
  3635     05E7  2DE4               	goto	u1527
  3636     05E8  2DE9               	nop2
  3637                           
  3638                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  3639     05E9  3003               	movlw	3
  3640     05EA  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  3641                           
  3642                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3643     05EF  300D               	movlw	13
  3644     05F0  00F5               	movwf	??_Lcd_Init+1
  3645     05F1  30FB               	movlw	251
  3646     05F2  00F4               	movwf	??_Lcd_Init
  3647     05F3                     u1537:
  3648     05F3  0BF4               	decfsz	??_Lcd_Init,f
  3649     05F4  2DF3               	goto	u1537
  3650     05F5  0BF5               	decfsz	??_Lcd_Init+1,f
  3651     05F6  2DF3               	goto	u1537
  3652     05F7  2DF8               	nop2
  3653                           
  3654                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  3655     05F8  3003               	movlw	3
  3656     05F9  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  3657                           
  3658                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3659     05FE  301D               	movlw	29
  3660     05FF  00F5               	movwf	??_Lcd_Init+1
  3661     0600  3091               	movlw	145
  3662     0601  00F4               	movwf	??_Lcd_Init
  3663     0602                     u1547:
  3664     0602  0BF4               	decfsz	??_Lcd_Init,f
  3665     0603  2E02               	goto	u1547
  3666     0604  0BF5               	decfsz	??_Lcd_Init+1,f
  3667     0605  2E02               	goto	u1547
  3668                           
  3669                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  3670     0606  3003               	movlw	3
  3671     0607  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  3672                           
  3673                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  3674     060C  3002               	movlw	2
  3675     060D  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  3676                           
  3677                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  3678     0612  3002               	movlw	2
  3679     0613  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  3680                           
  3681                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  3682     0618  3008               	movlw	8
  3683     0619  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  3684                           
  3685                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  3686     061E  3000               	movlw	0
  3687     061F  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  3688                           
  3689                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  3690     0624  300C               	movlw	12
  3691     0625  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  3692                           
  3693                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  3694     062A  3000               	movlw	0
  3695     062B  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  3696                           
  3697                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  3698     0630  3006               	movlw	6
  3699     0631  120A  118A  22B5   	fcall	_Lcd_Cmd
  3700     0634  0008               	return
  3701     0635                     __end_of_Lcd_Init:
  3702                           
  3703                           	psect	text25
  3704     0281                     __ptext25:	
  3705 ;; *************** function _Lcd_Clear *****************
  3706 ;; Defined at:
  3707 ;;		line 43 in file "LCD.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;		None
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      void 
  3714 ;; Registers used:
  3715 ;;		wreg, status,2, status,0, pclath, cstack
  3716 ;; Tracked objects:
  3717 ;;		On entry : 300/0
  3718 ;;		On exit  : 300/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3721 ;;      Params:         0       0       0       0       0
  3722 ;;      Locals:         0       0       0       0       0
  3723 ;;      Temps:          0       0       0       0       0
  3724 ;;      Totals:         0       0       0       0       0
  3725 ;;Total ram usage:        0 bytes
  3726 ;; Hardware stack levels used: 1
  3727 ;; Hardware stack levels required when called: 2
  3728 ;; This function calls:
  3729 ;;		_Lcd_Cmd
  3730 ;; This function is called by:
  3731 ;;		_main
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735     0281                     _Lcd_Clear:	
  3736                           ;psect for function _Lcd_Clear
  3737                           
  3738                           
  3739                           ;LCD.c: 44:     Lcd_Cmd(0);
  3740                           
  3741                           ;incstack = 0
  3742                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3743     0281  3000               	movlw	0
  3744     0282  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  3745                           
  3746                           ;LCD.c: 45:     Lcd_Cmd(1);
  3747     0287  3001               	movlw	1
  3748     0288  120A  118A  22B5   	fcall	_Lcd_Cmd
  3749     028B  0008               	return
  3750     028C                     __end_of_Lcd_Clear:
  3751                           
  3752                           	psect	text26
  3753     02B5                     __ptext26:	
  3754 ;; *************** function _Lcd_Cmd *****************
  3755 ;; Defined at:
  3756 ;;		line 35 in file "LCD.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  a               1    wreg     unsigned char 
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;  a               1    3[COMMON] unsigned char 
  3761 ;; Return value:  Size  Location     Type
  3762 ;;                  1    wreg      void 
  3763 ;; Registers used:
  3764 ;;		wreg, status,2, status,0, pclath, cstack
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 300/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3770 ;;      Params:         0       0       0       0       0
  3771 ;;      Locals:         1       0       0       0       0
  3772 ;;      Temps:          2       0       0       0       0
  3773 ;;      Totals:         3       0       0       0       0
  3774 ;;Total ram usage:        3 bytes
  3775 ;; Hardware stack levels used: 1
  3776 ;; Hardware stack levels required when called: 1
  3777 ;; This function calls:
  3778 ;;		_Lcd_Port
  3779 ;; This function is called by:
  3780 ;;		_Lcd_Clear
  3781 ;;		_Lcd_Set_Cursor
  3782 ;;		_Lcd_Init
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786     02B5                     _Lcd_Cmd:	
  3787                           ;psect for function _Lcd_Cmd
  3788                           
  3789                           
  3790                           ;incstack = 0
  3791                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3792                           ;Lcd_Cmd@a stored from wreg
  3793     02B5  00F3               	movwf	Lcd_Cmd@a
  3794                           
  3795                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  3796     02B6  1283               	bcf	3,5	;RP0=0, select bank0
  3797     02B7  1303               	bcf	3,6	;RP1=0, select bank0
  3798     02B8  1108               	bcf	8,2	;volatile
  3799                           
  3800                           ;LCD.c: 37:     Lcd_Port(a);
  3801     02B9  0873               	movf	Lcd_Cmd@a,w
  3802     02BA  120A  118A  229D  120A  118A  	fcall	_Lcd_Port
  3803                           
  3804                           ;LCD.c: 38:     RD3 = 1;
  3805     02BF  1588               	bsf	8,3	;volatile
  3806                           
  3807                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3808     02C0  300B               	movlw	11
  3809     02C1  00F2               	movwf	??_Lcd_Cmd+1
  3810     02C2  3062               	movlw	98
  3811     02C3  00F1               	movwf	??_Lcd_Cmd
  3812     02C4                     u1557:
  3813     02C4  0BF1               	decfsz	??_Lcd_Cmd,f
  3814     02C5  2AC4               	goto	u1557
  3815     02C6  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3816     02C7  2AC4               	goto	u1557
  3817     02C8  0000               	nop
  3818                           
  3819                           ;LCD.c: 40:     RD3 = 0;
  3820     02C9  1283               	bcf	3,5	;RP0=0, select bank0
  3821     02CA  1303               	bcf	3,6	;RP1=0, select bank0
  3822     02CB  1188               	bcf	8,3	;volatile
  3823     02CC  0008               	return
  3824     02CD                     __end_of_Lcd_Cmd:
  3825                           
  3826                           	psect	text27
  3827     029D                     __ptext27:	
  3828 ;; *************** function _Lcd_Port *****************
  3829 ;; Defined at:
  3830 ;;		line 13 in file "LCD.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  a               1    wreg     unsigned char 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  a               1    0[COMMON] unsigned char 
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		wreg
  3839 ;; Tracked objects:
  3840 ;;		On entry : 200/0
  3841 ;;		On exit  : 300/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3844 ;;      Params:         0       0       0       0       0
  3845 ;;      Locals:         1       0       0       0       0
  3846 ;;      Temps:          0       0       0       0       0
  3847 ;;      Totals:         1       0       0       0       0
  3848 ;;Total ram usage:        1 bytes
  3849 ;; Hardware stack levels used: 1
  3850 ;; This function calls:
  3851 ;;		Nothing
  3852 ;; This function is called by:
  3853 ;;		_Lcd_Cmd
  3854 ;;		_Lcd_Init
  3855 ;;		_Lcd_Write_Char
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859     029D                     _Lcd_Port:	
  3860                           ;psect for function _Lcd_Port
  3861                           
  3862                           
  3863                           ;incstack = 0
  3864                           ; Regs used in _Lcd_Port: [wreg]
  3865                           ;Lcd_Port@a stored from wreg
  3866     029D  00F0               	movwf	Lcd_Port@a
  3867                           
  3868                           ;LCD.c: 14:     if (a & 1)
  3869     029E  1C70               	btfss	Lcd_Port@a,0
  3870     029F  2AA3               	goto	l211
  3871                           
  3872                           ;LCD.c: 15:         RD4 = 1;
  3873     02A0  1283               	bcf	3,5	;RP0=0, select bank0
  3874     02A1  1608               	bsf	8,4	;volatile
  3875     02A2  2AA5               	goto	l212
  3876     02A3                     l211:	
  3877                           ;LCD.c: 16:     else
  3878                           
  3879                           
  3880                           ;LCD.c: 17:         RD4 = 0;
  3881     02A3  1283               	bcf	3,5	;RP0=0, select bank0
  3882     02A4  1208               	bcf	8,4	;volatile
  3883     02A5                     l212:
  3884                           
  3885                           ;LCD.c: 19:     if (a & 2)
  3886     02A5  1CF0               	btfss	Lcd_Port@a,1
  3887     02A6  2AA9               	goto	l213
  3888                           
  3889                           ;LCD.c: 20:         RD5 = 1;
  3890     02A7  1688               	bsf	8,5	;volatile
  3891     02A8  2AAA               	goto	l214
  3892     02A9                     l213:	
  3893                           ;LCD.c: 21:     else
  3894                           
  3895                           
  3896                           ;LCD.c: 22:         RD5 = 0;
  3897     02A9  1288               	bcf	8,5	;volatile
  3898     02AA                     l214:
  3899                           
  3900                           ;LCD.c: 24:     if (a & 4)
  3901     02AA  1D70               	btfss	Lcd_Port@a,2
  3902     02AB  2AAE               	goto	l215
  3903                           
  3904                           ;LCD.c: 25:         RD6 = 1;
  3905     02AC  1708               	bsf	8,6	;volatile
  3906     02AD  2AAF               	goto	l216
  3907     02AE                     l215:	
  3908                           ;LCD.c: 26:     else
  3909                           
  3910                           
  3911                           ;LCD.c: 27:         RD6 = 0;
  3912     02AE  1308               	bcf	8,6	;volatile
  3913     02AF                     l216:
  3914                           
  3915                           ;LCD.c: 29:     if (a & 8)
  3916     02AF  1DF0               	btfss	Lcd_Port@a,3
  3917     02B0  2AB3               	goto	l217
  3918                           
  3919                           ;LCD.c: 30:         RD7 = 1;
  3920     02B1  1788               	bsf	8,7	;volatile
  3921     02B2  0008               	return
  3922     02B3                     l217:	
  3923                           ;LCD.c: 31:     else
  3924                           
  3925                           
  3926                           ;LCD.c: 32:         RD7 = 0;
  3927     02B3  1388               	bcf	8,7	;volatile
  3928     02B4  0008               	return
  3929     02B5                     __end_of_Lcd_Port:
  3930     007E                     btemp	set	126	;btemp
  3931     007E                     wtemp0	set	126
  3932                           
  3933                           	psect	idloc
  3934                           
  3935                           ;Config register IDLOC0 @ 0x2000
  3936                           ;	unspecified, using default values
  3937     2000                     	org	8192
  3938     2000  3FFF               	dw	16383
  3939                           
  3940                           ;Config register IDLOC1 @ 0x2001
  3941                           ;	unspecified, using default values
  3942     2001                     	org	8193
  3943     2001  3FFF               	dw	16383
  3944                           
  3945                           ;Config register IDLOC2 @ 0x2002
  3946                           ;	unspecified, using default values
  3947     2002                     	org	8194
  3948     2002  3FFF               	dw	16383
  3949                           
  3950                           ;Config register IDLOC3 @ 0x2003
  3951                           ;	unspecified, using default values
  3952     2003                     	org	8195
  3953     2003  3FFF               	dw	16383
  3954                           
  3955                           	psect	config
  3956                           
  3957                           ;Config register CONFIG1 @ 0x2007
  3958                           ;	Oscillator Selection bits
  3959                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3960                           ;	Watchdog Timer Enable bit
  3961                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3962                           ;	Power-up Timer Enable bit
  3963                           ;	PWRTE = OFF, PWRT disabled
  3964                           ;	RE3/MCLR pin function select bit
  3965                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3966                           ;	Code Protection bit
  3967                           ;	CP = OFF, Program memory code protection is disabled
  3968                           ;	Data Code Protection bit
  3969                           ;	CPD = OFF, Data memory code protection is disabled
  3970                           ;	Brown Out Reset Selection bits
  3971                           ;	BOREN = OFF, BOR disabled
  3972                           ;	Internal External Switchover bit
  3973                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3974                           ;	Fail-Safe Clock Monitor Enabled bit
  3975                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3976                           ;	Low Voltage Programming Enable bit
  3977                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3978                           ;	In-Circuit Debugger Mode bit
  3979                           ;	DEBUG = 0x1, unprogramme  3980     2007                     	org	8199
  3981     2007  20D4               	dw	8404
  3982                           
  3983                           ;Config register CONFIG2 @ 0x2008
  3984                           ;	Brown-out Reset Selection bit
  3985                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3986                           ;	Flash Program Memory Self Write Enable bits
  3987                           ;	WRT = OFF, Write protection off
  3988     2008                     	org	8200
  3989     2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     14      33
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_Escribir_dato
    _I2C_Master_Init->___lldiv
    _leer_x->_convertir
    _convertir->___bmul
    _leer_temperatura->_Escribir_dato
    _Escribir_dato->_descomponer
    _descomponer->___lbmod
    _Lcd_Set_Cursor->_Lcd_Cmd
    _enviar_x->_I2C_Master_Write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_portsetup
    _portsetup->_I2C_Master_Init
    _leer_temperatura->_Escribir_dato

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   13533
                                             11 BANK0      3     3      0
                      _Escribir_dato
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _enviar_x
                   _leer_temperatura
                             _leer_x
                          _portsetup
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _portsetup                                            3     3      0     412
                                              8 BANK0      3     3      0
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _leer_x                                               4     4      0    1176
                                              9 COMMON     4     4      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _convertir
 ---------------------------------------------------------------------------------
 (2) _convertir                                            5     5      0     281
                                              4 COMMON     5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _leer_temperatura                                     2     2      0    5045
                                              1 BANK0      2     2      0
                      _Escribir_dato
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _Escribir_dato                                        3     1      2    4218
                                             12 COMMON     2     0      2
                                              0 BANK0      1     1      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                        _descomponer
                          _inttochar
 ---------------------------------------------------------------------------------
 (3) _inttochar                                            1     1      0     220
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _descomponer                                          6     3      3    1256
                                              6 COMMON     6     3      3
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              6     5      1     374
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              5     4      1     377
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       6     5      1     760
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _enviar_x                                             4     3      1     902
                                              2 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     630
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     334
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_dato
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _descomponer
       ___lbdiv
       ___lbmod
     _inttochar
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_Char
   _Lcd_Write_String
     _Lcd_Write_Char
   _enviar_x
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _leer_temperatura
     _Escribir_dato
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _leer_x
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _convertir
       ___bmul
   _portsetup
     _I2C_Master_Init
       ___lldiv
   _setupINTOSC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      21       5       41.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2F      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 07 22:54:55 2023

                               pc 0002                    ___bmul@product 0072                    ?_Escribir_dato 007C  
                              l86 071C                                l87 0710                                fsr 0004  
                             l211 02A3                               l212 02A5                               l213 02A9  
                             l214 02AA                               l215 02AE                               l216 02AF  
                             l217 02B3                               l174 0271                               l192 0366  
                             l280 05AE                               l193 0367                               l281 05B7  
                             l282 05C0                               l283 05C9                               l284 05D1  
                             l278 059C                               l279 05A5                               l582 02FF  
                             _RD3 0043                               _RD4 0044                               _RD5 0045  
                             _RD6 0046                               _RD7 0047                               u825 02ED  
                             u865 04DB                               u885 04FA                               u895 03A7  
                             _min 002D                               _sec 002F                               fsr0 0004  
                             indf 0000                              l1404 02EA                              l1520 04B3  
                            l1512 04AD                              l1504 04A7                              l1426 04F0  
                            l1384 030C                              l1552 04CB                              l1544 04C5  
                            l1536 04BF                              l1528 04B9                              l1800 076B  
                            l1386 0315                              l1474 045C                              l1466 0451  
                            l1802 076E                              l1810 0779                              l1708 0329  
                            l1396 0324                              l1564 028E                              l1582 0645  
                            l1814 0798                              l1496 04A1                              l1488 049C  
                            l1568 0294                              l1592 067D                              l1584 0655  
                            l1808 0777                              l1674 05D7                              l1826 07D9  
                            l1818 07CC                              l1738 06DE                              l1596 068A  
                            l1772 0742                              l1764 071F                              l1790 075F  
                            l1782 0751                              l1774 0743                              l1758 0717  
                            l1784 0753                              l1792 0760                              STR_1 0011  
                            STR_2 0009                              u1105 0657                              u1115 066C  
                            u1125 067E                              u1145 03D9                              u1165 02D4  
                            u1085 0649                              u1507 03B5                              u1517 03C4  
                            u1527 05E4                              u1537 05F3                              u1547 0602  
                            u1557 02C4                              u1477 07C7                              u1487 0386  
                            u1497 0486                              _WPUB 0095                 ?_Lcd_Write_String 0070  
__end_of_I2C_Master_RepeatedStart 026A                              _main 0693                              _modo 002B  
                            btemp 007E                              start 0000                ??_Lcd_Write_String 0075  
                 __end_of_Lcd_Cmd 02CD                 ___bmul@multiplier 0073                  ?_I2C_Master_Init 0033  
                ?_I2C_Master_Read 0070                  ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070  
                           ?_main 0070                   __end_of___lbdiv 0326                   __end_of___lbmod 0305  
                           _ANSEL 0188                   __end_of___lldiv 0693                             _SERVO 002A  
                           _PORTB 0006                             _PORTD 0008                             _TRISB 0086  
                           _TRISD 0088                             pclath 000A                             status 0003  
                           wtemp0 007E                   ___lbdiv@divisor 0070                       leer_x@valor 007C  
                 ___lbdiv@counter 0073                  _leer_temperatura 0462                  __end_of_Lcd_Init 0635  
                __end_of_Lcd_Port 02B5                   __initialization 07F5                   ??_Escribir_dato 007E  
                    __end_of_main 07F5                            ??_main 003E                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070                ??_I2C_Master_Write 0072  
                          _ANSELH 0189                         ??_Lcd_Cmd 0071                            _SSPADD 0093  
                          _SSPCON 0014                            _SSPBUF 0013          _I2C_Master_RepeatedStart 0265  
                          ___bmul 028C                            _decena 0031                         ??___lbdiv 0071  
                       ??___lbmod 0071                         ??___lldiv 0078                  __end_of_enviar_x 042F  
                          _buffer 0024                            _conver 0020                            _leer_x 050F  
                          _valADC 0027                            _unidad 0032                      ?_setupINTOSC 0070  
                ___lbdiv@dividend 0072                   Lcd_Set_Cursor@a 0076                   Lcd_Set_Cursor@b 0074  
                 Lcd_Set_Cursor@y 0078                   Lcd_Set_Cursor@z 0077                   ___lbmod@divisor 0070  
         __end_of__initialization 07FC                   ___lbmod@counter 0074                 __end_of_Lcd_Clear 028C  
             ___bmul@multiplicand 0070                   descomponer@cent 0079                    __pcstackCOMMON 0070  
                ___lbdiv@quotient 0074                    _Lcd_Set_Cursor 04D1                    _OPTION_REGbits 0081  
                       ?_Lcd_Init 0070                         ?_Lcd_Port 0070                      enviar_x@val1 0075  
                    enviar_x@val2 0072                        __pbssBANK0 0020                        __pmaintext 0693  
                         ?___bmul 0070               convertir@conversion 0077                           ?_leer_x 0070  
          __end_of_Lcd_Set_Cursor 050F          __end_of_leer_temperatura 0496                        ??_Lcd_Init 0074  
                      ??_Lcd_Port 0070                           _SSPCON2 0091                           _SSPSTAT 0094  
                      __stringtab 0003                         ?_enviar_x 0072                    _Lcd_Write_Char 039A  
                         _Lcd_Cmd 02B5                           ___lbdiv 0305                           ___lbmod 02E6  
                         ___lldiv 0635                 __end_of_convertir 02E6                   ?_Lcd_Set_Cursor 0074  
                         __ptext1 0594                           __ptext2 036D                           __ptext3 03CB  
                         __ptext4 0635                           __ptext5 050F                           __ptext6 02CD  
                         __ptext7 028C                           __ptext8 0265                           __ptext9 0462  
                         _minutos 002C                           _tempint 0030                           clrloop0 027A  
               __end_of_inttochar 04D1            __end_of_Lcd_Write_Char 03CB              end_of_initialization 07FC  
      ??_I2C_Master_RepeatedStart 0070                        ??_enviar_x 0073                   ___lldiv@divisor 0070  
                 ___lldiv@counter 007D                  I2C_Master_Init@c 0033                  I2C_Master_Read@a 0070  
                   leer_x@address 007B                         Lcd_Port@a 0070                 __end_of_portsetup 039A  
           __end_of_Escribir_dato 0594                         _PORTBbits 0006                         _PORTDbits 0008  
                   ??_descomponer 0079                  ___lbmod@dividend 0073                         _TRISCbits 0087  
                 ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0077                 Lcd_Write_String@i 0075  
                     ___lbmod@rem 0075                         _Lcd_Clear 0281                    __end_of___bmul 029D  
                _Lcd_Write_String 0326                    __end_of_leer_x 054E               start_initialization 07F5  
             __end_of_descomponer 0462                 ??_I2C_Master_Init 0037                 ??_I2C_Master_Read 0072  
               ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070                 Escribir_dato@dato 0033  
               Escribir_dato@posx 007C                 Escribir_dato@posy 007D                        ?_Lcd_Clear 0070  
                        ??___bmul 0071                          ??_leer_x 0079                   Lcd_Write_Char@a 0074  
                 Lcd_Write_Char@y 0073                         ___latbits 0002                    descomponer@dec 007B  
                   __pcstackBANK0 0033                 ?_leer_temperatura 0070                    descomponer@num 0078  
                  descomponer@pos 0076                    descomponer@uni 007A                ??_leer_temperatura 0034  
                 setupINTOSC@IRCF 0070                          ?_Lcd_Cmd 0070                  _I2C_Master_Start 025B  
                _I2C_Master_Write 026A                  ??_Lcd_Set_Cursor 0075                      inttochar@num 0070  
                        ?___lbdiv 0070                          ?___lbmod 0070                          ?___lldiv 0070  
                       __pstrings 0003                         _convertir 02CD                       _descomponer 042F  
                       _inttochar 0496                         clear_ram0 0279                          Lcd_Cmd@a 0073  
                     ??_Lcd_Clear 0074                       __stringbase 0008                     ??_setupINTOSC 0070  
                       _portsetup 036D                        ?_convertir 0070                  ??_Lcd_Write_Char 0071  
                 convertir@decena 0076                          _Lcd_Init 05DA                          _Lcd_Port 029D  
             I2C_Master_Read@temp 0074                   convertir@unidad 0075          __end_of_Lcd_Write_String 0348  
                      ?_inttochar 0070         ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0009  
                      ?_portsetup 0070                   _I2C_Master_Init 03CB                   _I2C_Master_Read 0348  
                 _I2C_Master_Wait 0271                   _I2C_Master_Stop 0260                          _main$198 0040  
                        __ptext10 0348                          __ptext11 054E                          __ptext20 025B  
                        __ptext12 0496                          __ptext21 0271                          __ptext13 042F  
                        __ptext22 0326                          __ptext14 02E6                          __ptext23 039A  
                        __ptext15 0305                          __ptext24 05DA                          __ptext16 04D1  
                        __ptext25 0281                          __ptext17 03FC                          __ptext26 02B5  
                        __ptext18 026A                          __ptext27 029D                          __ptext19 0260  
             __end_of_setupINTOSC 05DA                          _enviar_x 03FC                          _segundos 002E  
                  convertir@valor 0078                       ??_convertir 0074          __end_of_I2C_Master_Start 0260  
        __end_of_I2C_Master_Write 0271                Lcd_Write_Char@temp 0072                  ___lldiv@dividend 0074  
                     ??_inttochar 0070                         stringcode 0003                        _OSCCONbits 008F  
         __end_of_I2C_Master_Init 03FC           __end_of_I2C_Master_Read 036D           __end_of_I2C_Master_Wait 0279  
                   _Escribir_dato 054E           __end_of_I2C_Master_Stop 0265                Lcd_Set_Cursor@temp 0079  
                     ??_portsetup 003B                       _setupINTOSC 0594                      ?_descomponer 0076  
                ___lldiv@quotient 0079                 I2C_Master_Write@d 0070                          stringdir 0003  
                        stringtab 0003                       _SSPCON2bits 0091  
