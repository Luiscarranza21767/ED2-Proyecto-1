

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 09 16:33:45 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Version 2.40
    47                           ; Generated 17/11/2021 GMT
    48                           ; 
    49                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81     0000                     	;# 
    82     0001                     	;# 
    83     0002                     	;# 
    84     0003                     	;# 
    85     0004                     	;# 
    86     0005                     	;# 
    87     0006                     	;# 
    88     0007                     	;# 
    89     0008                     	;# 
    90     0009                     	;# 
    91     000A                     	;# 
    92     000B                     	;# 
    93     000C                     	;# 
    94     000D                     	;# 
    95     000E                     	;# 
    96     000E                     	;# 
    97     000F                     	;# 
    98     0010                     	;# 
    99     0011                     	;# 
   100     0012                     	;# 
   101     0013                     	;# 
   102     0014                     	;# 
   103     0015                     	;# 
   104     0015                     	;# 
   105     0016                     	;# 
   106     0017                     	;# 
   107     0018                     	;# 
   108     0019                     	;# 
   109     001A                     	;# 
   110     001B                     	;# 
   111     001B                     	;# 
   112     001C                     	;# 
   113     001D                     	;# 
   114     001E                     	;# 
   115     001F                     	;# 
   116     0081                     	;# 
   117     0085                     	;# 
   118     0086                     	;# 
   119     0087                     	;# 
   120     0088                     	;# 
   121     0089                     	;# 
   122     008C                     	;# 
   123     008D                     	;# 
   124     008E                     	;# 
   125     008F                     	;# 
   126     0090                     	;# 
   127     0091                     	;# 
   128     0092                     	;# 
   129     0093                     	;# 
   130     0093                     	;# 
   131     0093                     	;# 
   132     0094                     	;# 
   133     0095                     	;# 
   134     0096                     	;# 
   135     0097                     	;# 
   136     0098                     	;# 
   137     0099                     	;# 
   138     009A                     	;# 
   139     009B                     	;# 
   140     009C                     	;# 
   141     009D                     	;# 
   142     009E                     	;# 
   143     009F                     	;# 
   144     0105                     	;# 
   145     0107                     	;# 
   146     0108                     	;# 
   147     0109                     	;# 
   148     010C                     	;# 
   149     010C                     	;# 
   150     010D                     	;# 
   151     010E                     	;# 
   152     010F                     	;# 
   153     0185                     	;# 
   154     0187                     	;# 
   155     0188                     	;# 
   156     0189                     	;# 
   157     018C                     	;# 
   158     018D                     	;# 
   159     0000                     	;# 
   160     0001                     	;# 
   161     0002                     	;# 
   162     0003                     	;# 
   163     0004                     	;# 
   164     0005                     	;# 
   165     0006                     	;# 
   166     0007                     	;# 
   167     0008                     	;# 
   168     0009                     	;# 
   169     000A                     	;# 
   170     000B                     	;# 
   171     000C                     	;# 
   172     000D                     	;# 
   173     000E                     	;# 
   174     000E                     	;# 
   175     000F                     	;# 
   176     0010                     	;# 
   177     0011                     	;# 
   178     0012                     	;# 
   179     0013                     	;# 
   180     0014                     	;# 
   181     0015                     	;# 
   182     0015                     	;# 
   183     0016                     	;# 
   184     0017                     	;# 
   185     0018                     	;# 
   186     0019                     	;# 
   187     001A                     	;# 
   188     001B                     	;# 
   189     001B                     	;# 
   190     001C                     	;# 
   191     001D                     	;# 
   192     001E                     	;# 
   193     001F                     	;# 
   194     0081                     	;# 
   195     0085                     	;# 
   196     0086                     	;# 
   197     0087                     	;# 
   198     0088                     	;# 
   199     0089                     	;# 
   200     008C                     	;# 
   201     008D                     	;# 
   202     008E                     	;# 
   203     008F                     	;# 
   204     0090                     	;# 
   205     0091                     	;# 
   206     0092                     	;# 
   207     0093                     	;# 
   208     0093                     	;# 
   209     0093                     	;# 
   210     0094                     	;# 
   211     0095                     	;# 
   212     0096                     	;# 
   213     0097                     	;# 
   214     0098                     	;# 
   215     0099                     	;# 
   216     009A                     	;# 
   217     009B                     	;# 
   218     009C                     	;# 
   219     009D                     	;# 
   220     009E                     	;# 
   221     009F                     	;# 
   222     0105                     	;# 
   223     0107                     	;# 
   224     0108                     	;# 
   225     0109                     	;# 
   226     010C                     	;# 
   227     010C                     	;# 
   228     010D                     	;# 
   229     010E                     	;# 
   230     010F                     	;# 
   231     0185                     	;# 
   232     0187                     	;# 
   233     0188                     	;# 
   234     0189                     	;# 
   235     018C                     	;# 
   236     018D                     	;# 
   237     0000                     	;# 
   238     0001                     	;# 
   239     0002                     	;# 
   240     0003                     	;# 
   241     0004                     	;# 
   242     0005                     	;# 
   243     0006                     	;# 
   244     0007                     	;# 
   245     0008                     	;# 
   246     0009                     	;# 
   247     000A                     	;# 
   248     000B                     	;# 
   249     000C                     	;# 
   250     000D                     	;# 
   251     000E                     	;# 
   252     000E                     	;# 
   253     000F                     	;# 
   254     0010                     	;# 
   255     0011                     	;# 
   256     0012                     	;# 
   257     0013                     	;# 
   258     0014                     	;# 
   259     0015                     	;# 
   260     0015                     	;# 
   261     0016                     	;# 
   262     0017                     	;# 
   263     0018                     	;# 
   264     0019                     	;# 
   265     001A                     	;# 
   266     001B                     	;# 
   267     001B                     	;# 
   268     001C                     	;# 
   269     001D                     	;# 
   270     001E                     	;# 
   271     001F                     	;# 
   272     0081                     	;# 
   273     0085                     	;# 
   274     0086                     	;# 
   275     0087                     	;# 
   276     0088                     	;# 
   277     0089                     	;# 
   278     008C                     	;# 
   279     008D                     	;# 
   280     008E                     	;# 
   281     008F                     	;# 
   282     0090                     	;# 
   283     0091                     	;# 
   284     0092                     	;# 
   285     0093                     	;# 
   286     0093                     	;# 
   287     0093                     	;# 
   288     0094                     	;# 
   289     0095                     	;# 
   290     0096                     	;# 
   291     0097                     	;# 
   292     0098                     	;# 
   293     0099                     	;# 
   294     009A                     	;# 
   295     009B                     	;# 
   296     009C                     	;# 
   297     009D                     	;# 
   298     009E                     	;# 
   299     009F                     	;# 
   300     0105                     	;# 
   301     0107                     	;# 
   302     0108                     	;# 
   303     0109                     	;# 
   304     010C                     	;# 
   305     010C                     	;# 
   306     010D                     	;# 
   307     010E                     	;# 
   308     010F                     	;# 
   309     0185                     	;# 
   310     0187                     	;# 
   311     0188                     	;# 
   312     0189                     	;# 
   313     018C                     	;# 
   314     018D                     	;# 
   315     0000                     	;# 
   316     0001                     	;# 
   317     0002                     	;# 
   318     0003                     	;# 
   319     0004                     	;# 
   320     0005                     	;# 
   321     0006                     	;# 
   322     0007                     	;# 
   323     0008                     	;# 
   324     0009                     	;# 
   325     000A                     	;# 
   326     000B                     	;# 
   327     000C                     	;# 
   328     000D                     	;# 
   329     000E                     	;# 
   330     000E                     	;# 
   331     000F                     	;# 
   332     0010                     	;# 
   333     0011                     	;# 
   334     0012                     	;# 
   335     0013                     	;# 
   336     0014                     	;# 
   337     0015                     	;# 
   338     0015                     	;# 
   339     0016                     	;# 
   340     0017                     	;# 
   341     0018                     	;# 
   342     0019                     	;# 
   343     001A                     	;# 
   344     001B                     	;# 
   345     001B                     	;# 
   346     001C                     	;# 
   347     001D                     	;# 
   348     001E                     	;# 
   349     001F                     	;# 
   350     0081                     	;# 
   351     0085                     	;# 
   352     0086                     	;# 
   353     0087                     	;# 
   354     0088                     	;# 
   355     0089                     	;# 
   356     008C                     	;# 
   357     008D                     	;# 
   358     008E                     	;# 
   359     008F                     	;# 
   360     0090                     	;# 
   361     0091                     	;# 
   362     0092                     	;# 
   363     0093                     	;# 
   364     0093                     	;# 
   365     0093                     	;# 
   366     0094                     	;# 
   367     0095                     	;# 
   368     0096                     	;# 
   369     0097                     	;# 
   370     0098                     	;# 
   371     0099                     	;# 
   372     009A                     	;# 
   373     009B                     	;# 
   374     009C                     	;# 
   375     009D                     	;# 
   376     009E                     	;# 
   377     009F                     	;# 
   378     0105                     	;# 
   379     0107                     	;# 
   380     0108                     	;# 
   381     0109                     	;# 
   382     010C                     	;# 
   383     010C                     	;# 
   384     010D                     	;# 
   385     010E                     	;# 
   386     010F                     	;# 
   387     0185                     	;# 
   388     0187                     	;# 
   389     0188                     	;# 
   390     0189                     	;# 
   391     018C                     	;# 
   392     018D                     	;# 
   393     0000                     	;# 
   394     0001                     	;# 
   395     0002                     	;# 
   396     0003                     	;# 
   397     0004                     	;# 
   398     0005                     	;# 
   399     0006                     	;# 
   400     0007                     	;# 
   401     0008                     	;# 
   402     0009                     	;# 
   403     000A                     	;# 
   404     000B                     	;# 
   405     000C                     	;# 
   406     000D                     	;# 
   407     000E                     	;# 
   408     000E                     	;# 
   409     000F                     	;# 
   410     0010                     	;# 
   411     0011                     	;# 
   412     0012                     	;# 
   413     0013                     	;# 
   414     0014                     	;# 
   415     0015                     	;# 
   416     0015                     	;# 
   417     0016                     	;# 
   418     0017                     	;# 
   419     0018                     	;# 
   420     0019                     	;# 
   421     001A                     	;# 
   422     001B                     	;# 
   423     001B                     	;# 
   424     001C                     	;# 
   425     001D                     	;# 
   426     001E                     	;# 
   427     001F                     	;# 
   428     0081                     	;# 
   429     0085                     	;# 
   430     0086                     	;# 
   431     0087                     	;# 
   432     0088                     	;# 
   433     0089                     	;# 
   434     008C                     	;# 
   435     008D                     	;# 
   436     008E                     	;# 
   437     008F                     	;# 
   438     0090                     	;# 
   439     0091                     	;# 
   440     0092                     	;# 
   441     0093                     	;# 
   442     0093                     	;# 
   443     0093                     	;# 
   444     0094                     	;# 
   445     0095                     	;# 
   446     0096                     	;# 
   447     0097                     	;# 
   448     0098                     	;# 
   449     0099                     	;# 
   450     009A                     	;# 
   451     009B                     	;# 
   452     009C                     	;# 
   453     009D                     	;# 
   454     009E                     	;# 
   455     009F                     	;# 
   456     0105                     	;# 
   457     0107                     	;# 
   458     0108                     	;# 
   459     0109                     	;# 
   460     010C                     	;# 
   461     010C                     	;# 
   462     010D                     	;# 
   463     010E                     	;# 
   464     010F                     	;# 
   465     0185                     	;# 
   466     0187                     	;# 
   467     0188                     	;# 
   468     0189                     	;# 
   469     018C                     	;# 
   470     018D                     	;# 
   471     0000                     	;# 
   472     0001                     	;# 
   473     0002                     	;# 
   474     0003                     	;# 
   475     0004                     	;# 
   476     0005                     	;# 
   477     0006                     	;# 
   478     0007                     	;# 
   479     0008                     	;# 
   480     0009                     	;# 
   481     000A                     	;# 
   482     000B                     	;# 
   483     000C                     	;# 
   484     000D                     	;# 
   485     000E                     	;# 
   486     000E                     	;# 
   487     000F                     	;# 
   488     0010                     	;# 
   489     0011                     	;# 
   490     0012                     	;# 
   491     0013                     	;# 
   492     0014                     	;# 
   493     0015                     	;# 
   494     0015                     	;# 
   495     0016                     	;# 
   496     0017                     	;# 
   497     0018                     	;# 
   498     0019                     	;# 
   499     001A                     	;# 
   500     001B                     	;# 
   501     001B                     	;# 
   502     001C                     	;# 
   503     001D                     	;# 
   504     001E                     	;# 
   505     001F                     	;# 
   506     0081                     	;# 
   507     0085                     	;# 
   508     0086                     	;# 
   509     0087                     	;# 
   510     0088                     	;# 
   511     0089                     	;# 
   512     008C                     	;# 
   513     008D                     	;# 
   514     008E                     	;# 
   515     008F                     	;# 
   516     0090                     	;# 
   517     0091                     	;# 
   518     0092                     	;# 
   519     0093                     	;# 
   520     0093                     	;# 
   521     0093                     	;# 
   522     0094                     	;# 
   523     0095                     	;# 
   524     0096                     	;# 
   525     0097                     	;# 
   526     0098                     	;# 
   527     0099                     	;# 
   528     009A                     	;# 
   529     009B                     	;# 
   530     009C                     	;# 
   531     009D                     	;# 
   532     009E                     	;# 
   533     009F                     	;# 
   534     0105                     	;# 
   535     0107                     	;# 
   536     0108                     	;# 
   537     0109                     	;# 
   538     010C                     	;# 
   539     010C                     	;# 
   540     010D                     	;# 
   541     010E                     	;# 
   542     010F                     	;# 
   543     0185                     	;# 
   544     0187                     	;# 
   545     0188                     	;# 
   546     0189                     	;# 
   547     018C                     	;# 
   548     018D                     	;# 
   549     0000                     	;# 
   550     0001                     	;# 
   551     0002                     	;# 
   552     0003                     	;# 
   553     0004                     	;# 
   554     0005                     	;# 
   555     0006                     	;# 
   556     0007                     	;# 
   557     0008                     	;# 
   558     0009                     	;# 
   559     000A                     	;# 
   560     000B                     	;# 
   561     000C                     	;# 
   562     000D                     	;# 
   563     000E                     	;# 
   564     000E                     	;# 
   565     000F                     	;# 
   566     0010                     	;# 
   567     0011                     	;# 
   568     0012                     	;# 
   569     0013                     	;# 
   570     0014                     	;# 
   571     0015                     	;# 
   572     0015                     	;# 
   573     0016                     	;# 
   574     0017                     	;# 
   575     0018                     	;# 
   576     0019                     	;# 
   577     001A                     	;# 
   578     001B                     	;# 
   579     001B                     	;# 
   580     001C                     	;# 
   581     001D                     	;# 
   582     001E                     	;# 
   583     001F                     	;# 
   584     0081                     	;# 
   585     0085                     	;# 
   586     0086                     	;# 
   587     0087                     	;# 
   588     0088                     	;# 
   589     0089                     	;# 
   590     008C                     	;# 
   591     008D                     	;# 
   592     008E                     	;# 
   593     008F                     	;# 
   594     0090                     	;# 
   595     0091                     	;# 
   596     0092                     	;# 
   597     0093                     	;# 
   598     0093                     	;# 
   599     0093                     	;# 
   600     0094                     	;# 
   601     0095                     	;# 
   602     0096                     	;# 
   603     0097                     	;# 
   604     0098                     	;# 
   605     0099                     	;# 
   606     009A                     	;# 
   607     009B                     	;# 
   608     009C                     	;# 
   609     009D                     	;# 
   610     009E                     	;# 
   611     009F                     	;# 
   612     0105                     	;# 
   613     0107                     	;# 
   614     0108                     	;# 
   615     0109                     	;# 
   616     010C                     	;# 
   617     010C                     	;# 
   618     010D                     	;# 
   619     010E                     	;# 
   620     010F                     	;# 
   621     0185                     	;# 
   622     0187                     	;# 
   623     0188                     	;# 
   624     0189                     	;# 
   625     018C                     	;# 
   626     018D                     	;# 
   627     0008                     _PORTDbits	set	8
   628     0013                     _SSPBUF	set	19
   629     0014                     _SSPCON	set	20
   630     0006                     _PORTB	set	6
   631     0008                     _PORTD	set	8
   632     0006                     _PORTBbits	set	6
   633     0043                     _RD3	set	67
   634     0047                     _RD7	set	71
   635     0046                     _RD6	set	70
   636     0045                     _RD5	set	69
   637     0044                     _RD4	set	68
   638     008F                     _OSCCONbits	set	143
   639     0091                     _SSPCON2bits	set	145
   640     0087                     _TRISCbits	set	135
   641     0094                     _SSPSTAT	set	148
   642     0093                     _SSPADD	set	147
   643     0091                     _SSPCON2	set	145
   644     0081                     _OPTION_REGbits	set	129
   645     0095                     _WPUB	set	149
   646     0086                     _TRISB	set	134
   647     0088                     _TRISD	set	136
   648     0189                     _ANSELH	set	393
   649     0188                     _ANSEL	set	392
   650                           
   651                           	psect	strings
   652     0003                     __pstrings:
   653     0003                     stringtab:
   654     0003                     __stringtab:
   655     0003                     stringcode:	
   656                           ;	String table - string pointers are 1 byte each
   657                           
   658     0003                     stringdir:
   659     0003  3000               	movlw	high stringdir
   660     0004  008A               	movwf	10
   661     0005  0804               	movf	4,w
   662     0006  0A84               	incf	4,f
   663     0007  0782               	addwf	2,f
   664     0008                     __stringbase:
   665     0008  3400               	retlw	0
   666     0009                     __end_of__stringtab:
   667     0009                     STR_3:
   668     0009  3456               	retlw	86	;'V'
   669     000A  343A               	retlw	58	;':'
   670     000B  3420               	retlw	32	;' '
   671     000C  3420               	retlw	32	;' '
   672     000D  3420               	retlw	32	;' '
   673     000E  3472               	retlw	114	;'r'
   674     000F  3470               	retlw	112	;'p'
   675     0010  346D               	retlw	109	;'m'
   676     0011  3400               	retlw	0
   677     0012                     STR_2:
   678     0012  3454               	retlw	84	;'T'
   679     0013  343A               	retlw	58	;':'
   680     0014  3420               	retlw	32	;' '
   681     0015  3420               	retlw	32	;' '
   682     0016  3420               	retlw	32	;' '
   683     0017  3420               	retlw	32	;' '
   684     0018  3443               	retlw	67	;'C'
   685     0019  3400               	retlw	0
   686     001A                     STR_1:
   687     001A  3453               	retlw	83	;'S'
   688     001B  343A               	retlw	58	;':'
   689     001C  3420               	retlw	32	;' '
   690     001D  3420               	retlw	32	;' '
   691     001E  343A               	retlw	58	;':'
   692     001F  3400               	retlw	0
   693                           
   694                           	psect	cinit
   695     07F5                     start_initialization:	
   696                           ; #config settings
   697                           
   698     07F5                     __initialization:
   699                           
   700                           ; Clear objects allocated to BANK0
   701     07F5  1383               	bcf	3,7	;select IRP bank0
   702     07F6  3020               	movlw	low __pbssBANK0
   703     07F7  0084               	movwf	4
   704     07F8  3035               	movlw	low (__pbssBANK0+21)
   705     07F9  120A  118A  2063   	fcall	clear_ram0
   706     07FC                     end_of_initialization:	
   707                           ;End of C runtime variable initialization code
   708                           
   709     07FC                     __end_of__initialization:
   710     07FC  0183               	clrf	3
   711     07FD  120A  118A  2DC1   	ljmp	_main	;jump to C main() function
   712                           
   713                           	psect	bssBANK0
   714     0020                     __pbssBANK0:
   715     0020                     _conver:
   716     0020                     	ds	4
   717     0024                     _buffer:
   718     0024                     	ds	3
   719     0027                     _valADC:
   720     0027                     	ds	3
   721     002A                     _SERVO:
   722     002A                     	ds	1
   723     002B                     _modo:
   724     002B                     	ds	1
   725     002C                     _vel:
   726     002C                     	ds	1
   727     002D                     _minutos:
   728     002D                     	ds	1
   729     002E                     _min:
   730     002E                     	ds	1
   731     002F                     _segundos:
   732     002F                     	ds	1
   733     0030                     _sec:
   734     0030                     	ds	1
   735     0031                     _tempint:
   736     0031                     	ds	1
   737     0032                     _centena:
   738     0032                     	ds	1
   739     0033                     _decena:
   740     0033                     	ds	1
   741     0034                     _unidad:
   742     0034                     	ds	1
   743                           
   744                           	psect	clrtext
   745     0063                     clear_ram0:	
   746                           ;	Called with FSR containing the base address, and
   747                           ;	W with the last address+1
   748                           
   749     0063  0064               	clrwdt	;clear the watchdog before getting into this loop
   750     0064                     clrloop0:
   751     0064  0180               	clrf	0	;clear RAM location pointed to by FSR
   752     0065  0A84               	incf	4,f	;increment pointer
   753     0066  0604               	xorwf	4,w	;XOR with final address
   754     0067  1903               	btfsc	3,2	;have we reached the end yet?
   755     0068  3400               	retlw	0	;all done for this memory range, return
   756     0069  0604               	xorwf	4,w	;XOR again to restore value
   757     006A  2864               	goto	clrloop0	;do the next byte
   758                           
   759                           	psect	cstackCOMMON
   760     0070                     __pcstackCOMMON:
   761     0070                     ?_setupINTOSC:
   762     0070                     ??_setupINTOSC:	
   763                           ; 1 bytes @ 0x0
   764                           
   765     0070                     ?_portsetup:	
   766                           ; 1 bytes @ 0x0
   767                           
   768     0070                     ?_Lcd_Init:	
   769                           ; 1 bytes @ 0x0
   770                           
   771     0070                     ?_Lcd_Clear:	
   772                           ; 1 bytes @ 0x0
   773                           
   774     0070                     ?_Lcd_Write_Char:	
   775                           ; 1 bytes @ 0x0
   776                           
   777     0070                     ?_Lcd_Write_String:	
   778                           ; 1 bytes @ 0x0
   779                           
   780     0070                     ?_leer_temperatura:	
   781                           ; 1 bytes @ 0x0
   782                           
   783     0070                     ?_leer_x:	
   784                           ; 1 bytes @ 0x0
   785                           
   786     0070                     ?_envio_ESP:	
   787                           ; 1 bytes @ 0x0
   788                           
   789     0070                     ?_I2C_Master_Start:	
   790                           ; 1 bytes @ 0x0
   791                           
   792     0070                     ??_I2C_Master_Start:	
   793                           ; 1 bytes @ 0x0
   794                           
   795     0070                     ?_I2C_Master_Write:	
   796                           ; 1 bytes @ 0x0
   797                           
   798     0070                     ?_I2C_Master_Stop:	
   799                           ; 1 bytes @ 0x0
   800                           
   801     0070                     ??_I2C_Master_Stop:	
   802                           ; 1 bytes @ 0x0
   803                           
   804     0070                     ?_leer_velocidad:	
   805                           ; 1 bytes @ 0x0
   806                           
   807     0070                     ?_inttochar:	
   808                           ; 1 bytes @ 0x0
   809                           
   810     0070                     ??_inttochar:	
   811                           ; 1 bytes @ 0x0
   812                           
   813     0070                     ?_I2C_Master_RepeatedStart:	
   814                           ; 1 bytes @ 0x0
   815                           
   816     0070                     ??_I2C_Master_RepeatedStart:	
   817                           ; 1 bytes @ 0x0
   818                           
   819     0070                     ?_main:	
   820                           ; 1 bytes @ 0x0
   821                           
   822     0070                     ?_convertir:	
   823                           ; 1 bytes @ 0x0
   824                           
   825     0070                     ?_I2C_Master_Wait:	
   826                           ; 1 bytes @ 0x0
   827                           
   828     0070                     ??_I2C_Master_Wait:	
   829                           ; 1 bytes @ 0x0
   830                           
   831     0070                     ?_Lcd_Port:	
   832                           ; 1 bytes @ 0x0
   833                           
   834     0070                     ??_Lcd_Port:	
   835                           ; 1 bytes @ 0x0
   836                           
   837     0070                     ?_Lcd_Cmd:	
   838                           ; 1 bytes @ 0x0
   839                           
   840     0070                     ?___bmul:	
   841                           ; 1 bytes @ 0x0
   842                           
   843     0070                     ?___lbdiv:	
   844                           ; 1 bytes @ 0x0
   845                           
   846     0070                     ?___lbmod:	
   847                           ; 1 bytes @ 0x0
   848                           
   849     0070                     ?_I2C_Master_Read:	
   850                           ; 1 bytes @ 0x0
   851                           
   852     0070                     ?___lwdiv:	
   853                           ; 2 bytes @ 0x0
   854                           
   855     0070                     ?___lwmod:	
   856                           ; 2 bytes @ 0x0
   857                           
   858     0070                     ?___lldiv:	
   859                           ; 2 bytes @ 0x0
   860                           
   861     0070                     Lcd_Port@a:	
   862                           ; 4 bytes @ 0x0
   863                           
   864     0070                     inttochar@num:	
   865                           ; 1 bytes @ 0x0
   866                           
   867     0070                     setupINTOSC@IRCF:	
   868                           ; 1 bytes @ 0x0
   869                           
   870     0070                     ___bmul@multiplicand:	
   871                           ; 1 bytes @ 0x0
   872                           
   873     0070                     ___lbdiv@divisor:	
   874                           ; 1 bytes @ 0x0
   875                           
   876     0070                     ___lbmod@divisor:	
   877                           ; 1 bytes @ 0x0
   878                           
   879     0070                     I2C_Master_Write@d:	
   880                           ; 1 bytes @ 0x0
   881                           
   882     0070                     I2C_Master_Read@a:	
   883                           ; 2 bytes @ 0x0
   884                           
   885     0070                     ___lwdiv@divisor:	
   886                           ; 2 bytes @ 0x0
   887                           
   888     0070                     ___lwmod@divisor:	
   889                           ; 2 bytes @ 0x0
   890                           
   891     0070                     ___lldiv@divisor:	
   892                           ; 2 bytes @ 0x0
   893                           
   894                           
   895                           ; 4 bytes @ 0x0
   896     0070                     	ds	1
   897     0071                     ??_Lcd_Write_Char:
   898     0071                     ??_Lcd_Cmd:	
   899                           ; 1 bytes @ 0x1
   900                           
   901     0071                     ??___bmul:	
   902                           ; 1 bytes @ 0x1
   903                           
   904     0071                     ??___lbdiv:	
   905                           ; 1 bytes @ 0x1
   906                           
   907     0071                     ??___lbmod:	
   908                           ; 1 bytes @ 0x1
   909                           
   910                           
   911                           ; 1 bytes @ 0x1
   912     0071                     	ds	1
   913     0072                     ?_enviar_x:
   914     0072                     ??_envio_ESP:	
   915                           ; 1 bytes @ 0x2
   916                           
   917     0072                     ??_I2C_Master_Write:	
   918                           ; 1 bytes @ 0x2
   919                           
   920     0072                     ??_I2C_Master_Read:	
   921                           ; 1 bytes @ 0x2
   922                           
   923     0072                     enviar_x@val2:	
   924                           ; 1 bytes @ 0x2
   925                           
   926     0072                     Lcd_Write_Char@temp:	
   927                           ; 1 bytes @ 0x2
   928                           
   929     0072                     ___bmul@product:	
   930                           ; 1 bytes @ 0x2
   931                           
   932     0072                     ___lbdiv@dividend:	
   933                           ; 1 bytes @ 0x2
   934                           
   935     0072                     ___lwdiv@dividend:	
   936                           ; 1 bytes @ 0x2
   937                           
   938     0072                     ___lwmod@dividend:	
   939                           ; 2 bytes @ 0x2
   940                           
   941                           
   942                           ; 2 bytes @ 0x2
   943     0072                     	ds	1
   944     0073                     ??_enviar_x:
   945     0073                     Lcd_Cmd@a:	
   946                           ; 1 bytes @ 0x3
   947                           
   948     0073                     Lcd_Write_Char@y:	
   949                           ; 1 bytes @ 0x3
   950                           
   951     0073                     ___bmul@multiplier:	
   952                           ; 1 bytes @ 0x3
   953                           
   954     0073                     ___lbdiv@counter:	
   955                           ; 1 bytes @ 0x3
   956                           
   957     0073                     ___lbmod@dividend:	
   958                           ; 1 bytes @ 0x3
   959                           
   960                           
   961                           ; 1 bytes @ 0x3
   962     0073                     	ds	1
   963     0074                     ??_Lcd_Init:
   964     0074                     ??_Lcd_Clear:	
   965                           ; 1 bytes @ 0x4
   966                           
   967     0074                     ?_Lcd_Set_Cursor:	
   968                           ; 1 bytes @ 0x4
   969                           
   970     0074                     ??_convertir:	
   971                           ; 1 bytes @ 0x4
   972                           
   973     0074                     ??___lwdiv:	
   974                           ; 1 bytes @ 0x4
   975                           
   976     0074                     ??___lwmod:	
   977                           ; 1 bytes @ 0x4
   978                           
   979     0074                     Lcd_Set_Cursor@b:	
   980                           ; 1 bytes @ 0x4
   981                           
   982     0074                     Lcd_Write_Char@a:	
   983                           ; 1 bytes @ 0x4
   984                           
   985     0074                     ___lbdiv@quotient:	
   986                           ; 1 bytes @ 0x4
   987                           
   988     0074                     ___lbmod@counter:	
   989                           ; 1 bytes @ 0x4
   990                           
   991     0074                     I2C_Master_Read@temp:	
   992                           ; 1 bytes @ 0x4
   993                           
   994     0074                     ___lldiv@dividend:	
   995                           ; 2 bytes @ 0x4
   996                           
   997                           
   998                           ; 4 bytes @ 0x4
   999     0074                     	ds	1
  1000     0075                     ??_Lcd_Set_Cursor:
  1001     0075                     ??_Lcd_Write_String:	
  1002                           ; 1 bytes @ 0x5
  1003                           
  1004     0075                     convertir@unidad:	
  1005                           ; 1 bytes @ 0x5
  1006                           
  1007     0075                     enviar_x@val1:	
  1008                           ; 1 bytes @ 0x5
  1009                           
  1010     0075                     ___lbmod@rem:	
  1011                           ; 1 bytes @ 0x5
  1012                           
  1013     0075                     ___lwmod@counter:	
  1014                           ; 1 bytes @ 0x5
  1015                           
  1016     0075                     Lcd_Write_String@i:	
  1017                           ; 1 bytes @ 0x5
  1018                           
  1019     0075                     ___lwdiv@quotient:	
  1020                           ; 2 bytes @ 0x5
  1021                           
  1022                           
  1023                           ; 2 bytes @ 0x5
  1024     0075                     	ds	1
  1025     0076                     convertir@decena:
  1026     0076                     Lcd_Set_Cursor@a:	
  1027                           ; 1 bytes @ 0x6
  1028                           
  1029                           
  1030                           ; 1 bytes @ 0x6
  1031     0076                     	ds	1
  1032     0077                     convertir@conversion:
  1033     0077                     Lcd_Set_Cursor@z:	
  1034                           ; 1 bytes @ 0x7
  1035                           
  1036     0077                     Lcd_Write_String@a:	
  1037                           ; 1 bytes @ 0x7
  1038                           
  1039     0077                     ___lwdiv@counter:	
  1040                           ; 1 bytes @ 0x7
  1041                           
  1042                           
  1043                           ; 1 bytes @ 0x7
  1044     0077                     	ds	1
  1045     0078                     ?_descomponer:
  1046     0078                     ??___lldiv:	
  1047                           ; 1 bytes @ 0x8
  1048                           
  1049     0078                     convertir@valor:	
  1050                           ; 1 bytes @ 0x8
  1051                           
  1052     0078                     Lcd_Set_Cursor@y:	
  1053                           ; 1 bytes @ 0x8
  1054                           
  1055     0078                     descomponer@pos:	
  1056                           ; 1 bytes @ 0x8
  1057                           
  1058                           
  1059                           ; 2 bytes @ 0x8
  1060     0078                     	ds	1
  1061     0079                     ??_leer_x:
  1062     0079                     Lcd_Set_Cursor@temp:	
  1063                           ; 1 bytes @ 0x9
  1064                           
  1065     0079                     ___lldiv@quotient:	
  1066                           ; 1 bytes @ 0x9
  1067                           
  1068                           
  1069                           ; 4 bytes @ 0x9
  1070     0079                     	ds	1
  1071     007A                     descomponer@num:
  1072                           
  1073                           ; 2 bytes @ 0xA
  1074     007A                     	ds	1
  1075     007B                     leer_x@address:
  1076                           
  1077                           ; 1 bytes @ 0xB
  1078     007B                     	ds	1
  1079     007C                     ??_Escribir_dato:
  1080     007C                     ??_leer_velocidad:	
  1081                           ; 1 bytes @ 0xC
  1082                           
  1083     007C                     ??_descomponer:	
  1084                           ; 1 bytes @ 0xC
  1085                           
  1086     007C                     leer_x@valor:	
  1087                           ; 1 bytes @ 0xC
  1088                           
  1089                           
  1090                           ; 1 bytes @ 0xC
  1091     007C                     	ds	1
  1092     007D                     ___lldiv@counter:
  1093                           
  1094                           ; 1 bytes @ 0xD
  1095     007D                     	ds	1
  1096     007E                     ??_leer_temperatura:
  1097                           
  1098                           	psect	cstackBANK0
  1099     0035                     __pcstackBANK0:	
  1100                           ; 1 bytes @ 0xE
  1101                           
  1102     0035                     ?_I2C_Master_Init:
  1103     0035                     descomponer@cent:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106     0035                     I2C_Master_Init@c:	
  1107                           ; 1 bytes @ 0x0
  1108                           
  1109                           
  1110                           ; 4 bytes @ 0x0
  1111     0035                     	ds	1
  1112     0036                     descomponer@uni:
  1113                           
  1114                           ; 1 bytes @ 0x1
  1115     0036                     	ds	1
  1116     0037                     descomponer@dec:
  1117                           
  1118                           ; 1 bytes @ 0x2
  1119     0037                     	ds	1
  1120     0038                     ?_Escribir_dato:
  1121     0038                     Escribir_dato@posx:	
  1122                           ; 1 bytes @ 0x3
  1123                           
  1124                           
  1125                           ; 1 bytes @ 0x3
  1126     0038                     	ds	1
  1127     0039                     ??_I2C_Master_Init:
  1128     0039                     Escribir_dato@posy:	
  1129                           ; 1 bytes @ 0x4
  1130                           
  1131                           
  1132                           ; 1 bytes @ 0x4
  1133     0039                     	ds	1
  1134     003A                     Escribir_dato@dato:
  1135                           
  1136                           ; 1 bytes @ 0x5
  1137     003A                     	ds	3
  1138     003D                     ??_portsetup:
  1139                           
  1140                           ; 1 bytes @ 0x8
  1141     003D                     	ds	3
  1142     0040                     ??_main:
  1143                           
  1144                           ; 1 bytes @ 0xB
  1145     0040                     	ds	3
  1146     0043                     _main$209:
  1147                           
  1148                           ; 1 bytes @ 0xE
  1149     0043                     	ds	1
  1150                           
  1151                           	psect	maintext
  1152     05C1                     __pmaintext:	
  1153 ;;
  1154 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1155 ;;
  1156 ;; *************** function _main *****************
  1157 ;; Defined at:
  1158 ;;		line 72 in file "main.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : B00/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1172 ;;      Params:         0       0       0       0       0
  1173 ;;      Locals:         0       1       0       0       0
  1174 ;;      Temps:          0       3       0       0       0
  1175 ;;      Totals:         0       4       0       0       0
  1176 ;;Total ram usage:        4 bytes
  1177 ;; Hardware stack levels required when called: 5
  1178 ;; This function calls:
  1179 ;;		_Escribir_dato
  1180 ;;		_I2C_Master_Start
  1181 ;;		_I2C_Master_Stop
  1182 ;;		_I2C_Master_Write
  1183 ;;		_Lcd_Clear
  1184 ;;		_Lcd_Init
  1185 ;;		_Lcd_Set_Cursor
  1186 ;;		_Lcd_Write_Char
  1187 ;;		_Lcd_Write_String
  1188 ;;		_enviar_x
  1189 ;;		_envio_ESP
  1190 ;;		_leer_temperatura
  1191 ;;		_leer_velocidad
  1192 ;;		_leer_x
  1193 ;;		_portsetup
  1194 ;;		_setupINTOSC
  1195 ;; This function is called by:
  1196 ;;		Startup code after reset
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200     05C1                     _main:	
  1201                           ;psect for function _main
  1202                           
  1203                           
  1204                           ;main.c: 74:     setupINTOSC(7);
  1205                           
  1206                           ;incstack = 0
  1207                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1208     05C1  3007               	movlw	7
  1209     05C2  120A  118A  23AF  120A  118A  	fcall	_setupINTOSC
  1210                           
  1211                           ;main.c: 76:     portsetup();
  1212     05C7  120A  118A  2188  120A  118A  	fcall	_portsetup
  1213                           
  1214                           ;main.c: 79:     Lcd_Init();
  1215     05CC  120A  118A  2441  120A  118A  	fcall	_Lcd_Init
  1216                           
  1217                           ;main.c: 80:     Lcd_Clear();
  1218     05D1  120A  118A  2074  120A  118A  	fcall	_Lcd_Clear
  1219                           
  1220                           ;main.c: 81:     Lcd_Set_Cursor(1,13);
  1221     05D6  300D               	movlw	13
  1222     05D7  00F4               	movwf	Lcd_Set_Cursor@b
  1223     05D8  3001               	movlw	1
  1224     05D9  120A  118A  22F3  120A  118A  	fcall	_Lcd_Set_Cursor
  1225                           
  1226                           ;main.c: 82:     Lcd_Write_Char(':');
  1227     05DE  303A               	movlw	58
  1228     05DF  120A  118A  21B5  120A  118A  	fcall	_Lcd_Write_Char
  1229                           
  1230                           ;main.c: 83:     Lcd_Set_Cursor(2,9);
  1231     05E4  3009               	movlw	9
  1232     05E5  00F4               	movwf	Lcd_Set_Cursor@b
  1233     05E6  3002               	movlw	2
  1234     05E7  120A  118A  22F3  120A  118A  	fcall	_Lcd_Set_Cursor
  1235                           
  1236                           ;main.c: 84:     Lcd_Write_String("S:  :");
  1237     05EC  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1238     05ED  120A  118A  2119  120A  118A  	fcall	_Lcd_Write_String
  1239                           
  1240                           ;main.c: 85:     Lcd_Set_Cursor(2,1);
  1241     05F2  01F4               	clrf	Lcd_Set_Cursor@b
  1242     05F3  0AF4               	incf	Lcd_Set_Cursor@b,f
  1243     05F4  3002               	movlw	2
  1244     05F5  120A  118A  22F3  120A  118A  	fcall	_Lcd_Set_Cursor
  1245                           
  1246                           ;main.c: 86:     Lcd_Write_String("T:    C");
  1247     05FA  300A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1248     05FB  120A  118A  2119  120A  118A  	fcall	_Lcd_Write_String
  1249                           
  1250                           ;main.c: 87:     Lcd_Set_Cursor(1,1);
  1251     0600  01F4               	clrf	Lcd_Set_Cursor@b
  1252     0601  0AF4               	incf	Lcd_Set_Cursor@b,f
  1253     0602  3001               	movlw	1
  1254     0603  120A  118A  22F3  120A  118A  	fcall	_Lcd_Set_Cursor
  1255                           
  1256                           ;main.c: 88:     Lcd_Write_String("V:   rpm");
  1257     0608  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1258     0609  120A  118A  2119  120A  118A  	fcall	_Lcd_Write_String
  1259                           
  1260                           ;main.c: 91:     modo = 0;
  1261     060E  1283               	bcf	3,5	;RP0=0, select bank0
  1262     060F  1303               	bcf	3,6	;RP1=0, select bank0
  1263     0610  01AB               	clrf	_modo
  1264                           
  1265                           ;main.c: 92:     sec = 0;
  1266     0611  01B0               	clrf	_sec
  1267                           
  1268                           ;main.c: 93:     min = 0;
  1269     0612  01AE               	clrf	_min
  1270                           
  1271                           ;main.c: 95:     enviar_x(0, 0);
  1272     0613  01F2               	clrf	enviar_x@val2
  1273     0614  3000               	movlw	0
  1274     0615  120A  118A  2249  120A  118A  	fcall	_enviar_x
  1275     061A                     l1899:
  1276                           
  1277                           ;main.c: 99:         leer_temperatura();
  1278     061A  120A  118A  2160  120A  118A  	fcall	_leer_temperatura
  1279                           
  1280                           ;main.c: 101:         enviar_x(0, 0);
  1281     061F  01F2               	clrf	enviar_x@val2
  1282     0620  3000               	movlw	0
  1283     0621  120A  118A  2249  120A  118A  	fcall	_enviar_x
  1284                           
  1285                           ;main.c: 103:         sec = leer_x(0x00);
  1286     0626  3000               	movlw	0
  1287     0627  120A  118A  2370  120A  118A  	fcall	_leer_x
  1288     062C  1283               	bcf	3,5	;RP0=0, select bank0
  1289     062D  00B0               	movwf	_sec
  1290                           
  1291                           ;main.c: 104:         Escribir_dato(sec, 14, 1);
  1292     062E  300E               	movlw	14
  1293     062F  00B8               	movwf	Escribir_dato@posx
  1294     0630  01B9               	clrf	Escribir_dato@posy
  1295     0631  0AB9               	incf	Escribir_dato@posy,f
  1296     0632  0830               	movf	_sec,w
  1297     0633  120A  118A  23F5  120A  118A  	fcall	_Escribir_dato
  1298                           
  1299                           ;main.c: 106:         min = leer_x(0x01);
  1300     0638  3001               	movlw	1
  1301     0639  120A  118A  2370  120A  118A  	fcall	_leer_x
  1302     063E  1283               	bcf	3,5	;RP0=0, select bank0
  1303     063F  00AE               	movwf	_min
  1304                           
  1305                           ;main.c: 107:         Escribir_dato(min, 11, 1);
  1306     0640  300B               	movlw	11
  1307     0641  00B8               	movwf	Escribir_dato@posx
  1308     0642  01B9               	clrf	Escribir_dato@posy
  1309     0643  0AB9               	incf	Escribir_dato@posy,f
  1310     0644  082E               	movf	_min,w
  1311     0645  120A  118A  23F5  120A  118A  	fcall	_Escribir_dato
  1312                           
  1313                           ;main.c: 108:         envio_ESP();
  1314     064A  120A  118A  255C  120A  118A  	fcall	_envio_ESP
  1315                           
  1316                           ;main.c: 111:         if (!PORTBbits.RB1){
  1317     064F  1283               	bcf	3,5	;RP0=0, select bank0
  1318     0650  1303               	bcf	3,6	;RP1=0, select bank0
  1319     0651  1886               	btfsc	6,1	;volatile
  1320     0652  2E89               	goto	l1933
  1321                           
  1322                           ;main.c: 112:             if (SERVO != 0){
  1323     0653  082A               	movf	_SERVO,w
  1324     0654  1903               	btfsc	3,2
  1325     0655  2E68               	goto	l1927
  1326                           
  1327                           ;main.c: 113:                 SERVO = 0;
  1328     0656  01AA               	clrf	_SERVO
  1329                           
  1330                           ;main.c: 114:                 I2C_Master_Start();
  1331     0657  120A  118A  204D  120A  118A  	fcall	_I2C_Master_Start
  1332                           
  1333                           ;main.c: 115:                 I2C_Master_Write(0xb0);
  1334     065C  30B0               	movlw	176
  1335     065D  00F0               	movwf	I2C_Master_Write@d
  1336     065E  3000               	movlw	0
  1337     065F  00F1               	movwf	I2C_Master_Write@d+1
  1338     0660  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  1339                           
  1340                           ;main.c: 116:                 I2C_Master_Write(0);
  1341     0665  3000               	movlw	0
  1342     0666  00F0               	movwf	I2C_Master_Write@d
  1343     0667  2E7E               	goto	L1
  1344     0668                     l1927:	
  1345                           ;main.c: 118:             }
  1346                           
  1347                           ;main.c: 117:                 I2C_Master_Stop();
  1348                           
  1349     0668  082A               	movf	_SERVO,w
  1350     0669  1D03               	btfss	3,2
  1351     066A  2E89               	goto	l1933
  1352                           
  1353                           ;main.c: 120:                 SERVO = 1;
  1354     066B  01AA               	clrf	_SERVO
  1355     066C  0AAA               	incf	_SERVO,f
  1356                           
  1357                           ;main.c: 121:                 I2C_Master_Start();
  1358     066D  120A  118A  204D  120A  118A  	fcall	_I2C_Master_Start
  1359                           
  1360                           ;main.c: 122:                 I2C_Master_Write(0xb0);
  1361     0672  30B0               	movlw	176
  1362     0673  00F0               	movwf	I2C_Master_Write@d
  1363     0674  3000               	movlw	0
  1364     0675  00F1               	movwf	I2C_Master_Write@d+1
  1365     0676  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  1366                           
  1367                           ;main.c: 123:                 I2C_Master_Write(1);
  1368     067B  3001               	movlw	1
  1369     067C  00F0               	movwf	I2C_Master_Write@d
  1370     067D  3000               	movlw	0
  1371     067E                     L1:
  1372     067E  00F1               	movwf	I2C_Master_Write@d+1
  1373     067F  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  1374                           
  1375                           ;main.c: 124:                 I2C_Master_Stop();
  1376     0684  120A  118A  2052  120A  118A  	fcall	_I2C_Master_Stop
  1377     0689                     l1933:
  1378                           
  1379                           ;main.c: 129:         if(!PORTBbits.RB4){
  1380     0689  1283               	bcf	3,5	;RP0=0, select bank0
  1381     068A  1E06               	btfss	6,4	;volatile
  1382     068B  2EEE               	goto	l1983
  1383     068C  2FE5               	goto	l2031
  1384     068D                     l1937:
  1385                           
  1386                           ;main.c: 133:                 leer_temperatura();
  1387     068D  120A  118A  2160  120A  118A  	fcall	_leer_temperatura
  1388                           
  1389                           ;main.c: 134:                 envio_ESP();
  1390     0692  120A  118A  255C  120A  118A  	fcall	_envio_ESP
  1391                           
  1392                           ;main.c: 135:                 Escribir_dato(sec, 14, 1);
  1393     0697  300E               	movlw	14
  1394     0698  1283               	bcf	3,5	;RP0=0, select bank0
  1395     0699  1303               	bcf	3,6	;RP1=0, select bank0
  1396     069A  00B8               	movwf	Escribir_dato@posx
  1397     069B  01B9               	clrf	Escribir_dato@posy
  1398     069C  0AB9               	incf	Escribir_dato@posy,f
  1399     069D  0830               	movf	_sec,w
  1400     069E  120A  118A  23F5  120A  118A  	fcall	_Escribir_dato
  1401                           
  1402                           ;main.c: 136:                 Escribir_dato(min, 11, 1);
  1403     06A3  300B               	movlw	11
  1404     06A4  00B8               	movwf	Escribir_dato@posx
  1405     06A5  01B9               	clrf	Escribir_dato@posy
  1406     06A6  0AB9               	incf	Escribir_dato@posy,f
  1407     06A7  082E               	movf	_min,w
  1408     06A8  120A  118A  23F5  120A  118A  	fcall	_Escribir_dato
  1409                           
  1410                           ;main.c: 138:                 if(PORTBbits.RB7 == 0){
  1411     06AD  1B86               	btfsc	6,7	;volatile
  1412     06AE  2EB8               	goto	l1947
  1413                           
  1414                           ;main.c: 140:                     if (modo < 1){
  1415     06AF  082B               	movf	_modo,w
  1416     06B0  1D03               	btfss	3,2
  1417     06B1  2EB7               	goto	l1945
  1418                           
  1419                           ;main.c: 141:                         modo += 1;
  1420     06B2  3001               	movlw	1
  1421     06B3  00C0               	movwf	??_main
  1422     06B4  0840               	movf	??_main,w
  1423     06B5  07AB               	addwf	_modo,f
  1424                           
  1425                           ;main.c: 142:                     }
  1426     06B6  2EB8               	goto	l1947
  1427     06B7                     l1945:
  1428                           
  1429                           ;main.c: 144:                         modo = 0;
  1430     06B7  01AB               	clrf	_modo
  1431     06B8                     l1947:
  1432                           
  1433                           ;main.c: 148:                 if(!PORTBbits.RB6){
  1434     06B8  1B06               	btfsc	6,6	;volatile
  1435     06B9  2ED5               	goto	l1965
  1436                           
  1437                           ;main.c: 150:                     if (modo == 0){
  1438     06BA  082B               	movf	_modo,w
  1439     06BB  1D03               	btfss	3,2
  1440     06BC  2EC8               	goto	l1957
  1441                           
  1442                           ;main.c: 151:                         if (sec<59){
  1443     06BD  303B               	movlw	59
  1444     06BE  0230               	subwf	_sec,w
  1445     06BF  1803               	skipnc
  1446     06C0  2EC6               	goto	l1955
  1447                           
  1448                           ;main.c: 152:                             sec ++;
  1449     06C1  3001               	movlw	1
  1450     06C2  00C0               	movwf	??_main
  1451     06C3  0840               	movf	??_main,w
  1452     06C4  07B0               	addwf	_sec,f
  1453                           
  1454                           ;main.c: 153:                         }
  1455     06C5  2ED5               	goto	l1965
  1456     06C6                     l1955:
  1457                           
  1458                           ;main.c: 155:                             sec = 0;
  1459     06C6  01B0               	clrf	_sec
  1460     06C7  2ED5               	goto	l1965
  1461     06C8                     l1957:
  1462     06C8  032B               	decf	_modo,w
  1463     06C9  1D03               	btfss	3,2
  1464     06CA  2ED5               	goto	l1965
  1465                           
  1466                           ;main.c: 159:                         if (min<59){
  1467     06CB  303B               	movlw	59
  1468     06CC  022E               	subwf	_min,w
  1469     06CD  1803               	skipnc
  1470     06CE  2ED4               	goto	l1963
  1471                           
  1472                           ;main.c: 160:                             min++;
  1473     06CF  3001               	movlw	1
  1474     06D0  00C0               	movwf	??_main
  1475     06D1  0840               	movf	??_main,w
  1476     06D2  07AE               	addwf	_min,f
  1477                           
  1478                           ;main.c: 161:                         }
  1479     06D3  2ED5               	goto	l1965
  1480     06D4                     l1963:
  1481                           
  1482                           ;main.c: 163:                             min = 0;
  1483     06D4  01AE               	clrf	_min
  1484     06D5                     l1965:
  1485                           
  1486                           ;main.c: 170:                 if(!PORTBbits.RB5){
  1487     06D5  1A86               	btfsc	6,5	;volatile
  1488     06D6  2EEE               	goto	l1983
  1489                           
  1490                           ;main.c: 173:                     if (modo == 0){
  1491     06D7  082B               	movf	_modo,w
  1492     06D8  1D03               	btfss	3,2
  1493     06D9  2EE3               	goto	l1975
  1494                           
  1495                           ;main.c: 174:                         if (sec > 0){
  1496     06DA  0830               	movf	_sec,w
  1497     06DB  1903               	btfsc	3,2
  1498     06DC  2EE0               	goto	l1973
  1499                           
  1500                           ;main.c: 175:                             sec--;
  1501     06DD  3001               	movlw	1
  1502     06DE  02B0               	subwf	_sec,f
  1503                           
  1504                           ;main.c: 176:                         }
  1505     06DF  2EEE               	goto	l1983
  1506     06E0                     l1973:
  1507                           
  1508                           ;main.c: 178:                             sec = 59;
  1509     06E0  303B               	movlw	59
  1510     06E1  00B0               	movwf	_sec
  1511     06E2  2EEE               	goto	l1983
  1512     06E3                     l1975:
  1513     06E3  032B               	decf	_modo,w
  1514     06E4  1D03               	btfss	3,2
  1515     06E5  2EEE               	goto	l1983
  1516                           
  1517                           ;main.c: 182:                         if (min > 0){
  1518     06E6  082E               	movf	_min,w
  1519     06E7  1903               	btfsc	3,2
  1520     06E8  2EEC               	goto	l1981
  1521                           
  1522                           ;main.c: 183:                             min--;
  1523     06E9  3001               	movlw	1
  1524     06EA  02AE               	subwf	_min,f
  1525                           
  1526                           ;main.c: 184:                         }
  1527     06EB  2EEE               	goto	l1983
  1528     06EC                     l1981:
  1529                           
  1530                           ;main.c: 186:                             min = 59;
  1531     06EC  303B               	movlw	59
  1532     06ED  00AE               	movwf	_min
  1533     06EE                     l1983:
  1534                           
  1535                           ;main.c: 131:             while(PORTBbits.RB3){
  1536     06EE  1986               	btfsc	6,3	;volatile
  1537     06EF  2E8D               	goto	l1937
  1538                           
  1539                           ;main.c: 193:             enviar_x(0,0);
  1540     06F0  01F2               	clrf	enviar_x@val2
  1541     06F1  3000               	movlw	0
  1542     06F2  120A  118A  2249  120A  118A  	fcall	_enviar_x
  1543                           
  1544                           ;main.c: 195:             Escribir_dato(sec, 14, 2);
  1545     06F7  300E               	movlw	14
  1546     06F8  1283               	bcf	3,5	;RP0=0, select bank0
  1547     06F9  00B8               	movwf	Escribir_dato@posx
  1548     06FA  3002               	movlw	2
  1549     06FB  00B9               	movwf	Escribir_dato@posy
  1550     06FC  0830               	movf	_sec,w
  1551     06FD  120A  118A  23F5  120A  118A  	fcall	_Escribir_dato
  1552                           
  1553                           ;main.c: 196:             Escribir_dato(min, 11, 2);
  1554     0702  300B               	movlw	11
  1555     0703  00B8               	movwf	Escribir_dato@posx
  1556     0704  3002               	movlw	2
  1557     0705  00B9               	movwf	Escribir_dato@posy
  1558     0706  082E               	movf	_min,w
  1559     0707  120A  118A  23F5  120A  118A  	fcall	_Escribir_dato
  1560                           
  1561                           ;main.c: 199:             I2C_Master_Start();
  1562     070C  120A  118A  204D  120A  118A  	fcall	_I2C_Master_Start
  1563                           
  1564                           ;main.c: 200:             I2C_Master_Write(0xb0);
  1565     0711  30B0               	movlw	176
  1566     0712  00F0               	movwf	I2C_Master_Write@d
  1567     0713  3000               	movlw	0
  1568     0714  00F1               	movwf	I2C_Master_Write@d+1
  1569     0715  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  1570                           
  1571                           ;main.c: 201:             I2C_Master_Write(0);
  1572     071A  3000               	movlw	0
  1573     071B  00F0               	movwf	I2C_Master_Write@d
  1574     071C  00F1               	movwf	I2C_Master_Write@d+1
  1575     071D  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  1576                           
  1577                           ;main.c: 202:             I2C_Master_Stop();
  1578     0722  120A  118A  2052  120A  118A  	fcall	_I2C_Master_Stop
  1579                           
  1580                           ;main.c: 203:             SERVO = 0;
  1581     0727  1283               	bcf	3,5	;RP0=0, select bank0
  1582     0728  01AA               	clrf	_SERVO
  1583                           
  1584                           ;main.c: 205:             _delay((unsigned long)((400)*(8000000/4000.0)));
  1585     0729  3005               	movlw	5
  1586     072A  1283               	bcf	3,5	;RP0=0, select bank0
  1587     072B  1303               	bcf	3,6	;RP1=0, select bank0
  1588     072C  00C2               	movwf	??_main+2
  1589     072D  300F               	movlw	15
  1590     072E  00C1               	movwf	??_main+1
  1591     072F  30F0               	movlw	240
  1592     0730  00C0               	movwf	??_main
  1593     0731                     u1717:
  1594     0731  0BC0               	decfsz	??_main,f
  1595     0732  2F31               	goto	u1717
  1596     0733  0BC1               	decfsz	??_main+1,f
  1597     0734  2F31               	goto	u1717
  1598     0735  0BC2               	decfsz	??_main+2,f
  1599     0736  2F31               	goto	u1717
  1600     0737  0000               	nop
  1601                           
  1602                           ;main.c: 207:             I2C_Master_Start();
  1603     0738  120A  118A  204D  120A  118A  	fcall	_I2C_Master_Start
  1604                           
  1605                           ;main.c: 208:             I2C_Master_Write(0xb0);
  1606     073D  30B0               	movlw	176
  1607     073E  00F0               	movwf	I2C_Master_Write@d
  1608     073F  3000               	movlw	0
  1609     0740  00F1               	movwf	I2C_Master_Write@d+1
  1610     0741  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  1611                           
  1612                           ;main.c: 209:             I2C_Master_Write(0x02);
  1613     0746  3002               	movlw	2
  1614     0747  00F0               	movwf	I2C_Master_Write@d
  1615     0748  3000               	movlw	0
  1616     0749  00F1               	movwf	I2C_Master_Write@d+1
  1617     074A  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  1618                           
  1619                           ;main.c: 210:             I2C_Master_Stop();
  1620     074F  120A  118A  2052  120A  118A  	fcall	_I2C_Master_Stop
  1621                           
  1622                           ;main.c: 213:             while(PORTBbits.RB3 & !((sec == segundos) & (min == minutos)) 
      +                          ){
  1623     0754  2F9E               	goto	l2007
  1624     0755                     l1999:
  1625                           
  1626                           ;main.c: 215:                 segundos = leer_x(0x00);
  1627     0755  3000               	movlw	0
  1628     0756  120A  118A  2370  120A  118A  	fcall	_leer_x
  1629     075B  1283               	bcf	3,5	;RP0=0, select bank0
  1630     075C  00AF               	movwf	_segundos
  1631                           
  1632                           ;main.c: 216:                 minutos = leer_x(0x01);
  1633     075D  3001               	movlw	1
  1634     075E  120A  118A  2370  120A  118A  	fcall	_leer_x
  1635     0763  1283               	bcf	3,5	;RP0=0, select bank0
  1636     0764  00AD               	movwf	_minutos
  1637                           
  1638                           ;main.c: 217:                 Escribir_dato(segundos, 14, 1);
  1639     0765  300E               	movlw	14
  1640     0766  00B8               	movwf	Escribir_dato@posx
  1641     0767  01B9               	clrf	Escribir_dato@posy
  1642     0768  0AB9               	incf	Escribir_dato@posy,f
  1643     0769  082F               	movf	_segundos,w
  1644     076A  120A  118A  23F5  120A  118A  	fcall	_Escribir_dato
  1645                           
  1646                           ;main.c: 218:                 Escribir_dato(minutos, 11, 1);
  1647     076F  300B               	movlw	11
  1648     0770  00B8               	movwf	Escribir_dato@posx
  1649     0771  01B9               	clrf	Escribir_dato@posy
  1650     0772  0AB9               	incf	Escribir_dato@posy,f
  1651     0773  082D               	movf	_minutos,w
  1652     0774  120A  118A  23F5  120A  118A  	fcall	_Escribir_dato
  1653                           
  1654                           ;main.c: 220:                 leer_temperatura();
  1655     0779  120A  118A  2160  120A  118A  	fcall	_leer_temperatura
  1656                           
  1657                           ;main.c: 221:                 _delay((unsigned long)((10)*(8000000/4000.0)));
  1658     077E  301A               	movlw	26
  1659     077F  1283               	bcf	3,5	;RP0=0, select bank0
  1660     0780  1303               	bcf	3,6	;RP1=0, select bank0
  1661     0781  00C1               	movwf	??_main+1
  1662     0782  30F7               	movlw	247
  1663     0783  00C0               	movwf	??_main
  1664     0784                     u1727:
  1665     0784  0BC0               	decfsz	??_main,f
  1666     0785  2F84               	goto	u1727
  1667     0786  0BC1               	decfsz	??_main+1,f
  1668     0787  2F84               	goto	u1727
  1669     0788  2F89               	nop2
  1670                           
  1671                           ;main.c: 222:                 envio_ESP();
  1672     0789  120A  118A  255C  120A  118A  	fcall	_envio_ESP
  1673                           
  1674                           ;main.c: 223:                 _delay((unsigned long)((10)*(8000000/4000.0)));
  1675     078E  301A               	movlw	26
  1676     078F  1283               	bcf	3,5	;RP0=0, select bank0
  1677     0790  1303               	bcf	3,6	;RP1=0, select bank0
  1678     0791  00C1               	movwf	??_main+1
  1679     0792  30F7               	movlw	247
  1680     0793  00C0               	movwf	??_main
  1681     0794                     u1737:
  1682     0794  0BC0               	decfsz	??_main,f
  1683     0795  2F94               	goto	u1737
  1684     0796  0BC1               	decfsz	??_main+1,f
  1685     0797  2F94               	goto	u1737
  1686     0798  2F99               	nop2
  1687                           
  1688                           ;main.c: 224:                 leer_velocidad();
  1689     0799  120A  118A  24FA  120A  118A  	fcall	_leer_velocidad
  1690     079E                     l2007:
  1691                           
  1692                           ;main.c: 213:             while(PORTBbits.RB3 & !((sec == segundos) & (min == minutos)) 
      +                          ){
  1693     079E  1283               	bcf	3,5	;RP0=0, select bank0
  1694     079F  01C3               	clrf	_main$209
  1695     07A0  0AC3               	incf	_main$209,f
  1696     07A1  0830               	movf	_sec,w
  1697     07A2  062F               	xorwf	_segundos,w
  1698     07A3  1D03               	skipz
  1699     07A4  2FAA               	goto	l2015
  1700     07A5  082E               	movf	_min,w
  1701     07A6  062D               	xorwf	_minutos,w
  1702     07A7  1D03               	skipz
  1703     07A8  2FAA               	goto	l2015
  1704     07A9  01C3               	clrf	_main$209
  1705     07AA                     l2015:
  1706     07AA  0C06               	rrf	6,w	;volatile
  1707     07AB  00C0               	movwf	??_main
  1708     07AC  0CC0               	rrf	??_main,f
  1709     07AD  0C40               	rrf	??_main,w
  1710     07AE  3901               	andlw	1
  1711     07AF  0543               	andwf	_main$209,w
  1712     07B0  1D03               	btfss	3,2
  1713     07B1  2F55               	goto	l1999
  1714                           
  1715                           ;main.c: 227:             segundos = 0;
  1716     07B2  01AF               	clrf	_segundos
  1717                           
  1718                           ;main.c: 228:             minutos = 0;
  1719     07B3  01AD               	clrf	_minutos
  1720                           
  1721                           ;main.c: 230:             I2C_Master_Start();
  1722     07B4  120A  118A  204D  120A  118A  	fcall	_I2C_Master_Start
  1723                           
  1724                           ;main.c: 231:             I2C_Master_Write(0xb0);
  1725     07B9  30B0               	movlw	176
  1726     07BA  00F0               	movwf	I2C_Master_Write@d
  1727     07BB  3000               	movlw	0
  1728     07BC  00F1               	movwf	I2C_Master_Write@d+1
  1729     07BD  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  1730                           
  1731                           ;main.c: 232:             I2C_Master_Write(0x03);
  1732     07C2  3003               	movlw	3
  1733     07C3  00F0               	movwf	I2C_Master_Write@d
  1734     07C4  3000               	movlw	0
  1735     07C5  00F1               	movwf	I2C_Master_Write@d+1
  1736     07C6  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  1737                           
  1738                           ;main.c: 233:             I2C_Master_Stop();
  1739     07CB  120A  118A  2052  120A  118A  	fcall	_I2C_Master_Stop
  1740                           
  1741                           ;main.c: 237:             Escribir_dato(0, 14, 2);
  1742     07D0  300E               	movlw	14
  1743     07D1  1283               	bcf	3,5	;RP0=0, select bank0
  1744     07D2  00B8               	movwf	Escribir_dato@posx
  1745     07D3  3002               	movlw	2
  1746     07D4  00B9               	movwf	Escribir_dato@posy
  1747     07D5  3000               	movlw	0
  1748     07D6  120A  118A  23F5  120A  118A  	fcall	_Escribir_dato
  1749                           
  1750                           ;main.c: 238:             Escribir_dato(0, 11, 2);
  1751     07DB  300B               	movlw	11
  1752     07DC  00B8               	movwf	Escribir_dato@posx
  1753     07DD  3002               	movlw	2
  1754     07DE  00B9               	movwf	Escribir_dato@posy
  1755     07DF  3000               	movlw	0
  1756     07E0  120A  118A  23F5  120A  118A  	fcall	_Escribir_dato
  1757     07E5                     l2031:
  1758                           
  1759                           ;main.c: 250:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1760     07E5  3002               	movlw	2
  1761     07E6  1283               	bcf	3,5	;RP0=0, select bank0
  1762     07E7  1303               	bcf	3,6	;RP1=0, select bank0
  1763     07E8  00C2               	movwf	??_main+2
  1764     07E9  3004               	movlw	4
  1765     07EA  00C1               	movwf	??_main+1
  1766     07EB  30B9               	movlw	185
  1767     07EC  00C0               	movwf	??_main
  1768     07ED                     u1747:
  1769     07ED  0BC0               	decfsz	??_main,f
  1770     07EE  2FED               	goto	u1747
  1771     07EF  0BC1               	decfsz	??_main+1,f
  1772     07F0  2FED               	goto	u1747
  1773     07F1  0BC2               	decfsz	??_main+2,f
  1774     07F2  2FED               	goto	u1747
  1775     07F3  2FF4               	nop2
  1776     07F4  2E1A               	goto	l1899
  1777     07F5                     __end_of_main:
  1778                           
  1779                           	psect	text1
  1780     03AF                     __ptext1:	
  1781 ;; *************** function _setupINTOSC *****************
  1782 ;; Defined at:
  1783 ;;		line 10 in file "oscilador.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  IRCF            1    wreg     unsigned char 
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;  IRCF            1    0[COMMON] unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      void 
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, status,0
  1792 ;; Tracked objects:
  1793 ;;		On entry : B00/0
  1794 ;;		On exit  : B00/100
  1795 ;;		Unchanged: 800/0
  1796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1797 ;;      Params:         0       0       0       0       0
  1798 ;;      Locals:         1       0       0       0       0
  1799 ;;      Temps:          0       0       0       0       0
  1800 ;;      Totals:         1       0       0       0       0
  1801 ;;Total ram usage:        1 bytes
  1802 ;; Hardware stack levels used: 1
  1803 ;; This function calls:
  1804 ;;		Nothing
  1805 ;; This function is called by:
  1806 ;;		_main
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810     03AF                     _setupINTOSC:	
  1811                           ;psect for function _setupINTOSC
  1812                           
  1813                           
  1814                           ;incstack = 0
  1815                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  1816                           ;setupINTOSC@IRCF stored from wreg
  1817     03AF  00F0               	movwf	setupINTOSC@IRCF
  1818                           
  1819                           ;oscilador.c: 11:     if (IRCF == 7){
  1820     03B0  3007               	movlw	7
  1821     03B1  0670               	xorwf	setupINTOSC@IRCF,w
  1822     03B2  1D03               	btfss	3,2
  1823     03B3  2BB7               	goto	l289
  1824                           
  1825                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  1826     03B4  3070               	movlw	112
  1827     03B5  1683               	bsf	3,5	;RP0=1, select bank1
  1828     03B6  048F               	iorwf	15,f	;volatile
  1829     03B7                     l289:	
  1830                           ;oscilador.c: 13:     }
  1831                           
  1832                           
  1833                           ;oscilador.c: 14:     if (IRCF == 6){
  1834     03B7  3006               	movlw	6
  1835     03B8  0670               	xorwf	setupINTOSC@IRCF,w
  1836     03B9  1D03               	btfss	3,2
  1837     03BA  2BC0               	goto	l290
  1838                           
  1839                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  1840     03BB  1683               	bsf	3,5	;RP0=1, select bank1
  1841     03BC  080F               	movf	15,w	;volatile
  1842     03BD  398F               	andlw	-113
  1843     03BE  3860               	iorlw	96
  1844     03BF  008F               	movwf	15	;volatile
  1845     03C0                     l290:	
  1846                           ;oscilador.c: 16:     }
  1847                           
  1848                           
  1849                           ;oscilador.c: 17:     if (IRCF == 5){
  1850     03C0  3005               	movlw	5
  1851     03C1  0670               	xorwf	setupINTOSC@IRCF,w
  1852     03C2  1D03               	btfss	3,2
  1853     03C3  2BC9               	goto	l291
  1854                           
  1855                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  1856     03C4  1683               	bsf	3,5	;RP0=1, select bank1
  1857     03C5  080F               	movf	15,w	;volatile
  1858     03C6  398F               	andlw	-113
  1859     03C7  3850               	iorlw	80
  1860     03C8  008F               	movwf	15	;volatile
  1861     03C9                     l291:	
  1862                           ;oscilador.c: 19:     }
  1863                           
  1864                           
  1865                           ;oscilador.c: 20:     if (IRCF == 4){
  1866     03C9  3004               	movlw	4
  1867     03CA  0670               	xorwf	setupINTOSC@IRCF,w
  1868     03CB  1D03               	btfss	3,2
  1869     03CC  2BD2               	goto	l292
  1870                           
  1871                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  1872     03CD  1683               	bsf	3,5	;RP0=1, select bank1
  1873     03CE  080F               	movf	15,w	;volatile
  1874     03CF  398F               	andlw	-113
  1875     03D0  3840               	iorlw	64
  1876     03D1  008F               	movwf	15	;volatile
  1877     03D2                     l292:	
  1878                           ;oscilador.c: 22:     }
  1879                           
  1880                           
  1881                           ;oscilador.c: 23:     if (IRCF == 3){
  1882     03D2  3003               	movlw	3
  1883     03D3  0670               	xorwf	setupINTOSC@IRCF,w
  1884     03D4  1D03               	btfss	3,2
  1885     03D5  2BDB               	goto	l293
  1886                           
  1887                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  1888     03D6  1683               	bsf	3,5	;RP0=1, select bank1
  1889     03D7  080F               	movf	15,w	;volatile
  1890     03D8  398F               	andlw	-113
  1891     03D9  3830               	iorlw	48
  1892     03DA  008F               	movwf	15	;volatile
  1893     03DB                     l293:	
  1894                           ;oscilador.c: 25:     }
  1895                           
  1896                           
  1897                           ;oscilador.c: 26:     if (IRCF == 2){
  1898     03DB  3002               	movlw	2
  1899     03DC  0670               	xorwf	setupINTOSC@IRCF,w
  1900     03DD  1D03               	btfss	3,2
  1901     03DE  2BE4               	goto	l294
  1902                           
  1903                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  1904     03DF  1683               	bsf	3,5	;RP0=1, select bank1
  1905     03E0  080F               	movf	15,w	;volatile
  1906     03E1  398F               	andlw	-113
  1907     03E2  3820               	iorlw	32
  1908     03E3  008F               	movwf	15	;volatile
  1909     03E4                     l294:	
  1910                           ;oscilador.c: 28:     }
  1911                           
  1912                           
  1913                           ;oscilador.c: 29:     if (IRCF == 1){
  1914     03E4  0370               	decf	setupINTOSC@IRCF,w
  1915     03E5  1D03               	btfss	3,2
  1916     03E6  2BEC               	goto	l295
  1917                           
  1918                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  1919     03E7  1683               	bsf	3,5	;RP0=1, select bank1
  1920     03E8  080F               	movf	15,w	;volatile
  1921     03E9  398F               	andlw	-113
  1922     03EA  3810               	iorlw	16
  1923     03EB  008F               	movwf	15	;volatile
  1924     03EC                     l295:	
  1925                           ;oscilador.c: 31:     }
  1926                           
  1927                           
  1928                           ;oscilador.c: 32:     if (IRCF == 0){
  1929     03EC  0870               	movf	setupINTOSC@IRCF,w
  1930     03ED  1D03               	btfss	3,2
  1931     03EE  2BF2               	goto	l1829
  1932                           
  1933                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  1934     03EF  308F               	movlw	-113
  1935     03F0  1683               	bsf	3,5	;RP0=1, select bank1
  1936     03F1  058F               	andwf	15,f	;volatile
  1937     03F2                     l1829:
  1938                           
  1939                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  1940     03F2  1683               	bsf	3,5	;RP0=1, select bank1
  1941     03F3  140F               	bsf	15,0	;volatile
  1942     03F4  0008               	return
  1943     03F5                     __end_of_setupINTOSC:
  1944                           
  1945                           	psect	text2
  1946     0188                     __ptext2:	
  1947 ;; *************** function _portsetup *****************
  1948 ;; Defined at:
  1949 ;;		line 254 in file "main.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;		None
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;		None
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  1    wreg      void 
  1956 ;; Registers used:
  1957 ;;		wreg, status,2, status,0, pclath, cstack
  1958 ;; Tracked objects:
  1959 ;;		On entry : B00/100
  1960 ;;		On exit  : 300/100
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1963 ;;      Params:         0       0       0       0       0
  1964 ;;      Locals:         0       0       0       0       0
  1965 ;;      Temps:          0       3       0       0       0
  1966 ;;      Totals:         0       3       0       0       0
  1967 ;;Total ram usage:        3 bytes
  1968 ;; Hardware stack levels used: 1
  1969 ;; Hardware stack levels required when called: 2
  1970 ;; This function calls:
  1971 ;;		_I2C_Master_Init
  1972 ;; This function is called by:
  1973 ;;		_main
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977     0188                     _portsetup:	
  1978                           ;psect for function _portsetup
  1979                           
  1980                           
  1981                           ;main.c: 255:     ANSEL = 0;
  1982                           
  1983                           ;incstack = 0
  1984                           ; Regs used in _portsetup: [wreg+status,2+status,0+pclath+cstack]
  1985     0188  1703               	bsf	3,6	;RP1=1, select bank3
  1986     0189  0188               	clrf	8	;volatile
  1987                           
  1988                           ;main.c: 256:     ANSELH = 0;
  1989     018A  0189               	clrf	9	;volatile
  1990                           
  1991                           ;main.c: 257:     TRISD = 0;
  1992     018B  1303               	bcf	3,6	;RP1=0, select bank1
  1993     018C  0188               	clrf	8	;volatile
  1994                           
  1995                           ;main.c: 258:     PORTD = 0;
  1996     018D  1283               	bcf	3,5	;RP0=0, select bank0
  1997     018E  0188               	clrf	8	;volatile
  1998                           
  1999                           ;main.c: 260:     TRISB = 0b11111110;
  2000     018F  30FE               	movlw	254
  2001     0190  1683               	bsf	3,5	;RP0=1, select bank1
  2002     0191  0086               	movwf	6	;volatile
  2003                           
  2004                           ;main.c: 261:     PORTB = 0b11111110;
  2005     0192  30FE               	movlw	254
  2006     0193  1283               	bcf	3,5	;RP0=0, select bank0
  2007     0194  0086               	movwf	6	;volatile
  2008                           
  2009                           ;main.c: 262:     WPUB = 0b11111110;
  2010     0195  30FE               	movlw	254
  2011     0196  1683               	bsf	3,5	;RP0=1, select bank1
  2012     0197  0095               	movwf	21	;volatile
  2013                           
  2014                           ;main.c: 263:     OPTION_REGbits.nRBPU = 0;
  2015     0198  1381               	bcf	1,7	;volatile
  2016                           
  2017                           ;main.c: 264:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  2018     0199  300B               	movlw	11
  2019     019A  1283               	bcf	3,5	;RP0=0, select bank0
  2020     019B  1303               	bcf	3,6	;RP1=0, select bank0
  2021     019C  00BF               	movwf	??_portsetup+2
  2022     019D  3026               	movlw	38
  2023     019E  00BE               	movwf	??_portsetup+1
  2024     019F  305D               	movlw	93
  2025     01A0  00BD               	movwf	??_portsetup
  2026     01A1                     u1757:
  2027     01A1  0BBD               	decfsz	??_portsetup,f
  2028     01A2  29A1               	goto	u1757
  2029     01A3  0BBE               	decfsz	??_portsetup+1,f
  2030     01A4  29A1               	goto	u1757
  2031     01A5  0BBF               	decfsz	??_portsetup+2,f
  2032     01A6  29A1               	goto	u1757
  2033                           
  2034                           ;main.c: 265:     I2C_Master_Init(100000);
  2035     01A7  3000               	movlw	0
  2036     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2037     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2038     01AA  00B8               	movwf	I2C_Master_Init@c+3
  2039     01AB  3001               	movlw	1
  2040     01AC  00B7               	movwf	I2C_Master_Init@c+2
  2041     01AD  3086               	movlw	134
  2042     01AE  00B6               	movwf	I2C_Master_Init@c+1
  2043     01AF  30A0               	movlw	160
  2044     01B0  00B5               	movwf	I2C_Master_Init@c
  2045     01B1  120A  118A  21E6   	fcall	_I2C_Master_Init
  2046     01B4  0008               	return
  2047     01B5                     __end_of_portsetup:
  2048                           
  2049                           	psect	text3
  2050     01E6                     __ptext3:	
  2051 ;; *************** function _I2C_Master_Init *****************
  2052 ;; Defined at:
  2053 ;;		line 16 in file "I2C.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  c               4    0[BANK0 ] const unsigned long 
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, status,2, status,0, pclath, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 300/0
  2064 ;;		On exit  : 300/100
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2067 ;;      Params:         0       4       0       0       0
  2068 ;;      Locals:         0       0       0       0       0
  2069 ;;      Temps:          0       4       0       0       0
  2070 ;;      Totals:         0       8       0       0       0
  2071 ;;Total ram usage:        8 bytes
  2072 ;; Hardware stack levels used: 1
  2073 ;; Hardware stack levels required when called: 1
  2074 ;; This function calls:
  2075 ;;		___lldiv
  2076 ;; This function is called by:
  2077 ;;		_portsetup
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081     01E6                     _I2C_Master_Init:	
  2082                           ;psect for function _I2C_Master_Init
  2083                           
  2084                           
  2085                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2086                           
  2087                           ;incstack = 0
  2088                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2089     01E6  3028               	movlw	40
  2090     01E7  0094               	movwf	20	;volatile
  2091                           
  2092                           ;I2C.c: 19:     SSPCON2 = 0;
  2093     01E8  1683               	bsf	3,5	;RP0=1, select bank1
  2094     01E9  0191               	clrf	17	;volatile
  2095                           
  2096                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2097     01EA  1283               	bcf	3,5	;RP0=0, select bank0
  2098     01EB  0835               	movf	I2C_Master_Init@c,w
  2099     01EC  00B9               	movwf	??_I2C_Master_Init
  2100     01ED  0836               	movf	I2C_Master_Init@c+1,w
  2101     01EE  00BA               	movwf	??_I2C_Master_Init+1
  2102     01EF  0837               	movf	I2C_Master_Init@c+2,w
  2103     01F0  00BB               	movwf	??_I2C_Master_Init+2
  2104     01F1  0838               	movf	I2C_Master_Init@c+3,w
  2105     01F2  00BC               	movwf	??_I2C_Master_Init+3
  2106     01F3  3002               	movlw	2
  2107     01F4                     u1395:
  2108     01F4  1003               	clrc
  2109     01F5  0DB9               	rlf	??_I2C_Master_Init,f
  2110     01F6  0DBA               	rlf	??_I2C_Master_Init+1,f
  2111     01F7  0DBB               	rlf	??_I2C_Master_Init+2,f
  2112     01F8  0DBC               	rlf	??_I2C_Master_Init+3,f
  2113     01F9  3EFF               	addlw	-1
  2114     01FA  1D03               	skipz
  2115     01FB  29F4               	goto	u1395
  2116     01FC  083C               	movf	??_I2C_Master_Init+3,w
  2117     01FD  00F3               	movwf	___lldiv@divisor+3
  2118     01FE  083B               	movf	??_I2C_Master_Init+2,w
  2119     01FF  00F2               	movwf	___lldiv@divisor+2
  2120     0200  083A               	movf	??_I2C_Master_Init+1,w
  2121     0201  00F1               	movwf	___lldiv@divisor+1
  2122     0202  0839               	movf	??_I2C_Master_Init,w
  2123     0203  00F0               	movwf	___lldiv@divisor
  2124     0204  3000               	movlw	0
  2125     0205  00F7               	movwf	___lldiv@dividend+3
  2126     0206  307A               	movlw	122
  2127     0207  00F6               	movwf	___lldiv@dividend+2
  2128     0208  3012               	movlw	18
  2129     0209  00F5               	movwf	___lldiv@dividend+1
  2130     020A  3000               	movlw	0
  2131     020B  00F4               	movwf	___lldiv@dividend
  2132     020C  120A  118A  249C   	fcall	___lldiv
  2133     020F  0870               	movf	?___lldiv,w
  2134     0210  3EFF               	addlw	255
  2135     0211  1683               	bsf	3,5	;RP0=1, select bank1
  2136     0212  0093               	movwf	19	;volatile
  2137                           
  2138                           ;I2C.c: 21:     SSPSTAT = 0;
  2139     0213  0194               	clrf	20	;volatile
  2140                           
  2141                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2142     0214  1587               	bsf	7,3	;volatile
  2143                           
  2144                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2145     0215  1607               	bsf	7,4	;volatile
  2146     0216  0008               	return
  2147     0217                     __end_of_I2C_Master_Init:
  2148                           
  2149                           	psect	text4
  2150     049C                     __ptext4:	
  2151 ;; *************** function ___lldiv *****************
  2152 ;; Defined at:
  2153 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  divisor         4    0[COMMON] unsigned long 
  2156 ;;  dividend        4    4[COMMON] unsigned long 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  quotient        4    9[COMMON] unsigned long 
  2159 ;;  counter         1   13[COMMON] unsigned char 
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  4    0[COMMON] unsigned long 
  2162 ;; Registers used:
  2163 ;;		wreg, status,2, status,0
  2164 ;; Tracked objects:
  2165 ;;		On entry : 300/0
  2166 ;;		On exit  : 300/0
  2167 ;;		Unchanged: 300/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2169 ;;      Params:         8       0       0       0       0
  2170 ;;      Locals:         5       0       0       0       0
  2171 ;;      Temps:          1       0       0       0       0
  2172 ;;      Totals:        14       0       0       0       0
  2173 ;;Total ram usage:       14 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; This function calls:
  2176 ;;		Nothing
  2177 ;; This function is called by:
  2178 ;;		_I2C_Master_Init
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182     049C                     ___lldiv:	
  2183                           ;psect for function ___lldiv
  2184                           
  2185                           
  2186                           ;incstack = 0
  2187                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2188     049C  3000               	movlw	0
  2189     049D  00FC               	movwf	___lldiv@quotient+3
  2190     049E  3000               	movlw	0
  2191     049F  00FB               	movwf	___lldiv@quotient+2
  2192     04A0  3000               	movlw	0
  2193     04A1  00FA               	movwf	___lldiv@quotient+1
  2194     04A2  3000               	movlw	0
  2195     04A3  00F9               	movwf	___lldiv@quotient
  2196     04A4  0873               	movf	___lldiv@divisor+3,w
  2197     04A5  0472               	iorwf	___lldiv@divisor+2,w
  2198     04A6  0471               	iorwf	___lldiv@divisor+1,w
  2199     04A7  0470               	iorwf	___lldiv@divisor,w
  2200     04A8  1903               	skipnz
  2201     04A9  2CF1               	goto	l1751
  2202     04AA  01FD               	clrf	___lldiv@counter
  2203     04AB  0AFD               	incf	___lldiv@counter,f
  2204     04AC                     l1737:
  2205     04AC  1BF3               	btfsc	___lldiv@divisor+3,7
  2206     04AD  2CBC               	goto	l1739
  2207     04AE  3001               	movlw	1
  2208     04AF  00F8               	movwf	??___lldiv
  2209     04B0                     u1335:
  2210     04B0  1003               	clrc
  2211     04B1  0DF0               	rlf	___lldiv@divisor,f
  2212     04B2  0DF1               	rlf	___lldiv@divisor+1,f
  2213     04B3  0DF2               	rlf	___lldiv@divisor+2,f
  2214     04B4  0DF3               	rlf	___lldiv@divisor+3,f
  2215     04B5  0BF8               	decfsz	??___lldiv,f
  2216     04B6  2CB0               	goto	u1335
  2217     04B7  3001               	movlw	1
  2218     04B8  00F8               	movwf	??___lldiv
  2219     04B9  0878               	movf	??___lldiv,w
  2220     04BA  07FD               	addwf	___lldiv@counter,f
  2221     04BB  2CAC               	goto	l1737
  2222     04BC                     l1739:
  2223     04BC  3001               	movlw	1
  2224     04BD  00F8               	movwf	??___lldiv
  2225     04BE                     u1355:
  2226     04BE  1003               	clrc
  2227     04BF  0DF9               	rlf	___lldiv@quotient,f
  2228     04C0  0DFA               	rlf	___lldiv@quotient+1,f
  2229     04C1  0DFB               	rlf	___lldiv@quotient+2,f
  2230     04C2  0DFC               	rlf	___lldiv@quotient+3,f
  2231     04C3  0BF8               	decfsz	??___lldiv,f
  2232     04C4  2CBE               	goto	u1355
  2233     04C5  0873               	movf	___lldiv@divisor+3,w
  2234     04C6  0277               	subwf	___lldiv@dividend+3,w
  2235     04C7  1D03               	skipz
  2236     04C8  2CD3               	goto	u1365
  2237     04C9  0872               	movf	___lldiv@divisor+2,w
  2238     04CA  0276               	subwf	___lldiv@dividend+2,w
  2239     04CB  1D03               	skipz
  2240     04CC  2CD3               	goto	u1365
  2241     04CD  0871               	movf	___lldiv@divisor+1,w
  2242     04CE  0275               	subwf	___lldiv@dividend+1,w
  2243     04CF  1D03               	skipz
  2244     04D0  2CD3               	goto	u1365
  2245     04D1  0870               	movf	___lldiv@divisor,w
  2246     04D2  0274               	subwf	___lldiv@dividend,w
  2247     04D3                     u1365:
  2248     04D3  1C03               	skipc
  2249     04D4  2CE4               	goto	l1747
  2250     04D5  0870               	movf	___lldiv@divisor,w
  2251     04D6  02F4               	subwf	___lldiv@dividend,f
  2252     04D7  0871               	movf	___lldiv@divisor+1,w
  2253     04D8  1C03               	skipc
  2254     04D9  0F71               	incfsz	___lldiv@divisor+1,w
  2255     04DA  02F5               	subwf	___lldiv@dividend+1,f
  2256     04DB  0872               	movf	___lldiv@divisor+2,w
  2257     04DC  1C03               	skipc
  2258     04DD  0F72               	incfsz	___lldiv@divisor+2,w
  2259     04DE  02F6               	subwf	___lldiv@dividend+2,f
  2260     04DF  0873               	movf	___lldiv@divisor+3,w
  2261     04E0  1C03               	skipc
  2262     04E1  0F73               	incfsz	___lldiv@divisor+3,w
  2263     04E2  02F7               	subwf	___lldiv@dividend+3,f
  2264     04E3  1479               	bsf	___lldiv@quotient,0
  2265     04E4                     l1747:
  2266     04E4  3001               	movlw	1
  2267     04E5                     u1375:
  2268     04E5  1003               	clrc
  2269     04E6  0CF3               	rrf	___lldiv@divisor+3,f
  2270     04E7  0CF2               	rrf	___lldiv@divisor+2,f
  2271     04E8  0CF1               	rrf	___lldiv@divisor+1,f
  2272     04E9  0CF0               	rrf	___lldiv@divisor,f
  2273     04EA  3EFF               	addlw	-1
  2274     04EB  1D03               	skipz
  2275     04EC  2CE5               	goto	u1375
  2276     04ED  3001               	movlw	1
  2277     04EE  02FD               	subwf	___lldiv@counter,f
  2278     04EF  1D03               	btfss	3,2
  2279     04F0  2CBC               	goto	l1739
  2280     04F1                     l1751:
  2281     04F1  087C               	movf	___lldiv@quotient+3,w
  2282     04F2  00F3               	movwf	?___lldiv+3
  2283     04F3  087B               	movf	___lldiv@quotient+2,w
  2284     04F4  00F2               	movwf	?___lldiv+2
  2285     04F5  087A               	movf	___lldiv@quotient+1,w
  2286     04F6  00F1               	movwf	?___lldiv+1
  2287     04F7  0879               	movf	___lldiv@quotient,w
  2288     04F8  00F0               	movwf	?___lldiv
  2289     04F9  0008               	return
  2290     04FA                     __end_of___lldiv:
  2291                           
  2292                           	psect	text5
  2293     0370                     __ptext5:	
  2294 ;; *************** function _leer_x *****************
  2295 ;; Defined at:
  2296 ;;		line 24 in file "DS3231.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  address         1    wreg     unsigned char 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  address         1   11[COMMON] unsigned char 
  2301 ;;  valor           1   12[COMMON] unsigned char 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      unsigned char 
  2304 ;; Registers used:
  2305 ;;		wreg, status,2, status,0, pclath, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 200/100
  2308 ;;		On exit  : 300/100
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2311 ;;      Params:         0       0       0       0       0
  2312 ;;      Locals:         2       0       0       0       0
  2313 ;;      Temps:          2       0       0       0       0
  2314 ;;      Totals:         4       0       0       0       0
  2315 ;;Total ram usage:        4 bytes
  2316 ;; Hardware stack levels used: 1
  2317 ;; Hardware stack levels required when called: 2
  2318 ;; This function calls:
  2319 ;;		_I2C_Master_Read
  2320 ;;		_I2C_Master_RepeatedStart
  2321 ;;		_I2C_Master_Start
  2322 ;;		_I2C_Master_Stop
  2323 ;;		_I2C_Master_Write
  2324 ;;		_convertir
  2325 ;; This function is called by:
  2326 ;;		_main
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330     0370                     _leer_x:	
  2331                           ;psect for function _leer_x
  2332                           
  2333                           
  2334                           ;incstack = 0
  2335                           ; Regs used in _leer_x: [wreg+status,2+status,0+pclath+cstack]
  2336                           ;leer_x@address stored from wreg
  2337     0370  00FB               	movwf	leer_x@address
  2338                           
  2339                           ;DS3231.c: 25:     uint8_t valor;;DS3231.c: 26:     I2C_Master_Start();
  2340     0371  120A  118A  204D  120A  118A  	fcall	_I2C_Master_Start
  2341                           
  2342                           ;DS3231.c: 27:     I2C_Master_Write(0xD0);
  2343     0376  30D0               	movlw	208
  2344     0377  00F0               	movwf	I2C_Master_Write@d
  2345     0378  3000               	movlw	0
  2346     0379  00F1               	movwf	I2C_Master_Write@d+1
  2347     037A  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  2348                           
  2349                           ;DS3231.c: 28:     I2C_Master_Write(address);
  2350     037F  087B               	movf	leer_x@address,w
  2351     0380  00F9               	movwf	??_leer_x
  2352     0381  01FA               	clrf	??_leer_x+1
  2353     0382  0879               	movf	??_leer_x,w
  2354     0383  00F0               	movwf	I2C_Master_Write@d
  2355     0384  087A               	movf	??_leer_x+1,w
  2356     0385  00F1               	movwf	I2C_Master_Write@d+1
  2357     0386  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  2358                           
  2359                           ;DS3231.c: 29:     I2C_Master_RepeatedStart();
  2360     038B  120A  118A  2057  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2361                           
  2362                           ;DS3231.c: 30:     I2C_Master_Write(0xD1);
  2363     0390  30D1               	movlw	209
  2364     0391  00F0               	movwf	I2C_Master_Write@d
  2365     0392  3000               	movlw	0
  2366     0393  00F1               	movwf	I2C_Master_Write@d+1
  2367     0394  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  2368                           
  2369                           ;DS3231.c: 31:     valor = I2C_Master_Read(0);
  2370     0399  3000               	movlw	0
  2371     039A  00F0               	movwf	I2C_Master_Read@a
  2372     039B  00F1               	movwf	I2C_Master_Read@a+1
  2373     039C  120A  118A  213B  120A  118A  	fcall	_I2C_Master_Read
  2374     03A1  0870               	movf	?_I2C_Master_Read,w
  2375     03A2  00FC               	movwf	leer_x@valor
  2376                           
  2377                           ;DS3231.c: 32:     I2C_Master_Stop();
  2378     03A3  120A  118A  2052  120A  118A  	fcall	_I2C_Master_Stop
  2379                           
  2380                           ;DS3231.c: 33:     valor = convertir(valor);
  2381     03A8  087C               	movf	leer_x@valor,w
  2382     03A9  120A  118A  20C0   	fcall	_convertir
  2383     03AC  00FC               	movwf	leer_x@valor
  2384                           
  2385                           ;DS3231.c: 35:     return valor;
  2386     03AD  087C               	movf	leer_x@valor,w
  2387     03AE  0008               	return
  2388     03AF                     __end_of_leer_x:
  2389                           
  2390                           	psect	text6
  2391     00C0                     __ptext6:	
  2392 ;; *************** function _convertir *****************
  2393 ;; Defined at:
  2394 ;;		line 5 in file "DS3231.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  valor           1    wreg     unsigned char 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;  valor           1    8[COMMON] unsigned char 
  2399 ;;  conversion      1    7[COMMON] unsigned char 
  2400 ;;  decena          1    6[COMMON] unsigned char 
  2401 ;;  unidad          1    5[COMMON] unsigned char 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      unsigned char 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0, pclath, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 300/100
  2408 ;;		On exit  : 300/100
  2409 ;;		Unchanged: 300/0
  2410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2411 ;;      Params:         0       0       0       0       0
  2412 ;;      Locals:         4       0       0       0       0
  2413 ;;      Temps:          1       0       0       0       0
  2414 ;;      Totals:         5       0       0       0       0
  2415 ;;Total ram usage:        5 bytes
  2416 ;; Hardware stack levels used: 1
  2417 ;; Hardware stack levels required when called: 1
  2418 ;; This function calls:
  2419 ;;		___bmul
  2420 ;; This function is called by:
  2421 ;;		_leer_x
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425     00C0                     _convertir:	
  2426                           ;psect for function _convertir
  2427                           
  2428                           
  2429                           ;incstack = 0
  2430                           ; Regs used in _convertir: [wreg+status,2+status,0+pclath+cstack]
  2431                           ;convertir@valor stored from wreg
  2432     00C0  00F8               	movwf	convertir@valor
  2433                           
  2434                           ;DS3231.c: 6:     uint8_t unidad;;DS3231.c: 7:     uint8_t decena;;DS3231.c: 8:     uint
      +                          8_t conversion;;DS3231.c: 9:     unidad = valor & 0x0F;
  2435     00C1  0878               	movf	convertir@valor,w
  2436     00C2  390F               	andlw	15
  2437     00C3  00F5               	movwf	convertir@unidad
  2438                           
  2439                           ;DS3231.c: 10:     decena = ((valor & 0xF0) >> 4);
  2440     00C4  0878               	movf	convertir@valor,w
  2441     00C5  00F4               	movwf	??_convertir
  2442     00C6  3004               	movlw	4
  2443     00C7                     u1415:
  2444     00C7  1003               	clrc
  2445     00C8  0CF4               	rrf	??_convertir,f
  2446     00C9  3EFF               	addlw	-1
  2447     00CA  1D03               	skipz
  2448     00CB  28C7               	goto	u1415
  2449     00CC  0874               	movf	??_convertir,w
  2450     00CD  390F               	andlw	15
  2451     00CE  00F6               	movwf	convertir@decena
  2452                           
  2453                           ;DS3231.c: 11:     conversion = unidad+(decena*10);
  2454     00CF  300A               	movlw	10
  2455     00D0  00F0               	movwf	___bmul@multiplicand
  2456     00D1  0876               	movf	convertir@decena,w
  2457     00D2  120A  118A  207F   	fcall	___bmul
  2458     00D5  0775               	addwf	convertir@unidad,w
  2459     00D6  00F7               	movwf	convertir@conversion
  2460                           
  2461                           ;DS3231.c: 12:     return conversion;
  2462     00D7  0877               	movf	convertir@conversion,w
  2463     00D8  0008               	return
  2464     00D9                     __end_of_convertir:
  2465                           
  2466                           	psect	text7
  2467     007F                     __ptext7:	
  2468 ;; *************** function ___bmul *****************
  2469 ;; Defined at:
  2470 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  multiplier      1    wreg     unsigned char 
  2473 ;;  multiplicand    1    0[COMMON] unsigned char 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  multiplier      1    3[COMMON] unsigned char 
  2476 ;;  product         1    2[COMMON] unsigned char 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      unsigned char 
  2479 ;; Registers used:
  2480 ;;		wreg, status,2, status,0
  2481 ;; Tracked objects:
  2482 ;;		On entry : 300/100
  2483 ;;		On exit  : 300/100
  2484 ;;		Unchanged: 300/0
  2485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2486 ;;      Params:         1       0       0       0       0
  2487 ;;      Locals:         2       0       0       0       0
  2488 ;;      Temps:          1       0       0       0       0
  2489 ;;      Totals:         4       0       0       0       0
  2490 ;;Total ram usage:        4 bytes
  2491 ;; Hardware stack levels used: 1
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_convertir
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499     007F                     ___bmul:	
  2500                           ;psect for function ___bmul
  2501                           
  2502                           
  2503                           ;incstack = 0
  2504                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2505                           ;___bmul@multiplier stored from wreg
  2506     007F  00F3               	movwf	___bmul@multiplier
  2507     0080  01F2               	clrf	___bmul@product
  2508     0081                     l1719:
  2509     0081  1C73               	btfss	___bmul@multiplier,0
  2510     0082  2887               	goto	l1723
  2511     0083  0870               	movf	___bmul@multiplicand,w
  2512     0084  00F1               	movwf	??___bmul
  2513     0085  0871               	movf	??___bmul,w
  2514     0086  07F2               	addwf	___bmul@product,f
  2515     0087                     l1723:
  2516     0087  1003               	clrc
  2517     0088  0DF0               	rlf	___bmul@multiplicand,f
  2518     0089  1003               	clrc
  2519     008A  0CF3               	rrf	___bmul@multiplier,f
  2520     008B  0873               	movf	___bmul@multiplier,w
  2521     008C  1D03               	btfss	3,2
  2522     008D  2881               	goto	l1719
  2523     008E  0872               	movf	___bmul@product,w
  2524     008F  0008               	return
  2525     0090                     __end_of___bmul:
  2526                           
  2527                           	psect	text8
  2528     0057                     __ptext8:	
  2529 ;; *************** function _I2C_Master_RepeatedStart *****************
  2530 ;; Defined at:
  2531 ;;		line 47 in file "I2C.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, status,2, status,0, pclath, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 300/0
  2542 ;;		On exit  : 300/100
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2545 ;;      Params:         0       0       0       0       0
  2546 ;;      Locals:         0       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0
  2548 ;;      Totals:         0       0       0       0       0
  2549 ;;Total ram usage:        0 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 1
  2552 ;; This function calls:
  2553 ;;		_I2C_Master_Wait
  2554 ;; This function is called by:
  2555 ;;		_leer_x
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559     0057                     _I2C_Master_RepeatedStart:	
  2560                           ;psect for function _I2C_Master_RepeatedStart
  2561                           
  2562                           
  2563                           ;I2C.c: 49:     I2C_Master_Wait();
  2564                           
  2565                           ;incstack = 0
  2566                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2567     0057  120A  118A  206B   	fcall	_I2C_Master_Wait
  2568                           
  2569                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2570     005A  1491               	bsf	17,1	;volatile
  2571     005B  0008               	return
  2572     005C                     __end_of_I2C_Master_RepeatedStart:
  2573                           
  2574                           	psect	text9
  2575     04FA                     __ptext9:	
  2576 ;; *************** function _leer_velocidad *****************
  2577 ;; Defined at:
  2578 ;;		line 299 in file "main.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;		None
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;		None
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      void 
  2585 ;; Registers used:
  2586 ;;		wreg, status,2, status,0, pclath, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 300/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2592 ;;      Params:         0       0       0       0       0
  2593 ;;      Locals:         0       0       0       0       0
  2594 ;;      Temps:          2       0       0       0       0
  2595 ;;      Totals:         2       0       0       0       0
  2596 ;;Total ram usage:        2 bytes
  2597 ;; Hardware stack levels used: 1
  2598 ;; Hardware stack levels required when called: 3
  2599 ;; This function calls:
  2600 ;;		_I2C_Master_Read
  2601 ;;		_I2C_Master_Start
  2602 ;;		_I2C_Master_Stop
  2603 ;;		_I2C_Master_Write
  2604 ;;		_Lcd_Set_Cursor
  2605 ;;		_Lcd_Write_Char
  2606 ;;		_descomponer
  2607 ;;		_inttochar
  2608 ;; This function is called by:
  2609 ;;		_main
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613     04FA                     _leer_velocidad:	
  2614                           ;psect for function _leer_velocidad
  2615                           
  2616                           
  2617                           ;main.c: 301:     I2C_Master_Start();
  2618                           
  2619                           ;incstack = 0
  2620                           ; Regs used in _leer_velocidad: [wreg+status,2+status,0+pclath+cstack]
  2621     04FA  120A  118A  204D  120A  118A  	fcall	_I2C_Master_Start
  2622                           
  2623                           ;main.c: 302:     I2C_Master_Write(0x81);
  2624     04FF  3081               	movlw	129
  2625     0500  00F0               	movwf	I2C_Master_Write@d
  2626     0501  3000               	movlw	0
  2627     0502  00F1               	movwf	I2C_Master_Write@d+1
  2628     0503  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  2629                           
  2630                           ;main.c: 303:     vel = I2C_Master_Read(0);
  2631     0508  3000               	movlw	0
  2632     0509  00F0               	movwf	I2C_Master_Read@a
  2633     050A  00F1               	movwf	I2C_Master_Read@a+1
  2634     050B  120A  118A  213B  120A  118A  	fcall	_I2C_Master_Read
  2635     0510  0870               	movf	?_I2C_Master_Read,w
  2636     0511  1283               	bcf	3,5	;RP0=0, select bank0
  2637     0512  00AC               	movwf	_vel
  2638                           
  2639                           ;main.c: 304:     I2C_Master_Stop();
  2640     0513  120A  118A  2052  120A  118A  	fcall	_I2C_Master_Stop
  2641                           
  2642                           ;main.c: 306:     Lcd_Set_Cursor(1, 5);
  2643     0518  3005               	movlw	5
  2644     0519  00F4               	movwf	Lcd_Set_Cursor@b
  2645     051A  3001               	movlw	1
  2646     051B  120A  118A  22F3  120A  118A  	fcall	_Lcd_Set_Cursor
  2647                           
  2648                           ;main.c: 307:     unidad = inttochar(descomponer(0, vel));
  2649     0520  3000               	movlw	0
  2650     0521  00F8               	movwf	descomponer@pos
  2651     0522  00F9               	movwf	descomponer@pos+1
  2652     0523  1283               	bcf	3,5	;RP0=0, select bank0
  2653     0524  1303               	bcf	3,6	;RP1=0, select bank0
  2654     0525  082C               	movf	_vel,w
  2655     0526  00FC               	movwf	??_leer_velocidad
  2656     0527  01FD               	clrf	??_leer_velocidad+1
  2657     0528  087C               	movf	??_leer_velocidad,w
  2658     0529  00FA               	movwf	descomponer@num
  2659     052A  087D               	movf	??_leer_velocidad+1,w
  2660     052B  00FB               	movwf	descomponer@num+1
  2661     052C  120A  118A  2331  120A  118A  	fcall	_descomponer
  2662     0531  120A  118A  227C  120A  118A  	fcall	_inttochar
  2663     0536  00B4               	movwf	_unidad
  2664                           
  2665                           ;main.c: 308:     Lcd_Write_Char(unidad);
  2666     0537  0834               	movf	_unidad,w
  2667     0538  120A  118A  21B5  120A  118A  	fcall	_Lcd_Write_Char
  2668                           
  2669                           ;main.c: 309:     Lcd_Set_Cursor(1, 4);
  2670     053D  3004               	movlw	4
  2671     053E  00F4               	movwf	Lcd_Set_Cursor@b
  2672     053F  3001               	movlw	1
  2673     0540  120A  118A  22F3  120A  118A  	fcall	_Lcd_Set_Cursor
  2674                           
  2675                           ;main.c: 310:     decena = inttochar(descomponer(1, vel));
  2676     0545  3001               	movlw	1
  2677     0546  00F8               	movwf	descomponer@pos
  2678     0547  3000               	movlw	0
  2679     0548  00F9               	movwf	descomponer@pos+1
  2680     0549  1283               	bcf	3,5	;RP0=0, select bank0
  2681     054A  1303               	bcf	3,6	;RP1=0, select bank0
  2682     054B  082C               	movf	_vel,w
  2683     054C  00FC               	movwf	??_leer_velocidad
  2684     054D  01FD               	clrf	??_leer_velocidad+1
  2685     054E  087C               	movf	??_leer_velocidad,w
  2686     054F  00FA               	movwf	descomponer@num
  2687     0550  087D               	movf	??_leer_velocidad+1,w
  2688     0551  00FB               	movwf	descomponer@num+1
  2689     0552  120A  118A  2331  120A  118A  	fcall	_descomponer
  2690     0557  120A  118A  227C   	fcall	_inttochar
  2691     055A  00B3               	movwf	_decena
  2692     055B  0008               	return
  2693     055C                     __end_of_leer_velocidad:
  2694                           
  2695                           	psect	text10
  2696     0160                     __ptext10:	
  2697 ;; *************** function _leer_temperatura *****************
  2698 ;; Defined at:
  2699 ;;		line 277 in file "main.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;		None
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;		None
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      void 
  2706 ;; Registers used:
  2707 ;;		wreg, status,2, status,0, pclath, cstack
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/100
  2710 ;;		On exit  : 300/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2713 ;;      Params:         0       0       0       0       0
  2714 ;;      Locals:         0       0       0       0       0
  2715 ;;      Temps:          0       0       0       0       0
  2716 ;;      Totals:         0       0       0       0       0
  2717 ;;Total ram usage:        0 bytes
  2718 ;; Hardware stack levels used: 1
  2719 ;; Hardware stack levels required when called: 4
  2720 ;; This function calls:
  2721 ;;		_Escribir_dato
  2722 ;;		_I2C_Master_Read
  2723 ;;		_I2C_Master_Start
  2724 ;;		_I2C_Master_Stop
  2725 ;;		_I2C_Master_Write
  2726 ;; This function is called by:
  2727 ;;		_main
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731     0160                     _leer_temperatura:	
  2732                           ;psect for function _leer_temperatura
  2733                           
  2734                           
  2735                           ;main.c: 278:     I2C_Master_Start();
  2736                           
  2737                           ;incstack = 0
  2738                           ; Regs used in _leer_temperatura: [wreg+status,2+status,0+pclath+cstack]
  2739     0160  120A  118A  204D  120A  118A  	fcall	_I2C_Master_Start
  2740                           
  2741                           ;main.c: 279:     I2C_Master_Write(0xa1);
  2742     0165  30A1               	movlw	161
  2743     0166  00F0               	movwf	I2C_Master_Write@d
  2744     0167  3000               	movlw	0
  2745     0168  00F1               	movwf	I2C_Master_Write@d+1
  2746     0169  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  2747                           
  2748                           ;main.c: 280:     tempint = I2C_Master_Read(0);
  2749     016E  3000               	movlw	0
  2750     016F  00F0               	movwf	I2C_Master_Read@a
  2751     0170  00F1               	movwf	I2C_Master_Read@a+1
  2752     0171  120A  118A  213B  120A  118A  	fcall	_I2C_Master_Read
  2753     0176  0870               	movf	?_I2C_Master_Read,w
  2754     0177  1283               	bcf	3,5	;RP0=0, select bank0
  2755     0178  00B1               	movwf	_tempint
  2756                           
  2757                           ;main.c: 282:     I2C_Master_Stop();
  2758     0179  120A  118A  2052  120A  118A  	fcall	_I2C_Master_Stop
  2759                           
  2760                           ;main.c: 283:     Escribir_dato(tempint, 4, 2);
  2761     017E  3004               	movlw	4
  2762     017F  1283               	bcf	3,5	;RP0=0, select bank0
  2763     0180  00B8               	movwf	Escribir_dato@posx
  2764     0181  3002               	movlw	2
  2765     0182  00B9               	movwf	Escribir_dato@posy
  2766     0183  0831               	movf	_tempint,w
  2767     0184  120A  118A  23F5   	fcall	_Escribir_dato
  2768     0187  0008               	return
  2769     0188                     __end_of_leer_temperatura:
  2770                           
  2771                           	psect	text11
  2772     013B                     __ptext11:	
  2773 ;; *************** function _I2C_Master_Read *****************
  2774 ;; Defined at:
  2775 ;;		line 74 in file "I2C.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  a               2    0[COMMON] unsigned short 
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;  temp            2    4[COMMON] unsigned short 
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  2    0[COMMON] unsigned short 
  2782 ;; Registers used:
  2783 ;;		wreg, status,2, status,0, pclath, cstack
  2784 ;; Tracked objects:
  2785 ;;		On entry : 300/0
  2786 ;;		On exit  : 300/100
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2789 ;;      Params:         2       0       0       0       0
  2790 ;;      Locals:         2       0       0       0       0
  2791 ;;      Temps:          2       0       0       0       0
  2792 ;;      Totals:         6       0       0       0       0
  2793 ;;Total ram usage:        6 bytes
  2794 ;; Hardware stack levels used: 1
  2795 ;; Hardware stack levels required when called: 1
  2796 ;; This function calls:
  2797 ;;		_I2C_Master_Wait
  2798 ;; This function is called by:
  2799 ;;		_leer_temperatura
  2800 ;;		_leer_velocidad
  2801 ;;		_leer_x
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805     013B                     _I2C_Master_Read:	
  2806                           ;psect for function _I2C_Master_Read
  2807                           
  2808                           
  2809                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2810                           
  2811                           ;incstack = 0
  2812                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2813     013B  120A  118A  206B  120A  118A  	fcall	_I2C_Master_Wait
  2814                           
  2815                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2816     0140  1591               	bsf	17,3	;volatile
  2817                           
  2818                           ;I2C.c: 79:     I2C_Master_Wait();
  2819     0141  120A  118A  206B  120A  118A  	fcall	_I2C_Master_Wait
  2820                           
  2821                           ;I2C.c: 80:     temp = SSPBUF;
  2822     0146  1283               	bcf	3,5	;RP0=0, select bank0
  2823     0147  0813               	movf	19,w	;volatile
  2824     0148  00F2               	movwf	??_I2C_Master_Read
  2825     0149  01F3               	clrf	??_I2C_Master_Read+1
  2826     014A  0872               	movf	??_I2C_Master_Read,w
  2827     014B  00F4               	movwf	I2C_Master_Read@temp
  2828     014C  0873               	movf	??_I2C_Master_Read+1,w
  2829     014D  00F5               	movwf	I2C_Master_Read@temp+1
  2830                           
  2831                           ;I2C.c: 81:     I2C_Master_Wait();
  2832     014E  120A  118A  206B  120A  118A  	fcall	_I2C_Master_Wait
  2833                           
  2834                           ;I2C.c: 82:     if(a == 1){
  2835     0153  0370               	decf	I2C_Master_Read@a,w
  2836     0154  0471               	iorwf	I2C_Master_Read@a+1,w
  2837     0155  1D03               	btfss	3,2
  2838     0156  2959               	goto	l203
  2839                           
  2840                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2841     0157  1291               	bcf	17,5	;volatile
  2842                           
  2843                           ;I2C.c: 84:     }else{
  2844     0158  295A               	goto	l204
  2845     0159                     l203:
  2846                           
  2847                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2848     0159  1691               	bsf	17,5	;volatile
  2849     015A                     l204:	
  2850                           ;I2C.c: 86:     }
  2851                           
  2852                           
  2853                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2854     015A  1611               	bsf	17,4	;volatile
  2855                           
  2856                           ;I2C.c: 88:     return temp;
  2857     015B  0875               	movf	I2C_Master_Read@temp+1,w
  2858     015C  00F1               	movwf	?_I2C_Master_Read+1
  2859     015D  0874               	movf	I2C_Master_Read@temp,w
  2860     015E  00F0               	movwf	?_I2C_Master_Read
  2861     015F  0008               	return
  2862     0160                     __end_of_I2C_Master_Read:
  2863                           
  2864                           	psect	text12
  2865     03F5                     __ptext12:	
  2866 ;; *************** function _Escribir_dato *****************
  2867 ;; Defined at:
  2868 ;;		line 268 in file "main.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  dato            1    wreg     unsigned char 
  2871 ;;  posx            1    3[BANK0 ] unsigned char 
  2872 ;;  posy            1    4[BANK0 ] unsigned char 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  dato            1    5[BANK0 ] unsigned char 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0, pclath, cstack
  2879 ;; Tracked objects:
  2880 ;;		On entry : 300/0
  2881 ;;		On exit  : 300/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2884 ;;      Params:         0       2       0       0       0
  2885 ;;      Locals:         0       1       0       0       0
  2886 ;;      Temps:          2       0       0       0       0
  2887 ;;      Totals:         2       3       0       0       0
  2888 ;;Total ram usage:        5 bytes
  2889 ;; Hardware stack levels used: 1
  2890 ;; Hardware stack levels required when called: 3
  2891 ;; This function calls:
  2892 ;;		_Lcd_Set_Cursor
  2893 ;;		_Lcd_Write_Char
  2894 ;;		_descomponer
  2895 ;;		_inttochar
  2896 ;; This function is called by:
  2897 ;;		_main
  2898 ;;		_leer_temperatura
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902     03F5                     _Escribir_dato:	
  2903                           ;psect for function _Escribir_dato
  2904                           
  2905                           
  2906                           ;incstack = 0
  2907                           ; Regs used in _Escribir_dato: [wreg+status,2+status,0+pclath+cstack]
  2908                           ;Escribir_dato@dato stored from wreg
  2909     03F5  00BA               	movwf	Escribir_dato@dato
  2910                           
  2911                           ;main.c: 269:     Lcd_Set_Cursor(posy, posx+1);
  2912     03F6  0838               	movf	Escribir_dato@posx,w
  2913     03F7  3E01               	addlw	1
  2914     03F8  00F4               	movwf	Lcd_Set_Cursor@b
  2915     03F9  0839               	movf	Escribir_dato@posy,w
  2916     03FA  120A  118A  22F3  120A  118A  	fcall	_Lcd_Set_Cursor
  2917                           
  2918                           ;main.c: 270:     unidad = inttochar(descomponer(0, dato));
  2919     03FF  3000               	movlw	0
  2920     0400  00F8               	movwf	descomponer@pos
  2921     0401  00F9               	movwf	descomponer@pos+1
  2922     0402  1283               	bcf	3,5	;RP0=0, select bank0
  2923     0403  1303               	bcf	3,6	;RP1=0, select bank0
  2924     0404  083A               	movf	Escribir_dato@dato,w
  2925     0405  00FC               	movwf	??_Escribir_dato
  2926     0406  01FD               	clrf	??_Escribir_dato+1
  2927     0407  087C               	movf	??_Escribir_dato,w
  2928     0408  00FA               	movwf	descomponer@num
  2929     0409  087D               	movf	??_Escribir_dato+1,w
  2930     040A  00FB               	movwf	descomponer@num+1
  2931     040B  120A  118A  2331  120A  118A  	fcall	_descomponer
  2932     0410  120A  118A  227C  120A  118A  	fcall	_inttochar
  2933     0415  00B4               	movwf	_unidad
  2934                           
  2935                           ;main.c: 271:     Lcd_Write_Char(unidad);
  2936     0416  0834               	movf	_unidad,w
  2937     0417  120A  118A  21B5  120A  118A  	fcall	_Lcd_Write_Char
  2938                           
  2939                           ;main.c: 272:     Lcd_Set_Cursor(posy, posx);
  2940     041C  0838               	movf	Escribir_dato@posx,w
  2941     041D  00F4               	movwf	Lcd_Set_Cursor@b
  2942     041E  0839               	movf	Escribir_dato@posy,w
  2943     041F  120A  118A  22F3  120A  118A  	fcall	_Lcd_Set_Cursor
  2944                           
  2945                           ;main.c: 273:     decena = inttochar(descomponer(1, dato));
  2946     0424  3001               	movlw	1
  2947     0425  00F8               	movwf	descomponer@pos
  2948     0426  3000               	movlw	0
  2949     0427  00F9               	movwf	descomponer@pos+1
  2950     0428  1283               	bcf	3,5	;RP0=0, select bank0
  2951     0429  1303               	bcf	3,6	;RP1=0, select bank0
  2952     042A  083A               	movf	Escribir_dato@dato,w
  2953     042B  00FC               	movwf	??_Escribir_dato
  2954     042C  01FD               	clrf	??_Escribir_dato+1
  2955     042D  087C               	movf	??_Escribir_dato,w
  2956     042E  00FA               	movwf	descomponer@num
  2957     042F  087D               	movf	??_Escribir_dato+1,w
  2958     0430  00FB               	movwf	descomponer@num+1
  2959     0431  120A  118A  2331  120A  118A  	fcall	_descomponer
  2960     0436  120A  118A  227C  120A  118A  	fcall	_inttochar
  2961     043B  00B3               	movwf	_decena
  2962                           
  2963                           ;main.c: 274:     Lcd_Write_Char(decena);
  2964     043C  0833               	movf	_decena,w
  2965     043D  120A  118A  21B5   	fcall	_Lcd_Write_Char
  2966     0440  0008               	return
  2967     0441                     __end_of_Escribir_dato:
  2968                           
  2969                           	psect	text13
  2970     027C                     __ptext13:	
  2971 ;; *************** function _inttochar *****************
  2972 ;; Defined at:
  2973 ;;		line 12 in file "conversiones.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  num             1    wreg     unsigned char 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  num             1    0[COMMON] unsigned char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      unsigned char 
  2980 ;; Registers used:
  2981 ;;		wreg, status,2, status,0
  2982 ;; Tracked objects:
  2983 ;;		On entry : 300/0
  2984 ;;		On exit  : 300/0
  2985 ;;		Unchanged: 300/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2987 ;;      Params:         0       0       0       0       0
  2988 ;;      Locals:         1       0       0       0       0
  2989 ;;      Temps:          0       0       0       0       0
  2990 ;;      Totals:         1       0       0       0       0
  2991 ;;Total ram usage:        1 bytes
  2992 ;; Hardware stack levels used: 1
  2993 ;; This function calls:
  2994 ;;		Nothing
  2995 ;; This function is called by:
  2996 ;;		_Escribir_dato
  2997 ;;		_leer_velocidad
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001     027C                     _inttochar:	
  3002                           ;psect for function _inttochar
  3003                           
  3004                           
  3005                           ;incstack = 0
  3006                           ; Regs used in _inttochar: [wreg+status,2+status,0]
  3007                           ;inttochar@num stored from wreg
  3008     027C  00F0               	movwf	inttochar@num
  3009                           
  3010                           ;conversiones.c: 13:     if(num == 0){
  3011     027D  0870               	movf	inttochar@num,w
  3012     027E  1D03               	btfss	3,2
  3013     027F  2A82               	goto	l1643
  3014                           
  3015                           ;conversiones.c: 14:         return '0';
  3016     0280  3030               	movlw	48
  3017     0281  0008               	return
  3018     0282                     l1643:
  3019     0282  0370               	decf	inttochar@num,w
  3020     0283  1D03               	btfss	3,2
  3021     0284  2A87               	goto	l1651
  3022                           
  3023                           ;conversiones.c: 17:         return '1';
  3024     0285  3031               	movlw	49
  3025     0286  0008               	return
  3026     0287                     l1651:
  3027     0287  3002               	movlw	2
  3028     0288  0670               	xorwf	inttochar@num,w
  3029     0289  1D03               	btfss	3,2
  3030     028A  2A8D               	goto	l1659
  3031                           
  3032                           ;conversiones.c: 20:         return '2';
  3033     028B  3032               	movlw	50
  3034     028C  0008               	return
  3035     028D                     l1659:
  3036     028D  3003               	movlw	3
  3037     028E  0670               	xorwf	inttochar@num,w
  3038     028F  1D03               	btfss	3,2
  3039     0290  2A93               	goto	l1667
  3040                           
  3041                           ;conversiones.c: 23:         return '3';
  3042     0291  3033               	movlw	51
  3043     0292  0008               	return
  3044     0293                     l1667:
  3045     0293  3004               	movlw	4
  3046     0294  0670               	xorwf	inttochar@num,w
  3047     0295  1D03               	btfss	3,2
  3048     0296  2A99               	goto	l1675
  3049                           
  3050                           ;conversiones.c: 26:         return '4';
  3051     0297  3034               	movlw	52
  3052     0298  0008               	return
  3053     0299                     l1675:
  3054     0299  3005               	movlw	5
  3055     029A  0670               	xorwf	inttochar@num,w
  3056     029B  1D03               	btfss	3,2
  3057     029C  2A9F               	goto	l1683
  3058                           
  3059                           ;conversiones.c: 29:         return '5';
  3060     029D  3035               	movlw	53
  3061     029E  0008               	return
  3062     029F                     l1683:
  3063     029F  3006               	movlw	6
  3064     02A0  0670               	xorwf	inttochar@num,w
  3065     02A1  1D03               	btfss	3,2
  3066     02A2  2AA5               	goto	l1691
  3067                           
  3068                           ;conversiones.c: 32:         return '6';
  3069     02A3  3036               	movlw	54
  3070     02A4  0008               	return
  3071     02A5                     l1691:
  3072     02A5  3007               	movlw	7
  3073     02A6  0670               	xorwf	inttochar@num,w
  3074     02A7  1D03               	btfss	3,2
  3075     02A8  2AAB               	goto	l1699
  3076                           
  3077                           ;conversiones.c: 35:         return '7';
  3078     02A9  3037               	movlw	55
  3079     02AA  0008               	return
  3080     02AB                     l1699:
  3081     02AB  3008               	movlw	8
  3082     02AC  0670               	xorwf	inttochar@num,w
  3083     02AD  1D03               	btfss	3,2
  3084     02AE  2AB1               	goto	l1707
  3085                           
  3086                           ;conversiones.c: 38:         return '8';
  3087     02AF  3038               	movlw	56
  3088     02B0  0008               	return
  3089     02B1                     l1707:
  3090     02B1  3009               	movlw	9
  3091     02B2  0670               	xorwf	inttochar@num,w
  3092     02B3  1D03               	btfss	3,2
  3093     02B4  0008               	return
  3094                           
  3095                           ;conversiones.c: 41:         return '9';
  3096     02B5  3039               	movlw	57
  3097     02B6  0008               	return
  3098     02B7                     __end_of_inttochar:
  3099                           
  3100                           	psect	text14
  3101     0331                     __ptext14:	
  3102 ;; *************** function _descomponer *****************
  3103 ;; Defined at:
  3104 ;;		line 45 in file "conversiones.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  pos             2    8[COMMON] int 
  3107 ;;  num             2   10[COMMON] unsigned int 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  dec             1    2[BANK0 ] unsigned char 
  3110 ;;  uni             1    1[BANK0 ] unsigned char 
  3111 ;;  cent            1    0[BANK0 ] unsigned char 
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      unsigned char 
  3114 ;; Registers used:
  3115 ;;		wreg, status,2, status,0, pclath, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 300/0
  3118 ;;		On exit  : 300/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3121 ;;      Params:         4       0       0       0       0
  3122 ;;      Locals:         0       3       0       0       0
  3123 ;;      Temps:          0       0       0       0       0
  3124 ;;      Totals:         4       3       0       0       0
  3125 ;;Total ram usage:        7 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; Hardware stack levels required when called: 1
  3128 ;; This function calls:
  3129 ;;		___lbdiv
  3130 ;;		___lbmod
  3131 ;;		___lwdiv
  3132 ;;		___lwmod
  3133 ;; This function is called by:
  3134 ;;		_Escribir_dato
  3135 ;;		_leer_velocidad
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139     0331                     _descomponer:	
  3140                           ;psect for function _descomponer
  3141                           
  3142                           
  3143                           ;conversiones.c: 46:     uint8_t cent;;conversiones.c: 47:     uint8_t dec;;conversiones
      +                          .c: 48:     uint8_t uni;;conversiones.c: 49:     cent = (num/100);
  3144                           
  3145                           ;incstack = 0
  3146                           ; Regs used in _descomponer: [wreg+status,2+status,0+pclath+cstack]
  3147     0331  3064               	movlw	100
  3148     0332  00F0               	movwf	___lwdiv@divisor
  3149     0333  3000               	movlw	0
  3150     0334  00F1               	movwf	___lwdiv@divisor+1
  3151     0335  087B               	movf	descomponer@num+1,w
  3152     0336  00F3               	movwf	___lwdiv@dividend+1
  3153     0337  087A               	movf	descomponer@num,w
  3154     0338  00F2               	movwf	___lwdiv@dividend
  3155     0339  120A  118A  22B7  120A  118A  	fcall	___lwdiv
  3156     033E  0870               	movf	?___lwdiv,w
  3157     033F  00B5               	movwf	descomponer@cent
  3158                           
  3159                           ;conversiones.c: 50:     dec = (num%100);
  3160     0340  3064               	movlw	100
  3161     0341  00F0               	movwf	___lwmod@divisor
  3162     0342  3000               	movlw	0
  3163     0343  00F1               	movwf	___lwmod@divisor+1
  3164     0344  087B               	movf	descomponer@num+1,w
  3165     0345  00F3               	movwf	___lwmod@dividend+1
  3166     0346  087A               	movf	descomponer@num,w
  3167     0347  00F2               	movwf	___lwmod@dividend
  3168     0348  120A  118A  2217  120A  118A  	fcall	___lwmod
  3169     034D  0870               	movf	?___lwmod,w
  3170     034E  00B7               	movwf	descomponer@dec
  3171                           
  3172                           ;conversiones.c: 51:     uni = (dec%10);
  3173     034F  300A               	movlw	10
  3174     0350  00F0               	movwf	___lbmod@divisor
  3175     0351  0837               	movf	descomponer@dec,w
  3176     0352  120A  118A  20D9  120A  118A  	fcall	___lbmod
  3177     0357  00B6               	movwf	descomponer@uni
  3178                           
  3179                           ;conversiones.c: 52:     if(pos == 2){
  3180     0358  3002               	movlw	2
  3181     0359  0678               	xorwf	descomponer@pos,w
  3182     035A  0479               	iorwf	descomponer@pos+1,w
  3183     035B  1D03               	btfss	3,2
  3184     035C  2B5F               	goto	l1621
  3185                           
  3186                           ;conversiones.c: 53:         return cent;
  3187     035D  0835               	movf	descomponer@cent,w
  3188     035E  0008               	return
  3189     035F                     l1621:
  3190     035F  0378               	decf	descomponer@pos,w
  3191     0360  0479               	iorwf	descomponer@pos+1,w
  3192     0361  1D03               	btfss	3,2
  3193     0362  2B6A               	goto	l1629
  3194                           
  3195                           ;conversiones.c: 56:         return (dec/10);
  3196     0363  300A               	movlw	10
  3197     0364  00F0               	movwf	___lbdiv@divisor
  3198     0365  0837               	movf	descomponer@dec,w
  3199     0366  120A  118A  20F8   	fcall	___lbdiv
  3200     0369  0008               	return
  3201     036A                     l1629:
  3202     036A  0878               	movf	descomponer@pos,w
  3203     036B  0479               	iorwf	descomponer@pos+1,w
  3204     036C  1D03               	btfss	3,2
  3205     036D  0008               	return
  3206                           
  3207                           ;conversiones.c: 59:         return uni;
  3208     036E  0836               	movf	descomponer@uni,w
  3209     036F  0008               	return
  3210     0370                     __end_of_descomponer:
  3211                           
  3212                           	psect	text15
  3213     0217                     __ptext15:	
  3214 ;; *************** function ___lwmod *****************
  3215 ;; Defined at:
  3216 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  divisor         2    0[COMMON] unsigned int 
  3219 ;;  dividend        2    2[COMMON] unsigned int 
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;  counter         1    5[COMMON] unsigned char 
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  2    0[COMMON] unsigned int 
  3224 ;; Registers used:
  3225 ;;		wreg, status,2, status,0
  3226 ;; Tracked objects:
  3227 ;;		On entry : 300/0
  3228 ;;		On exit  : 300/0
  3229 ;;		Unchanged: 300/0
  3230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3231 ;;      Params:         4       0       0       0       0
  3232 ;;      Locals:         1       0       0       0       0
  3233 ;;      Temps:          1       0       0       0       0
  3234 ;;      Totals:         6       0       0       0       0
  3235 ;;Total ram usage:        6 bytes
  3236 ;; Hardware stack levels used: 1
  3237 ;; This function calls:
  3238 ;;		Nothing
  3239 ;; This function is called by:
  3240 ;;		_descomponer
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244     0217                     ___lwmod:	
  3245                           ;psect for function ___lwmod
  3246                           
  3247                           
  3248                           ;incstack = 0
  3249                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3250     0217  0870               	movf	___lwmod@divisor,w
  3251     0218  0471               	iorwf	___lwmod@divisor+1,w
  3252     0219  1903               	btfsc	3,2
  3253     021A  2A44               	goto	l1567
  3254     021B  01F5               	clrf	___lwmod@counter
  3255     021C  0AF5               	incf	___lwmod@counter,f
  3256     021D                     l1557:
  3257     021D  1BF1               	btfsc	___lwmod@divisor+1,7
  3258     021E  2A2B               	goto	l1559
  3259     021F  3001               	movlw	1
  3260     0220                     u1055:
  3261     0220  1003               	clrc
  3262     0221  0DF0               	rlf	___lwmod@divisor,f
  3263     0222  0DF1               	rlf	___lwmod@divisor+1,f
  3264     0223  3EFF               	addlw	-1
  3265     0224  1D03               	skipz
  3266     0225  2A20               	goto	u1055
  3267     0226  3001               	movlw	1
  3268     0227  00F4               	movwf	??___lwmod
  3269     0228  0874               	movf	??___lwmod,w
  3270     0229  07F5               	addwf	___lwmod@counter,f
  3271     022A  2A1D               	goto	l1557
  3272     022B                     l1559:
  3273     022B  0871               	movf	___lwmod@divisor+1,w
  3274     022C  0273               	subwf	___lwmod@dividend+1,w
  3275     022D  1D03               	skipz
  3276     022E  2A31               	goto	u1075
  3277     022F  0870               	movf	___lwmod@divisor,w
  3278     0230  0272               	subwf	___lwmod@dividend,w
  3279     0231                     u1075:
  3280     0231  1C03               	skipc
  3281     0232  2A39               	goto	l1563
  3282     0233  0870               	movf	___lwmod@divisor,w
  3283     0234  02F2               	subwf	___lwmod@dividend,f
  3284     0235  0871               	movf	___lwmod@divisor+1,w
  3285     0236  1C03               	skipc
  3286     0237  03F3               	decf	___lwmod@dividend+1,f
  3287     0238  02F3               	subwf	___lwmod@dividend+1,f
  3288     0239                     l1563:
  3289     0239  3001               	movlw	1
  3290     023A                     u1085:
  3291     023A  1003               	clrc
  3292     023B  0CF1               	rrf	___lwmod@divisor+1,f
  3293     023C  0CF0               	rrf	___lwmod@divisor,f
  3294     023D  3EFF               	addlw	-1
  3295     023E  1D03               	skipz
  3296     023F  2A3A               	goto	u1085
  3297     0240  3001               	movlw	1
  3298     0241  02F5               	subwf	___lwmod@counter,f
  3299     0242  1D03               	btfss	3,2
  3300     0243  2A2B               	goto	l1559
  3301     0244                     l1567:
  3302     0244  0873               	movf	___lwmod@dividend+1,w
  3303     0245  00F1               	movwf	?___lwmod+1
  3304     0246  0872               	movf	___lwmod@dividend,w
  3305     0247  00F0               	movwf	?___lwmod
  3306     0248  0008               	return
  3307     0249                     __end_of___lwmod:
  3308                           
  3309                           	psect	text16
  3310     02B7                     __ptext16:	
  3311 ;; *************** function ___lwdiv *****************
  3312 ;; Defined at:
  3313 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;  divisor         2    0[COMMON] unsigned int 
  3316 ;;  dividend        2    2[COMMON] unsigned int 
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;  quotient        2    5[COMMON] unsigned int 
  3319 ;;  counter         1    7[COMMON] unsigned char 
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  2    0[COMMON] unsigned int 
  3322 ;; Registers used:
  3323 ;;		wreg, status,2, status,0
  3324 ;; Tracked objects:
  3325 ;;		On entry : 300/0
  3326 ;;		On exit  : 300/0
  3327 ;;		Unchanged: 300/0
  3328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3329 ;;      Params:         4       0       0       0       0
  3330 ;;      Locals:         3       0       0       0       0
  3331 ;;      Temps:          1       0       0       0       0
  3332 ;;      Totals:         8       0       0       0       0
  3333 ;;Total ram usage:        8 bytes
  3334 ;; Hardware stack levels used: 1
  3335 ;; This function calls:
  3336 ;;		Nothing
  3337 ;; This function is called by:
  3338 ;;		_descomponer
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342     02B7                     ___lwdiv:	
  3343                           ;psect for function ___lwdiv
  3344                           
  3345                           
  3346                           ;incstack = 0
  3347                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3348     02B7  01F5               	clrf	___lwdiv@quotient
  3349     02B8  01F6               	clrf	___lwdiv@quotient+1
  3350     02B9  0870               	movf	___lwdiv@divisor,w
  3351     02BA  0471               	iorwf	___lwdiv@divisor+1,w
  3352     02BB  1903               	btfsc	3,2
  3353     02BC  2AEE               	goto	l1545
  3354     02BD  01F7               	clrf	___lwdiv@counter
  3355     02BE  0AF7               	incf	___lwdiv@counter,f
  3356     02BF                     l1533:
  3357     02BF  1BF1               	btfsc	___lwdiv@divisor+1,7
  3358     02C0  2ACD               	goto	l1535
  3359     02C1  3001               	movlw	1
  3360     02C2                     u985:
  3361     02C2  1003               	clrc
  3362     02C3  0DF0               	rlf	___lwdiv@divisor,f
  3363     02C4  0DF1               	rlf	___lwdiv@divisor+1,f
  3364     02C5  3EFF               	addlw	-1
  3365     02C6  1D03               	skipz
  3366     02C7  2AC2               	goto	u985
  3367     02C8  3001               	movlw	1
  3368     02C9  00F4               	movwf	??___lwdiv
  3369     02CA  0874               	movf	??___lwdiv,w
  3370     02CB  07F7               	addwf	___lwdiv@counter,f
  3371     02CC  2ABF               	goto	l1533
  3372     02CD                     l1535:
  3373     02CD  3001               	movlw	1
  3374     02CE                     u1005:
  3375     02CE  1003               	clrc
  3376     02CF  0DF5               	rlf	___lwdiv@quotient,f
  3377     02D0  0DF6               	rlf	___lwdiv@quotient+1,f
  3378     02D1  3EFF               	addlw	-1
  3379     02D2  1D03               	skipz
  3380     02D3  2ACE               	goto	u1005
  3381     02D4  0871               	movf	___lwdiv@divisor+1,w
  3382     02D5  0273               	subwf	___lwdiv@dividend+1,w
  3383     02D6  1D03               	skipz
  3384     02D7  2ADA               	goto	u1015
  3385     02D8  0870               	movf	___lwdiv@divisor,w
  3386     02D9  0272               	subwf	___lwdiv@dividend,w
  3387     02DA                     u1015:
  3388     02DA  1C03               	skipc
  3389     02DB  2AE3               	goto	l1541
  3390     02DC  0870               	movf	___lwdiv@divisor,w
  3391     02DD  02F2               	subwf	___lwdiv@dividend,f
  3392     02DE  0871               	movf	___lwdiv@divisor+1,w
  3393     02DF  1C03               	skipc
  3394     02E0  03F3               	decf	___lwdiv@dividend+1,f
  3395     02E1  02F3               	subwf	___lwdiv@dividend+1,f
  3396     02E2  1475               	bsf	___lwdiv@quotient,0
  3397     02E3                     l1541:
  3398     02E3  3001               	movlw	1
  3399     02E4                     u1025:
  3400     02E4  1003               	clrc
  3401     02E5  0CF1               	rrf	___lwdiv@divisor+1,f
  3402     02E6  0CF0               	rrf	___lwdiv@divisor,f
  3403     02E7  3EFF               	addlw	-1
  3404     02E8  1D03               	skipz
  3405     02E9  2AE4               	goto	u1025
  3406     02EA  3001               	movlw	1
  3407     02EB  02F7               	subwf	___lwdiv@counter,f
  3408     02EC  1D03               	btfss	3,2
  3409     02ED  2ACD               	goto	l1535
  3410     02EE                     l1545:
  3411     02EE  0876               	movf	___lwdiv@quotient+1,w
  3412     02EF  00F1               	movwf	?___lwdiv+1
  3413     02F0  0875               	movf	___lwdiv@quotient,w
  3414     02F1  00F0               	movwf	?___lwdiv
  3415     02F2  0008               	return
  3416     02F3                     __end_of___lwdiv:
  3417                           
  3418                           	psect	text17
  3419     00D9                     __ptext17:	
  3420 ;; *************** function ___lbmod *****************
  3421 ;; Defined at:
  3422 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  dividend        1    wreg     unsigned char 
  3425 ;;  divisor         1    0[COMMON] unsigned char 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;  dividend        1    3[COMMON] unsigned char 
  3428 ;;  rem             1    5[COMMON] unsigned char 
  3429 ;;  counter         1    4[COMMON] unsigned char 
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    wreg      unsigned char 
  3432 ;; Registers used:
  3433 ;;		wreg, status,2, status,0
  3434 ;; Tracked objects:
  3435 ;;		On entry : 300/0
  3436 ;;		On exit  : 300/0
  3437 ;;		Unchanged: 300/0
  3438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3439 ;;      Params:         1       0       0       0       0
  3440 ;;      Locals:         3       0       0       0       0
  3441 ;;      Temps:          2       0       0       0       0
  3442 ;;      Totals:         6       0       0       0       0
  3443 ;;Total ram usage:        6 bytes
  3444 ;; Hardware stack levels used: 1
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_descomponer
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452     00D9                     ___lbmod:	
  3453                           ;psect for function ___lbmod
  3454                           
  3455                           
  3456                           ;incstack = 0
  3457                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  3458                           ;___lbmod@dividend stored from wreg
  3459     00D9  00F3               	movwf	___lbmod@dividend
  3460     00DA  3008               	movlw	8
  3461     00DB  00F4               	movwf	___lbmod@counter
  3462     00DC  01F5               	clrf	___lbmod@rem
  3463     00DD                     l1511:
  3464     00DD  0873               	movf	___lbmod@dividend,w
  3465     00DE  00F1               	movwf	??___lbmod
  3466     00DF  3007               	movlw	7
  3467     00E0                     u945:
  3468     00E0  1003               	clrc
  3469     00E1  0CF1               	rrf	??___lbmod,f
  3470     00E2  3EFF               	addlw	-1
  3471     00E3  1D03               	skipz
  3472     00E4  28E0               	goto	u945
  3473     00E5  0875               	movf	___lbmod@rem,w
  3474     00E6  00F2               	movwf	??___lbmod+1
  3475     00E7  0772               	addwf	??___lbmod+1,w
  3476     00E8  0471               	iorwf	??___lbmod,w
  3477     00E9  00F5               	movwf	___lbmod@rem
  3478     00EA  1003               	clrc
  3479     00EB  0DF3               	rlf	___lbmod@dividend,f
  3480     00EC  0870               	movf	___lbmod@divisor,w
  3481     00ED  0275               	subwf	___lbmod@rem,w
  3482     00EE  1C03               	skipc
  3483     00EF  28F2               	goto	l593
  3484     00F0  0870               	movf	___lbmod@divisor,w
  3485     00F1  02F5               	subwf	___lbmod@rem,f
  3486     00F2                     l593:
  3487     00F2  3001               	movlw	1
  3488     00F3  02F4               	subwf	___lbmod@counter,f
  3489     00F4  1D03               	btfss	3,2
  3490     00F5  28DD               	goto	l1511
  3491     00F6  0875               	movf	___lbmod@rem,w
  3492     00F7  0008               	return
  3493     00F8                     __end_of___lbmod:
  3494                           
  3495                           	psect	text18
  3496     00F8                     __ptext18:	
  3497 ;; *************** function ___lbdiv *****************
  3498 ;; Defined at:
  3499 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;  dividend        1    wreg     unsigned char 
  3502 ;;  divisor         1    0[COMMON] unsigned char 
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;  dividend        1    2[COMMON] unsigned char 
  3505 ;;  quotient        1    4[COMMON] unsigned char 
  3506 ;;  counter         1    3[COMMON] unsigned char 
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      unsigned char 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2, status,0
  3511 ;; Tracked objects:
  3512 ;;		On entry : 300/0
  3513 ;;		On exit  : 300/0
  3514 ;;		Unchanged: 300/0
  3515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3516 ;;      Params:         1       0       0       0       0
  3517 ;;      Locals:         3       0       0       0       0
  3518 ;;      Temps:          1       0       0       0       0
  3519 ;;      Totals:         5       0       0       0       0
  3520 ;;Total ram usage:        5 bytes
  3521 ;; Hardware stack levels used: 1
  3522 ;; This function calls:
  3523 ;;		Nothing
  3524 ;; This function is called by:
  3525 ;;		_descomponer
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529     00F8                     ___lbdiv:	
  3530                           ;psect for function ___lbdiv
  3531                           
  3532                           
  3533                           ;incstack = 0
  3534                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  3535                           ;___lbdiv@dividend stored from wreg
  3536     00F8  00F2               	movwf	___lbdiv@dividend
  3537     00F9  01F4               	clrf	___lbdiv@quotient
  3538     00FA  0870               	movf	___lbdiv@divisor,w
  3539     00FB  1903               	btfsc	3,2
  3540     00FC  2917               	goto	l1503
  3541     00FD  01F3               	clrf	___lbdiv@counter
  3542     00FE  0AF3               	incf	___lbdiv@counter,f
  3543     00FF                     l1491:
  3544     00FF  1BF0               	btfsc	___lbdiv@divisor,7
  3545     0100  2908               	goto	l1493
  3546     0101  1003               	clrc
  3547     0102  0DF0               	rlf	___lbdiv@divisor,f
  3548     0103  3001               	movlw	1
  3549     0104  00F1               	movwf	??___lbdiv
  3550     0105  0871               	movf	??___lbdiv,w
  3551     0106  07F3               	addwf	___lbdiv@counter,f
  3552     0107  28FF               	goto	l1491
  3553     0108                     l1493:
  3554     0108  1003               	clrc
  3555     0109  0DF4               	rlf	___lbdiv@quotient,f
  3556     010A  0870               	movf	___lbdiv@divisor,w
  3557     010B  0272               	subwf	___lbdiv@dividend,w
  3558     010C  1C03               	skipc
  3559     010D  2912               	goto	L2
  3560     010E  0870               	movf	___lbdiv@divisor,w
  3561     010F  02F2               	subwf	___lbdiv@dividend,f
  3562     0110  1474               	bsf	___lbdiv@quotient,0
  3563     0111  1003               	clrc
  3564     0112                     L2:
  3565     0112  0CF0               	rrf	___lbdiv@divisor,f
  3566     0113  3001               	movlw	1
  3567     0114  02F3               	subwf	___lbdiv@counter,f
  3568     0115  1D03               	btfss	3,2
  3569     0116  2908               	goto	l1493
  3570     0117                     l1503:
  3571     0117  0874               	movf	___lbdiv@quotient,w
  3572     0118  0008               	return
  3573     0119                     __end_of___lbdiv:
  3574                           
  3575                           	psect	text19
  3576     02F3                     __ptext19:	
  3577 ;; *************** function _Lcd_Set_Cursor *****************
  3578 ;; Defined at:
  3579 ;;		line 48 in file "LCD.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  a               1    wreg     unsigned char 
  3582 ;;  b               1    4[COMMON] unsigned char 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  a               1    6[COMMON] unsigned char 
  3585 ;;  temp            1    9[COMMON] unsigned char 
  3586 ;;  y               1    8[COMMON] unsigned char 
  3587 ;;  z               1    7[COMMON] unsigned char 
  3588 ;; Return value:  Size  Location     Type
  3589 ;;                  1    wreg      void 
  3590 ;; Registers used:
  3591 ;;		wreg, status,2, status,0, pclath, cstack
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3597 ;;      Params:         1       0       0       0       0
  3598 ;;      Locals:         4       0       0       0       0
  3599 ;;      Temps:          1       0       0       0       0
  3600 ;;      Totals:         6       0       0       0       0
  3601 ;;Total ram usage:        6 bytes
  3602 ;; Hardware stack levels used: 1
  3603 ;; Hardware stack levels required when called: 2
  3604 ;; This function calls:
  3605 ;;		_Lcd_Cmd
  3606 ;; This function is called by:
  3607 ;;		_main
  3608 ;;		_Escribir_dato
  3609 ;;		_leer_velocidad
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613     02F3                     _Lcd_Set_Cursor:	
  3614                           ;psect for function _Lcd_Set_Cursor
  3615                           
  3616                           
  3617                           ;incstack = 0
  3618                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3619                           ;Lcd_Set_Cursor@a stored from wreg
  3620     02F3  00F6               	movwf	Lcd_Set_Cursor@a
  3621                           
  3622                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  3623     02F4  0376               	decf	Lcd_Set_Cursor@a,w
  3624     02F5  1D03               	btfss	3,2
  3625     02F6  2B12               	goto	l1581
  3626                           
  3627                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  3628     02F7  0874               	movf	Lcd_Set_Cursor@b,w
  3629     02F8  3E7F               	addlw	127
  3630     02F9  00F9               	movwf	Lcd_Set_Cursor@temp
  3631                           
  3632                           ;LCD.c: 52:         z = temp >> 4;
  3633     02FA  0879               	movf	Lcd_Set_Cursor@temp,w
  3634     02FB  00F5               	movwf	??_Lcd_Set_Cursor
  3635     02FC  3004               	movlw	4
  3636     02FD                     u1115:
  3637     02FD  1003               	clrc
  3638     02FE  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3639     02FF  3EFF               	addlw	-1
  3640     0300  1D03               	skipz
  3641     0301  2AFD               	goto	u1115
  3642     0302  0875               	movf	??_Lcd_Set_Cursor,w
  3643     0303  00F7               	movwf	Lcd_Set_Cursor@z
  3644                           
  3645                           ;LCD.c: 53:         y = temp & 0x0F;
  3646     0304  0879               	movf	Lcd_Set_Cursor@temp,w
  3647     0305  390F               	andlw	15
  3648     0306  00F8               	movwf	Lcd_Set_Cursor@y
  3649                           
  3650                           ;LCD.c: 54:         Lcd_Cmd(z);
  3651     0307  0877               	movf	Lcd_Set_Cursor@z,w
  3652     0308  120A  118A  20A8  120A  118A  	fcall	_Lcd_Cmd
  3653                           
  3654                           ;LCD.c: 55:         Lcd_Cmd(y);
  3655     030D  0878               	movf	Lcd_Set_Cursor@y,w
  3656     030E  120A  118A  20A8   	fcall	_Lcd_Cmd
  3657                           
  3658                           ;LCD.c: 56:     } else if (a == 2) {
  3659     0311  0008               	return
  3660     0312                     l1581:
  3661     0312  3002               	movlw	2
  3662     0313  0676               	xorwf	Lcd_Set_Cursor@a,w
  3663     0314  1D03               	btfss	3,2
  3664     0315  0008               	return
  3665                           
  3666                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  3667     0316  0874               	movf	Lcd_Set_Cursor@b,w
  3668     0317  3EBF               	addlw	191
  3669     0318  00F9               	movwf	Lcd_Set_Cursor@temp
  3670                           
  3671                           ;LCD.c: 58:         z = temp >> 4;
  3672     0319  0879               	movf	Lcd_Set_Cursor@temp,w
  3673     031A  00F5               	movwf	??_Lcd_Set_Cursor
  3674     031B  3004               	movlw	4
  3675     031C                     u1135:
  3676     031C  1003               	clrc
  3677     031D  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3678     031E  3EFF               	addlw	-1
  3679     031F  1D03               	skipz
  3680     0320  2B1C               	goto	u1135
  3681     0321  0875               	movf	??_Lcd_Set_Cursor,w
  3682     0322  00F7               	movwf	Lcd_Set_Cursor@z
  3683                           
  3684                           ;LCD.c: 59:         y = temp & 0x0F;
  3685     0323  0879               	movf	Lcd_Set_Cursor@temp,w
  3686     0324  390F               	andlw	15
  3687     0325  00F8               	movwf	Lcd_Set_Cursor@y
  3688                           
  3689                           ;LCD.c: 60:         Lcd_Cmd(z);
  3690     0326  0877               	movf	Lcd_Set_Cursor@z,w
  3691     0327  120A  118A  20A8  120A  118A  	fcall	_Lcd_Cmd
  3692                           
  3693                           ;LCD.c: 61:         Lcd_Cmd(y);
  3694     032C  0878               	movf	Lcd_Set_Cursor@y,w
  3695     032D  120A  118A  20A8   	fcall	_Lcd_Cmd
  3696     0330  0008               	return
  3697     0331                     __end_of_Lcd_Set_Cursor:
  3698                           
  3699                           	psect	text20
  3700     055C                     __ptext20:	
  3701 ;; *************** function _envio_ESP *****************
  3702 ;; Defined at:
  3703 ;;		line 286 in file "main.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;		None
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0, pclath, cstack
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3717 ;;      Params:         0       0       0       0       0
  3718 ;;      Locals:         0       0       0       0       0
  3719 ;;      Temps:          2       0       0       0       0
  3720 ;;      Totals:         2       0       0       0       0
  3721 ;;Total ram usage:        2 bytes
  3722 ;; Hardware stack levels used: 1
  3723 ;; Hardware stack levels required when called: 2
  3724 ;; This function calls:
  3725 ;;		_I2C_Master_Start
  3726 ;;		_I2C_Master_Stop
  3727 ;;		_I2C_Master_Write
  3728 ;; This function is called by:
  3729 ;;		_main
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733     055C                     _envio_ESP:	
  3734                           ;psect for function _envio_ESP
  3735                           
  3736                           
  3737                           ;main.c: 287:     I2C_Master_Start();
  3738                           
  3739                           ;incstack = 0
  3740                           ; Regs used in _envio_ESP: [wreg+status,2+status,0+pclath+cstack]
  3741     055C  120A  118A  204D  120A  118A  	fcall	_I2C_Master_Start
  3742                           
  3743                           ;main.c: 288:     I2C_Master_Write(0x90);
  3744     0561  3090               	movlw	144
  3745     0562  00F0               	movwf	I2C_Master_Write@d
  3746     0563  3000               	movlw	0
  3747     0564  00F1               	movwf	I2C_Master_Write@d+1
  3748     0565  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  3749                           
  3750                           ;main.c: 289:     I2C_Master_Write(tempint);
  3751     056A  0831               	movf	_tempint,w
  3752     056B  00F2               	movwf	??_envio_ESP
  3753     056C  01F3               	clrf	??_envio_ESP+1
  3754     056D  0872               	movf	??_envio_ESP,w
  3755     056E  00F0               	movwf	I2C_Master_Write@d
  3756     056F  0873               	movf	??_envio_ESP+1,w
  3757     0570  00F1               	movwf	I2C_Master_Write@d+1
  3758     0571  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  3759                           
  3760                           ;main.c: 290:     I2C_Master_Write(vel);
  3761     0576  082C               	movf	_vel,w
  3762     0577  00F2               	movwf	??_envio_ESP
  3763     0578  01F3               	clrf	??_envio_ESP+1
  3764     0579  0872               	movf	??_envio_ESP,w
  3765     057A  00F0               	movwf	I2C_Master_Write@d
  3766     057B  0873               	movf	??_envio_ESP+1,w
  3767     057C  00F1               	movwf	I2C_Master_Write@d+1
  3768     057D  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  3769                           
  3770                           ;main.c: 291:     I2C_Master_Write(min);
  3771     0582  082E               	movf	_min,w
  3772     0583  00F2               	movwf	??_envio_ESP
  3773     0584  01F3               	clrf	??_envio_ESP+1
  3774     0585  0872               	movf	??_envio_ESP,w
  3775     0586  00F0               	movwf	I2C_Master_Write@d
  3776     0587  0873               	movf	??_envio_ESP+1,w
  3777     0588  00F1               	movwf	I2C_Master_Write@d+1
  3778     0589  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  3779                           
  3780                           ;main.c: 292:     I2C_Master_Write(sec);
  3781     058E  0830               	movf	_sec,w
  3782     058F  00F2               	movwf	??_envio_ESP
  3783     0590  01F3               	clrf	??_envio_ESP+1
  3784     0591  0872               	movf	??_envio_ESP,w
  3785     0592  00F0               	movwf	I2C_Master_Write@d
  3786     0593  0873               	movf	??_envio_ESP+1,w
  3787     0594  00F1               	movwf	I2C_Master_Write@d+1
  3788     0595  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  3789                           
  3790                           ;main.c: 293:     I2C_Master_Write(minutos);
  3791     059A  082D               	movf	_minutos,w
  3792     059B  00F2               	movwf	??_envio_ESP
  3793     059C  01F3               	clrf	??_envio_ESP+1
  3794     059D  0872               	movf	??_envio_ESP,w
  3795     059E  00F0               	movwf	I2C_Master_Write@d
  3796     059F  0873               	movf	??_envio_ESP+1,w
  3797     05A0  00F1               	movwf	I2C_Master_Write@d+1
  3798     05A1  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  3799                           
  3800                           ;main.c: 294:     I2C_Master_Write(segundos);
  3801     05A6  082F               	movf	_segundos,w
  3802     05A7  00F2               	movwf	??_envio_ESP
  3803     05A8  01F3               	clrf	??_envio_ESP+1
  3804     05A9  0872               	movf	??_envio_ESP,w
  3805     05AA  00F0               	movwf	I2C_Master_Write@d
  3806     05AB  0873               	movf	??_envio_ESP+1,w
  3807     05AC  00F1               	movwf	I2C_Master_Write@d+1
  3808     05AD  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  3809                           
  3810                           ;main.c: 295:     I2C_Master_Stop();
  3811     05B2  120A  118A  2052  120A  118A  	fcall	_I2C_Master_Stop
  3812                           
  3813                           ;main.c: 296:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3814     05B7  301A               	movlw	26
  3815     05B8  00F3               	movwf	??_envio_ESP+1
  3816     05B9  30F8               	movlw	248
  3817     05BA  00F2               	movwf	??_envio_ESP
  3818     05BB                     u1767:
  3819     05BB  0BF2               	decfsz	??_envio_ESP,f
  3820     05BC  2DBB               	goto	u1767
  3821     05BD  0BF3               	decfsz	??_envio_ESP+1,f
  3822     05BE  2DBB               	goto	u1767
  3823     05BF  0000               	nop
  3824     05C0  0008               	return
  3825     05C1                     __end_of_envio_ESP:
  3826                           
  3827                           	psect	text21
  3828     0249                     __ptext21:	
  3829 ;; *************** function _enviar_x *****************
  3830 ;; Defined at:
  3831 ;;		line 38 in file "DS3231.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  val1            1    wreg     unsigned char 
  3834 ;;  val2            1    2[COMMON] unsigned char 
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;  val1            1    5[COMMON] unsigned char 
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg, status,2, status,0, pclath, cstack
  3841 ;; Tracked objects:
  3842 ;;		On entry : 300/0
  3843 ;;		On exit  : 300/100
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3846 ;;      Params:         1       0       0       0       0
  3847 ;;      Locals:         1       0       0       0       0
  3848 ;;      Temps:          2       0       0       0       0
  3849 ;;      Totals:         4       0       0       0       0
  3850 ;;Total ram usage:        4 bytes
  3851 ;; Hardware stack levels used: 1
  3852 ;; Hardware stack levels required when called: 2
  3853 ;; This function calls:
  3854 ;;		_I2C_Master_Start
  3855 ;;		_I2C_Master_Stop
  3856 ;;		_I2C_Master_Write
  3857 ;; This function is called by:
  3858 ;;		_main
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862     0249                     _enviar_x:	
  3863                           ;psect for function _enviar_x
  3864                           
  3865                           
  3866                           ;incstack = 0
  3867                           ; Regs used in _enviar_x: [wreg+status,2+status,0+pclath+cstack]
  3868                           ;enviar_x@val1 stored from wreg
  3869     0249  00F5               	movwf	enviar_x@val1
  3870                           
  3871                           ;DS3231.c: 39:     I2C_Master_Start();
  3872     024A  120A  118A  204D  120A  118A  	fcall	_I2C_Master_Start
  3873                           
  3874                           ;DS3231.c: 40:     I2C_Master_Write(0xD0);
  3875     024F  30D0               	movlw	208
  3876     0250  00F0               	movwf	I2C_Master_Write@d
  3877     0251  3000               	movlw	0
  3878     0252  00F1               	movwf	I2C_Master_Write@d+1
  3879     0253  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  3880                           
  3881                           ;DS3231.c: 41:     I2C_Master_Write(0);
  3882     0258  3000               	movlw	0
  3883     0259  00F0               	movwf	I2C_Master_Write@d
  3884     025A  00F1               	movwf	I2C_Master_Write@d+1
  3885     025B  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  3886                           
  3887                           ;DS3231.c: 42:     I2C_Master_Write(val1);
  3888     0260  0875               	movf	enviar_x@val1,w
  3889     0261  00F3               	movwf	??_enviar_x
  3890     0262  01F4               	clrf	??_enviar_x+1
  3891     0263  0873               	movf	??_enviar_x,w
  3892     0264  00F0               	movwf	I2C_Master_Write@d
  3893     0265  0874               	movf	??_enviar_x+1,w
  3894     0266  00F1               	movwf	I2C_Master_Write@d+1
  3895     0267  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  3896                           
  3897                           ;DS3231.c: 43:     I2C_Master_Write(val2);
  3898     026C  0872               	movf	enviar_x@val2,w
  3899     026D  00F3               	movwf	??_enviar_x
  3900     026E  01F4               	clrf	??_enviar_x+1
  3901     026F  0873               	movf	??_enviar_x,w
  3902     0270  00F0               	movwf	I2C_Master_Write@d
  3903     0271  0874               	movf	??_enviar_x+1,w
  3904     0272  00F1               	movwf	I2C_Master_Write@d+1
  3905     0273  120A  118A  205C  120A  118A  	fcall	_I2C_Master_Write
  3906                           
  3907                           ;DS3231.c: 44:     I2C_Master_Stop();
  3908     0278  120A  118A  2052   	fcall	_I2C_Master_Stop
  3909     027B  0008               	return
  3910     027C                     __end_of_enviar_x:
  3911                           
  3912                           	psect	text22
  3913     005C                     __ptext22:	
  3914 ;; *************** function _I2C_Master_Write *****************
  3915 ;; Defined at:
  3916 ;;		line 65 in file "I2C.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  d               2    0[COMMON] unsigned int 
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  1    wreg      void 
  3923 ;; Registers used:
  3924 ;;		wreg, status,2, status,0, pclath, cstack
  3925 ;; Tracked objects:
  3926 ;;		On entry : 200/100
  3927 ;;		On exit  : 300/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3930 ;;      Params:         2       0       0       0       0
  3931 ;;      Locals:         0       0       0       0       0
  3932 ;;      Temps:          0       0       0       0       0
  3933 ;;      Totals:         2       0       0       0       0
  3934 ;;Total ram usage:        2 bytes
  3935 ;; Hardware stack levels used: 1
  3936 ;; Hardware stack levels required when called: 1
  3937 ;; This function calls:
  3938 ;;		_I2C_Master_Wait
  3939 ;; This function is called by:
  3940 ;;		_main
  3941 ;;		_leer_temperatura
  3942 ;;		_envio_ESP
  3943 ;;		_leer_velocidad
  3944 ;;		_leer_x
  3945 ;;		_enviar_x
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949     005C                     _I2C_Master_Write:	
  3950                           ;psect for function _I2C_Master_Write
  3951                           
  3952                           
  3953                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3954                           
  3955                           ;incstack = 0
  3956                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3957     005C  120A  118A  206B   	fcall	_I2C_Master_Wait
  3958                           
  3959                           ;I2C.c: 68:     SSPBUF = d;
  3960     005F  0870               	movf	I2C_Master_Write@d,w
  3961     0060  1283               	bcf	3,5	;RP0=0, select bank0
  3962     0061  0093               	movwf	19	;volatile
  3963     0062  0008               	return
  3964     0063                     __end_of_I2C_Master_Write:
  3965                           
  3966                           	psect	text23
  3967     0052                     __ptext23:	
  3968 ;; *************** function _I2C_Master_Stop *****************
  3969 ;; Defined at:
  3970 ;;		line 55 in file "I2C.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;		None
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;		None
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      void 
  3977 ;; Registers used:
  3978 ;;		wreg, status,2, status,0, pclath, cstack
  3979 ;; Tracked objects:
  3980 ;;		On entry : 200/0
  3981 ;;		On exit  : 300/100
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3984 ;;      Params:         0       0       0       0       0
  3985 ;;      Locals:         0       0       0       0       0
  3986 ;;      Temps:          0       0       0       0       0
  3987 ;;      Totals:         0       0       0       0       0
  3988 ;;Total ram usage:        0 bytes
  3989 ;; Hardware stack levels used: 1
  3990 ;; Hardware stack levels required when called: 1
  3991 ;; This function calls:
  3992 ;;		_I2C_Master_Wait
  3993 ;; This function is called by:
  3994 ;;		_main
  3995 ;;		_leer_temperatura
  3996 ;;		_envio_ESP
  3997 ;;		_leer_velocidad
  3998 ;;		_leer_x
  3999 ;;		_enviar_x
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003     0052                     _I2C_Master_Stop:	
  4004                           ;psect for function _I2C_Master_Stop
  4005                           
  4006                           
  4007                           ;I2C.c: 57:     I2C_Master_Wait();
  4008                           
  4009                           ;incstack = 0
  4010                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4011     0052  120A  118A  206B   	fcall	_I2C_Master_Wait
  4012                           
  4013                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  4014     0055  1511               	bsf	17,2	;volatile
  4015     0056  0008               	return
  4016     0057                     __end_of_I2C_Master_Stop:
  4017                           
  4018                           	psect	text24
  4019     004D                     __ptext24:	
  4020 ;; *************** function _I2C_Master_Start *****************
  4021 ;; Defined at:
  4022 ;;		line 39 in file "I2C.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;		None
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;		None
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		wreg, status,2, status,0, pclath, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 300/100
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4036 ;;      Params:         0       0       0       0       0
  4037 ;;      Locals:         0       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0
  4039 ;;      Totals:         0       0       0       0       0
  4040 ;;Total ram usage:        0 bytes
  4041 ;; Hardware stack levels used: 1
  4042 ;; Hardware stack levels required when called: 1
  4043 ;; This function calls:
  4044 ;;		_I2C_Master_Wait
  4045 ;; This function is called by:
  4046 ;;		_main
  4047 ;;		_leer_temperatura
  4048 ;;		_envio_ESP
  4049 ;;		_leer_velocidad
  4050 ;;		_leer_x
  4051 ;;		_enviar_x
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055     004D                     _I2C_Master_Start:	
  4056                           ;psect for function _I2C_Master_Start
  4057                           
  4058                           
  4059                           ;I2C.c: 41:     I2C_Master_Wait();
  4060                           
  4061                           ;incstack = 0
  4062                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4063     004D  120A  118A  206B   	fcall	_I2C_Master_Wait
  4064                           
  4065                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  4066     0050  1411               	bsf	17,0	;volatile
  4067     0051  0008               	return
  4068     0052                     __end_of_I2C_Master_Start:
  4069                           
  4070                           	psect	text25
  4071     006B                     __ptext25:	
  4072 ;; *************** function _I2C_Master_Wait *****************
  4073 ;; Defined at:
  4074 ;;		line 32 in file "I2C.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;		None
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;		None
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  1    wreg      void 
  4081 ;; Registers used:
  4082 ;;		wreg, status,2
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 300/100
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4088 ;;      Params:         0       0       0       0       0
  4089 ;;      Locals:         0       0       0       0       0
  4090 ;;      Temps:          0       0       0       0       0
  4091 ;;      Totals:         0       0       0       0       0
  4092 ;;Total ram usage:        0 bytes
  4093 ;; Hardware stack levels used: 1
  4094 ;; This function calls:
  4095 ;;		Nothing
  4096 ;; This function is called by:
  4097 ;;		_I2C_Master_Start
  4098 ;;		_I2C_Master_RepeatedStart
  4099 ;;		_I2C_Master_Stop
  4100 ;;		_I2C_Master_Write
  4101 ;;		_I2C_Master_Read
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105     006B                     _I2C_Master_Wait:	
  4106                           ;psect for function _I2C_Master_Wait
  4107                           
  4108     006B                     l185:	
  4109                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4110                           
  4111                           ;incstack = 0
  4112                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4113                           
  4114     006B  1683               	bsf	3,5	;RP0=1, select bank1
  4115     006C  1303               	bcf	3,6	;RP1=0, select bank1
  4116     006D  1914               	btfsc	20,2	;volatile
  4117     006E  286B               	goto	l185
  4118     006F  0811               	movf	17,w	;volatile
  4119     0070  391F               	andlw	31
  4120     0071  1903               	btfsc	3,2
  4121     0072  0008               	return
  4122     0073  286B               	goto	l185
  4123     0074                     __end_of_I2C_Master_Wait:
  4124                           
  4125                           	psect	text26
  4126     0119                     __ptext26:	
  4127 ;; *************** function _Lcd_Write_String *****************
  4128 ;; Defined at:
  4129 ;;		line 98 in file "LCD.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  a               1    wreg     PTR unsigned char 
  4132 ;;		 -> STR_3(9), STR_2(8), STR_1(6), 
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;  a               1    7[COMMON] PTR unsigned char 
  4135 ;;		 -> STR_3(9), STR_2(8), STR_1(6), 
  4136 ;;  i               2    5[COMMON] int 
  4137 ;; Return value:  Size  Location     Type
  4138 ;;                  1    wreg      void 
  4139 ;; Registers used:
  4140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4146 ;;      Params:         0       0       0       0       0
  4147 ;;      Locals:         3       0       0       0       0
  4148 ;;      Temps:          0       0       0       0       0
  4149 ;;      Totals:         3       0       0       0       0
  4150 ;;Total ram usage:        3 bytes
  4151 ;; Hardware stack levels used: 1
  4152 ;; Hardware stack levels required when called: 2
  4153 ;; This function calls:
  4154 ;;		_Lcd_Write_Char
  4155 ;; This function is called by:
  4156 ;;		_main
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160     0119                     _Lcd_Write_String:	
  4161                           ;psect for function _Lcd_Write_String
  4162                           
  4163                           
  4164                           ;incstack = 0
  4165                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4166                           ;Lcd_Write_String@a stored from wreg
  4167     0119  00F7               	movwf	Lcd_Write_String@a
  4168                           
  4169                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  4170     011A  01F5               	clrf	Lcd_Write_String@i
  4171     011B  01F6               	clrf	Lcd_Write_String@i+1
  4172     011C                     l1863:
  4173     011C  0875               	movf	Lcd_Write_String@i,w
  4174     011D  0777               	addwf	Lcd_Write_String@a,w
  4175     011E  0084               	movwf	4
  4176     011F  120A  118A  2003  120A  118A  	fcall	stringdir
  4177     0124  3A00               	xorlw	0
  4178     0125  1903               	btfsc	3,2
  4179     0126  0008               	return
  4180                           
  4181                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  4182     0127  0875               	movf	Lcd_Write_String@i,w
  4183     0128  0777               	addwf	Lcd_Write_String@a,w
  4184     0129  0084               	movwf	4
  4185     012A  120A  118A  2003  120A  118A  	fcall	stringdir
  4186     012F  120A  118A  21B5  120A  118A  	fcall	_Lcd_Write_Char
  4187     0134  3001               	movlw	1
  4188     0135  07F5               	addwf	Lcd_Write_String@i,f
  4189     0136  1803               	skipnc
  4190     0137  0AF6               	incf	Lcd_Write_String@i+1,f
  4191     0138  3000               	movlw	0
  4192     0139  07F6               	addwf	Lcd_Write_String@i+1,f
  4193     013A  291C               	goto	l1863
  4194     013B                     __end_of_Lcd_Write_String:
  4195                           
  4196                           	psect	text27
  4197     01B5                     __ptext27:	
  4198 ;; *************** function _Lcd_Write_Char *****************
  4199 ;; Defined at:
  4200 ;;		line 83 in file "LCD.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;  a               1    wreg     unsigned char 
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;  a               1    4[COMMON] unsigned char 
  4205 ;;  y               1    3[COMMON] unsigned char 
  4206 ;;  temp            1    2[COMMON] unsigned char 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  1    wreg      void 
  4209 ;; Registers used:
  4210 ;;		wreg, status,2, status,0, pclath, cstack
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 300/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4216 ;;      Params:         0       0       0       0       0
  4217 ;;      Locals:         3       0       0       0       0
  4218 ;;      Temps:          1       0       0       0       0
  4219 ;;      Totals:         4       0       0       0       0
  4220 ;;Total ram usage:        4 bytes
  4221 ;; Hardware stack levels used: 1
  4222 ;; Hardware stack levels required when called: 1
  4223 ;; This function calls:
  4224 ;;		_Lcd_Port
  4225 ;; This function is called by:
  4226 ;;		_main
  4227 ;;		_Escribir_dato
  4228 ;;		_leer_velocidad
  4229 ;;		_Lcd_Write_String
  4230 ;; This function uses a non-reentrant model
  4231 ;;
  4232                           
  4233     01B5                     _Lcd_Write_Char:	
  4234                           ;psect for function _Lcd_Write_Char
  4235                           
  4236                           
  4237                           ;incstack = 0
  4238                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4239                           ;Lcd_Write_Char@a stored from wreg
  4240     01B5  00F4               	movwf	Lcd_Write_Char@a
  4241                           
  4242                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  4243     01B6  0874               	movf	Lcd_Write_Char@a,w
  4244     01B7  390F               	andlw	15
  4245     01B8  00F2               	movwf	Lcd_Write_Char@temp
  4246                           
  4247                           ;LCD.c: 86:     y = a & 0xF0;
  4248     01B9  0874               	movf	Lcd_Write_Char@a,w
  4249     01BA  39F0               	andlw	240
  4250     01BB  00F3               	movwf	Lcd_Write_Char@y
  4251                           
  4252                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  4253     01BC  1283               	bcf	3,5	;RP0=0, select bank0
  4254     01BD  1303               	bcf	3,6	;RP1=0, select bank0
  4255     01BE  1508               	bsf	8,2	;volatile
  4256                           
  4257                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  4258     01BF  0873               	movf	Lcd_Write_Char@y,w
  4259     01C0  00F1               	movwf	??_Lcd_Write_Char
  4260     01C1  3004               	movlw	4
  4261     01C2                     u1145:
  4262     01C2  1003               	clrc
  4263     01C3  0CF1               	rrf	??_Lcd_Write_Char,f
  4264     01C4  3EFF               	addlw	-1
  4265     01C5  1D03               	skipz
  4266     01C6  29C2               	goto	u1145
  4267     01C7  0871               	movf	??_Lcd_Write_Char,w
  4268     01C8  120A  118A  2090  120A  118A  	fcall	_Lcd_Port
  4269                           
  4270                           ;LCD.c: 89:     RD3 = 1;
  4271     01CD  1588               	bsf	8,3	;volatile
  4272                           
  4273                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4274     01CE  301A               	movlw	26
  4275     01CF  00F1               	movwf	??_Lcd_Write_Char
  4276     01D0                     u1777:
  4277     01D0  0BF1               	decfsz	??_Lcd_Write_Char,f
  4278     01D1  29D0               	goto	u1777
  4279     01D2  0000               	nop
  4280                           
  4281                           ;LCD.c: 91:     RD3 = 0;
  4282     01D3  1283               	bcf	3,5	;RP0=0, select bank0
  4283     01D4  1303               	bcf	3,6	;RP1=0, select bank0
  4284     01D5  1188               	bcf	8,3	;volatile
  4285                           
  4286                           ;LCD.c: 92:     Lcd_Port(temp);
  4287     01D6  0872               	movf	Lcd_Write_Char@temp,w
  4288     01D7  120A  118A  2090  120A  118A  	fcall	_Lcd_Port
  4289                           
  4290                           ;LCD.c: 93:     RD3 = 1;
  4291     01DC  1588               	bsf	8,3	;volatile
  4292                           
  4293                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4294     01DD  301A               	movlw	26
  4295     01DE  00F1               	movwf	??_Lcd_Write_Char
  4296     01DF                     u1787:
  4297     01DF  0BF1               	decfsz	??_Lcd_Write_Char,f
  4298     01E0  29DF               	goto	u1787
  4299     01E1  0000               	nop
  4300                           
  4301                           ;LCD.c: 95:     RD3 = 0;
  4302     01E2  1283               	bcf	3,5	;RP0=0, select bank0
  4303     01E3  1303               	bcf	3,6	;RP1=0, select bank0
  4304     01E4  1188               	bcf	8,3	;volatile
  4305     01E5  0008               	return
  4306     01E6                     __end_of_Lcd_Write_Char:
  4307                           
  4308                           	psect	text28
  4309     0441                     __ptext28:	
  4310 ;; *************** function _Lcd_Init *****************
  4311 ;; Defined at:
  4312 ;;		line 65 in file "LCD.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;		None
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;		None
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  1    wreg      void 
  4319 ;; Registers used:
  4320 ;;		wreg, status,2, status,0, pclath, cstack
  4321 ;; Tracked objects:
  4322 ;;		On entry : 300/100
  4323 ;;		On exit  : 300/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4326 ;;      Params:         0       0       0       0       0
  4327 ;;      Locals:         0       0       0       0       0
  4328 ;;      Temps:          2       0       0       0       0
  4329 ;;      Totals:         2       0       0       0       0
  4330 ;;Total ram usage:        2 bytes
  4331 ;; Hardware stack levels used: 1
  4332 ;; Hardware stack levels required when called: 2
  4333 ;; This function calls:
  4334 ;;		_Lcd_Cmd
  4335 ;;		_Lcd_Port
  4336 ;; This function is called by:
  4337 ;;		_main
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341     0441                     _Lcd_Init:	
  4342                           ;psect for function _Lcd_Init
  4343                           
  4344                           
  4345                           ;LCD.c: 66:     Lcd_Port(0x00);
  4346                           
  4347                           ;incstack = 0
  4348                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4349     0441  3000               	movlw	0
  4350     0442  120A  118A  2090  120A  118A  	fcall	_Lcd_Port
  4351                           
  4352                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  4353     0447  3034               	movlw	52
  4354     0448  00F5               	movwf	??_Lcd_Init+1
  4355     0449  30F1               	movlw	241
  4356     044A  00F4               	movwf	??_Lcd_Init
  4357     044B                     u1797:
  4358     044B  0BF4               	decfsz	??_Lcd_Init,f
  4359     044C  2C4B               	goto	u1797
  4360     044D  0BF5               	decfsz	??_Lcd_Init+1,f
  4361     044E  2C4B               	goto	u1797
  4362     044F  2C50               	nop2
  4363                           
  4364                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  4365     0450  3003               	movlw	3
  4366     0451  120A  118A  20A8  120A  118A  	fcall	_Lcd_Cmd
  4367                           
  4368                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4369     0456  300D               	movlw	13
  4370     0457  00F5               	movwf	??_Lcd_Init+1
  4371     0458  30FB               	movlw	251
  4372     0459  00F4               	movwf	??_Lcd_Init
  4373     045A                     u1807:
  4374     045A  0BF4               	decfsz	??_Lcd_Init,f
  4375     045B  2C5A               	goto	u1807
  4376     045C  0BF5               	decfsz	??_Lcd_Init+1,f
  4377     045D  2C5A               	goto	u1807
  4378     045E  2C5F               	nop2
  4379                           
  4380                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  4381     045F  3003               	movlw	3
  4382     0460  120A  118A  20A8  120A  118A  	fcall	_Lcd_Cmd
  4383                           
  4384                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  4385     0465  301D               	movlw	29
  4386     0466  00F5               	movwf	??_Lcd_Init+1
  4387     0467  3091               	movlw	145
  4388     0468  00F4               	movwf	??_Lcd_Init
  4389     0469                     u1817:
  4390     0469  0BF4               	decfsz	??_Lcd_Init,f
  4391     046A  2C69               	goto	u1817
  4392     046B  0BF5               	decfsz	??_Lcd_Init+1,f
  4393     046C  2C69               	goto	u1817
  4394                           
  4395                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  4396     046D  3003               	movlw	3
  4397     046E  120A  118A  20A8  120A  118A  	fcall	_Lcd_Cmd
  4398                           
  4399                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  4400     0473  3002               	movlw	2
  4401     0474  120A  118A  20A8  120A  118A  	fcall	_Lcd_Cmd
  4402                           
  4403                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  4404     0479  3002               	movlw	2
  4405     047A  120A  118A  20A8  120A  118A  	fcall	_Lcd_Cmd
  4406                           
  4407                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  4408     047F  3008               	movlw	8
  4409     0480  120A  118A  20A8  120A  118A  	fcall	_Lcd_Cmd
  4410                           
  4411                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  4412     0485  3000               	movlw	0
  4413     0486  120A  118A  20A8  120A  118A  	fcall	_Lcd_Cmd
  4414                           
  4415                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  4416     048B  300C               	movlw	12
  4417     048C  120A  118A  20A8  120A  118A  	fcall	_Lcd_Cmd
  4418                           
  4419                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  4420     0491  3000               	movlw	0
  4421     0492  120A  118A  20A8  120A  118A  	fcall	_Lcd_Cmd
  4422                           
  4423                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  4424     0497  3006               	movlw	6
  4425     0498  120A  118A  20A8   	fcall	_Lcd_Cmd
  4426     049B  0008               	return
  4427     049C                     __end_of_Lcd_Init:
  4428                           
  4429                           	psect	text29
  4430     0074                     __ptext29:	
  4431 ;; *************** function _Lcd_Clear *****************
  4432 ;; Defined at:
  4433 ;;		line 43 in file "LCD.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;		None
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;		None
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  1    wreg      void 
  4440 ;; Registers used:
  4441 ;;		wreg, status,2, status,0, pclath, cstack
  4442 ;; Tracked objects:
  4443 ;;		On entry : 300/0
  4444 ;;		On exit  : 300/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4447 ;;      Params:         0       0       0       0       0
  4448 ;;      Locals:         0       0       0       0       0
  4449 ;;      Temps:          0       0       0       0       0
  4450 ;;      Totals:         0       0       0       0       0
  4451 ;;Total ram usage:        0 bytes
  4452 ;; Hardware stack levels used: 1
  4453 ;; Hardware stack levels required when called: 2
  4454 ;; This function calls:
  4455 ;;		_Lcd_Cmd
  4456 ;; This function is called by:
  4457 ;;		_main
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461     0074                     _Lcd_Clear:	
  4462                           ;psect for function _Lcd_Clear
  4463                           
  4464                           
  4465                           ;LCD.c: 44:     Lcd_Cmd(0);
  4466                           
  4467                           ;incstack = 0
  4468                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4469     0074  3000               	movlw	0
  4470     0075  120A  118A  20A8  120A  118A  	fcall	_Lcd_Cmd
  4471                           
  4472                           ;LCD.c: 45:     Lcd_Cmd(1);
  4473     007A  3001               	movlw	1
  4474     007B  120A  118A  20A8   	fcall	_Lcd_Cmd
  4475     007E  0008               	return
  4476     007F                     __end_of_Lcd_Clear:
  4477                           
  4478                           	psect	text30
  4479     00A8                     __ptext30:	
  4480 ;; *************** function _Lcd_Cmd *****************
  4481 ;; Defined at:
  4482 ;;		line 35 in file "LCD.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;  a               1    wreg     unsigned char 
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;  a               1    3[COMMON] unsigned char 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  1    wreg      void 
  4489 ;; Registers used:
  4490 ;;		wreg, status,2, status,0, pclath, cstack
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 300/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4496 ;;      Params:         0       0       0       0       0
  4497 ;;      Locals:         1       0       0       0       0
  4498 ;;      Temps:          2       0       0       0       0
  4499 ;;      Totals:         3       0       0       0       0
  4500 ;;Total ram usage:        3 bytes
  4501 ;; Hardware stack levels used: 1
  4502 ;; Hardware stack levels required when called: 1
  4503 ;; This function calls:
  4504 ;;		_Lcd_Port
  4505 ;; This function is called by:
  4506 ;;		_Lcd_Clear
  4507 ;;		_Lcd_Set_Cursor
  4508 ;;		_Lcd_Init
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512     00A8                     _Lcd_Cmd:	
  4513                           ;psect for function _Lcd_Cmd
  4514                           
  4515                           
  4516                           ;incstack = 0
  4517                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4518                           ;Lcd_Cmd@a stored from wreg
  4519     00A8  00F3               	movwf	Lcd_Cmd@a
  4520                           
  4521                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  4522     00A9  1283               	bcf	3,5	;RP0=0, select bank0
  4523     00AA  1303               	bcf	3,6	;RP1=0, select bank0
  4524     00AB  1108               	bcf	8,2	;volatile
  4525                           
  4526                           ;LCD.c: 37:     Lcd_Port(a);
  4527     00AC  0873               	movf	Lcd_Cmd@a,w
  4528     00AD  120A  118A  2090  120A  118A  	fcall	_Lcd_Port
  4529                           
  4530                           ;LCD.c: 38:     RD3 = 1;
  4531     00B2  1588               	bsf	8,3	;volatile
  4532                           
  4533                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4534     00B3  300B               	movlw	11
  4535     00B4  00F2               	movwf	??_Lcd_Cmd+1
  4536     00B5  3062               	movlw	98
  4537     00B6  00F1               	movwf	??_Lcd_Cmd
  4538     00B7                     u1827:
  4539     00B7  0BF1               	decfsz	??_Lcd_Cmd,f
  4540     00B8  28B7               	goto	u1827
  4541     00B9  0BF2               	decfsz	??_Lcd_Cmd+1,f
  4542     00BA  28B7               	goto	u1827
  4543     00BB  0000               	nop
  4544                           
  4545                           ;LCD.c: 40:     RD3 = 0;
  4546     00BC  1283               	bcf	3,5	;RP0=0, select bank0
  4547     00BD  1303               	bcf	3,6	;RP1=0, select bank0
  4548     00BE  1188               	bcf	8,3	;volatile
  4549     00BF  0008               	return
  4550     00C0                     __end_of_Lcd_Cmd:
  4551                           
  4552                           	psect	text31
  4553     0090                     __ptext31:	
  4554 ;; *************** function _Lcd_Port *****************
  4555 ;; Defined at:
  4556 ;;		line 13 in file "LCD.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  a               1    wreg     unsigned char 
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  a               1    0[COMMON] unsigned char 
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  1    wreg      void 
  4563 ;; Registers used:
  4564 ;;		wreg
  4565 ;; Tracked objects:
  4566 ;;		On entry : 200/0
  4567 ;;		On exit  : 300/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4570 ;;      Params:         0       0       0       0       0
  4571 ;;      Locals:         1       0       0       0       0
  4572 ;;      Temps:          0       0       0       0       0
  4573 ;;      Totals:         1       0       0       0       0
  4574 ;;Total ram usage:        1 bytes
  4575 ;; Hardware stack levels used: 1
  4576 ;; This function calls:
  4577 ;;		Nothing
  4578 ;; This function is called by:
  4579 ;;		_Lcd_Cmd
  4580 ;;		_Lcd_Init
  4581 ;;		_Lcd_Write_Char
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585     0090                     _Lcd_Port:	
  4586                           ;psect for function _Lcd_Port
  4587                           
  4588                           
  4589                           ;incstack = 0
  4590                           ; Regs used in _Lcd_Port: [wreg]
  4591                           ;Lcd_Port@a stored from wreg
  4592     0090  00F0               	movwf	Lcd_Port@a
  4593                           
  4594                           ;LCD.c: 14:     if (a & 1)
  4595     0091  1C70               	btfss	Lcd_Port@a,0
  4596     0092  2896               	goto	l222
  4597                           
  4598                           ;LCD.c: 15:         RD4 = 1;
  4599     0093  1283               	bcf	3,5	;RP0=0, select bank0
  4600     0094  1608               	bsf	8,4	;volatile
  4601     0095  2898               	goto	l223
  4602     0096                     l222:	
  4603                           ;LCD.c: 16:     else
  4604                           
  4605                           
  4606                           ;LCD.c: 17:         RD4 = 0;
  4607     0096  1283               	bcf	3,5	;RP0=0, select bank0
  4608     0097  1208               	bcf	8,4	;volatile
  4609     0098                     l223:
  4610                           
  4611                           ;LCD.c: 19:     if (a & 2)
  4612     0098  1CF0               	btfss	Lcd_Port@a,1
  4613     0099  289C               	goto	l224
  4614                           
  4615                           ;LCD.c: 20:         RD5 = 1;
  4616     009A  1688               	bsf	8,5	;volatile
  4617     009B  289D               	goto	l225
  4618     009C                     l224:	
  4619                           ;LCD.c: 21:     else
  4620                           
  4621                           
  4622                           ;LCD.c: 22:         RD5 = 0;
  4623     009C  1288               	bcf	8,5	;volatile
  4624     009D                     l225:
  4625                           
  4626                           ;LCD.c: 24:     if (a & 4)
  4627     009D  1D70               	btfss	Lcd_Port@a,2
  4628     009E  28A1               	goto	l226
  4629                           
  4630                           ;LCD.c: 25:         RD6 = 1;
  4631     009F  1708               	bsf	8,6	;volatile
  4632     00A0  28A2               	goto	l227
  4633     00A1                     l226:	
  4634                           ;LCD.c: 26:     else
  4635                           
  4636                           
  4637                           ;LCD.c: 27:         RD6 = 0;
  4638     00A1  1308               	bcf	8,6	;volatile
  4639     00A2                     l227:
  4640                           
  4641                           ;LCD.c: 29:     if (a & 8)
  4642     00A2  1DF0               	btfss	Lcd_Port@a,3
  4643     00A3  28A6               	goto	l228
  4644                           
  4645                           ;LCD.c: 30:         RD7 = 1;
  4646     00A4  1788               	bsf	8,7	;volatile
  4647     00A5  0008               	return
  4648     00A6                     l228:	
  4649                           ;LCD.c: 31:     else
  4650                           
  4651                           
  4652                           ;LCD.c: 32:         RD7 = 0;
  4653     00A6  1388               	bcf	8,7	;volatile
  4654     00A7  0008               	return
  4655     00A8                     __end_of_Lcd_Port:
  4656     007E                     btemp	set	126	;btemp
  4657     007E                     wtemp0	set	126
  4658                           
  4659                           	psect	idloc
  4660                           
  4661                           ;Config register IDLOC0 @ 0x2000
  4662                           ;	unspecified, using default values
  4663     2000                     	org	8192
  4664     2000  3FFF               	dw	16383
  4665                           
  4666                           ;Config register IDLOC1 @ 0x2001
  4667                           ;	unspecified, using default values
  4668     2001                     	org	8193
  4669     2001  3FFF               	dw	16383
  4670                           
  4671                           ;Config register IDLOC2 @ 0x2002
  4672                           ;	unspecified, using default values
  4673     2002                     	org	8194
  4674     2002  3FFF               	dw	16383
  4675                           
  4676                           ;Config register IDLOC3 @ 0x2003
  4677                           ;	unspecified, using default values
  4678     2003                     	org	8195
  4679     2003  3FFF               	dw	16383
  4680                           
  4681                           	psect	config
  4682                           
  4683                           ;Config register CONFIG1 @ 0x2007
  4684                           ;	Oscillator Selection bits
  4685                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4686                           ;	Watchdog Timer Enable bit
  4687                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4688                           ;	Power-up Timer Enable bit
  4689                           ;	PWRTE = OFF, PWRT disabled
  4690                           ;	RE3/MCLR pin function select bit
  4691                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4692                           ;	Code Protection bit
  4693                           ;	CP = OFF, Program memory code protection is disabled
  4694                           ;	Data Code Protection bit
  4695                           ;	CPD = OFF, Data memory code protection is disabled
  4696                           ;	Brown Out Reset Selection bits
  4697                           ;	BOREN = OFF, BOR disabled
  4698                           ;	Internal External Switchover bit
  4699                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4700                           ;	Fail-Safe Clock Monitor Enabled bit
  4701                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4702                           ;	Low Voltage Programming Enable bit
  4703                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4704                           ;	In-Circuit Debugger Mode bit
  4705                           ;	DEBUG = 0x1, unprogramme  4706     2007                     	org	8199
  4707     2007  20D4               	dw	8404
  4708                           
  4709                           ;Config register CONFIG2 @ 0x2008
  4710                           ;	Brown-out Reset Selection bit
  4711                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4712                           ;	Flash Program Memory Self Write Enable bits
  4713                           ;	WRT = OFF, Write protection off
  4714     2008                     	org	8200
  4715     2008  3FFF               	dw	16383

Data Sizes:
    Strings     23
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     15      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 9
		 -> STR_3(CODE[9]), STR_2(CODE[8]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_Escribir_dato
    _main->_leer_velocidad
    _I2C_Master_Init->___lldiv
    _leer_x->_convertir
    _convertir->___bmul
    _leer_velocidad->_descomponer
    _leer_temperatura->_Escribir_dato
    _Escribir_dato->_descomponer
    _descomponer->___lwdiv
    _Lcd_Set_Cursor->_Lcd_Cmd
    _envio_ESP->_I2C_Master_Write
    _enviar_x->_I2C_Master_Write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_portsetup
    _portsetup->_I2C_Master_Init
    _leer_velocidad->_descomponer
    _leer_temperatura->_Escribir_dato
    _Escribir_dato->_descomponer

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   29746
                                             11 BANK0      4     4      0
                      _Escribir_dato
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _enviar_x
                          _envio_ESP
                   _leer_temperatura
                     _leer_velocidad
                             _leer_x
                          _portsetup
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _portsetup                                            3     3      0     412
                                              8 BANK0      3     3      0
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _leer_x                                               4     4      0    2620
                                              9 COMMON     4     4      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _convertir
 ---------------------------------------------------------------------------------
 (2) _convertir                                            5     5      0     281
                                              4 COMMON     5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _leer_velocidad                                       2     2      0    5690
                                             12 COMMON     2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                        _descomponer
                          _inttochar
 ---------------------------------------------------------------------------------
 (1) _leer_temperatura                                     0     0      0    7494
                      _Escribir_dato
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _Escribir_dato                                        5     3      2    5223
                                             12 COMMON     2     2      0
                                              3 BANK0      3     1      2
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                        _descomponer
                          _inttochar
 ---------------------------------------------------------------------------------
 (2) _inttochar                                            1     1      0     220
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _descomponer                                          7     3      4    2033
                                              8 COMMON     4     0      4
                                              0 BANK0      3     3      0
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              6     5      1     298
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              5     4      1     301
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     988
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _envio_ESP                                            2     2      0    1998
                                              2 COMMON     2     2      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _enviar_x                                             4     3      1    2270
                                              2 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1998
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     367
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_dato
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _descomponer
       ___lbdiv
       ___lbmod
       ___lwdiv
       ___lwmod
     _inttochar
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_Char
   _Lcd_Write_String
     _Lcd_Write_Char
   _enviar_x
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _envio_ESP
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _leer_temperatura
     _Escribir_dato
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _leer_velocidad
     _I2C_Master_Read
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _Lcd_Set_Cursor
     _Lcd_Write_Char
     _descomponer
     _inttochar
   _leer_x
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _convertir
       ___bmul
   _portsetup
     _I2C_Master_Init
       ___lldiv
   _setupINTOSC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      32       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      24       5       45.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      32      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 09 16:33:45 2023

                               pc 0002                    ___bmul@product 0072                    ?_Escribir_dato 0038  
                              fsr 0004                               l203 0159                               l204 015A  
                             l222 0096                               l223 0098                               l224 009C  
                             l225 009D                               l226 00A1                               l227 00A2  
                             l228 00A6                               l185 006B                               l290 03C0  
                             l291 03C9                               l292 03D2                               l293 03DB  
                             l294 03E4                               l295 03EC                               l289 03B7  
                             l593 00F2                               _RD3 0043                               _RD4 0044  
                             _RD5 0045                               _RD6 0046                               _RD7 0047  
                             u945 00E0                               u985 02C2                               _min 002E  
                             _sec 0030                               _vel 002C                               fsr0 0004  
                             indf 0000                              l2015 07AA                              l2007 079E  
                            l2031 07E5                              l1503 0117                              l1511 00DD  
                            l1541 02E3                              l1533 02BF                              l1621 035F  
                            l1535 02CD                              l1545 02EE                              l1491 00FF  
                            l1563 0239                              l1707 02B1                              l1651 0287  
                            l1643 0282                              l1723 0087                              l1581 0312  
                            l1493 0108                              l1557 021D                              l1629 036A  
                            l1559 022B                              l1567 0244                              l1719 0081  
                            l1751 04F1                              l1737 04AC                              l1691 02A5  
                            l1683 029F                              l1675 0299                              l1667 0293  
                            l1659 028D                              l1747 04E4                              l1739 04BC  
                            l1829 03F2                              l1933 0689                              l1863 011C  
                            l1927 0668                              l1945 06B7                              l1937 068D  
                            l1699 02AB                              l1963 06D4                              l1955 06C6  
                            l1947 06B8                              l1981 06EC                              l1973 06E0  
                            l1957 06C8                              l1965 06D5                              l1975 06E3  
                            l1983 06EE                              l1899 061A                              l1999 0755  
                            STR_1 001A                              STR_2 0012                              STR_3 0009  
                            u1005 02CE                              u1015 02DA                              u1025 02E4  
                            u1115 02FD                              u1135 031C                              u1055 0220  
                            u1145 01C2                              u1075 0231                              u1085 023A  
                            u1415 00C7                              u1335 04B0                              u1355 04BE  
                            u1365 04D3                              u1375 04E5                              u1395 01F4  
                            u1717 0731                              u1807 045A                              u1727 0784  
                            u1817 0469                              u1737 0794                              u1827 00B7  
                            u1747 07ED                              u1757 01A1                              u1767 05BB  
                            u1777 01D0                              u1787 01DF                              u1797 044B  
                            _WPUB 0095                 ?_Lcd_Write_String 0070  __end_of_I2C_Master_RepeatedStart 005C  
                            _main 05C1                              _modo 002B                              btemp 007E  
                            start 0000                ??_Lcd_Write_String 0075                   __end_of_Lcd_Cmd 00C0  
               ___bmul@multiplier 0073                  ?_I2C_Master_Init 0035                  ?_I2C_Master_Read 0070  
                ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070                             ?_main 0070  
                 __end_of___lbdiv 0119                   __end_of___lbmod 00F8                             _ANSEL 0188  
                 __end_of___lldiv 04FA                   __end_of___lwdiv 02F3                   __end_of___lwmod 0249  
                           _SERVO 002A                             _PORTB 0006                             _PORTD 0008  
                           _TRISB 0086                             _TRISD 0088                             pclath 000A  
                           status 0003                             wtemp0 007E                   ___lbdiv@divisor 0070  
                     leer_x@valor 007C                   ___lbdiv@counter 0073                  _leer_temperatura 0160  
                __end_of_Lcd_Init 049C                  __end_of_Lcd_Port 00A8                   __initialization 07F5  
                 ??_Escribir_dato 007C                      __end_of_main 07F5                            ??_main 0040  
               ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070  
              ??_I2C_Master_Write 0072                            _ANSELH 0189                         ??_Lcd_Cmd 0071  
                          _SSPADD 0093                            _SSPCON 0014                            _SSPBUF 0013  
        _I2C_Master_RepeatedStart 0057                            ___bmul 007F                            _decena 0033  
                       ??___lbdiv 0071                         ??___lbmod 0071                         ??___lldiv 0078  
                       ??___lwdiv 0074                  __end_of_enviar_x 027C                         ??___lwmod 0074  
                          _buffer 0024                            _conver 0020                            _leer_x 0370  
                          _valADC 0027                            _unidad 0034                      ?_setupINTOSC 0070  
                ___lbdiv@dividend 0072                   Lcd_Set_Cursor@a 0076                   Lcd_Set_Cursor@b 0074  
                 Lcd_Set_Cursor@y 0078                   Lcd_Set_Cursor@z 0077                   ___lbmod@divisor 0070  
         __end_of__initialization 07FC                   ___lbmod@counter 0074                 __end_of_Lcd_Clear 007F  
             ___bmul@multiplicand 0070                   descomponer@cent 0035                    __pcstackCOMMON 0070  
                ___lbdiv@quotient 0074                    _leer_velocidad 04FA                    _Lcd_Set_Cursor 02F3  
                  _OPTION_REGbits 0081                         ?_Lcd_Init 0070                         ?_Lcd_Port 0070  
                    enviar_x@val1 0075                      enviar_x@val2 0072                        __pbssBANK0 0020  
                      __pmaintext 05C1                           ?___bmul 0070               convertir@conversion 0077  
          __end_of_leer_velocidad 055C                           ?_leer_x 0070            __end_of_Lcd_Set_Cursor 0331  
        __end_of_leer_temperatura 0188                        ??_Lcd_Init 0074                        ??_Lcd_Port 0070  
                         _SSPCON2 0091                           _SSPSTAT 0094                        __stringtab 0003  
                       ?_enviar_x 0072                    _Lcd_Write_Char 01B5                           _Lcd_Cmd 00A8  
                         ___lbdiv 00F8                           ___lbmod 00D9                           ___lldiv 049C  
                         ___lwdiv 02B7                           ___lwmod 0217                   ?_leer_velocidad 0070  
               __end_of_convertir 00D9                   ?_Lcd_Set_Cursor 0074                           _centena 0032  
               __end_of_envio_ESP 05C1                           __ptext1 03AF                           __ptext2 0188  
                         __ptext3 01E6                           __ptext4 049C                           __ptext5 0370  
                         __ptext6 00C0                           __ptext7 007F                           __ptext8 0057  
                         __ptext9 04FA                           _minutos 002D                           _tempint 0031  
                         clrloop0 0064                 __end_of_inttochar 02B7            __end_of_Lcd_Write_Char 01E6  
            end_of_initialization 07FC        ??_I2C_Master_RepeatedStart 0070                        ??_enviar_x 0073  
                 ___lldiv@divisor 0070                   ___lldiv@counter 007D                  I2C_Master_Init@c 0035  
                I2C_Master_Read@a 0070                     leer_x@address 007B                         Lcd_Port@a 0070  
               __end_of_portsetup 01B5             __end_of_Escribir_dato 0441                         _PORTBbits 0006  
                       _PORTDbits 0008                     ??_descomponer 007C                  ___lbmod@dividend 0073  
                       _TRISCbits 0087                   ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0077  
               Lcd_Write_String@i 0075                       ___lbmod@rem 0075                         _Lcd_Clear 0074  
                  __end_of___bmul 0090                  _Lcd_Write_String 0119                    __end_of_leer_x 03AF  
             start_initialization 07F5               __end_of_descomponer 0370                 ??_I2C_Master_Init 0039  
               ??_I2C_Master_Read 0072                 ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070  
               Escribir_dato@dato 003A                 Escribir_dato@posx 0038                 Escribir_dato@posy 0039  
                      ?_Lcd_Clear 0070                          ??___bmul 0071                          ??_leer_x 0079  
                 Lcd_Write_Char@a 0074                   Lcd_Write_Char@y 0073                         ___latbits 0002  
                  descomponer@dec 0037                     __pcstackBANK0 0035                 ?_leer_temperatura 0070  
                  descomponer@num 007A                    descomponer@pos 0078                    descomponer@uni 0036  
              ??_leer_temperatura 007E                   setupINTOSC@IRCF 0070                          ?_Lcd_Cmd 0070  
                _I2C_Master_Start 004D                  _I2C_Master_Write 005C                  ??_leer_velocidad 007C  
                ___lwdiv@dividend 0072                  ??_Lcd_Set_Cursor 0075                      inttochar@num 0070  
                        ?___lbdiv 0070                          ?___lbmod 0070                          ?___lldiv 0070  
                        ?___lwdiv 0070                          ?___lwmod 0070                         __pstrings 0003  
                       _convertir 00C0                       _descomponer 0331                         _envio_ESP 055C  
                ___lwdiv@quotient 0075                         _inttochar 027C                         clear_ram0 0063  
                        Lcd_Cmd@a 0073                       ??_Lcd_Clear 0074                       __stringbase 0008  
                   ??_setupINTOSC 0070                         _portsetup 0188                        ?_convertir 0070  
                ??_Lcd_Write_Char 0071                        ?_envio_ESP 0070                   convertir@decena 0076  
                        _Lcd_Init 0441                          _Lcd_Port 0090               I2C_Master_Read@temp 0074  
                 convertir@unidad 0075          __end_of_Lcd_Write_String 013B                        ?_inttochar 0070  
       ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0009                        ?_portsetup 0070  
                 _I2C_Master_Init 01E6                   _I2C_Master_Read 013B                   _I2C_Master_Wait 006B  
                 _I2C_Master_Stop 0052                          _main$209 0043                   ___lwdiv@divisor 0070  
                 ___lwdiv@counter 0077                          __ptext10 0160                          __ptext11 013B  
                        __ptext20 055C                          __ptext12 03F5                          __ptext21 0249  
                        __ptext13 027C                          __ptext30 00A8                          __ptext22 005C  
                        __ptext14 0331                          __ptext31 0090                          __ptext23 0052  
                        __ptext15 0217                          __ptext24 004D                          __ptext16 02B7  
                        __ptext25 006B                          __ptext17 00D9                          __ptext26 0119  
                        __ptext18 00F8                          __ptext27 01B5                          __ptext19 02F3  
                        __ptext28 0441                          __ptext29 0074               __end_of_setupINTOSC 03F5  
                        _enviar_x 0249                          _segundos 002F                    convertir@valor 0078  
                     ??_convertir 0074          __end_of_I2C_Master_Start 0052          __end_of_I2C_Master_Write 0063  
                     ??_envio_ESP 0072                Lcd_Write_Char@temp 0072                  ___lwmod@dividend 0072  
                ___lldiv@dividend 0074                       ??_inttochar 0070                         stringcode 0003  
                      _OSCCONbits 008F           __end_of_I2C_Master_Init 0217           __end_of_I2C_Master_Read 0160  
         __end_of_I2C_Master_Wait 0074                     _Escribir_dato 03F5           __end_of_I2C_Master_Stop 0057  
              Lcd_Set_Cursor@temp 0079                       ??_portsetup 003D                       _setupINTOSC 03AF  
                    ?_descomponer 0078                  ___lldiv@quotient 0079                 I2C_Master_Write@d 0070  
                 ___lwmod@divisor 0070                   ___lwmod@counter 0075                          stringdir 0003  
                        stringtab 0003                       _SSPCON2bits 0091  
