

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 23 18:16:22 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39     0000                     
    40                           ; Version 2.40
    41                           ; Generated 17/11/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75     0000                     	;# 
    76     0001                     	;# 
    77     0002                     	;# 
    78     0003                     	;# 
    79     0004                     	;# 
    80     0005                     	;# 
    81     0006                     	;# 
    82     0007                     	;# 
    83     0008                     	;# 
    84     0009                     	;# 
    85     000A                     	;# 
    86     000B                     	;# 
    87     000C                     	;# 
    88     000D                     	;# 
    89     000E                     	;# 
    90     000E                     	;# 
    91     000F                     	;# 
    92     0010                     	;# 
    93     0011                     	;# 
    94     0012                     	;# 
    95     0013                     	;# 
    96     0014                     	;# 
    97     0015                     	;# 
    98     0015                     	;# 
    99     0016                     	;# 
   100     0017                     	;# 
   101     0018                     	;# 
   102     0019                     	;# 
   103     001A                     	;# 
   104     001B                     	;# 
   105     001B                     	;# 
   106     001C                     	;# 
   107     001D                     	;# 
   108     001E                     	;# 
   109     001F                     	;# 
   110     0081                     	;# 
   111     0085                     	;# 
   112     0086                     	;# 
   113     0087                     	;# 
   114     0088                     	;# 
   115     0089                     	;# 
   116     008C                     	;# 
   117     008D                     	;# 
   118     008E                     	;# 
   119     008F                     	;# 
   120     0090                     	;# 
   121     0091                     	;# 
   122     0092                     	;# 
   123     0093                     	;# 
   124     0093                     	;# 
   125     0093                     	;# 
   126     0094                     	;# 
   127     0095                     	;# 
   128     0096                     	;# 
   129     0097                     	;# 
   130     0098                     	;# 
   131     0099                     	;# 
   132     009A                     	;# 
   133     009B                     	;# 
   134     009C                     	;# 
   135     009D                     	;# 
   136     009E                     	;# 
   137     009F                     	;# 
   138     0105                     	;# 
   139     0107                     	;# 
   140     0108                     	;# 
   141     0109                     	;# 
   142     010C                     	;# 
   143     010C                     	;# 
   144     010D                     	;# 
   145     010E                     	;# 
   146     010F                     	;# 
   147     0185                     	;# 
   148     0187                     	;# 
   149     0188                     	;# 
   150     0189                     	;# 
   151     018C                     	;# 
   152     018D                     	;# 
   153     0000                     	;# 
   154     0001                     	;# 
   155     0002                     	;# 
   156     0003                     	;# 
   157     0004                     	;# 
   158     0005                     	;# 
   159     0006                     	;# 
   160     0007                     	;# 
   161     0008                     	;# 
   162     0009                     	;# 
   163     000A                     	;# 
   164     000B                     	;# 
   165     000C                     	;# 
   166     000D                     	;# 
   167     000E                     	;# 
   168     000E                     	;# 
   169     000F                     	;# 
   170     0010                     	;# 
   171     0011                     	;# 
   172     0012                     	;# 
   173     0013                     	;# 
   174     0014                     	;# 
   175     0015                     	;# 
   176     0015                     	;# 
   177     0016                     	;# 
   178     0017                     	;# 
   179     0018                     	;# 
   180     0019                     	;# 
   181     001A                     	;# 
   182     001B                     	;# 
   183     001B                     	;# 
   184     001C                     	;# 
   185     001D                     	;# 
   186     001E                     	;# 
   187     001F                     	;# 
   188     0081                     	;# 
   189     0085                     	;# 
   190     0086                     	;# 
   191     0087                     	;# 
   192     0088                     	;# 
   193     0089                     	;# 
   194     008C                     	;# 
   195     008D                     	;# 
   196     008E                     	;# 
   197     008F                     	;# 
   198     0090                     	;# 
   199     0091                     	;# 
   200     0092                     	;# 
   201     0093                     	;# 
   202     0093                     	;# 
   203     0093                     	;# 
   204     0094                     	;# 
   205     0095                     	;# 
   206     0096                     	;# 
   207     0097                     	;# 
   208     0098                     	;# 
   209     0099                     	;# 
   210     009A                     	;# 
   211     009B                     	;# 
   212     009C                     	;# 
   213     009D                     	;# 
   214     009E                     	;# 
   215     009F                     	;# 
   216     0105                     	;# 
   217     0107                     	;# 
   218     0108                     	;# 
   219     0109                     	;# 
   220     010C                     	;# 
   221     010C                     	;# 
   222     010D                     	;# 
   223     010E                     	;# 
   224     010F                     	;# 
   225     0185                     	;# 
   226     0187                     	;# 
   227     0188                     	;# 
   228     0189                     	;# 
   229     018C                     	;# 
   230     018D                     	;# 
   231     0000                     	;# 
   232     0001                     	;# 
   233     0002                     	;# 
   234     0003                     	;# 
   235     0004                     	;# 
   236     0005                     	;# 
   237     0006                     	;# 
   238     0007                     	;# 
   239     0008                     	;# 
   240     0009                     	;# 
   241     000A                     	;# 
   242     000B                     	;# 
   243     000C                     	;# 
   244     000D                     	;# 
   245     000E                     	;# 
   246     000E                     	;# 
   247     000F                     	;# 
   248     0010                     	;# 
   249     0011                     	;# 
   250     0012                     	;# 
   251     0013                     	;# 
   252     0014                     	;# 
   253     0015                     	;# 
   254     0015                     	;# 
   255     0016                     	;# 
   256     0017                     	;# 
   257     0018                     	;# 
   258     0019                     	;# 
   259     001A                     	;# 
   260     001B                     	;# 
   261     001B                     	;# 
   262     001C                     	;# 
   263     001D                     	;# 
   264     001E                     	;# 
   265     001F                     	;# 
   266     0081                     	;# 
   267     0085                     	;# 
   268     0086                     	;# 
   269     0087                     	;# 
   270     0088                     	;# 
   271     0089                     	;# 
   272     008C                     	;# 
   273     008D                     	;# 
   274     008E                     	;# 
   275     008F                     	;# 
   276     0090                     	;# 
   277     0091                     	;# 
   278     0092                     	;# 
   279     0093                     	;# 
   280     0093                     	;# 
   281     0093                     	;# 
   282     0094                     	;# 
   283     0095                     	;# 
   284     0096                     	;# 
   285     0097                     	;# 
   286     0098                     	;# 
   287     0099                     	;# 
   288     009A                     	;# 
   289     009B                     	;# 
   290     009C                     	;# 
   291     009D                     	;# 
   292     009E                     	;# 
   293     009F                     	;# 
   294     0105                     	;# 
   295     0107                     	;# 
   296     0108                     	;# 
   297     0109                     	;# 
   298     010C                     	;# 
   299     010C                     	;# 
   300     010D                     	;# 
   301     010E                     	;# 
   302     010F                     	;# 
   303     0185                     	;# 
   304     0187                     	;# 
   305     0188                     	;# 
   306     0189                     	;# 
   307     018C                     	;# 
   308     018D                     	;# 
   309     0000                     	;# 
   310     0001                     	;# 
   311     0002                     	;# 
   312     0003                     	;# 
   313     0004                     	;# 
   314     0005                     	;# 
   315     0006                     	;# 
   316     0007                     	;# 
   317     0008                     	;# 
   318     0009                     	;# 
   319     000A                     	;# 
   320     000B                     	;# 
   321     000C                     	;# 
   322     000D                     	;# 
   323     000E                     	;# 
   324     000E                     	;# 
   325     000F                     	;# 
   326     0010                     	;# 
   327     0011                     	;# 
   328     0012                     	;# 
   329     0013                     	;# 
   330     0014                     	;# 
   331     0015                     	;# 
   332     0015                     	;# 
   333     0016                     	;# 
   334     0017                     	;# 
   335     0018                     	;# 
   336     0019                     	;# 
   337     001A                     	;# 
   338     001B                     	;# 
   339     001B                     	;# 
   340     001C                     	;# 
   341     001D                     	;# 
   342     001E                     	;# 
   343     001F                     	;# 
   344     0081                     	;# 
   345     0085                     	;# 
   346     0086                     	;# 
   347     0087                     	;# 
   348     0088                     	;# 
   349     0089                     	;# 
   350     008C                     	;# 
   351     008D                     	;# 
   352     008E                     	;# 
   353     008F                     	;# 
   354     0090                     	;# 
   355     0091                     	;# 
   356     0092                     	;# 
   357     0093                     	;# 
   358     0093                     	;# 
   359     0093                     	;# 
   360     0094                     	;# 
   361     0095                     	;# 
   362     0096                     	;# 
   363     0097                     	;# 
   364     0098                     	;# 
   365     0099                     	;# 
   366     009A                     	;# 
   367     009B                     	;# 
   368     009C                     	;# 
   369     009D                     	;# 
   370     009E                     	;# 
   371     009F                     	;# 
   372     0105                     	;# 
   373     0107                     	;# 
   374     0108                     	;# 
   375     0109                     	;# 
   376     010C                     	;# 
   377     010C                     	;# 
   378     010D                     	;# 
   379     010E                     	;# 
   380     010F                     	;# 
   381     0185                     	;# 
   382     0187                     	;# 
   383     0188                     	;# 
   384     0189                     	;# 
   385     018C                     	;# 
   386     018D                     	;# 
   387     0000                     	;# 
   388     0001                     	;# 
   389     0002                     	;# 
   390     0003                     	;# 
   391     0004                     	;# 
   392     0005                     	;# 
   393     0006                     	;# 
   394     0007                     	;# 
   395     0008                     	;# 
   396     0009                     	;# 
   397     000A                     	;# 
   398     000B                     	;# 
   399     000C                     	;# 
   400     000D                     	;# 
   401     000E                     	;# 
   402     000E                     	;# 
   403     000F                     	;# 
   404     0010                     	;# 
   405     0011                     	;# 
   406     0012                     	;# 
   407     0013                     	;# 
   408     0014                     	;# 
   409     0015                     	;# 
   410     0015                     	;# 
   411     0016                     	;# 
   412     0017                     	;# 
   413     0018                     	;# 
   414     0019                     	;# 
   415     001A                     	;# 
   416     001B                     	;# 
   417     001B                     	;# 
   418     001C                     	;# 
   419     001D                     	;# 
   420     001E                     	;# 
   421     001F                     	;# 
   422     0081                     	;# 
   423     0085                     	;# 
   424     0086                     	;# 
   425     0087                     	;# 
   426     0088                     	;# 
   427     0089                     	;# 
   428     008C                     	;# 
   429     008D                     	;# 
   430     008E                     	;# 
   431     008F                     	;# 
   432     0090                     	;# 
   433     0091                     	;# 
   434     0092                     	;# 
   435     0093                     	;# 
   436     0093                     	;# 
   437     0093                     	;# 
   438     0094                     	;# 
   439     0095                     	;# 
   440     0096                     	;# 
   441     0097                     	;# 
   442     0098                     	;# 
   443     0099                     	;# 
   444     009A                     	;# 
   445     009B                     	;# 
   446     009C                     	;# 
   447     009D                     	;# 
   448     009E                     	;# 
   449     009F                     	;# 
   450     0105                     	;# 
   451     0107                     	;# 
   452     0108                     	;# 
   453     0109                     	;# 
   454     010C                     	;# 
   455     010C                     	;# 
   456     010D                     	;# 
   457     010E                     	;# 
   458     010F                     	;# 
   459     0185                     	;# 
   460     0187                     	;# 
   461     0188                     	;# 
   462     0189                     	;# 
   463     018C                     	;# 
   464     018D                     	;# 
   465     0000                     	;# 
   466     0001                     	;# 
   467     0002                     	;# 
   468     0003                     	;# 
   469     0004                     	;# 
   470     0005                     	;# 
   471     0006                     	;# 
   472     0007                     	;# 
   473     0008                     	;# 
   474     0009                     	;# 
   475     000A                     	;# 
   476     000B                     	;# 
   477     000C                     	;# 
   478     000D                     	;# 
   479     000E                     	;# 
   480     000E                     	;# 
   481     000F                     	;# 
   482     0010                     	;# 
   483     0011                     	;# 
   484     0012                     	;# 
   485     0013                     	;# 
   486     0014                     	;# 
   487     0015                     	;# 
   488     0015                     	;# 
   489     0016                     	;# 
   490     0017                     	;# 
   491     0018                     	;# 
   492     0019                     	;# 
   493     001A                     	;# 
   494     001B                     	;# 
   495     001B                     	;# 
   496     001C                     	;# 
   497     001D                     	;# 
   498     001E                     	;# 
   499     001F                     	;# 
   500     0081                     	;# 
   501     0085                     	;# 
   502     0086                     	;# 
   503     0087                     	;# 
   504     0088                     	;# 
   505     0089                     	;# 
   506     008C                     	;# 
   507     008D                     	;# 
   508     008E                     	;# 
   509     008F                     	;# 
   510     0090                     	;# 
   511     0091                     	;# 
   512     0092                     	;# 
   513     0093                     	;# 
   514     0093                     	;# 
   515     0093                     	;# 
   516     0094                     	;# 
   517     0095                     	;# 
   518     0096                     	;# 
   519     0097                     	;# 
   520     0098                     	;# 
   521     0099                     	;# 
   522     009A                     	;# 
   523     009B                     	;# 
   524     009C                     	;# 
   525     009D                     	;# 
   526     009E                     	;# 
   527     009F                     	;# 
   528     0105                     	;# 
   529     0107                     	;# 
   530     0108                     	;# 
   531     0109                     	;# 
   532     010C                     	;# 
   533     010C                     	;# 
   534     010D                     	;# 
   535     010E                     	;# 
   536     010F                     	;# 
   537     0185                     	;# 
   538     0187                     	;# 
   539     0188                     	;# 
   540     0189                     	;# 
   541     018C                     	;# 
   542     018D                     	;# 
   543     0000                     	;# 
   544     0001                     	;# 
   545     0002                     	;# 
   546     0003                     	;# 
   547     0004                     	;# 
   548     0005                     	;# 
   549     0006                     	;# 
   550     0007                     	;# 
   551     0008                     	;# 
   552     0009                     	;# 
   553     000A                     	;# 
   554     000B                     	;# 
   555     000C                     	;# 
   556     000D                     	;# 
   557     000E                     	;# 
   558     000E                     	;# 
   559     000F                     	;# 
   560     0010                     	;# 
   561     0011                     	;# 
   562     0012                     	;# 
   563     0013                     	;# 
   564     0014                     	;# 
   565     0015                     	;# 
   566     0015                     	;# 
   567     0016                     	;# 
   568     0017                     	;# 
   569     0018                     	;# 
   570     0019                     	;# 
   571     001A                     	;# 
   572     001B                     	;# 
   573     001B                     	;# 
   574     001C                     	;# 
   575     001D                     	;# 
   576     001E                     	;# 
   577     001F                     	;# 
   578     0081                     	;# 
   579     0085                     	;# 
   580     0086                     	;# 
   581     0087                     	;# 
   582     0088                     	;# 
   583     0089                     	;# 
   584     008C                     	;# 
   585     008D                     	;# 
   586     008E                     	;# 
   587     008F                     	;# 
   588     0090                     	;# 
   589     0091                     	;# 
   590     0092                     	;# 
   591     0093                     	;# 
   592     0093                     	;# 
   593     0093                     	;# 
   594     0094                     	;# 
   595     0095                     	;# 
   596     0096                     	;# 
   597     0097                     	;# 
   598     0098                     	;# 
   599     0099                     	;# 
   600     009A                     	;# 
   601     009B                     	;# 
   602     009C                     	;# 
   603     009D                     	;# 
   604     009E                     	;# 
   605     009F                     	;# 
   606     0105                     	;# 
   607     0107                     	;# 
   608     0108                     	;# 
   609     0109                     	;# 
   610     010C                     	;# 
   611     010C                     	;# 
   612     010D                     	;# 
   613     010E                     	;# 
   614     010F                     	;# 
   615     0185                     	;# 
   616     0187                     	;# 
   617     0188                     	;# 
   618     0189                     	;# 
   619     018C                     	;# 
   620     018D                     	;# 
   621     0008                     _PORTDbits	set	8
   622     0013                     _SSPBUF	set	19
   623     0014                     _SSPCON	set	20
   624     0006                     _PORTB	set	6
   625     0008                     _PORTD	set	8
   626     0006                     _PORTBbits	set	6
   627     0005                     _PORTA	set	5
   628     0043                     _RD3	set	67
   629     0047                     _RD7	set	71
   630     0046                     _RD6	set	70
   631     0045                     _RD5	set	69
   632     0044                     _RD4	set	68
   633     008F                     _OSCCONbits	set	143
   634     0091                     _SSPCON2bits	set	145
   635     0087                     _TRISCbits	set	135
   636     0094                     _SSPSTAT	set	148
   637     0093                     _SSPADD	set	147
   638     0091                     _SSPCON2	set	145
   639     0081                     _OPTION_REGbits	set	129
   640     0095                     _WPUB	set	149
   641     0086                     _TRISB	set	134
   642     0088                     _TRISD	set	136
   643     0085                     _TRISA	set	133
   644     0189                     _ANSELH	set	393
   645     0188                     _ANSEL	set	392
   646                           
   647                           	psect	strings
   648     0003                     __pstrings:
   649     0003                     stringtab:
   650     0003                     __stringtab:
   651     0003                     stringcode:	
   652                           ;	String table - string pointers are 1 byte each
   653                           
   654     0003                     stringdir:
   655     0003  3000               	movlw	high stringdir
   656     0004  008A               	movwf	10
   657     0005  0804               	movf	4,w
   658     0006  0A84               	incf	4,f
   659     0007  0782               	addwf	2,f
   660     0008                     __stringbase:
   661     0008  3400               	retlw	0
   662     0009                     __end_of__stringtab:
   663     0009                     STR_1:
   664     0009  3453               	retlw	83	;'S'
   665     000A  343A               	retlw	58	;':'
   666     000B  3420               	retlw	32	;' '
   667     000C  3420               	retlw	32	;' '
   668     000D  343A               	retlw	58	;':'
   669     000E  3400               	retlw	0
   670                           
   671                           	psect	cinit
   672     07EB                     start_initialization:	
   673                           ; #config settings
   674                           
   675     07EB                     __initialization:
   676                           
   677                           ; Clear objects allocated to BANK0
   678     07EB  1283               	bcf	3,5	;RP0=0, select bank0
   679     07EC  1303               	bcf	3,6	;RP1=0, select bank0
   680     07ED  01A0               	clrf	__pbssBANK0& (0+127)
   681     07EE  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   682     07EF  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   683     07F0  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   684     07F1  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   685     07F2  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   686     07F3  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   687     07F4  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   688     07F5  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   689     07F6  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   690     07F7  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   691     07F8  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   692     07F9  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   693     07FA  01AD               	clrf	(__pbssBANK0+13)& (0+127)
   694     07FB  01AE               	clrf	(__pbssBANK0+14)& (0+127)
   695     07FC                     end_of_initialization:	
   696                           ;End of C runtime variable initialization code
   697                           
   698     07FC                     __end_of__initialization:
   699     07FC  0183               	clrf	3
   700     07FD  120A  118A  2E5D   	ljmp	_main	;jump to C main() function
   701                           
   702                           	psect	bssBANK0
   703     0020                     __pbssBANK0:
   704     0020                     _conver:
   705     0020                     	ds	4
   706     0024                     _valADC:
   707     0024                     	ds	3
   708     0027                     _modo:
   709     0027                     	ds	1
   710     0028                     _minutos:
   711     0028                     	ds	1
   712     0029                     _min:
   713     0029                     	ds	1
   714     002A                     _segundos:
   715     002A                     	ds	1
   716     002B                     _sec:
   717     002B                     	ds	1
   718     002C                     _decena:
   719     002C                     	ds	1
   720     002D                     _unidad:
   721     002D                     	ds	1
   722     002E                     _lecADC:
   723     002E                     	ds	1
   724                           
   725                           	psect	cstackCOMMON
   726     0070                     __pcstackCOMMON:
   727     0070                     ?_setupINTOSC:
   728     0070                     ??_setupINTOSC:	
   729                           ; 1 bytes @ 0x0
   730                           
   731     0070                     ?_portsetup:	
   732                           ; 1 bytes @ 0x0
   733                           
   734     0070                     ?_Lcd_Init:	
   735                           ; 1 bytes @ 0x0
   736                           
   737     0070                     ?_Lcd_Clear:	
   738                           ; 1 bytes @ 0x0
   739                           
   740     0070                     ?_Lcd_Write_Char:	
   741                           ; 1 bytes @ 0x0
   742                           
   743     0070                     ?_Lcd_Write_String:	
   744                           ; 1 bytes @ 0x0
   745                           
   746     0070                     ?_leer_x:	
   747                           ; 1 bytes @ 0x0
   748                           
   749     0070                     ?_inttochar:	
   750                           ; 1 bytes @ 0x0
   751                           
   752     0070                     ??_inttochar:	
   753                           ; 1 bytes @ 0x0
   754                           
   755     0070                     ?_I2C_Master_Start:	
   756                           ; 1 bytes @ 0x0
   757                           
   758     0070                     ??_I2C_Master_Start:	
   759                           ; 1 bytes @ 0x0
   760                           
   761     0070                     ?_I2C_Master_Write:	
   762                           ; 1 bytes @ 0x0
   763                           
   764     0070                     ?_I2C_Master_RepeatedStart:	
   765                           ; 1 bytes @ 0x0
   766                           
   767     0070                     ??_I2C_Master_RepeatedStart:	
   768                           ; 1 bytes @ 0x0
   769                           
   770     0070                     ?_I2C_Master_Stop:	
   771                           ; 1 bytes @ 0x0
   772                           
   773     0070                     ??_I2C_Master_Stop:	
   774                           ; 1 bytes @ 0x0
   775                           
   776     0070                     ?_main:	
   777                           ; 1 bytes @ 0x0
   778                           
   779     0070                     ?_convertir:	
   780                           ; 1 bytes @ 0x0
   781                           
   782     0070                     ?_I2C_Master_Wait:	
   783                           ; 1 bytes @ 0x0
   784                           
   785     0070                     ??_I2C_Master_Wait:	
   786                           ; 1 bytes @ 0x0
   787                           
   788     0070                     ?_Lcd_Port:	
   789                           ; 1 bytes @ 0x0
   790                           
   791     0070                     ??_Lcd_Port:	
   792                           ; 1 bytes @ 0x0
   793                           
   794     0070                     ?_Lcd_Cmd:	
   795                           ; 1 bytes @ 0x0
   796                           
   797     0070                     ?___bmul:	
   798                           ; 1 bytes @ 0x0
   799                           
   800     0070                     ?_I2C_Master_Read:	
   801                           ; 1 bytes @ 0x0
   802                           
   803     0070                     ?___awdiv:	
   804                           ; 2 bytes @ 0x0
   805                           
   806     0070                     ?___awmod:	
   807                           ; 2 bytes @ 0x0
   808                           
   809     0070                     ?___lldiv:	
   810                           ; 2 bytes @ 0x0
   811                           
   812     0070                     Lcd_Port@a:	
   813                           ; 4 bytes @ 0x0
   814                           
   815     0070                     inttochar@num:	
   816                           ; 1 bytes @ 0x0
   817                           
   818     0070                     setupINTOSC@IRCF:	
   819                           ; 1 bytes @ 0x0
   820                           
   821     0070                     ___bmul@multiplicand:	
   822                           ; 1 bytes @ 0x0
   823                           
   824     0070                     I2C_Master_Write@d:	
   825                           ; 1 bytes @ 0x0
   826                           
   827     0070                     I2C_Master_Read@a:	
   828                           ; 2 bytes @ 0x0
   829                           
   830     0070                     ___awdiv@divisor:	
   831                           ; 2 bytes @ 0x0
   832                           
   833     0070                     ___awmod@divisor:	
   834                           ; 2 bytes @ 0x0
   835                           
   836     0070                     ___lldiv@divisor:	
   837                           ; 2 bytes @ 0x0
   838                           
   839                           
   840                           ; 4 bytes @ 0x0
   841     0070                     	ds	1
   842     0071                     ??_Lcd_Write_Char:
   843     0071                     ??_Lcd_Cmd:	
   844                           ; 1 bytes @ 0x1
   845                           
   846     0071                     ??___bmul:	
   847                           ; 1 bytes @ 0x1
   848                           
   849                           
   850                           ; 1 bytes @ 0x1
   851     0071                     	ds	1
   852     0072                     ?_enviar_x:
   853     0072                     ??_I2C_Master_Write:	
   854                           ; 1 bytes @ 0x2
   855                           
   856     0072                     ??_I2C_Master_Read:	
   857                           ; 1 bytes @ 0x2
   858                           
   859     0072                     enviar_x@val2:	
   860                           ; 1 bytes @ 0x2
   861                           
   862     0072                     Lcd_Write_Char@temp:	
   863                           ; 1 bytes @ 0x2
   864                           
   865     0072                     ___bmul@product:	
   866                           ; 1 bytes @ 0x2
   867                           
   868     0072                     ___awdiv@dividend:	
   869                           ; 1 bytes @ 0x2
   870                           
   871     0072                     ___awmod@dividend:	
   872                           ; 2 bytes @ 0x2
   873                           
   874                           
   875                           ; 2 bytes @ 0x2
   876     0072                     	ds	1
   877     0073                     ??_enviar_x:
   878     0073                     Lcd_Cmd@a:	
   879                           ; 1 bytes @ 0x3
   880                           
   881     0073                     Lcd_Write_Char@y:	
   882                           ; 1 bytes @ 0x3
   883                           
   884     0073                     ___bmul@multiplier:	
   885                           ; 1 bytes @ 0x3
   886                           
   887                           
   888                           ; 1 bytes @ 0x3
   889     0073                     	ds	1
   890     0074                     ??_Lcd_Init:
   891     0074                     ??_Lcd_Clear:	
   892                           ; 1 bytes @ 0x4
   893                           
   894     0074                     ?_Lcd_Set_Cursor:	
   895                           ; 1 bytes @ 0x4
   896                           
   897     0074                     ??_convertir:	
   898                           ; 1 bytes @ 0x4
   899                           
   900     0074                     ??___awdiv:	
   901                           ; 1 bytes @ 0x4
   902                           
   903     0074                     ??___awmod:	
   904                           ; 1 bytes @ 0x4
   905                           
   906     0074                     Lcd_Set_Cursor@b:	
   907                           ; 1 bytes @ 0x4
   908                           
   909     0074                     Lcd_Write_Char@a:	
   910                           ; 1 bytes @ 0x4
   911                           
   912     0074                     I2C_Master_Read@temp:	
   913                           ; 1 bytes @ 0x4
   914                           
   915     0074                     ___lldiv@dividend:	
   916                           ; 2 bytes @ 0x4
   917                           
   918                           
   919                           ; 4 bytes @ 0x4
   920     0074                     	ds	1
   921     0075                     ??_Lcd_Set_Cursor:
   922     0075                     ??_Lcd_Write_String:	
   923                           ; 1 bytes @ 0x5
   924                           
   925     0075                     convertir@unidad:	
   926                           ; 1 bytes @ 0x5
   927                           
   928     0075                     enviar_x@val1:	
   929                           ; 1 bytes @ 0x5
   930                           
   931     0075                     ___awdiv@counter:	
   932                           ; 1 bytes @ 0x5
   933                           
   934     0075                     ___awmod@counter:	
   935                           ; 1 bytes @ 0x5
   936                           
   937     0075                     Lcd_Write_String@i:	
   938                           ; 1 bytes @ 0x5
   939                           
   940                           
   941                           ; 2 bytes @ 0x5
   942     0075                     	ds	1
   943     0076                     convertir@decena:
   944     0076                     Lcd_Set_Cursor@a:	
   945                           ; 1 bytes @ 0x6
   946                           
   947     0076                     ___awdiv@sign:	
   948                           ; 1 bytes @ 0x6
   949                           
   950     0076                     ___awmod@sign:	
   951                           ; 1 bytes @ 0x6
   952                           
   953                           
   954                           ; 1 bytes @ 0x6
   955     0076                     	ds	1
   956     0077                     convertir@conversion:
   957     0077                     Lcd_Set_Cursor@z:	
   958                           ; 1 bytes @ 0x7
   959                           
   960     0077                     Lcd_Write_String@a:	
   961                           ; 1 bytes @ 0x7
   962                           
   963     0077                     ___awdiv@quotient:	
   964                           ; 1 bytes @ 0x7
   965                           
   966                           
   967                           ; 2 bytes @ 0x7
   968     0077                     	ds	1
   969     0078                     ??___lldiv:
   970     0078                     convertir@valor:	
   971                           ; 1 bytes @ 0x8
   972                           
   973     0078                     Lcd_Set_Cursor@y:	
   974                           ; 1 bytes @ 0x8
   975                           
   976                           
   977                           ; 1 bytes @ 0x8
   978     0078                     	ds	1
   979     0079                     ??_leer_x:
   980     0079                     ?_descomponer:	
   981                           ; 1 bytes @ 0x9
   982                           
   983     0079                     Lcd_Set_Cursor@temp:	
   984                           ; 1 bytes @ 0x9
   985                           
   986     0079                     descomponer@pos:	
   987                           ; 1 bytes @ 0x9
   988                           
   989     0079                     ___lldiv@quotient:	
   990                           ; 2 bytes @ 0x9
   991                           
   992                           
   993                           ; 4 bytes @ 0x9
   994     0079                     	ds	2
   995     007B                     leer_x@address:
   996     007B                     descomponer@num:	
   997                           ; 1 bytes @ 0xB
   998                           
   999                           
  1000                           ; 1 bytes @ 0xB
  1001     007B                     	ds	1
  1002     007C                     ??_descomponer:
  1003     007C                     leer_x@valor:	
  1004                           ; 1 bytes @ 0xC
  1005                           
  1006                           
  1007                           ; 1 bytes @ 0xC
  1008     007C                     	ds	1
  1009     007D                     ___lldiv@counter:
  1010                           
  1011                           ; 1 bytes @ 0xD
  1012     007D                     	ds	1
  1013     007E                     ??_portsetup:
  1014     007E                     ??_Escribir_dato:	
  1015                           ; 1 bytes @ 0xE
  1016                           
  1017                           
  1018                           	psect	cstackBANK0
  1019     002F                     __pcstackBANK0:	
  1020                           ; 1 bytes @ 0xE
  1021                           
  1022     002F                     ?_I2C_Master_Init:
  1023     002F                     descomponer@cent:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026     002F                     I2C_Master_Init@c:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029                           
  1030                           ; 4 bytes @ 0x0
  1031     002F                     	ds	1
  1032     0030                     descomponer@uni:
  1033                           
  1034                           ; 1 bytes @ 0x1
  1035     0030                     	ds	1
  1036     0031                     descomponer@dec:
  1037                           
  1038                           ; 1 bytes @ 0x2
  1039     0031                     	ds	1
  1040     0032                     ?_Escribir_dato:
  1041     0032                     Escribir_dato@posx:	
  1042                           ; 1 bytes @ 0x3
  1043                           
  1044                           
  1045                           ; 1 bytes @ 0x3
  1046     0032                     	ds	1
  1047     0033                     ??_I2C_Master_Init:
  1048     0033                     Escribir_dato@posy:	
  1049                           ; 1 bytes @ 0x4
  1050                           
  1051                           
  1052                           ; 1 bytes @ 0x4
  1053     0033                     	ds	1
  1054     0034                     Escribir_dato@dato:
  1055                           
  1056                           ; 1 bytes @ 0x5
  1057     0034                     	ds	3
  1058     0037                     ??_main:
  1059                           
  1060                           ; 1 bytes @ 0x8
  1061     0037                     	ds	2
  1062     0039                     _main$175:
  1063                           
  1064                           ; 1 bytes @ 0xA
  1065     0039                     	ds	1
  1066                           
  1067                           	psect	maintext
  1068     065D                     __pmaintext:	
  1069 ;;
  1070 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1071 ;;
  1072 ;; *************** function _main *****************
  1073 ;; Defined at:
  1074 ;;		line 63 in file "main.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;		None
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : B00/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1088 ;;      Params:         0       0       0       0       0
  1089 ;;      Locals:         0       1       0       0       0
  1090 ;;      Temps:          0       2       0       0       0
  1091 ;;      Totals:         0       3       0       0       0
  1092 ;;Total ram usage:        3 bytes
  1093 ;; Hardware stack levels required when called: 4
  1094 ;; This function calls:
  1095 ;;		_Escribir_dato
  1096 ;;		_Lcd_Clear
  1097 ;;		_Lcd_Init
  1098 ;;		_Lcd_Set_Cursor
  1099 ;;		_Lcd_Write_Char
  1100 ;;		_Lcd_Write_String
  1101 ;;		_enviar_x
  1102 ;;		_leer_x
  1103 ;;		_portsetup
  1104 ;;		_setupINTOSC
  1105 ;; This function is called by:
  1106 ;;		Startup code after reset
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110     065D                     _main:	
  1111                           ;psect for function _main
  1112                           
  1113     065D                     l1770:	
  1114                           ;incstack = 0
  1115                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1116                           
  1117                           
  1118                           ;main.c: 64:     setupINTOSC(7);
  1119     065D  3007               	movlw	7
  1120     065E  120A  118A  24CC  120A  118A  	fcall	_setupINTOSC
  1121                           
  1122                           ;main.c: 65:     portsetup();
  1123     0663  120A  118A  21F6  120A  118A  	fcall	_portsetup
  1124                           
  1125                           ;main.c: 67:     Lcd_Init();
  1126     0668  120A  118A  246F  120A  118A  	fcall	_Lcd_Init
  1127                           
  1128                           ;main.c: 68:     Lcd_Clear();
  1129     066D  120A  118A  214B  120A  118A  	fcall	_Lcd_Clear
  1130                           
  1131                           ;main.c: 69:     Lcd_Set_Cursor(1,13);
  1132     0672  300D               	movlw	13
  1133     0673  00F4               	movwf	Lcd_Set_Cursor@b
  1134     0674  3001               	movlw	1
  1135     0675  120A  118A  2334  120A  118A  	fcall	_Lcd_Set_Cursor
  1136                           
  1137                           ;main.c: 70:     Lcd_Write_Char(':');
  1138     067A  303A               	movlw	58
  1139     067B  120A  118A  2251  120A  118A  	fcall	_Lcd_Write_Char
  1140                           
  1141                           ;main.c: 71:     Lcd_Set_Cursor(2,9);
  1142     0680  3009               	movlw	9
  1143     0681  00F4               	movwf	Lcd_Set_Cursor@b
  1144     0682  3002               	movlw	2
  1145     0683  120A  118A  2334  120A  118A  	fcall	_Lcd_Set_Cursor
  1146     0688                     l1772:
  1147                           
  1148                           ;main.c: 72:     Lcd_Write_String("S:  :");
  1149     0688  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1150     0689  120A  118A  21D1  120A  118A  	fcall	_Lcd_Write_String
  1151     068E                     l1774:
  1152                           
  1153                           ;main.c: 75:     modo = 0;
  1154     068E  1283               	bcf	3,5	;RP0=0, select bank0
  1155     068F  1303               	bcf	3,6	;RP1=0, select bank0
  1156     0690  01A7               	clrf	_modo
  1157     0691                     l1776:
  1158                           
  1159                           ;main.c: 76:     sec = 0;
  1160     0691  01AB               	clrf	_sec
  1161     0692                     l1778:
  1162                           
  1163                           ;main.c: 77:     min = 0;
  1164     0692  01A9               	clrf	_min
  1165     0693                     l1780:
  1166                           
  1167                           ;main.c: 79:     enviar_x(0, 0);
  1168     0693  01F2               	clrf	enviar_x@val2
  1169     0694  3000               	movlw	0
  1170     0695  120A  118A  2286  120A  118A  	fcall	_enviar_x
  1171     069A                     l1782:
  1172                           
  1173                           ;main.c: 82:         PORTA = modo;
  1174     069A  1283               	bcf	3,5	;RP0=0, select bank0
  1175     069B  1303               	bcf	3,6	;RP1=0, select bank0
  1176     069C  0827               	movf	_modo,w
  1177     069D  0085               	movwf	5	;volatile
  1178     069E                     l1784:
  1179                           
  1180                           ;main.c: 84:         enviar_x(0, 0);
  1181     069E  01F2               	clrf	enviar_x@val2
  1182     069F  3000               	movlw	0
  1183     06A0  120A  118A  2286  120A  118A  	fcall	_enviar_x
  1184     06A5                     l1786:
  1185                           
  1186                           ;main.c: 86:         sec = leer_x(0x00);
  1187     06A5  3000               	movlw	0
  1188     06A6  120A  118A  22F3  120A  118A  	fcall	_leer_x
  1189     06AB  1283               	bcf	3,5	;RP0=0, select bank0
  1190     06AC  1303               	bcf	3,6	;RP1=0, select bank0
  1191     06AD  00AB               	movwf	_sec
  1192     06AE                     l1788:
  1193                           
  1194                           ;main.c: 87:         Escribir_dato(sec, 14, 1);
  1195     06AE  300E               	movlw	14
  1196     06AF  00B2               	movwf	Escribir_dato@posx
  1197     06B0  01B3               	clrf	Escribir_dato@posy
  1198     06B1  0AB3               	incf	Escribir_dato@posy,f
  1199     06B2  082B               	movf	_sec,w
  1200     06B3  120A  118A  237A  120A  118A  	fcall	_Escribir_dato
  1201     06B8                     l1790:
  1202                           
  1203                           ;main.c: 89:         min = leer_x(0x01);
  1204     06B8  3001               	movlw	1
  1205     06B9  120A  118A  22F3  120A  118A  	fcall	_leer_x
  1206     06BE  1283               	bcf	3,5	;RP0=0, select bank0
  1207     06BF  1303               	bcf	3,6	;RP1=0, select bank0
  1208     06C0  00A9               	movwf	_min
  1209     06C1                     l1792:
  1210                           
  1211                           ;main.c: 90:         Escribir_dato(min, 11, 1);
  1212     06C1  300B               	movlw	11
  1213     06C2  00B2               	movwf	Escribir_dato@posx
  1214     06C3  01B3               	clrf	Escribir_dato@posy
  1215     06C4  0AB3               	incf	Escribir_dato@posy,f
  1216     06C5  0829               	movf	_min,w
  1217     06C6  120A  118A  237A  120A  118A  	fcall	_Escribir_dato
  1218     06CB                     l1794:
  1219                           
  1220                           ;main.c: 92:         if(!PORTBbits.RB4){
  1221     06CB  1283               	bcf	3,5	;RP0=0, select bank0
  1222     06CC  1303               	bcf	3,6	;RP1=0, select bank0
  1223     06CD  1A06               	btfsc	6,4	;volatile
  1224     06CE  2ED0               	goto	u1471
  1225     06CF  2ED1               	goto	u1470
  1226     06D0                     u1471:
  1227     06D0  2E9A               	goto	l1782
  1228     06D1                     u1470:
  1229     06D1                     l1796:
  1230                           
  1231                           ;main.c: 93:             _delay((unsigned long)((20)*(8000000/4000.0)));
  1232     06D1  3034               	movlw	52
  1233     06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1234     06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1235     06D4  00B8               	movwf	??_main+1
  1236     06D5  30F1               	movlw	241
  1237     06D6  00B7               	movwf	??_main
  1238     06D7                     u1657:
  1239     06D7  0BB7               	decfsz	??_main,f
  1240     06D8  2ED7               	goto	u1657
  1241     06D9  0BB8               	decfsz	??_main+1,f
  1242     06DA  2ED7               	goto	u1657
  1243                           
  1244                           ;main.c: 94:             while(PORTBbits.RB3){
  1245     06DB  2F7F               	goto	l1854
  1246     06DC                     l1798:
  1247                           
  1248                           ;main.c: 95:                 _delay((unsigned long)((30)*(8000000/4000.0)));
  1249     06DC  304E               	movlw	78
  1250     06DD  1283               	bcf	3,5	;RP0=0, select bank0
  1251     06DE  1303               	bcf	3,6	;RP1=0, select bank0
  1252     06DF  00B8               	movwf	??_main+1
  1253     06E0  30EA               	movlw	234
  1254     06E1  00B7               	movwf	??_main
  1255     06E2                     u1667:
  1256     06E2  0BB7               	decfsz	??_main,f
  1257     06E3  2EE2               	goto	u1667
  1258     06E4  0BB8               	decfsz	??_main+1,f
  1259     06E5  2EE2               	goto	u1667
  1260     06E6  0000               	nop
  1261     06E7                     l1800:
  1262                           
  1263                           ;main.c: 96:                 Escribir_dato(sec, 14, 1);
  1264     06E7  300E               	movlw	14
  1265     06E8  1283               	bcf	3,5	;RP0=0, select bank0
  1266     06E9  1303               	bcf	3,6	;RP1=0, select bank0
  1267     06EA  00B2               	movwf	Escribir_dato@posx
  1268     06EB  01B3               	clrf	Escribir_dato@posy
  1269     06EC  0AB3               	incf	Escribir_dato@posy,f
  1270     06ED  082B               	movf	_sec,w
  1271     06EE  120A  118A  237A  120A  118A  	fcall	_Escribir_dato
  1272     06F3                     l1802:
  1273                           
  1274                           ;main.c: 97:                 Escribir_dato(min, 11, 1);
  1275     06F3  300B               	movlw	11
  1276     06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1277     06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1278     06F6  00B2               	movwf	Escribir_dato@posx
  1279     06F7  01B3               	clrf	Escribir_dato@posy
  1280     06F8  0AB3               	incf	Escribir_dato@posy,f
  1281     06F9  0829               	movf	_min,w
  1282     06FA  120A  118A  237A  120A  118A  	fcall	_Escribir_dato
  1283     06FF                     l1804:
  1284                           
  1285                           ;main.c: 99:                 if(PORTBbits.RB7 == 0){
  1286     06FF  1283               	bcf	3,5	;RP0=0, select bank0
  1287     0700  1303               	bcf	3,6	;RP1=0, select bank0
  1288     0701  1B86               	btfsc	6,7	;volatile
  1289     0702  2F04               	goto	u1481
  1290     0703  2F05               	goto	u1480
  1291     0704                     u1481:
  1292     0704  2F1C               	goto	l1814
  1293     0705                     u1480:
  1294     0705                     l1806:
  1295                           
  1296                           ;main.c: 100:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1297     0705  3034               	movlw	52
  1298     0706  1283               	bcf	3,5	;RP0=0, select bank0
  1299     0707  1303               	bcf	3,6	;RP1=0, select bank0
  1300     0708  00B8               	movwf	??_main+1
  1301     0709  30F1               	movlw	241
  1302     070A  00B7               	movwf	??_main
  1303     070B                     u1677:
  1304     070B  0BB7               	decfsz	??_main,f
  1305     070C  2F0B               	goto	u1677
  1306     070D  0BB8               	decfsz	??_main+1,f
  1307     070E  2F0B               	goto	u1677
  1308     070F                     l1808:
  1309                           
  1310                           ;main.c: 101:                     if (modo < 1){
  1311     070F  1283               	bcf	3,5	;RP0=0, select bank0
  1312     0710  1303               	bcf	3,6	;RP1=0, select bank0
  1313     0711  0827               	movf	_modo,w
  1314     0712  1D03               	btfss	3,2
  1315     0713  2F15               	goto	u1491
  1316     0714  2F16               	goto	u1490
  1317     0715                     u1491:
  1318     0715  2F1B               	goto	l1812
  1319     0716                     u1490:
  1320     0716                     l1810:
  1321                           
  1322                           ;main.c: 102:                         modo += 1;
  1323     0716  3001               	movlw	1
  1324     0717  00B7               	movwf	??_main
  1325     0718  0837               	movf	??_main,w
  1326     0719  07A7               	addwf	_modo,f
  1327                           
  1328                           ;main.c: 103:                     }
  1329     071A  2F1C               	goto	l1814
  1330     071B                     l1812:
  1331                           
  1332                           ;main.c: 105:                         modo = 0;
  1333     071B  01A7               	clrf	_modo
  1334     071C                     l1814:
  1335                           
  1336                           ;main.c: 109:                 if(PORTBbits.RB6 == 0){
  1337     071C  1B06               	btfsc	6,6	;volatile
  1338     071D  2F1F               	goto	u1501
  1339     071E  2F20               	goto	u1500
  1340     071F                     u1501:
  1341     071F  2F4F               	goto	l1834
  1342     0720                     u1500:
  1343     0720                     l1816:
  1344                           
  1345                           ;main.c: 110:                     _delay((unsigned long)((50)*(8000000/4000.0)));
  1346     0720  3082               	movlw	130
  1347     0721  1283               	bcf	3,5	;RP0=0, select bank0
  1348     0722  1303               	bcf	3,6	;RP1=0, select bank0
  1349     0723  00B8               	movwf	??_main+1
  1350     0724  30DD               	movlw	221
  1351     0725  00B7               	movwf	??_main
  1352     0726                     u1687:
  1353     0726  0BB7               	decfsz	??_main,f
  1354     0727  2F26               	goto	u1687
  1355     0728  0BB8               	decfsz	??_main+1,f
  1356     0729  2F26               	goto	u1687
  1357     072A                     l1818:
  1358                           
  1359                           ;main.c: 111:                     if (modo == 0){
  1360     072A  1283               	bcf	3,5	;RP0=0, select bank0
  1361     072B  1303               	bcf	3,6	;RP1=0, select bank0
  1362     072C  0827               	movf	_modo,w
  1363     072D  1D03               	btfss	3,2
  1364     072E  2F30               	goto	u1511
  1365     072F  2F31               	goto	u1510
  1366     0730                     u1511:
  1367     0730  2F3E               	goto	l1826
  1368     0731                     u1510:
  1369     0731                     l1820:
  1370                           
  1371                           ;main.c: 112:                         if (sec<59){
  1372     0731  303B               	movlw	59
  1373     0732  022B               	subwf	_sec,w
  1374     0733  1803               	skipnc
  1375     0734  2F36               	goto	u1521
  1376     0735  2F37               	goto	u1520
  1377     0736                     u1521:
  1378     0736  2F3C               	goto	l1824
  1379     0737                     u1520:
  1380     0737                     l1822:
  1381                           
  1382                           ;main.c: 113:                             sec ++;
  1383     0737  3001               	movlw	1
  1384     0738  00B7               	movwf	??_main
  1385     0739  0837               	movf	??_main,w
  1386     073A  07AB               	addwf	_sec,f
  1387                           
  1388                           ;main.c: 114:                         }
  1389     073B  2F4F               	goto	l1834
  1390     073C                     l1824:
  1391                           
  1392                           ;main.c: 116:                             sec = 0;
  1393     073C  01AB               	clrf	_sec
  1394     073D  2F4F               	goto	l1834
  1395     073E                     l1826:
  1396     073E  0327               	decf	_modo,w
  1397     073F  1D03               	btfss	3,2
  1398     0740  2F42               	goto	u1531
  1399     0741  2F43               	goto	u1530
  1400     0742                     u1531:
  1401     0742  2F4F               	goto	l1834
  1402     0743                     u1530:
  1403     0743                     l1828:
  1404                           
  1405                           ;main.c: 120:                         if (min<59){
  1406     0743  303B               	movlw	59
  1407     0744  0229               	subwf	_min,w
  1408     0745  1803               	skipnc
  1409     0746  2F48               	goto	u1541
  1410     0747  2F49               	goto	u1540
  1411     0748                     u1541:
  1412     0748  2F4E               	goto	l1832
  1413     0749                     u1540:
  1414     0749                     l1830:
  1415                           
  1416                           ;main.c: 121:                             min++;
  1417     0749  3001               	movlw	1
  1418     074A  00B7               	movwf	??_main
  1419     074B  0837               	movf	??_main,w
  1420     074C  07A9               	addwf	_min,f
  1421                           
  1422                           ;main.c: 122:                         }
  1423     074D  2F4F               	goto	l1834
  1424     074E                     l1832:
  1425                           
  1426                           ;main.c: 124:                             min = 0;
  1427     074E  01A9               	clrf	_min
  1428     074F                     l1834:
  1429                           
  1430                           ;main.c: 131:                 if(PORTBbits.RB5 == 0){
  1431     074F  1A86               	btfsc	6,5	;volatile
  1432     0750  2F52               	goto	u1551
  1433     0751  2F53               	goto	u1550
  1434     0752                     u1551:
  1435     0752  2F7F               	goto	l1854
  1436     0753                     u1550:
  1437     0753                     l1836:
  1438                           
  1439                           ;main.c: 132:                     _delay((unsigned long)((50)*(8000000/4000.0)));
  1440     0753  3082               	movlw	130
  1441     0754  1283               	bcf	3,5	;RP0=0, select bank0
  1442     0755  1303               	bcf	3,6	;RP1=0, select bank0
  1443     0756  00B8               	movwf	??_main+1
  1444     0757  30DD               	movlw	221
  1445     0758  00B7               	movwf	??_main
  1446     0759                     u1697:
  1447     0759  0BB7               	decfsz	??_main,f
  1448     075A  2F59               	goto	u1697
  1449     075B  0BB8               	decfsz	??_main+1,f
  1450     075C  2F59               	goto	u1697
  1451     075D                     l1838:
  1452                           
  1453                           ;main.c: 134:                     if (modo == 0){
  1454     075D  1283               	bcf	3,5	;RP0=0, select bank0
  1455     075E  1303               	bcf	3,6	;RP1=0, select bank0
  1456     075F  0827               	movf	_modo,w
  1457     0760  1D03               	btfss	3,2
  1458     0761  2F63               	goto	u1561
  1459     0762  2F64               	goto	u1560
  1460     0763                     u1561:
  1461     0763  2F6F               	goto	l1846
  1462     0764                     u1560:
  1463     0764                     l1840:
  1464                           
  1465                           ;main.c: 135:                         if (sec > 0){
  1466     0764  082B               	movf	_sec,w
  1467     0765  1903               	btfsc	3,2
  1468     0766  2F68               	goto	u1571
  1469     0767  2F69               	goto	u1570
  1470     0768                     u1571:
  1471     0768  2F6C               	goto	l1844
  1472     0769                     u1570:
  1473     0769                     l1842:
  1474                           
  1475                           ;main.c: 136:                             sec--;
  1476     0769  3001               	movlw	1
  1477     076A  02AB               	subwf	_sec,f
  1478                           
  1479                           ;main.c: 137:                         }
  1480     076B  2F7F               	goto	l1854
  1481     076C                     l1844:
  1482                           
  1483                           ;main.c: 139:                             sec = 59;
  1484     076C  303B               	movlw	59
  1485     076D  00AB               	movwf	_sec
  1486     076E  2F7F               	goto	l1854
  1487     076F                     l1846:
  1488     076F  0327               	decf	_modo,w
  1489     0770  1D03               	btfss	3,2
  1490     0771  2F73               	goto	u1581
  1491     0772  2F74               	goto	u1580
  1492     0773                     u1581:
  1493     0773  2F7F               	goto	l90
  1494     0774                     u1580:
  1495     0774                     l1848:
  1496                           
  1497                           ;main.c: 143:                         if (min > 0){
  1498     0774  0829               	movf	_min,w
  1499     0775  1903               	btfsc	3,2
  1500     0776  2F78               	goto	u1591
  1501     0777  2F79               	goto	u1590
  1502     0778                     u1591:
  1503     0778  2F7C               	goto	l1852
  1504     0779                     u1590:
  1505     0779                     l1850:
  1506                           
  1507                           ;main.c: 144:                             min--;
  1508     0779  3001               	movlw	1
  1509     077A  02A9               	subwf	_min,f
  1510                           
  1511                           ;main.c: 145:                         }
  1512     077B  2F7F               	goto	l1854
  1513     077C                     l1852:
  1514                           
  1515                           ;main.c: 147:                             min = 59;
  1516     077C  303B               	movlw	59
  1517     077D  00A9               	movwf	_min
  1518     077E  2F7F               	goto	l1854
  1519     077F                     l90:	
  1520                           ;main.c: 150:                 }
  1521                           
  1522     077F                     l1854:
  1523                           
  1524                           ;main.c: 94:             while(PORTBbits.RB3){
  1525     077F  1283               	bcf	3,5	;RP0=0, select bank0
  1526     0780  1303               	bcf	3,6	;RP1=0, select bank0
  1527     0781  1986               	btfsc	6,3	;volatile
  1528     0782  2F84               	goto	u1601
  1529     0783  2F85               	goto	u1600
  1530     0784                     u1601:
  1531     0784  2EDC               	goto	l1798
  1532     0785                     u1600:
  1533     0785                     l1856:
  1534                           
  1535                           ;main.c: 152:             enviar_x(0,0);
  1536     0785  01F2               	clrf	enviar_x@val2
  1537     0786  3000               	movlw	0
  1538     0787  120A  118A  2286  120A  118A  	fcall	_enviar_x
  1539                           
  1540                           ;main.c: 153:             Escribir_dato(sec, 14, 2);
  1541     078C  300E               	movlw	14
  1542     078D  1283               	bcf	3,5	;RP0=0, select bank0
  1543     078E  1303               	bcf	3,6	;RP1=0, select bank0
  1544     078F  00B2               	movwf	Escribir_dato@posx
  1545     0790  3002               	movlw	2
  1546     0791  00B3               	movwf	Escribir_dato@posy
  1547     0792  082B               	movf	_sec,w
  1548     0793  120A  118A  237A  120A  118A  	fcall	_Escribir_dato
  1549                           
  1550                           ;main.c: 154:             Escribir_dato(min, 11, 2);
  1551     0798  300B               	movlw	11
  1552     0799  1283               	bcf	3,5	;RP0=0, select bank0
  1553     079A  1303               	bcf	3,6	;RP1=0, select bank0
  1554     079B  00B2               	movwf	Escribir_dato@posx
  1555     079C  3002               	movlw	2
  1556     079D  00B3               	movwf	Escribir_dato@posy
  1557     079E  0829               	movf	_min,w
  1558     079F  120A  118A  237A  120A  118A  	fcall	_Escribir_dato
  1559                           
  1560                           ;main.c: 155:             while(PORTBbits.RB2 & !((sec == segundos) & (min == minutos)) 
      +                          ){
  1561     07A4  2FCD               	goto	l1860
  1562     07A5                     l1858:
  1563                           
  1564                           ;main.c: 156:                 segundos = leer_x(0x00);
  1565     07A5  3000               	movlw	0
  1566     07A6  120A  118A  22F3  120A  118A  	fcall	_leer_x
  1567     07AB  1283               	bcf	3,5	;RP0=0, select bank0
  1568     07AC  1303               	bcf	3,6	;RP1=0, select bank0
  1569     07AD  00AA               	movwf	_segundos
  1570                           
  1571                           ;main.c: 157:                 minutos = leer_x(0x01);
  1572     07AE  3001               	movlw	1
  1573     07AF  120A  118A  22F3  120A  118A  	fcall	_leer_x
  1574     07B4  1283               	bcf	3,5	;RP0=0, select bank0
  1575     07B5  1303               	bcf	3,6	;RP1=0, select bank0
  1576     07B6  00A8               	movwf	_minutos
  1577                           
  1578                           ;main.c: 158:                 Escribir_dato(segundos, 14, 1);
  1579     07B7  300E               	movlw	14
  1580     07B8  00B2               	movwf	Escribir_dato@posx
  1581     07B9  01B3               	clrf	Escribir_dato@posy
  1582     07BA  0AB3               	incf	Escribir_dato@posy,f
  1583     07BB  082A               	movf	_segundos,w
  1584     07BC  120A  118A  237A  120A  118A  	fcall	_Escribir_dato
  1585                           
  1586                           ;main.c: 159:                 Escribir_dato(minutos, 11, 1);
  1587     07C1  300B               	movlw	11
  1588     07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1589     07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1590     07C4  00B2               	movwf	Escribir_dato@posx
  1591     07C5  01B3               	clrf	Escribir_dato@posy
  1592     07C6  0AB3               	incf	Escribir_dato@posy,f
  1593     07C7  0828               	movf	_minutos,w
  1594     07C8  120A  118A  237A  120A  118A  	fcall	_Escribir_dato
  1595     07CD                     l1860:
  1596                           
  1597                           ;main.c: 155:             while(PORTBbits.RB2 & !((sec == segundos) & (min == minutos)) 
      +                          ){
  1598     07CD  1283               	bcf	3,5	;RP0=0, select bank0
  1599     07CE  1303               	bcf	3,6	;RP1=0, select bank0
  1600     07CF  01B9               	clrf	_main$175
  1601     07D0  0AB9               	incf	_main$175,f
  1602     07D1                     l1862:
  1603     07D1  082B               	movf	_sec,w
  1604     07D2  062A               	xorwf	_segundos,w
  1605     07D3  1D03               	skipz
  1606     07D4  2FD6               	goto	u1611
  1607     07D5  2FD7               	goto	u1610
  1608     07D6                     u1611:
  1609     07D6  2FDE               	goto	l1868
  1610     07D7                     u1610:
  1611     07D7                     l1864:
  1612     07D7  0829               	movf	_min,w
  1613     07D8  0628               	xorwf	_minutos,w
  1614     07D9  1D03               	skipz
  1615     07DA  2FDC               	goto	u1621
  1616     07DB  2FDD               	goto	u1620
  1617     07DC                     u1621:
  1618     07DC  2FDE               	goto	l1868
  1619     07DD                     u1620:
  1620     07DD                     l1866:
  1621     07DD  01B9               	clrf	_main$175
  1622     07DE                     l1868:
  1623     07DE  0C06               	rrf	6,w	;volatile
  1624     07DF  00B7               	movwf	??_main
  1625     07E0  0C37               	rrf	??_main,w
  1626     07E1  3901               	andlw	1
  1627     07E2  0539               	andwf	_main$175,w
  1628     07E3  1D03               	btfss	3,2
  1629     07E4  2FE6               	goto	u1631
  1630     07E5  2FE7               	goto	u1630
  1631     07E6                     u1631:
  1632     07E6  2FA5               	goto	l1858
  1633     07E7                     u1630:
  1634     07E7  2E9A               	goto	l1782
  1635     07E8  120A  118A  2800   	ljmp	start
  1636     07EB                     __end_of_main:
  1637                           
  1638                           	psect	text1
  1639     04CC                     __ptext1:	
  1640 ;; *************** function _setupINTOSC *****************
  1641 ;; Defined at:
  1642 ;;		line 10 in file "oscilador.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  IRCF            1    wreg     unsigned char 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  IRCF            1    0[COMMON] unsigned char 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1656 ;;      Params:         0       0       0       0       0
  1657 ;;      Locals:         1       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0
  1659 ;;      Totals:         1       0       0       0       0
  1660 ;;Total ram usage:        1 bytes
  1661 ;; Hardware stack levels used: 1
  1662 ;; This function calls:
  1663 ;;		Nothing
  1664 ;; This function is called by:
  1665 ;;		_main
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669     04CC                     _setupINTOSC:	
  1670                           ;psect for function _setupINTOSC
  1671                           
  1672                           
  1673                           ;incstack = 0
  1674                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  1675                           ;setupINTOSC@IRCF stored from wreg
  1676     04CC  00F0               	movwf	setupINTOSC@IRCF
  1677     04CD                     l1708:
  1678                           
  1679                           ;oscilador.c: 11:     if (IRCF == 7){
  1680     04CD  3007               	movlw	7
  1681     04CE  0670               	xorwf	setupINTOSC@IRCF,w
  1682     04CF  1D03               	btfss	3,2
  1683     04D0  2CD2               	goto	u1381
  1684     04D1  2CD3               	goto	u1380
  1685     04D2                     u1381:
  1686     04D2  2CD7               	goto	l258
  1687     04D3                     u1380:
  1688     04D3                     l1710:
  1689                           
  1690                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  1691     04D3  3070               	movlw	112
  1692     04D4  1683               	bsf	3,5	;RP0=1, select bank1
  1693     04D5  1303               	bcf	3,6	;RP1=0, select bank1
  1694     04D6  048F               	iorwf	15,f	;volatile
  1695     04D7                     l258:	
  1696                           ;oscilador.c: 13:     }
  1697                           
  1698                           
  1699                           ;oscilador.c: 14:     if (IRCF == 6){
  1700     04D7  3006               	movlw	6
  1701     04D8  0670               	xorwf	setupINTOSC@IRCF,w
  1702     04D9  1D03               	btfss	3,2
  1703     04DA  2CDC               	goto	u1391
  1704     04DB  2CDD               	goto	u1390
  1705     04DC                     u1391:
  1706     04DC  2CE3               	goto	l259
  1707     04DD                     u1390:
  1708     04DD                     l1712:
  1709                           
  1710                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  1711     04DD  1683               	bsf	3,5	;RP0=1, select bank1
  1712     04DE  1303               	bcf	3,6	;RP1=0, select bank1
  1713     04DF  080F               	movf	15,w	;volatile
  1714     04E0  398F               	andlw	-113
  1715     04E1  3860               	iorlw	96
  1716     04E2  008F               	movwf	15	;volatile
  1717     04E3                     l259:	
  1718                           ;oscilador.c: 16:     }
  1719                           
  1720                           
  1721                           ;oscilador.c: 17:     if (IRCF == 5){
  1722     04E3  3005               	movlw	5
  1723     04E4  0670               	xorwf	setupINTOSC@IRCF,w
  1724     04E5  1D03               	btfss	3,2
  1725     04E6  2CE8               	goto	u1401
  1726     04E7  2CE9               	goto	u1400
  1727     04E8                     u1401:
  1728     04E8  2CEF               	goto	l260
  1729     04E9                     u1400:
  1730     04E9                     l1714:
  1731                           
  1732                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  1733     04E9  1683               	bsf	3,5	;RP0=1, select bank1
  1734     04EA  1303               	bcf	3,6	;RP1=0, select bank1
  1735     04EB  080F               	movf	15,w	;volatile
  1736     04EC  398F               	andlw	-113
  1737     04ED  3850               	iorlw	80
  1738     04EE  008F               	movwf	15	;volatile
  1739     04EF                     l260:	
  1740                           ;oscilador.c: 19:     }
  1741                           
  1742                           
  1743                           ;oscilador.c: 20:     if (IRCF == 4){
  1744     04EF  3004               	movlw	4
  1745     04F0  0670               	xorwf	setupINTOSC@IRCF,w
  1746     04F1  1D03               	btfss	3,2
  1747     04F2  2CF4               	goto	u1411
  1748     04F3  2CF5               	goto	u1410
  1749     04F4                     u1411:
  1750     04F4  2CFB               	goto	l261
  1751     04F5                     u1410:
  1752     04F5                     l1716:
  1753                           
  1754                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  1755     04F5  1683               	bsf	3,5	;RP0=1, select bank1
  1756     04F6  1303               	bcf	3,6	;RP1=0, select bank1
  1757     04F7  080F               	movf	15,w	;volatile
  1758     04F8  398F               	andlw	-113
  1759     04F9  3840               	iorlw	64
  1760     04FA  008F               	movwf	15	;volatile
  1761     04FB                     l261:	
  1762                           ;oscilador.c: 22:     }
  1763                           
  1764                           
  1765                           ;oscilador.c: 23:     if (IRCF == 3){
  1766     04FB  3003               	movlw	3
  1767     04FC  0670               	xorwf	setupINTOSC@IRCF,w
  1768     04FD  1D03               	btfss	3,2
  1769     04FE  2D00               	goto	u1421
  1770     04FF  2D01               	goto	u1420
  1771     0500                     u1421:
  1772     0500  2D07               	goto	l262
  1773     0501                     u1420:
  1774     0501                     l1718:
  1775                           
  1776                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  1777     0501  1683               	bsf	3,5	;RP0=1, select bank1
  1778     0502  1303               	bcf	3,6	;RP1=0, select bank1
  1779     0503  080F               	movf	15,w	;volatile
  1780     0504  398F               	andlw	-113
  1781     0505  3830               	iorlw	48
  1782     0506  008F               	movwf	15	;volatile
  1783     0507                     l262:	
  1784                           ;oscilador.c: 25:     }
  1785                           
  1786                           
  1787                           ;oscilador.c: 26:     if (IRCF == 2){
  1788     0507  3002               	movlw	2
  1789     0508  0670               	xorwf	setupINTOSC@IRCF,w
  1790     0509  1D03               	btfss	3,2
  1791     050A  2D0C               	goto	u1431
  1792     050B  2D0D               	goto	u1430
  1793     050C                     u1431:
  1794     050C  2D13               	goto	l263
  1795     050D                     u1430:
  1796     050D                     l1720:
  1797                           
  1798                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  1799     050D  1683               	bsf	3,5	;RP0=1, select bank1
  1800     050E  1303               	bcf	3,6	;RP1=0, select bank1
  1801     050F  080F               	movf	15,w	;volatile
  1802     0510  398F               	andlw	-113
  1803     0511  3820               	iorlw	32
  1804     0512  008F               	movwf	15	;volatile
  1805     0513                     l263:	
  1806                           ;oscilador.c: 28:     }
  1807                           
  1808                           
  1809                           ;oscilador.c: 29:     if (IRCF == 1){
  1810     0513  0370               	decf	setupINTOSC@IRCF,w
  1811     0514  1D03               	btfss	3,2
  1812     0515  2D17               	goto	u1441
  1813     0516  2D18               	goto	u1440
  1814     0517                     u1441:
  1815     0517  2D1E               	goto	l264
  1816     0518                     u1440:
  1817     0518                     l1722:
  1818                           
  1819                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  1820     0518  1683               	bsf	3,5	;RP0=1, select bank1
  1821     0519  1303               	bcf	3,6	;RP1=0, select bank1
  1822     051A  080F               	movf	15,w	;volatile
  1823     051B  398F               	andlw	-113
  1824     051C  3810               	iorlw	16
  1825     051D  008F               	movwf	15	;volatile
  1826     051E                     l264:	
  1827                           ;oscilador.c: 31:     }
  1828                           
  1829                           
  1830                           ;oscilador.c: 32:     if (IRCF == 0){
  1831     051E  0870               	movf	setupINTOSC@IRCF,w
  1832     051F  1D03               	btfss	3,2
  1833     0520  2D22               	goto	u1451
  1834     0521  2D23               	goto	u1450
  1835     0522                     u1451:
  1836     0522  2D27               	goto	l1726
  1837     0523                     u1450:
  1838     0523                     l1724:
  1839                           
  1840                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  1841     0523  308F               	movlw	-113
  1842     0524  1683               	bsf	3,5	;RP0=1, select bank1
  1843     0525  1303               	bcf	3,6	;RP1=0, select bank1
  1844     0526  058F               	andwf	15,f	;volatile
  1845     0527                     l1726:
  1846                           
  1847                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  1848     0527  1683               	bsf	3,5	;RP0=1, select bank1
  1849     0528  1303               	bcf	3,6	;RP1=0, select bank1
  1850     0529  140F               	bsf	15,0	;volatile
  1851     052A                     l266:
  1852     052A  0008               	return
  1853     052B                     __end_of_setupINTOSC:
  1854                           
  1855                           	psect	text2
  1856     01F6                     __ptext2:	
  1857 ;; *************** function _portsetup *****************
  1858 ;; Defined at:
  1859 ;;		line 172 in file "main.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;		None
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;		None
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, status,2, status,0, pclath, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1873 ;;      Params:         0       0       0       0       0
  1874 ;;      Locals:         0       0       0       0       0
  1875 ;;      Temps:          0       0       0       0       0
  1876 ;;      Totals:         0       0       0       0       0
  1877 ;;Total ram usage:        0 bytes
  1878 ;; Hardware stack levels used: 1
  1879 ;; Hardware stack levels required when called: 2
  1880 ;; This function calls:
  1881 ;;		_I2C_Master_Init
  1882 ;; This function is called by:
  1883 ;;		_main
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887     01F6                     _portsetup:	
  1888                           ;psect for function _portsetup
  1889                           
  1890     01F6                     l1728:	
  1891                           ;incstack = 0
  1892                           ; Regs used in _portsetup: [wreg+status,2+status,0+pclath+cstack]
  1893                           
  1894                           
  1895                           ;main.c: 173:     ANSEL = 0;
  1896     01F6  1683               	bsf	3,5	;RP0=1, select bank3
  1897     01F7  1703               	bsf	3,6	;RP1=1, select bank3
  1898     01F8  0188               	clrf	8	;volatile
  1899                           
  1900                           ;main.c: 174:     ANSELH = 0;
  1901     01F9  0189               	clrf	9	;volatile
  1902                           
  1903                           ;main.c: 175:     TRISA = 0;
  1904     01FA  1683               	bsf	3,5	;RP0=1, select bank1
  1905     01FB  1303               	bcf	3,6	;RP1=0, select bank1
  1906     01FC  0185               	clrf	5	;volatile
  1907                           
  1908                           ;main.c: 176:     PORTA = 0;
  1909     01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1910     01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1911     01FF  0185               	clrf	5	;volatile
  1912                           
  1913                           ;main.c: 177:     TRISD = 0;
  1914     0200  1683               	bsf	3,5	;RP0=1, select bank1
  1915     0201  1303               	bcf	3,6	;RP1=0, select bank1
  1916     0202  0188               	clrf	8	;volatile
  1917                           
  1918                           ;main.c: 178:     PORTD = 0;
  1919     0203  1283               	bcf	3,5	;RP0=0, select bank0
  1920     0204  1303               	bcf	3,6	;RP1=0, select bank0
  1921     0205  0188               	clrf	8	;volatile
  1922     0206                     l1730:
  1923                           
  1924                           ;main.c: 181:     TRISB = 0b11111100;
  1925     0206  30FC               	movlw	252
  1926     0207  1683               	bsf	3,5	;RP0=1, select bank1
  1927     0208  1303               	bcf	3,6	;RP1=0, select bank1
  1928     0209  0086               	movwf	6	;volatile
  1929     020A                     l1732:
  1930                           
  1931                           ;main.c: 182:     PORTB = 0b11111100;
  1932     020A  30FC               	movlw	252
  1933     020B  1283               	bcf	3,5	;RP0=0, select bank0
  1934     020C  1303               	bcf	3,6	;RP1=0, select bank0
  1935     020D  0086               	movwf	6	;volatile
  1936     020E                     l1734:
  1937                           
  1938                           ;main.c: 183:     WPUB = 0b11111100;
  1939     020E  30FC               	movlw	252
  1940     020F  1683               	bsf	3,5	;RP0=1, select bank1
  1941     0210  1303               	bcf	3,6	;RP1=0, select bank1
  1942     0211  0095               	movwf	21	;volatile
  1943     0212                     l1736:
  1944                           
  1945                           ;main.c: 184:     OPTION_REGbits.nRBPU = 0;
  1946     0212  1381               	bcf	1,7	;volatile
  1947     0213                     l1738:
  1948                           
  1949                           ;main.c: 186:     I2C_Master_Init(100000);
  1950     0213  3000               	movlw	0
  1951     0214  1283               	bcf	3,5	;RP0=0, select bank0
  1952     0215  1303               	bcf	3,6	;RP1=0, select bank0
  1953     0216  00B2               	movwf	I2C_Master_Init@c+3
  1954     0217  3001               	movlw	1
  1955     0218  00B1               	movwf	I2C_Master_Init@c+2
  1956     0219  3086               	movlw	134
  1957     021A  00B0               	movwf	I2C_Master_Init@c+1
  1958     021B  30A0               	movlw	160
  1959     021C  00AF               	movwf	I2C_Master_Init@c
  1960     021D  120A  118A  22BB  120A  118A  	fcall	_I2C_Master_Init
  1961     0222                     l109:
  1962     0222  0008               	return
  1963     0223                     __end_of_portsetup:
  1964                           
  1965                           	psect	text3
  1966     02BB                     __ptext3:	
  1967 ;; *************** function _I2C_Master_Init *****************
  1968 ;; Defined at:
  1969 ;;		line 16 in file "I2C.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  c               4    0[BANK0 ] const unsigned long 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;		None
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg, status,2, status,0, pclath, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1983 ;;      Params:         0       4       0       0       0
  1984 ;;      Locals:         0       0       0       0       0
  1985 ;;      Temps:          0       4       0       0       0
  1986 ;;      Totals:         0       8       0       0       0
  1987 ;;Total ram usage:        8 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; Hardware stack levels required when called: 1
  1990 ;; This function calls:
  1991 ;;		___lldiv
  1992 ;; This function is called by:
  1993 ;;		_portsetup
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997     02BB                     _I2C_Master_Init:	
  1998                           ;psect for function _I2C_Master_Init
  1999                           
  2000     02BB                     l1552:	
  2001                           ;incstack = 0
  2002                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2003                           
  2004                           
  2005                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2006     02BB  3028               	movlw	40
  2007     02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2008     02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2009     02BE  0094               	movwf	20	;volatile
  2010     02BF                     l1554:
  2011                           
  2012                           ;I2C.c: 19:     SSPCON2 = 0;
  2013     02BF  1683               	bsf	3,5	;RP0=1, select bank1
  2014     02C0  1303               	bcf	3,6	;RP1=0, select bank1
  2015     02C1  0191               	clrf	17	;volatile
  2016     02C2                     l1556:
  2017                           
  2018                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2019     02C2  1283               	bcf	3,5	;RP0=0, select bank0
  2020     02C3  1303               	bcf	3,6	;RP1=0, select bank0
  2021     02C4  082F               	movf	I2C_Master_Init@c,w
  2022     02C5  00B3               	movwf	??_I2C_Master_Init
  2023     02C6  0830               	movf	I2C_Master_Init@c+1,w
  2024     02C7  00B4               	movwf	??_I2C_Master_Init+1
  2025     02C8  0831               	movf	I2C_Master_Init@c+2,w
  2026     02C9  00B5               	movwf	??_I2C_Master_Init+2
  2027     02CA  0832               	movf	I2C_Master_Init@c+3,w
  2028     02CB  00B6               	movwf	??_I2C_Master_Init+3
  2029     02CC  3002               	movlw	2
  2030     02CD                     u1225:
  2031     02CD  1003               	clrc
  2032     02CE  0DB3               	rlf	??_I2C_Master_Init,f
  2033     02CF  0DB4               	rlf	??_I2C_Master_Init+1,f
  2034     02D0  0DB5               	rlf	??_I2C_Master_Init+2,f
  2035     02D1  0DB6               	rlf	??_I2C_Master_Init+3,f
  2036     02D2                     u1220:
  2037     02D2  3EFF               	addlw	-1
  2038     02D3  1D03               	skipz
  2039     02D4  2ACD               	goto	u1225
  2040     02D5  0836               	movf	??_I2C_Master_Init+3,w
  2041     02D6  00F3               	movwf	___lldiv@divisor+3
  2042     02D7  0835               	movf	??_I2C_Master_Init+2,w
  2043     02D8  00F2               	movwf	___lldiv@divisor+2
  2044     02D9  0834               	movf	??_I2C_Master_Init+1,w
  2045     02DA  00F1               	movwf	___lldiv@divisor+1
  2046     02DB  0833               	movf	??_I2C_Master_Init,w
  2047     02DC  00F0               	movwf	___lldiv@divisor
  2048     02DD  3000               	movlw	0
  2049     02DE  00F7               	movwf	___lldiv@dividend+3
  2050     02DF  307A               	movlw	122
  2051     02E0  00F6               	movwf	___lldiv@dividend+2
  2052     02E1  3012               	movlw	18
  2053     02E2  00F5               	movwf	___lldiv@dividend+1
  2054     02E3  3000               	movlw	0
  2055     02E4  00F4               	movwf	___lldiv@dividend
  2056     02E5  120A  118A  2590  120A  118A  	fcall	___lldiv
  2057     02EA  0870               	movf	?___lldiv,w
  2058     02EB  3EFF               	addlw	255
  2059     02EC  1683               	bsf	3,5	;RP0=1, select bank1
  2060     02ED  1303               	bcf	3,6	;RP1=0, select bank1
  2061     02EE  0093               	movwf	19	;volatile
  2062     02EF                     l1558:
  2063                           
  2064                           ;I2C.c: 21:     SSPSTAT = 0;
  2065     02EF  0194               	clrf	20	;volatile
  2066     02F0                     l1560:
  2067                           
  2068                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2069     02F0  1587               	bsf	7,3	;volatile
  2070     02F1                     l1562:
  2071                           
  2072                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2073     02F1  1607               	bsf	7,4	;volatile
  2074     02F2                     l151:
  2075     02F2  0008               	return
  2076     02F3                     __end_of_I2C_Master_Init:
  2077                           
  2078                           	psect	text4
  2079     0590                     __ptext4:	
  2080 ;; *************** function ___lldiv *****************
  2081 ;; Defined at:
  2082 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  divisor         4    0[COMMON] unsigned long 
  2085 ;;  dividend        4    4[COMMON] unsigned long 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  quotient        4    9[COMMON] unsigned long 
  2088 ;;  counter         1   13[COMMON] unsigned char 
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  4    0[COMMON] unsigned long 
  2091 ;; Registers used:
  2092 ;;		wreg, status,2, status,0
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2098 ;;      Params:         8       0       0       0       0
  2099 ;;      Locals:         5       0       0       0       0
  2100 ;;      Temps:          1       0       0       0       0
  2101 ;;      Totals:        14       0       0       0       0
  2102 ;;Total ram usage:       14 bytes
  2103 ;; Hardware stack levels used: 1
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		_I2C_Master_Init
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111     0590                     ___lldiv:	
  2112                           ;psect for function ___lldiv
  2113                           
  2114     0590                     l1406:	
  2115                           ;incstack = 0
  2116                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2117                           
  2118     0590  3000               	movlw	0
  2119     0591  00FC               	movwf	___lldiv@quotient+3
  2120     0592  3000               	movlw	0
  2121     0593  00FB               	movwf	___lldiv@quotient+2
  2122     0594  3000               	movlw	0
  2123     0595  00FA               	movwf	___lldiv@quotient+1
  2124     0596  3000               	movlw	0
  2125     0597  00F9               	movwf	___lldiv@quotient
  2126     0598  0873               	movf	___lldiv@divisor+3,w
  2127     0599  0472               	iorwf	___lldiv@divisor+2,w
  2128     059A  0471               	iorwf	___lldiv@divisor+1,w
  2129     059B  0470               	iorwf	___lldiv@divisor,w
  2130     059C  1903               	skipnz
  2131     059D  2D9F               	goto	u911
  2132     059E  2DA0               	goto	u910
  2133     059F                     u911:
  2134     059F  2DED               	goto	l1426
  2135     05A0                     u910:
  2136     05A0                     l1408:
  2137     05A0  01FD               	clrf	___lldiv@counter
  2138     05A1  0AFD               	incf	___lldiv@counter,f
  2139     05A2  2DB0               	goto	l1412
  2140     05A3                     l1410:
  2141     05A3  3001               	movlw	1
  2142     05A4  00F8               	movwf	??___lldiv
  2143     05A5                     u925:
  2144     05A5  1003               	clrc
  2145     05A6  0DF0               	rlf	___lldiv@divisor,f
  2146     05A7  0DF1               	rlf	___lldiv@divisor+1,f
  2147     05A8  0DF2               	rlf	___lldiv@divisor+2,f
  2148     05A9  0DF3               	rlf	___lldiv@divisor+3,f
  2149     05AA  0BF8               	decfsz	??___lldiv,f
  2150     05AB  2DA5               	goto	u925
  2151     05AC  3001               	movlw	1
  2152     05AD  00F8               	movwf	??___lldiv
  2153     05AE  0878               	movf	??___lldiv,w
  2154     05AF  07FD               	addwf	___lldiv@counter,f
  2155     05B0                     l1412:
  2156     05B0  1FF3               	btfss	___lldiv@divisor+3,7
  2157     05B1  2DB3               	goto	u931
  2158     05B2  2DB4               	goto	u930
  2159     05B3                     u931:
  2160     05B3  2DA3               	goto	l1410
  2161     05B4                     u930:
  2162     05B4                     l1414:
  2163     05B4  3001               	movlw	1
  2164     05B5  00F8               	movwf	??___lldiv
  2165     05B6                     u945:
  2166     05B6  1003               	clrc
  2167     05B7  0DF9               	rlf	___lldiv@quotient,f
  2168     05B8  0DFA               	rlf	___lldiv@quotient+1,f
  2169     05B9  0DFB               	rlf	___lldiv@quotient+2,f
  2170     05BA  0DFC               	rlf	___lldiv@quotient+3,f
  2171     05BB  0BF8               	decfsz	??___lldiv,f
  2172     05BC  2DB6               	goto	u945
  2173     05BD                     l1416:
  2174     05BD  0873               	movf	___lldiv@divisor+3,w
  2175     05BE  0277               	subwf	___lldiv@dividend+3,w
  2176     05BF  1D03               	skipz
  2177     05C0  2DCB               	goto	u955
  2178     05C1  0872               	movf	___lldiv@divisor+2,w
  2179     05C2  0276               	subwf	___lldiv@dividend+2,w
  2180     05C3  1D03               	skipz
  2181     05C4  2DCB               	goto	u955
  2182     05C5  0871               	movf	___lldiv@divisor+1,w
  2183     05C6  0275               	subwf	___lldiv@dividend+1,w
  2184     05C7  1D03               	skipz
  2185     05C8  2DCB               	goto	u955
  2186     05C9  0870               	movf	___lldiv@divisor,w
  2187     05CA  0274               	subwf	___lldiv@dividend,w
  2188     05CB                     u955:
  2189     05CB  1C03               	skipc
  2190     05CC  2DCE               	goto	u951
  2191     05CD  2DCF               	goto	u950
  2192     05CE                     u951:
  2193     05CE  2DDE               	goto	l1422
  2194     05CF                     u950:
  2195     05CF                     l1418:
  2196     05CF  0870               	movf	___lldiv@divisor,w
  2197     05D0  02F4               	subwf	___lldiv@dividend,f
  2198     05D1  0871               	movf	___lldiv@divisor+1,w
  2199     05D2  1C03               	skipc
  2200     05D3  0F71               	incfsz	___lldiv@divisor+1,w
  2201     05D4  02F5               	subwf	___lldiv@dividend+1,f
  2202     05D5  0872               	movf	___lldiv@divisor+2,w
  2203     05D6  1C03               	skipc
  2204     05D7  0F72               	incfsz	___lldiv@divisor+2,w
  2205     05D8  02F6               	subwf	___lldiv@dividend+2,f
  2206     05D9  0873               	movf	___lldiv@divisor+3,w
  2207     05DA  1C03               	skipc
  2208     05DB  0F73               	incfsz	___lldiv@divisor+3,w
  2209     05DC  02F7               	subwf	___lldiv@dividend+3,f
  2210     05DD                     l1420:
  2211     05DD  1479               	bsf	___lldiv@quotient,0
  2212     05DE                     l1422:
  2213     05DE  3001               	movlw	1
  2214     05DF                     u965:
  2215     05DF  1003               	clrc
  2216     05E0  0CF3               	rrf	___lldiv@divisor+3,f
  2217     05E1  0CF2               	rrf	___lldiv@divisor+2,f
  2218     05E2  0CF1               	rrf	___lldiv@divisor+1,f
  2219     05E3  0CF0               	rrf	___lldiv@divisor,f
  2220     05E4  3EFF               	addlw	-1
  2221     05E5  1D03               	skipz
  2222     05E6  2DDF               	goto	u965
  2223     05E7                     l1424:
  2224     05E7  3001               	movlw	1
  2225     05E8  02FD               	subwf	___lldiv@counter,f
  2226     05E9  1D03               	btfss	3,2
  2227     05EA  2DEC               	goto	u971
  2228     05EB  2DED               	goto	u970
  2229     05EC                     u971:
  2230     05EC  2DB4               	goto	l1414
  2231     05ED                     u970:
  2232     05ED                     l1426:
  2233     05ED  087C               	movf	___lldiv@quotient+3,w
  2234     05EE  00F3               	movwf	?___lldiv+3
  2235     05EF  087B               	movf	___lldiv@quotient+2,w
  2236     05F0  00F2               	movwf	?___lldiv+2
  2237     05F1  087A               	movf	___lldiv@quotient+1,w
  2238     05F2  00F1               	movwf	?___lldiv+1
  2239     05F3  0879               	movf	___lldiv@quotient,w
  2240     05F4  00F0               	movwf	?___lldiv
  2241     05F5                     l388:
  2242     05F5  0008               	return
  2243     05F6                     __end_of___lldiv:
  2244                           
  2245                           	psect	text5
  2246     02F3                     __ptext5:	
  2247 ;; *************** function _leer_x *****************
  2248 ;; Defined at:
  2249 ;;		line 24 in file "DS3231.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  address         1    wreg     unsigned char 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  address         1   11[COMMON] unsigned char 
  2254 ;;  valor           1   12[COMMON] unsigned char 
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      unsigned char 
  2257 ;; Registers used:
  2258 ;;		wreg, status,2, status,0, pclath, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2264 ;;      Params:         0       0       0       0       0
  2265 ;;      Locals:         2       0       0       0       0
  2266 ;;      Temps:          2       0       0       0       0
  2267 ;;      Totals:         4       0       0       0       0
  2268 ;;Total ram usage:        4 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; Hardware stack levels required when called: 2
  2271 ;; This function calls:
  2272 ;;		_I2C_Master_Read
  2273 ;;		_I2C_Master_RepeatedStart
  2274 ;;		_I2C_Master_Start
  2275 ;;		_I2C_Master_Stop
  2276 ;;		_I2C_Master_Write
  2277 ;;		_convertir
  2278 ;; This function is called by:
  2279 ;;		_main
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283     02F3                     _leer_x:	
  2284                           ;psect for function _leer_x
  2285                           
  2286                           
  2287                           ;incstack = 0
  2288                           ; Regs used in _leer_x: [wreg+status,2+status,0+pclath+cstack]
  2289                           ;leer_x@address stored from wreg
  2290     02F3  00FB               	movwf	leer_x@address
  2291     02F4                     l1762:
  2292                           
  2293                           ;DS3231.c: 25:     uint8_t valor;;DS3231.c: 26:     I2C_Master_Start();
  2294     02F4  120A  118A  2126  120A  118A  	fcall	_I2C_Master_Start
  2295                           
  2296                           ;DS3231.c: 27:     I2C_Master_Write(0xD0);
  2297     02F9  30D0               	movlw	208
  2298     02FA  00F0               	movwf	I2C_Master_Write@d
  2299     02FB  3000               	movlw	0
  2300     02FC  00F1               	movwf	I2C_Master_Write@d+1
  2301     02FD  120A  118A  2141  120A  118A  	fcall	_I2C_Master_Write
  2302                           
  2303                           ;DS3231.c: 28:     I2C_Master_Write(address);
  2304     0302  087B               	movf	leer_x@address,w
  2305     0303  00F9               	movwf	??_leer_x
  2306     0304  01FA               	clrf	??_leer_x+1
  2307     0305  0879               	movf	??_leer_x,w
  2308     0306  00F0               	movwf	I2C_Master_Write@d
  2309     0307  087A               	movf	??_leer_x+1,w
  2310     0308  00F1               	movwf	I2C_Master_Write@d+1
  2311     0309  120A  118A  2141  120A  118A  	fcall	_I2C_Master_Write
  2312                           
  2313                           ;DS3231.c: 29:     I2C_Master_RepeatedStart();
  2314     030E  120A  118A  2138  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2315                           
  2316                           ;DS3231.c: 30:     I2C_Master_Write(0xD1);
  2317     0313  30D1               	movlw	209
  2318     0314  00F0               	movwf	I2C_Master_Write@d
  2319     0315  3000               	movlw	0
  2320     0316  00F1               	movwf	I2C_Master_Write@d+1
  2321     0317  120A  118A  2141  120A  118A  	fcall	_I2C_Master_Write
  2322                           
  2323                           ;DS3231.c: 31:     valor = I2C_Master_Read(0);
  2324     031C  3000               	movlw	0
  2325     031D  00F0               	movwf	I2C_Master_Read@a
  2326     031E  00F1               	movwf	I2C_Master_Read@a+1
  2327     031F  120A  118A  2223  120A  118A  	fcall	_I2C_Master_Read
  2328     0324  0870               	movf	?_I2C_Master_Read,w
  2329     0325  00FC               	movwf	leer_x@valor
  2330                           
  2331                           ;DS3231.c: 32:     I2C_Master_Stop();
  2332     0326  120A  118A  212F  120A  118A  	fcall	_I2C_Master_Stop
  2333                           
  2334                           ;DS3231.c: 33:     valor = convertir(valor);
  2335     032B  087C               	movf	leer_x@valor,w
  2336     032C  120A  118A  2194  120A  118A  	fcall	_convertir
  2337     0331  00FC               	movwf	leer_x@valor
  2338     0332                     l1764:
  2339                           
  2340                           ;DS3231.c: 35:     return valor;
  2341     0332  087C               	movf	leer_x@valor,w
  2342     0333                     l131:
  2343     0333  0008               	return
  2344     0334                     __end_of_leer_x:
  2345                           
  2346                           	psect	text6
  2347     0194                     __ptext6:	
  2348 ;; *************** function _convertir *****************
  2349 ;; Defined at:
  2350 ;;		line 5 in file "DS3231.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  valor           1    wreg     unsigned char 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  valor           1    8[COMMON] unsigned char 
  2355 ;;  conversion      1    7[COMMON] unsigned char 
  2356 ;;  decena          1    6[COMMON] unsigned char 
  2357 ;;  unidad          1    5[COMMON] unsigned char 
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      unsigned char 
  2360 ;; Registers used:
  2361 ;;		wreg, status,2, status,0, pclath, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2367 ;;      Params:         0       0       0       0       0
  2368 ;;      Locals:         4       0       0       0       0
  2369 ;;      Temps:          1       0       0       0       0
  2370 ;;      Totals:         5       0       0       0       0
  2371 ;;Total ram usage:        5 bytes
  2372 ;; Hardware stack levels used: 1
  2373 ;; Hardware stack levels required when called: 1
  2374 ;; This function calls:
  2375 ;;		___bmul
  2376 ;; This function is called by:
  2377 ;;		_leer_x
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381     0194                     _convertir:	
  2382                           ;psect for function _convertir
  2383                           
  2384                           
  2385                           ;incstack = 0
  2386                           ; Regs used in _convertir: [wreg+status,2+status,0+pclath+cstack]
  2387                           ;convertir@valor stored from wreg
  2388     0194  00F8               	movwf	convertir@valor
  2389     0195                     l1666:
  2390                           
  2391                           ;DS3231.c: 6:     uint8_t unidad;;DS3231.c: 7:     uint8_t decena;;DS3231.c: 8:     uint
      +                          8_t conversion;;DS3231.c: 9:     unidad = valor & 0x0F;
  2392     0195  0878               	movf	convertir@valor,w
  2393     0196  390F               	andlw	15
  2394     0197  00F5               	movwf	convertir@unidad
  2395     0198                     l1668:
  2396                           
  2397                           ;DS3231.c: 10:     decena = ((valor & 0xF0) >> 4);
  2398     0198  0878               	movf	convertir@valor,w
  2399     0199  00F4               	movwf	??_convertir
  2400     019A  3004               	movlw	4
  2401     019B                     u1365:
  2402     019B  1003               	clrc
  2403     019C  0CF4               	rrf	??_convertir,f
  2404     019D  3EFF               	addlw	-1
  2405     019E  1D03               	skipz
  2406     019F  299B               	goto	u1365
  2407     01A0  0874               	movf	??_convertir,w
  2408     01A1  390F               	andlw	15
  2409     01A2  00F6               	movwf	convertir@decena
  2410     01A3                     l1670:
  2411                           
  2412                           ;DS3231.c: 11:     conversion = unidad+(decena*10);
  2413     01A3  300A               	movlw	10
  2414     01A4  00F0               	movwf	___bmul@multiplicand
  2415     01A5  0876               	movf	convertir@decena,w
  2416     01A6  120A  118A  2165  120A  118A  	fcall	___bmul
  2417     01AB  0775               	addwf	convertir@unidad,w
  2418     01AC  00F7               	movwf	convertir@conversion
  2419     01AD                     l1672:
  2420                           
  2421                           ;DS3231.c: 12:     return conversion;
  2422     01AD  0877               	movf	convertir@conversion,w
  2423     01AE                     l125:
  2424     01AE  0008               	return
  2425     01AF                     __end_of_convertir:
  2426                           
  2427                           	psect	text7
  2428     0165                     __ptext7:	
  2429 ;; *************** function ___bmul *****************
  2430 ;; Defined at:
  2431 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  multiplier      1    wreg     unsigned char 
  2434 ;;  multiplicand    1    0[COMMON] unsigned char 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  multiplier      1    3[COMMON] unsigned char 
  2437 ;;  product         1    2[COMMON] unsigned char 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      unsigned char 
  2440 ;; Registers used:
  2441 ;;		wreg, status,2, status,0
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2447 ;;      Params:         1       0       0       0       0
  2448 ;;      Locals:         2       0       0       0       0
  2449 ;;      Temps:          1       0       0       0       0
  2450 ;;      Totals:         4       0       0       0       0
  2451 ;;Total ram usage:        4 bytes
  2452 ;; Hardware stack levels used: 1
  2453 ;; This function calls:
  2454 ;;		Nothing
  2455 ;; This function is called by:
  2456 ;;		_convertir
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460     0165                     ___bmul:	
  2461                           ;psect for function ___bmul
  2462                           
  2463                           
  2464                           ;incstack = 0
  2465                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2466                           ;___bmul@multiplier stored from wreg
  2467     0165  00F3               	movwf	___bmul@multiplier
  2468     0166                     l1392:
  2469     0166  01F2               	clrf	___bmul@product
  2470     0167                     l1394:
  2471     0167  1C73               	btfss	___bmul@multiplier,0
  2472     0168  296A               	goto	u891
  2473     0169  296B               	goto	u890
  2474     016A                     u891:
  2475     016A  296F               	goto	l1398
  2476     016B                     u890:
  2477     016B                     l1396:
  2478     016B  0870               	movf	___bmul@multiplicand,w
  2479     016C  00F1               	movwf	??___bmul
  2480     016D  0871               	movf	??___bmul,w
  2481     016E  07F2               	addwf	___bmul@product,f
  2482     016F                     l1398:
  2483     016F  1003               	clrc
  2484     0170  0DF0               	rlf	___bmul@multiplicand,f
  2485     0171                     l1400:
  2486     0171  1003               	clrc
  2487     0172  0CF3               	rrf	___bmul@multiplier,f
  2488     0173  0873               	movf	___bmul@multiplier,w
  2489     0174  1D03               	btfss	3,2
  2490     0175  2977               	goto	u901
  2491     0176  2978               	goto	u900
  2492     0177                     u901:
  2493     0177  2967               	goto	l1394
  2494     0178                     u900:
  2495     0178                     l1402:
  2496     0178  0872               	movf	___bmul@product,w
  2497     0179                     l378:
  2498     0179  0008               	return
  2499     017A                     __end_of___bmul:
  2500                           
  2501                           	psect	text8
  2502     0138                     __ptext8:	
  2503 ;; *************** function _I2C_Master_RepeatedStart *****************
  2504 ;; Defined at:
  2505 ;;		line 47 in file "I2C.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;		None
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;		None
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      void 
  2512 ;; Registers used:
  2513 ;;		wreg, status,2, status,0, pclath, cstack
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2519 ;;      Params:         0       0       0       0       0
  2520 ;;      Locals:         0       0       0       0       0
  2521 ;;      Temps:          0       0       0       0       0
  2522 ;;      Totals:         0       0       0       0       0
  2523 ;;Total ram usage:        0 bytes
  2524 ;; Hardware stack levels used: 1
  2525 ;; Hardware stack levels required when called: 1
  2526 ;; This function calls:
  2527 ;;		_I2C_Master_Wait
  2528 ;; This function is called by:
  2529 ;;		_leer_x
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533     0138                     _I2C_Master_RepeatedStart:	
  2534                           ;psect for function _I2C_Master_RepeatedStart
  2535                           
  2536     0138                     l1684:	
  2537                           ;incstack = 0
  2538                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2539                           
  2540                           
  2541                           ;I2C.c: 49:     I2C_Master_Wait();
  2542     0138  120A  118A  2158  120A  118A  	fcall	_I2C_Master_Wait
  2543     013D                     l1686:
  2544                           
  2545                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2546     013D  1683               	bsf	3,5	;RP0=1, select bank1
  2547     013E  1303               	bcf	3,6	;RP1=0, select bank1
  2548     013F  1491               	bsf	17,1	;volatile
  2549     0140                     l163:
  2550     0140  0008               	return
  2551     0141                     __end_of_I2C_Master_RepeatedStart:
  2552                           
  2553                           	psect	text9
  2554     0223                     __ptext9:	
  2555 ;; *************** function _I2C_Master_Read *****************
  2556 ;; Defined at:
  2557 ;;		line 74 in file "I2C.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  a               2    0[COMMON] unsigned short 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  temp            2    4[COMMON] unsigned short 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  2    0[COMMON] unsigned short 
  2564 ;; Registers used:
  2565 ;;		wreg, status,2, status,0, pclath, cstack
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2571 ;;      Params:         2       0       0       0       0
  2572 ;;      Locals:         2       0       0       0       0
  2573 ;;      Temps:          2       0       0       0       0
  2574 ;;      Totals:         6       0       0       0       0
  2575 ;;Total ram usage:        6 bytes
  2576 ;; Hardware stack levels used: 1
  2577 ;; Hardware stack levels required when called: 1
  2578 ;; This function calls:
  2579 ;;		_I2C_Master_Wait
  2580 ;; This function is called by:
  2581 ;;		_leer_x
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585     0223                     _I2C_Master_Read:	
  2586                           ;psect for function _I2C_Master_Read
  2587                           
  2588     0223                     l1688:	
  2589                           ;incstack = 0
  2590                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2591                           
  2592                           
  2593                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2594     0223  120A  118A  2158  120A  118A  	fcall	_I2C_Master_Wait
  2595     0228                     l1690:
  2596                           
  2597                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2598     0228  1683               	bsf	3,5	;RP0=1, select bank1
  2599     0229  1303               	bcf	3,6	;RP1=0, select bank1
  2600     022A  1591               	bsf	17,3	;volatile
  2601                           
  2602                           ;I2C.c: 79:     I2C_Master_Wait();
  2603     022B  120A  118A  2158  120A  118A  	fcall	_I2C_Master_Wait
  2604     0230                     l1692:
  2605                           
  2606                           ;I2C.c: 80:     temp = SSPBUF;
  2607     0230  1283               	bcf	3,5	;RP0=0, select bank0
  2608     0231  1303               	bcf	3,6	;RP1=0, select bank0
  2609     0232  0813               	movf	19,w	;volatile
  2610     0233  00F2               	movwf	??_I2C_Master_Read
  2611     0234  01F3               	clrf	??_I2C_Master_Read+1
  2612     0235  0872               	movf	??_I2C_Master_Read,w
  2613     0236  00F4               	movwf	I2C_Master_Read@temp
  2614     0237  0873               	movf	??_I2C_Master_Read+1,w
  2615     0238  00F5               	movwf	I2C_Master_Read@temp+1
  2616     0239                     l1694:
  2617                           
  2618                           ;I2C.c: 81:     I2C_Master_Wait();
  2619     0239  120A  118A  2158  120A  118A  	fcall	_I2C_Master_Wait
  2620     023E                     l1696:
  2621                           
  2622                           ;I2C.c: 82:     if(a == 1){
  2623     023E  0370               	decf	I2C_Master_Read@a,w
  2624     023F  0471               	iorwf	I2C_Master_Read@a+1,w
  2625     0240  1D03               	btfss	3,2
  2626     0241  2A43               	goto	u1371
  2627     0242  2A44               	goto	u1370
  2628     0243                     u1371:
  2629     0243  2A48               	goto	l172
  2630     0244                     u1370:
  2631     0244                     l1698:
  2632                           
  2633                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2634     0244  1683               	bsf	3,5	;RP0=1, select bank1
  2635     0245  1303               	bcf	3,6	;RP1=0, select bank1
  2636     0246  1291               	bcf	17,5	;volatile
  2637                           
  2638                           ;I2C.c: 84:     }else{
  2639     0247  2A4B               	goto	l173
  2640     0248                     l172:
  2641                           
  2642                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2643     0248  1683               	bsf	3,5	;RP0=1, select bank1
  2644     0249  1303               	bcf	3,6	;RP1=0, select bank1
  2645     024A  1691               	bsf	17,5	;volatile
  2646     024B                     l173:	
  2647                           ;I2C.c: 86:     }
  2648                           
  2649                           
  2650                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2651     024B  1611               	bsf	17,4	;volatile
  2652     024C                     l1700:
  2653                           
  2654                           ;I2C.c: 88:     return temp;
  2655     024C  0875               	movf	I2C_Master_Read@temp+1,w
  2656     024D  00F1               	movwf	?_I2C_Master_Read+1
  2657     024E  0874               	movf	I2C_Master_Read@temp,w
  2658     024F  00F0               	movwf	?_I2C_Master_Read
  2659     0250                     l174:
  2660     0250  0008               	return
  2661     0251                     __end_of_I2C_Master_Read:
  2662                           
  2663                           	psect	text10
  2664     0286                     __ptext10:	
  2665 ;; *************** function _enviar_x *****************
  2666 ;; Defined at:
  2667 ;;		line 38 in file "DS3231.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  val1            1    wreg     unsigned char 
  2670 ;;  val2            1    2[COMMON] unsigned char 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;  val1            1    5[COMMON] unsigned char 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0, pclath, cstack
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2682 ;;      Params:         1       0       0       0       0
  2683 ;;      Locals:         1       0       0       0       0
  2684 ;;      Temps:          2       0       0       0       0
  2685 ;;      Totals:         4       0       0       0       0
  2686 ;;Total ram usage:        4 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; Hardware stack levels required when called: 2
  2689 ;; This function calls:
  2690 ;;		_I2C_Master_Start
  2691 ;;		_I2C_Master_Stop
  2692 ;;		_I2C_Master_Write
  2693 ;; This function is called by:
  2694 ;;		_main
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698     0286                     _enviar_x:	
  2699                           ;psect for function _enviar_x
  2700                           
  2701                           
  2702                           ;incstack = 0
  2703                           ; Regs used in _enviar_x: [wreg+status,2+status,0+pclath+cstack]
  2704                           ;enviar_x@val1 stored from wreg
  2705     0286  00F5               	movwf	enviar_x@val1
  2706     0287                     l1760:
  2707                           
  2708                           ;DS3231.c: 39:     I2C_Master_Start();
  2709     0287  120A  118A  2126  120A  118A  	fcall	_I2C_Master_Start
  2710                           
  2711                           ;DS3231.c: 40:     I2C_Master_Write(0xD0);
  2712     028C  30D0               	movlw	208
  2713     028D  00F0               	movwf	I2C_Master_Write@d
  2714     028E  3000               	movlw	0
  2715     028F  00F1               	movwf	I2C_Master_Write@d+1
  2716     0290  120A  118A  2141  120A  118A  	fcall	_I2C_Master_Write
  2717                           
  2718                           ;DS3231.c: 41:     I2C_Master_Write(0);
  2719     0295  3000               	movlw	0
  2720     0296  00F0               	movwf	I2C_Master_Write@d
  2721     0297  00F1               	movwf	I2C_Master_Write@d+1
  2722     0298  120A  118A  2141  120A  118A  	fcall	_I2C_Master_Write
  2723                           
  2724                           ;DS3231.c: 42:     I2C_Master_Write(val1);
  2725     029D  0875               	movf	enviar_x@val1,w
  2726     029E  00F3               	movwf	??_enviar_x
  2727     029F  01F4               	clrf	??_enviar_x+1
  2728     02A0  0873               	movf	??_enviar_x,w
  2729     02A1  00F0               	movwf	I2C_Master_Write@d
  2730     02A2  0874               	movf	??_enviar_x+1,w
  2731     02A3  00F1               	movwf	I2C_Master_Write@d+1
  2732     02A4  120A  118A  2141  120A  118A  	fcall	_I2C_Master_Write
  2733                           
  2734                           ;DS3231.c: 43:     I2C_Master_Write(val2);
  2735     02A9  0872               	movf	enviar_x@val2,w
  2736     02AA  00F3               	movwf	??_enviar_x
  2737     02AB  01F4               	clrf	??_enviar_x+1
  2738     02AC  0873               	movf	??_enviar_x,w
  2739     02AD  00F0               	movwf	I2C_Master_Write@d
  2740     02AE  0874               	movf	??_enviar_x+1,w
  2741     02AF  00F1               	movwf	I2C_Master_Write@d+1
  2742     02B0  120A  118A  2141  120A  118A  	fcall	_I2C_Master_Write
  2743                           
  2744                           ;DS3231.c: 44:     I2C_Master_Stop();
  2745     02B5  120A  118A  212F  120A  118A  	fcall	_I2C_Master_Stop
  2746     02BA                     l134:
  2747     02BA  0008               	return
  2748     02BB                     __end_of_enviar_x:
  2749                           
  2750                           	psect	text11
  2751     0141                     __ptext11:	
  2752 ;; *************** function _I2C_Master_Write *****************
  2753 ;; Defined at:
  2754 ;;		line 65 in file "I2C.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;  d               2    0[COMMON] unsigned int 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;		None
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    wreg      void 
  2761 ;; Registers used:
  2762 ;;		wreg, status,2, status,0, pclath, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2768 ;;      Params:         2       0       0       0       0
  2769 ;;      Locals:         0       0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0
  2771 ;;      Totals:         2       0       0       0       0
  2772 ;;Total ram usage:        2 bytes
  2773 ;; Hardware stack levels used: 1
  2774 ;; Hardware stack levels required when called: 1
  2775 ;; This function calls:
  2776 ;;		_I2C_Master_Wait
  2777 ;; This function is called by:
  2778 ;;		_leer_x
  2779 ;;		_enviar_x
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783     0141                     _I2C_Master_Write:	
  2784                           ;psect for function _I2C_Master_Write
  2785                           
  2786     0141                     l1680:	
  2787                           ;incstack = 0
  2788                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2789                           
  2790                           
  2791                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2792     0141  120A  118A  2158  120A  118A  	fcall	_I2C_Master_Wait
  2793     0146                     l1682:
  2794                           
  2795                           ;I2C.c: 68:     SSPBUF = d;
  2796     0146  0870               	movf	I2C_Master_Write@d,w
  2797     0147  1283               	bcf	3,5	;RP0=0, select bank0
  2798     0148  1303               	bcf	3,6	;RP1=0, select bank0
  2799     0149  0093               	movwf	19	;volatile
  2800     014A                     l169:
  2801     014A  0008               	return
  2802     014B                     __end_of_I2C_Master_Write:
  2803                           
  2804                           	psect	text12
  2805     012F                     __ptext12:	
  2806 ;; *************** function _I2C_Master_Stop *****************
  2807 ;; Defined at:
  2808 ;;		line 55 in file "I2C.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;		None
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;		None
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  1    wreg      void 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2, status,0, pclath, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2822 ;;      Params:         0       0       0       0       0
  2823 ;;      Locals:         0       0       0       0       0
  2824 ;;      Temps:          0       0       0       0       0
  2825 ;;      Totals:         0       0       0       0       0
  2826 ;;Total ram usage:        0 bytes
  2827 ;; Hardware stack levels used: 1
  2828 ;; Hardware stack levels required when called: 1
  2829 ;; This function calls:
  2830 ;;		_I2C_Master_Wait
  2831 ;; This function is called by:
  2832 ;;		_leer_x
  2833 ;;		_enviar_x
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837     012F                     _I2C_Master_Stop:	
  2838                           ;psect for function _I2C_Master_Stop
  2839                           
  2840     012F                     l1704:	
  2841                           ;incstack = 0
  2842                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2843                           
  2844                           
  2845                           ;I2C.c: 57:     I2C_Master_Wait();
  2846     012F  120A  118A  2158  120A  118A  	fcall	_I2C_Master_Wait
  2847     0134                     l1706:
  2848                           
  2849                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2850     0134  1683               	bsf	3,5	;RP0=1, select bank1
  2851     0135  1303               	bcf	3,6	;RP1=0, select bank1
  2852     0136  1511               	bsf	17,2	;volatile
  2853     0137                     l166:
  2854     0137  0008               	return
  2855     0138                     __end_of_I2C_Master_Stop:
  2856                           
  2857                           	psect	text13
  2858     0126                     __ptext13:	
  2859 ;; *************** function _I2C_Master_Start *****************
  2860 ;; Defined at:
  2861 ;;		line 39 in file "I2C.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0, pclath, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2875 ;;      Params:         0       0       0       0       0
  2876 ;;      Locals:         0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0
  2878 ;;      Totals:         0       0       0       0       0
  2879 ;;Total ram usage:        0 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; Hardware stack levels required when called: 1
  2882 ;; This function calls:
  2883 ;;		_I2C_Master_Wait
  2884 ;; This function is called by:
  2885 ;;		_leer_x
  2886 ;;		_enviar_x
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890     0126                     _I2C_Master_Start:	
  2891                           ;psect for function _I2C_Master_Start
  2892                           
  2893     0126                     l1676:	
  2894                           ;incstack = 0
  2895                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2896                           
  2897                           
  2898                           ;I2C.c: 41:     I2C_Master_Wait();
  2899     0126  120A  118A  2158  120A  118A  	fcall	_I2C_Master_Wait
  2900     012B                     l1678:
  2901                           
  2902                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2903     012B  1683               	bsf	3,5	;RP0=1, select bank1
  2904     012C  1303               	bcf	3,6	;RP1=0, select bank1
  2905     012D  1411               	bsf	17,0	;volatile
  2906     012E                     l160:
  2907     012E  0008               	return
  2908     012F                     __end_of_I2C_Master_Start:
  2909                           
  2910                           	psect	text14
  2911     0158                     __ptext14:	
  2912 ;; *************** function _I2C_Master_Wait *****************
  2913 ;; Defined at:
  2914 ;;		line 32 in file "I2C.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;		None
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;		None
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2928 ;;      Params:         0       0       0       0       0
  2929 ;;      Locals:         0       0       0       0       0
  2930 ;;      Temps:          0       0       0       0       0
  2931 ;;      Totals:         0       0       0       0       0
  2932 ;;Total ram usage:        0 bytes
  2933 ;; Hardware stack levels used: 1
  2934 ;; This function calls:
  2935 ;;		Nothing
  2936 ;; This function is called by:
  2937 ;;		_I2C_Master_Start
  2938 ;;		_I2C_Master_RepeatedStart
  2939 ;;		_I2C_Master_Stop
  2940 ;;		_I2C_Master_Write
  2941 ;;		_I2C_Master_Read
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945     0158                     _I2C_Master_Wait:	
  2946                           ;psect for function _I2C_Master_Wait
  2947                           
  2948     0158                     l1378:	
  2949                           ;incstack = 0
  2950                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2951                           
  2952     0158                     l154:	
  2953                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2954                           
  2955     0158  1683               	bsf	3,5	;RP0=1, select bank1
  2956     0159  1303               	bcf	3,6	;RP1=0, select bank1
  2957     015A  1914               	btfsc	20,2	;volatile
  2958     015B  295D               	goto	u871
  2959     015C  295E               	goto	u870
  2960     015D                     u871:
  2961     015D  2958               	goto	l154
  2962     015E                     u870:
  2963     015E                     l1380:
  2964     015E  0811               	movf	17,w	;volatile
  2965     015F  391F               	andlw	31
  2966     0160  1D03               	btfss	3,2
  2967     0161  2963               	goto	u881
  2968     0162  2964               	goto	u880
  2969     0163                     u881:
  2970     0163  2958               	goto	l154
  2971     0164                     u880:
  2972     0164                     l157:
  2973     0164  0008               	return
  2974     0165                     __end_of_I2C_Master_Wait:
  2975                           
  2976                           	psect	text15
  2977     01D1                     __ptext15:	
  2978 ;; *************** function _Lcd_Write_String *****************
  2979 ;; Defined at:
  2980 ;;		line 98 in file "LCD.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  a               1    wreg     PTR unsigned char 
  2983 ;;		 -> STR_1(6), 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  a               1    7[COMMON] PTR unsigned char 
  2986 ;;		 -> STR_1(6), 
  2987 ;;  i               2    5[COMMON] int 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      void 
  2990 ;; Registers used:
  2991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2997 ;;      Params:         0       0       0       0       0
  2998 ;;      Locals:         3       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0
  3000 ;;      Totals:         3       0       0       0       0
  3001 ;;Total ram usage:        3 bytes
  3002 ;; Hardware stack levels used: 1
  3003 ;; Hardware stack levels required when called: 2
  3004 ;; This function calls:
  3005 ;;		_Lcd_Write_Char
  3006 ;; This function is called by:
  3007 ;;		_main
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011     01D1                     _Lcd_Write_String:	
  3012                           ;psect for function _Lcd_Write_String
  3013                           
  3014                           
  3015                           ;incstack = 0
  3016                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3017                           ;Lcd_Write_String@a stored from wreg
  3018     01D1  00F7               	movwf	Lcd_Write_String@a
  3019     01D2                     l1752:
  3020                           
  3021                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  3022     01D2  01F5               	clrf	Lcd_Write_String@i
  3023     01D3  01F6               	clrf	Lcd_Write_String@i+1
  3024     01D4  29E8               	goto	l1758
  3025     01D5                     l1754:
  3026                           
  3027                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  3028     01D5  0875               	movf	Lcd_Write_String@i,w
  3029     01D6  0777               	addwf	Lcd_Write_String@a,w
  3030     01D7  0084               	movwf	4
  3031     01D8  120A  118A  2003  120A  118A  	fcall	stringdir
  3032     01DD  120A  118A  2251  120A  118A  	fcall	_Lcd_Write_Char
  3033     01E2                     l1756:
  3034     01E2  3001               	movlw	1
  3035     01E3  07F5               	addwf	Lcd_Write_String@i,f
  3036     01E4  1803               	skipnc
  3037     01E5  0AF6               	incf	Lcd_Write_String@i+1,f
  3038     01E6  3000               	movlw	0
  3039     01E7  07F6               	addwf	Lcd_Write_String@i+1,f
  3040     01E8                     l1758:
  3041     01E8  0875               	movf	Lcd_Write_String@i,w
  3042     01E9  0777               	addwf	Lcd_Write_String@a,w
  3043     01EA  0084               	movwf	4
  3044     01EB  120A  118A  2003  120A  118A  	fcall	stringdir
  3045     01F0  3A00               	xorlw	0
  3046     01F1  1D03               	skipz
  3047     01F2  29F4               	goto	u1461
  3048     01F3  29F5               	goto	u1460
  3049     01F4                     u1461:
  3050     01F4  29D5               	goto	l1754
  3051     01F5                     u1460:
  3052     01F5                     l223:
  3053     01F5  0008               	return
  3054     01F6                     __end_of_Lcd_Write_String:
  3055                           
  3056                           	psect	text16
  3057     046F                     __ptext16:	
  3058 ;; *************** function _Lcd_Init *****************
  3059 ;; Defined at:
  3060 ;;		line 65 in file "LCD.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;		None
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;		None
  3065 ;; Return value:  Size  Location     Type
  3066 ;;                  1    wreg      void 
  3067 ;; Registers used:
  3068 ;;		wreg, status,2, status,0, pclath, cstack
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3074 ;;      Params:         0       0       0       0       0
  3075 ;;      Locals:         0       0       0       0       0
  3076 ;;      Temps:          2       0       0       0       0
  3077 ;;      Totals:         2       0       0       0       0
  3078 ;;Total ram usage:        2 bytes
  3079 ;; Hardware stack levels used: 1
  3080 ;; Hardware stack levels required when called: 2
  3081 ;; This function calls:
  3082 ;;		_Lcd_Cmd
  3083 ;;		_Lcd_Port
  3084 ;; This function is called by:
  3085 ;;		_main
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089     046F                     _Lcd_Init:	
  3090                           ;psect for function _Lcd_Init
  3091                           
  3092     046F                     l1740:	
  3093                           ;incstack = 0
  3094                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3095                           
  3096                           
  3097                           ;LCD.c: 66:     Lcd_Port(0x00);
  3098     046F  3000               	movlw	0
  3099     0470  120A  118A  21AF  120A  118A  	fcall	_Lcd_Port
  3100     0475                     l1742:
  3101                           
  3102                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3103     0475  3034               	movlw	52
  3104     0476  00F5               	movwf	??_Lcd_Init+1
  3105     0477  30F1               	movlw	241
  3106     0478  00F4               	movwf	??_Lcd_Init
  3107     0479                     u1707:
  3108     0479  0BF4               	decfsz	??_Lcd_Init,f
  3109     047A  2C79               	goto	u1707
  3110     047B  0BF5               	decfsz	??_Lcd_Init+1,f
  3111     047C  2C79               	goto	u1707
  3112     047D  2C7E               	nop2
  3113     047E                     l1744:
  3114                           
  3115                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  3116     047E  3003               	movlw	3
  3117     047F  120A  118A  217A  120A  118A  	fcall	_Lcd_Cmd
  3118                           
  3119                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3120     0484  300D               	movlw	13
  3121     0485  00F5               	movwf	??_Lcd_Init+1
  3122     0486  30FB               	movlw	251
  3123     0487  00F4               	movwf	??_Lcd_Init
  3124     0488                     u1717:
  3125     0488  0BF4               	decfsz	??_Lcd_Init,f
  3126     0489  2C88               	goto	u1717
  3127     048A  0BF5               	decfsz	??_Lcd_Init+1,f
  3128     048B  2C88               	goto	u1717
  3129     048C  2C8D               	nop2
  3130     048D                     l1746:
  3131                           
  3132                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  3133     048D  3003               	movlw	3
  3134     048E  120A  118A  217A  120A  118A  	fcall	_Lcd_Cmd
  3135     0493                     l1748:
  3136                           
  3137                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3138     0493  301D               	movlw	29
  3139     0494  00F5               	movwf	??_Lcd_Init+1
  3140     0495  3091               	movlw	145
  3141     0496  00F4               	movwf	??_Lcd_Init
  3142     0497                     u1727:
  3143     0497  0BF4               	decfsz	??_Lcd_Init,f
  3144     0498  2C97               	goto	u1727
  3145     0499  0BF5               	decfsz	??_Lcd_Init+1,f
  3146     049A  2C97               	goto	u1727
  3147                           
  3148                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  3149     049B  3003               	movlw	3
  3150     049C  120A  118A  217A  120A  118A  	fcall	_Lcd_Cmd
  3151                           
  3152                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  3153     04A1  3002               	movlw	2
  3154     04A2  120A  118A  217A  120A  118A  	fcall	_Lcd_Cmd
  3155                           
  3156                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  3157     04A7  3002               	movlw	2
  3158     04A8  120A  118A  217A  120A  118A  	fcall	_Lcd_Cmd
  3159                           
  3160                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  3161     04AD  3008               	movlw	8
  3162     04AE  120A  118A  217A  120A  118A  	fcall	_Lcd_Cmd
  3163                           
  3164                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  3165     04B3  3000               	movlw	0
  3166     04B4  120A  118A  217A  120A  118A  	fcall	_Lcd_Cmd
  3167                           
  3168                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  3169     04B9  300C               	movlw	12
  3170     04BA  120A  118A  217A  120A  118A  	fcall	_Lcd_Cmd
  3171                           
  3172                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  3173     04BF  3000               	movlw	0
  3174     04C0  120A  118A  217A  120A  118A  	fcall	_Lcd_Cmd
  3175                           
  3176                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  3177     04C5  3006               	movlw	6
  3178     04C6  120A  118A  217A  120A  118A  	fcall	_Lcd_Cmd
  3179     04CB                     l214:
  3180     04CB  0008               	return
  3181     04CC                     __end_of_Lcd_Init:
  3182                           
  3183                           	psect	text17
  3184     014B                     __ptext17:	
  3185 ;; *************** function _Lcd_Clear *****************
  3186 ;; Defined at:
  3187 ;;		line 43 in file "LCD.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;		None
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg, status,2, status,0, pclath, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3201 ;;      Params:         0       0       0       0       0
  3202 ;;      Locals:         0       0       0       0       0
  3203 ;;      Temps:          0       0       0       0       0
  3204 ;;      Totals:         0       0       0       0       0
  3205 ;;Total ram usage:        0 bytes
  3206 ;; Hardware stack levels used: 1
  3207 ;; Hardware stack levels required when called: 2
  3208 ;; This function calls:
  3209 ;;		_Lcd_Cmd
  3210 ;; This function is called by:
  3211 ;;		_main
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215     014B                     _Lcd_Clear:	
  3216                           ;psect for function _Lcd_Clear
  3217                           
  3218     014B                     l1750:	
  3219                           ;incstack = 0
  3220                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3221                           
  3222                           
  3223                           ;LCD.c: 44:     Lcd_Cmd(0);
  3224     014B  3000               	movlw	0
  3225     014C  120A  118A  217A  120A  118A  	fcall	_Lcd_Cmd
  3226                           
  3227                           ;LCD.c: 45:     Lcd_Cmd(1);
  3228     0151  3001               	movlw	1
  3229     0152  120A  118A  217A  120A  118A  	fcall	_Lcd_Cmd
  3230     0157                     l205:
  3231     0157  0008               	return
  3232     0158                     __end_of_Lcd_Clear:
  3233                           
  3234                           	psect	text18
  3235     037A                     __ptext18:	
  3236 ;; *************** function _Escribir_dato *****************
  3237 ;; Defined at:
  3238 ;;		line 190 in file "main.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  dato            1    wreg     unsigned char 
  3241 ;;  posx            1    3[BANK0 ] unsigned char 
  3242 ;;  posy            1    4[BANK0 ] unsigned char 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  dato            1    5[BANK0 ] unsigned char 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      void 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0, pclath, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3254 ;;      Params:         0       2       0       0       0
  3255 ;;      Locals:         0       1       0       0       0
  3256 ;;      Temps:          0       0       0       0       0
  3257 ;;      Totals:         0       3       0       0       0
  3258 ;;Total ram usage:        3 bytes
  3259 ;; Hardware stack levels used: 1
  3260 ;; Hardware stack levels required when called: 3
  3261 ;; This function calls:
  3262 ;;		_Lcd_Set_Cursor
  3263 ;;		_Lcd_Write_Char
  3264 ;;		_descomponer
  3265 ;;		_inttochar
  3266 ;; This function is called by:
  3267 ;;		_main
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271     037A                     _Escribir_dato:	
  3272                           ;psect for function _Escribir_dato
  3273                           
  3274                           
  3275                           ;incstack = 0
  3276                           ; Regs used in _Escribir_dato: [wreg+status,2+status,0+pclath+cstack]
  3277                           ;Escribir_dato@dato stored from wreg
  3278     037A  1283               	bcf	3,5	;RP0=0, select bank0
  3279     037B  1303               	bcf	3,6	;RP1=0, select bank0
  3280     037C  00B4               	movwf	Escribir_dato@dato
  3281     037D                     l1768:
  3282                           
  3283                           ;main.c: 191:     Lcd_Set_Cursor(posy, posx+1);
  3284     037D  0832               	movf	Escribir_dato@posx,w
  3285     037E  3E01               	addlw	1
  3286     037F  00F4               	movwf	Lcd_Set_Cursor@b
  3287     0380  0833               	movf	Escribir_dato@posy,w
  3288     0381  120A  118A  2334  120A  118A  	fcall	_Lcd_Set_Cursor
  3289                           
  3290                           ;main.c: 192:     unidad = inttochar(descomponer(0, dato));
  3291     0386  3000               	movlw	0
  3292     0387  00F9               	movwf	descomponer@pos
  3293     0388  00FA               	movwf	descomponer@pos+1
  3294     0389  1283               	bcf	3,5	;RP0=0, select bank0
  3295     038A  1303               	bcf	3,6	;RP1=0, select bank0
  3296     038B  0834               	movf	Escribir_dato@dato,w
  3297     038C  00FB               	movwf	descomponer@num
  3298     038D  120A  118A  252B  120A  118A  	fcall	_descomponer
  3299     0392  120A  118A  23C6  120A  118A  	fcall	_inttochar
  3300     0397  1283               	bcf	3,5	;RP0=0, select bank0
  3301     0398  1303               	bcf	3,6	;RP1=0, select bank0
  3302     0399  00AD               	movwf	_unidad
  3303                           
  3304                           ;main.c: 193:     Lcd_Write_Char(unidad);
  3305     039A  082D               	movf	_unidad,w
  3306     039B  120A  118A  2251  120A  118A  	fcall	_Lcd_Write_Char
  3307                           
  3308                           ;main.c: 194:     Lcd_Set_Cursor(posy, posx);
  3309     03A0  1283               	bcf	3,5	;RP0=0, select bank0
  3310     03A1  1303               	bcf	3,6	;RP1=0, select bank0
  3311     03A2  0832               	movf	Escribir_dato@posx,w
  3312     03A3  00F4               	movwf	Lcd_Set_Cursor@b
  3313     03A4  0833               	movf	Escribir_dato@posy,w
  3314     03A5  120A  118A  2334  120A  118A  	fcall	_Lcd_Set_Cursor
  3315                           
  3316                           ;main.c: 195:     decena = inttochar(descomponer(1, dato));
  3317     03AA  3001               	movlw	1
  3318     03AB  00F9               	movwf	descomponer@pos
  3319     03AC  3000               	movlw	0
  3320     03AD  00FA               	movwf	descomponer@pos+1
  3321     03AE  1283               	bcf	3,5	;RP0=0, select bank0
  3322     03AF  1303               	bcf	3,6	;RP1=0, select bank0
  3323     03B0  0834               	movf	Escribir_dato@dato,w
  3324     03B1  00FB               	movwf	descomponer@num
  3325     03B2  120A  118A  252B  120A  118A  	fcall	_descomponer
  3326     03B7  120A  118A  23C6  120A  118A  	fcall	_inttochar
  3327     03BC  1283               	bcf	3,5	;RP0=0, select bank0
  3328     03BD  1303               	bcf	3,6	;RP1=0, select bank0
  3329     03BE  00AC               	movwf	_decena
  3330                           
  3331                           ;main.c: 196:     Lcd_Write_Char(decena);
  3332     03BF  082C               	movf	_decena,w
  3333     03C0  120A  118A  2251  120A  118A  	fcall	_Lcd_Write_Char
  3334     03C5                     l112:
  3335     03C5  0008               	return
  3336     03C6                     __end_of_Escribir_dato:
  3337                           
  3338                           	psect	text19
  3339     03C6                     __ptext19:	
  3340 ;; *************** function _inttochar *****************
  3341 ;; Defined at:
  3342 ;;		line 12 in file "conversiones.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  num             1    wreg     unsigned char 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  num             1    0[COMMON] unsigned char 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      unsigned char 
  3349 ;; Registers used:
  3350 ;;		wreg, status,2, status,0
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3356 ;;      Params:         0       0       0       0       0
  3357 ;;      Locals:         1       0       0       0       0
  3358 ;;      Temps:          0       0       0       0       0
  3359 ;;      Totals:         1       0       0       0       0
  3360 ;;Total ram usage:        1 bytes
  3361 ;; Hardware stack levels used: 1
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_Escribir_dato
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369     03C6                     _inttochar:	
  3370                           ;psect for function _inttochar
  3371                           
  3372                           
  3373                           ;incstack = 0
  3374                           ; Regs used in _inttochar: [wreg+status,2+status,0]
  3375                           ;inttochar@num stored from wreg
  3376     03C6  00F0               	movwf	inttochar@num
  3377     03C7                     l1588:
  3378                           
  3379                           ;conversiones.c: 13:     if(num == 0){
  3380     03C7  0870               	movf	inttochar@num,w
  3381     03C8  1D03               	btfss	3,2
  3382     03C9  2BCB               	goto	u1261
  3383     03CA  2BCC               	goto	u1260
  3384     03CB                     u1261:
  3385     03CB  2BCE               	goto	l1596
  3386     03CC                     u1260:
  3387     03CC                     l1590:
  3388                           
  3389                           ;conversiones.c: 14:         return '0';
  3390     03CC  3030               	movlw	48
  3391     03CD  2C15               	goto	l227
  3392     03CE                     l1596:
  3393     03CE  0370               	decf	inttochar@num,w
  3394     03CF  1D03               	btfss	3,2
  3395     03D0  2BD2               	goto	u1271
  3396     03D1  2BD3               	goto	u1270
  3397     03D2                     u1271:
  3398     03D2  2BD5               	goto	l1604
  3399     03D3                     u1270:
  3400     03D3                     l1598:
  3401                           
  3402                           ;conversiones.c: 17:         return '1';
  3403     03D3  3031               	movlw	49
  3404     03D4  2C15               	goto	l227
  3405     03D5                     l1604:
  3406     03D5  3002               	movlw	2
  3407     03D6  0670               	xorwf	inttochar@num,w
  3408     03D7  1D03               	btfss	3,2
  3409     03D8  2BDA               	goto	u1281
  3410     03D9  2BDB               	goto	u1280
  3411     03DA                     u1281:
  3412     03DA  2BDD               	goto	l1612
  3413     03DB                     u1280:
  3414     03DB                     l1606:
  3415                           
  3416                           ;conversiones.c: 20:         return '2';
  3417     03DB  3032               	movlw	50
  3418     03DC  2C15               	goto	l227
  3419     03DD                     l1612:
  3420     03DD  3003               	movlw	3
  3421     03DE  0670               	xorwf	inttochar@num,w
  3422     03DF  1D03               	btfss	3,2
  3423     03E0  2BE2               	goto	u1291
  3424     03E1  2BE3               	goto	u1290
  3425     03E2                     u1291:
  3426     03E2  2BE5               	goto	l1620
  3427     03E3                     u1290:
  3428     03E3                     l1614:
  3429                           
  3430                           ;conversiones.c: 23:         return '3';
  3431     03E3  3033               	movlw	51
  3432     03E4  2C15               	goto	l227
  3433     03E5                     l1620:
  3434     03E5  3004               	movlw	4
  3435     03E6  0670               	xorwf	inttochar@num,w
  3436     03E7  1D03               	btfss	3,2
  3437     03E8  2BEA               	goto	u1301
  3438     03E9  2BEB               	goto	u1300
  3439     03EA                     u1301:
  3440     03EA  2BED               	goto	l1628
  3441     03EB                     u1300:
  3442     03EB                     l1622:
  3443                           
  3444                           ;conversiones.c: 26:         return '4';
  3445     03EB  3034               	movlw	52
  3446     03EC  2C15               	goto	l227
  3447     03ED                     l1628:
  3448     03ED  3005               	movlw	5
  3449     03EE  0670               	xorwf	inttochar@num,w
  3450     03EF  1D03               	btfss	3,2
  3451     03F0  2BF2               	goto	u1311
  3452     03F1  2BF3               	goto	u1310
  3453     03F2                     u1311:
  3454     03F2  2BF5               	goto	l1636
  3455     03F3                     u1310:
  3456     03F3                     l1630:
  3457                           
  3458                           ;conversiones.c: 29:         return '5';
  3459     03F3  3035               	movlw	53
  3460     03F4  2C15               	goto	l227
  3461     03F5                     l1636:
  3462     03F5  3006               	movlw	6
  3463     03F6  0670               	xorwf	inttochar@num,w
  3464     03F7  1D03               	btfss	3,2
  3465     03F8  2BFA               	goto	u1321
  3466     03F9  2BFB               	goto	u1320
  3467     03FA                     u1321:
  3468     03FA  2BFD               	goto	l1644
  3469     03FB                     u1320:
  3470     03FB                     l1638:
  3471                           
  3472                           ;conversiones.c: 32:         return '6';
  3473     03FB  3036               	movlw	54
  3474     03FC  2C15               	goto	l227
  3475     03FD                     l1644:
  3476     03FD  3007               	movlw	7
  3477     03FE  0670               	xorwf	inttochar@num,w
  3478     03FF  1D03               	btfss	3,2
  3479     0400  2C02               	goto	u1331
  3480     0401  2C03               	goto	u1330
  3481     0402                     u1331:
  3482     0402  2C05               	goto	l1652
  3483     0403                     u1330:
  3484     0403                     l1646:
  3485                           
  3486                           ;conversiones.c: 35:         return '7';
  3487     0403  3037               	movlw	55
  3488     0404  2C15               	goto	l227
  3489     0405                     l1652:
  3490     0405  3008               	movlw	8
  3491     0406  0670               	xorwf	inttochar@num,w
  3492     0407  1D03               	btfss	3,2
  3493     0408  2C0A               	goto	u1341
  3494     0409  2C0B               	goto	u1340
  3495     040A                     u1341:
  3496     040A  2C0D               	goto	l1660
  3497     040B                     u1340:
  3498     040B                     l1654:
  3499                           
  3500                           ;conversiones.c: 38:         return '8';
  3501     040B  3038               	movlw	56
  3502     040C  2C15               	goto	l227
  3503     040D                     l1660:
  3504     040D  3009               	movlw	9
  3505     040E  0670               	xorwf	inttochar@num,w
  3506     040F  1D03               	btfss	3,2
  3507     0410  2C12               	goto	u1351
  3508     0411  2C13               	goto	u1350
  3509     0412                     u1351:
  3510     0412  2C15               	goto	l240
  3511     0413                     u1350:
  3512     0413                     l1662:
  3513                           
  3514                           ;conversiones.c: 41:         return '9';
  3515     0413  3039               	movlw	57
  3516     0414  2C15               	goto	l227
  3517     0415                     l240:
  3518     0415                     l227:
  3519     0415  0008               	return
  3520     0416                     __end_of_inttochar:
  3521                           
  3522                           	psect	text20
  3523     052B                     __ptext20:	
  3524 ;; *************** function _descomponer *****************
  3525 ;; Defined at:
  3526 ;;		line 45 in file "conversiones.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  pos             2    9[COMMON] int 
  3529 ;;  num             1   11[COMMON] unsigned char 
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  dec             1    2[BANK0 ] unsigned char 
  3532 ;;  uni             1    1[BANK0 ] unsigned char 
  3533 ;;  cent            1    0[BANK0 ] unsigned char 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  1    wreg      unsigned char 
  3536 ;; Registers used:
  3537 ;;		wreg, status,2, status,0, pclath, cstack
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3543 ;;      Params:         3       0       0       0       0
  3544 ;;      Locals:         0       3       0       0       0
  3545 ;;      Temps:          2       0       0       0       0
  3546 ;;      Totals:         5       3       0       0       0
  3547 ;;Total ram usage:        8 bytes
  3548 ;; Hardware stack levels used: 1
  3549 ;; Hardware stack levels required when called: 1
  3550 ;; This function calls:
  3551 ;;		___awdiv
  3552 ;;		___awmod
  3553 ;; This function is called by:
  3554 ;;		_Escribir_dato
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558     052B                     _descomponer:	
  3559                           ;psect for function _descomponer
  3560                           
  3561     052B                     l1564:	
  3562                           ;incstack = 0
  3563                           ; Regs used in _descomponer: [wreg+status,2+status,0+pclath+cstack]
  3564                           
  3565                           
  3566                           ;conversiones.c: 46:     uint8_t cent;;conversiones.c: 47:     uint8_t dec;;conversiones
      +                          .c: 48:     uint8_t uni;;conversiones.c: 49:     cent = (num/100);
  3567     052B  3064               	movlw	100
  3568     052C  00F0               	movwf	___awdiv@divisor
  3569     052D  3000               	movlw	0
  3570     052E  00F1               	movwf	___awdiv@divisor+1
  3571     052F  087B               	movf	descomponer@num,w
  3572     0530  00FC               	movwf	??_descomponer
  3573     0531  01FD               	clrf	??_descomponer+1
  3574     0532  087C               	movf	??_descomponer,w
  3575     0533  00F2               	movwf	___awdiv@dividend
  3576     0534  087D               	movf	??_descomponer+1,w
  3577     0535  00F3               	movwf	___awdiv@dividend+1
  3578     0536  120A  118A  25F6  120A  118A  	fcall	___awdiv
  3579     053B  0870               	movf	?___awdiv,w
  3580     053C  1283               	bcf	3,5	;RP0=0, select bank0
  3581     053D  1303               	bcf	3,6	;RP1=0, select bank0
  3582     053E  00AF               	movwf	descomponer@cent
  3583                           
  3584                           ;conversiones.c: 50:     dec = (num%100);
  3585     053F  3064               	movlw	100
  3586     0540  00F0               	movwf	___awmod@divisor
  3587     0541  3000               	movlw	0
  3588     0542  00F1               	movwf	___awmod@divisor+1
  3589     0543  087B               	movf	descomponer@num,w
  3590     0544  00FC               	movwf	??_descomponer
  3591     0545  01FD               	clrf	??_descomponer+1
  3592     0546  087C               	movf	??_descomponer,w
  3593     0547  00F2               	movwf	___awmod@dividend
  3594     0548  087D               	movf	??_descomponer+1,w
  3595     0549  00F3               	movwf	___awmod@dividend+1
  3596     054A  120A  118A  2416  120A  118A  	fcall	___awmod
  3597     054F  0870               	movf	?___awmod,w
  3598     0550  1283               	bcf	3,5	;RP0=0, select bank0
  3599     0551  1303               	bcf	3,6	;RP1=0, select bank0
  3600     0552  00B1               	movwf	descomponer@dec
  3601                           
  3602                           ;conversiones.c: 51:     uni = (dec%10);
  3603     0553  300A               	movlw	10
  3604     0554  00F0               	movwf	___awmod@divisor
  3605     0555  3000               	movlw	0
  3606     0556  00F1               	movwf	___awmod@divisor+1
  3607     0557  0831               	movf	descomponer@dec,w
  3608     0558  00FC               	movwf	??_descomponer
  3609     0559  01FD               	clrf	??_descomponer+1
  3610     055A  087C               	movf	??_descomponer,w
  3611     055B  00F2               	movwf	___awmod@dividend
  3612     055C  087D               	movf	??_descomponer+1,w
  3613     055D  00F3               	movwf	___awmod@dividend+1
  3614     055E  120A  118A  2416  120A  118A  	fcall	___awmod
  3615     0563  0870               	movf	?___awmod,w
  3616     0564  1283               	bcf	3,5	;RP0=0, select bank0
  3617     0565  1303               	bcf	3,6	;RP1=0, select bank0
  3618     0566  00B0               	movwf	descomponer@uni
  3619     0567                     l1566:
  3620                           
  3621                           ;conversiones.c: 52:     if(pos == 2){
  3622     0567  3002               	movlw	2
  3623     0568  0679               	xorwf	descomponer@pos,w
  3624     0569  047A               	iorwf	descomponer@pos+1,w
  3625     056A  1D03               	btfss	3,2
  3626     056B  2D6D               	goto	u1231
  3627     056C  2D6E               	goto	u1230
  3628     056D                     u1231:
  3629     056D  2D70               	goto	l1574
  3630     056E                     u1230:
  3631     056E                     l1568:
  3632                           
  3633                           ;conversiones.c: 53:         return cent;
  3634     056E  082F               	movf	descomponer@cent,w
  3635     056F  2D8F               	goto	l249
  3636     0570                     l1574:
  3637     0570  0379               	decf	descomponer@pos,w
  3638     0571  047A               	iorwf	descomponer@pos+1,w
  3639     0572  1D03               	btfss	3,2
  3640     0573  2D75               	goto	u1241
  3641     0574  2D76               	goto	u1240
  3642     0575                     u1241:
  3643     0575  2D88               	goto	l1582
  3644     0576                     u1240:
  3645     0576                     l1576:
  3646                           
  3647                           ;conversiones.c: 56:         return (dec/10);
  3648     0576  300A               	movlw	10
  3649     0577  00F0               	movwf	___awdiv@divisor
  3650     0578  3000               	movlw	0
  3651     0579  00F1               	movwf	___awdiv@divisor+1
  3652     057A  0831               	movf	descomponer@dec,w
  3653     057B  00FC               	movwf	??_descomponer
  3654     057C  01FD               	clrf	??_descomponer+1
  3655     057D  087C               	movf	??_descomponer,w
  3656     057E  00F2               	movwf	___awdiv@dividend
  3657     057F  087D               	movf	??_descomponer+1,w
  3658     0580  00F3               	movwf	___awdiv@dividend+1
  3659     0581  120A  118A  25F6  120A  118A  	fcall	___awdiv
  3660     0586  0870               	movf	?___awdiv,w
  3661     0587  2D8F               	goto	l249
  3662     0588                     l1582:
  3663     0588  0879               	movf	descomponer@pos,w
  3664     0589  047A               	iorwf	descomponer@pos+1,w
  3665     058A  1D03               	btfss	3,2
  3666     058B  2D8D               	goto	u1251
  3667     058C  2D8E               	goto	u1250
  3668     058D                     u1251:
  3669     058D  2D8F               	goto	l249
  3670     058E                     u1250:
  3671     058E                     l1584:
  3672                           
  3673                           ;conversiones.c: 59:         return uni;
  3674     058E  0830               	movf	descomponer@uni,w
  3675     058F                     l249:
  3676     058F  0008               	return
  3677     0590                     __end_of_descomponer:
  3678                           
  3679                           	psect	text21
  3680     0416                     __ptext21:	
  3681 ;; *************** function ___awmod *****************
  3682 ;; Defined at:
  3683 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  divisor         2    0[COMMON] int 
  3686 ;;  dividend        2    2[COMMON] int 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;  sign            1    6[COMMON] unsigned char 
  3689 ;;  counter         1    5[COMMON] unsigned char 
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  2    0[COMMON] int 
  3692 ;; Registers used:
  3693 ;;		wreg, status,2, status,0
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3699 ;;      Params:         4       0       0       0       0
  3700 ;;      Locals:         2       0       0       0       0
  3701 ;;      Temps:          1       0       0       0       0
  3702 ;;      Totals:         7       0       0       0       0
  3703 ;;Total ram usage:        7 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; This function calls:
  3706 ;;		Nothing
  3707 ;; This function is called by:
  3708 ;;		_descomponer
  3709 ;;		_desconvertir
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713     0416                     ___awmod:	
  3714                           ;psect for function ___awmod
  3715                           
  3716     0416                     l1474:	
  3717                           ;incstack = 0
  3718                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3719                           
  3720     0416  01F6               	clrf	___awmod@sign
  3721     0417                     l1476:
  3722     0417  1FF3               	btfss	___awmod@dividend+1,7
  3723     0418  2C1A               	goto	u1081
  3724     0419  2C1B               	goto	u1080
  3725     041A                     u1081:
  3726     041A  2C22               	goto	l1482
  3727     041B                     u1080:
  3728     041B                     l1478:
  3729     041B  09F2               	comf	___awmod@dividend,f
  3730     041C  09F3               	comf	___awmod@dividend+1,f
  3731     041D  0AF2               	incf	___awmod@dividend,f
  3732     041E  1903               	skipnz
  3733     041F  0AF3               	incf	___awmod@dividend+1,f
  3734     0420                     l1480:
  3735     0420  01F6               	clrf	___awmod@sign
  3736     0421  0AF6               	incf	___awmod@sign,f
  3737     0422                     l1482:
  3738     0422  1FF1               	btfss	___awmod@divisor+1,7
  3739     0423  2C25               	goto	u1091
  3740     0424  2C26               	goto	u1090
  3741     0425                     u1091:
  3742     0425  2C2B               	goto	l1486
  3743     0426                     u1090:
  3744     0426                     l1484:
  3745     0426  09F0               	comf	___awmod@divisor,f
  3746     0427  09F1               	comf	___awmod@divisor+1,f
  3747     0428  0AF0               	incf	___awmod@divisor,f
  3748     0429  1903               	skipnz
  3749     042A  0AF1               	incf	___awmod@divisor+1,f
  3750     042B                     l1486:
  3751     042B  0870               	movf	___awmod@divisor,w
  3752     042C  0471               	iorwf	___awmod@divisor+1,w
  3753     042D  1903               	btfsc	3,2
  3754     042E  2C30               	goto	u1101
  3755     042F  2C31               	goto	u1100
  3756     0430                     u1101:
  3757     0430  2C60               	goto	l1504
  3758     0431                     u1100:
  3759     0431                     l1488:
  3760     0431  01F5               	clrf	___awmod@counter
  3761     0432  0AF5               	incf	___awmod@counter,f
  3762     0433  2C3F               	goto	l1494
  3763     0434                     l1490:
  3764     0434  3001               	movlw	1
  3765     0435                     u1115:
  3766     0435  1003               	clrc
  3767     0436  0DF0               	rlf	___awmod@divisor,f
  3768     0437  0DF1               	rlf	___awmod@divisor+1,f
  3769     0438  3EFF               	addlw	-1
  3770     0439  1D03               	skipz
  3771     043A  2C35               	goto	u1115
  3772     043B                     l1492:
  3773     043B  3001               	movlw	1
  3774     043C  00F4               	movwf	??___awmod
  3775     043D  0874               	movf	??___awmod,w
  3776     043E  07F5               	addwf	___awmod@counter,f
  3777     043F                     l1494:
  3778     043F  1FF1               	btfss	___awmod@divisor+1,7
  3779     0440  2C42               	goto	u1121
  3780     0441  2C43               	goto	u1120
  3781     0442                     u1121:
  3782     0442  2C34               	goto	l1490
  3783     0443                     u1120:
  3784     0443                     l1496:
  3785     0443  0871               	movf	___awmod@divisor+1,w
  3786     0444  0273               	subwf	___awmod@dividend+1,w
  3787     0445  1D03               	skipz
  3788     0446  2C49               	goto	u1135
  3789     0447  0870               	movf	___awmod@divisor,w
  3790     0448  0272               	subwf	___awmod@dividend,w
  3791     0449                     u1135:
  3792     0449  1C03               	skipc
  3793     044A  2C4C               	goto	u1131
  3794     044B  2C4D               	goto	u1130
  3795     044C                     u1131:
  3796     044C  2C53               	goto	l1500
  3797     044D                     u1130:
  3798     044D                     l1498:
  3799     044D  0870               	movf	___awmod@divisor,w
  3800     044E  02F2               	subwf	___awmod@dividend,f
  3801     044F  0871               	movf	___awmod@divisor+1,w
  3802     0450  1C03               	skipc
  3803     0451  03F3               	decf	___awmod@dividend+1,f
  3804     0452  02F3               	subwf	___awmod@dividend+1,f
  3805     0453                     l1500:
  3806     0453  3001               	movlw	1
  3807     0454                     u1145:
  3808     0454  1003               	clrc
  3809     0455  0CF1               	rrf	___awmod@divisor+1,f
  3810     0456  0CF0               	rrf	___awmod@divisor,f
  3811     0457  3EFF               	addlw	-1
  3812     0458  1D03               	skipz
  3813     0459  2C54               	goto	u1145
  3814     045A                     l1502:
  3815     045A  3001               	movlw	1
  3816     045B  02F5               	subwf	___awmod@counter,f
  3817     045C  1D03               	btfss	3,2
  3818     045D  2C5F               	goto	u1151
  3819     045E  2C60               	goto	u1150
  3820     045F                     u1151:
  3821     045F  2C43               	goto	l1496
  3822     0460                     u1150:
  3823     0460                     l1504:
  3824     0460  0876               	movf	___awmod@sign,w
  3825     0461  1903               	btfsc	3,2
  3826     0462  2C64               	goto	u1161
  3827     0463  2C65               	goto	u1160
  3828     0464                     u1161:
  3829     0464  2C6A               	goto	l1508
  3830     0465                     u1160:
  3831     0465                     l1506:
  3832     0465  09F2               	comf	___awmod@dividend,f
  3833     0466  09F3               	comf	___awmod@dividend+1,f
  3834     0467  0AF2               	incf	___awmod@dividend,f
  3835     0468  1903               	skipnz
  3836     0469  0AF3               	incf	___awmod@dividend+1,f
  3837     046A                     l1508:
  3838     046A  0873               	movf	___awmod@dividend+1,w
  3839     046B  00F1               	movwf	?___awmod+1
  3840     046C  0872               	movf	___awmod@dividend,w
  3841     046D  00F0               	movwf	?___awmod
  3842     046E                     l518:
  3843     046E  0008               	return
  3844     046F                     __end_of___awmod:
  3845                           
  3846                           	psect	text22
  3847     05F6                     __ptext22:	
  3848 ;; *************** function ___awdiv *****************
  3849 ;; Defined at:
  3850 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;  divisor         2    0[COMMON] int 
  3853 ;;  dividend        2    2[COMMON] int 
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;  quotient        2    7[COMMON] int 
  3856 ;;  sign            1    6[COMMON] unsigned char 
  3857 ;;  counter         1    5[COMMON] unsigned char 
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  2    0[COMMON] int 
  3860 ;; Registers used:
  3861 ;;		wreg, status,2, status,0
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3867 ;;      Params:         4       0       0       0       0
  3868 ;;      Locals:         4       0       0       0       0
  3869 ;;      Temps:          1       0       0       0       0
  3870 ;;      Totals:         9       0       0       0       0
  3871 ;;Total ram usage:        9 bytes
  3872 ;; Hardware stack levels used: 1
  3873 ;; This function calls:
  3874 ;;		Nothing
  3875 ;; This function is called by:
  3876 ;;		_descomponer
  3877 ;;		_desconvertir
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881     05F6                     ___awdiv:	
  3882                           ;psect for function ___awdiv
  3883                           
  3884     05F6                     l1430:	
  3885                           ;incstack = 0
  3886                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3887                           
  3888     05F6  01F6               	clrf	___awdiv@sign
  3889     05F7                     l1432:
  3890     05F7  1FF1               	btfss	___awdiv@divisor+1,7
  3891     05F8  2DFA               	goto	u981
  3892     05F9  2DFB               	goto	u980
  3893     05FA                     u981:
  3894     05FA  2E02               	goto	l1438
  3895     05FB                     u980:
  3896     05FB                     l1434:
  3897     05FB  09F0               	comf	___awdiv@divisor,f
  3898     05FC  09F1               	comf	___awdiv@divisor+1,f
  3899     05FD  0AF0               	incf	___awdiv@divisor,f
  3900     05FE  1903               	skipnz
  3901     05FF  0AF1               	incf	___awdiv@divisor+1,f
  3902     0600                     l1436:
  3903     0600  01F6               	clrf	___awdiv@sign
  3904     0601  0AF6               	incf	___awdiv@sign,f
  3905     0602                     l1438:
  3906     0602  1FF3               	btfss	___awdiv@dividend+1,7
  3907     0603  2E05               	goto	u991
  3908     0604  2E06               	goto	u990
  3909     0605                     u991:
  3910     0605  2E0F               	goto	l1444
  3911     0606                     u990:
  3912     0606                     l1440:
  3913     0606  09F2               	comf	___awdiv@dividend,f
  3914     0607  09F3               	comf	___awdiv@dividend+1,f
  3915     0608  0AF2               	incf	___awdiv@dividend,f
  3916     0609  1903               	skipnz
  3917     060A  0AF3               	incf	___awdiv@dividend+1,f
  3918     060B                     l1442:
  3919     060B  3001               	movlw	1
  3920     060C  00F4               	movwf	??___awdiv
  3921     060D  0874               	movf	??___awdiv,w
  3922     060E  06F6               	xorwf	___awdiv@sign,f
  3923     060F                     l1444:
  3924     060F  01F7               	clrf	___awdiv@quotient
  3925     0610  01F8               	clrf	___awdiv@quotient+1
  3926     0611                     l1446:
  3927     0611  0870               	movf	___awdiv@divisor,w
  3928     0612  0471               	iorwf	___awdiv@divisor+1,w
  3929     0613  1903               	btfsc	3,2
  3930     0614  2E16               	goto	u1001
  3931     0615  2E17               	goto	u1000
  3932     0616                     u1001:
  3933     0616  2E4E               	goto	l1466
  3934     0617                     u1000:
  3935     0617                     l1448:
  3936     0617  01F5               	clrf	___awdiv@counter
  3937     0618  0AF5               	incf	___awdiv@counter,f
  3938     0619  2E25               	goto	l1454
  3939     061A                     l1450:
  3940     061A  3001               	movlw	1
  3941     061B                     u1015:
  3942     061B  1003               	clrc
  3943     061C  0DF0               	rlf	___awdiv@divisor,f
  3944     061D  0DF1               	rlf	___awdiv@divisor+1,f
  3945     061E  3EFF               	addlw	-1
  3946     061F  1D03               	skipz
  3947     0620  2E1B               	goto	u1015
  3948     0621                     l1452:
  3949     0621  3001               	movlw	1
  3950     0622  00F4               	movwf	??___awdiv
  3951     0623  0874               	movf	??___awdiv,w
  3952     0624  07F5               	addwf	___awdiv@counter,f
  3953     0625                     l1454:
  3954     0625  1FF1               	btfss	___awdiv@divisor+1,7
  3955     0626  2E28               	goto	u1021
  3956     0627  2E29               	goto	u1020
  3957     0628                     u1021:
  3958     0628  2E1A               	goto	l1450
  3959     0629                     u1020:
  3960     0629                     l1456:
  3961     0629  3001               	movlw	1
  3962     062A                     u1035:
  3963     062A  1003               	clrc
  3964     062B  0DF7               	rlf	___awdiv@quotient,f
  3965     062C  0DF8               	rlf	___awdiv@quotient+1,f
  3966     062D  3EFF               	addlw	-1
  3967     062E  1D03               	skipz
  3968     062F  2E2A               	goto	u1035
  3969     0630  0871               	movf	___awdiv@divisor+1,w
  3970     0631  0273               	subwf	___awdiv@dividend+1,w
  3971     0632  1D03               	skipz
  3972     0633  2E36               	goto	u1045
  3973     0634  0870               	movf	___awdiv@divisor,w
  3974     0635  0272               	subwf	___awdiv@dividend,w
  3975     0636                     u1045:
  3976     0636  1C03               	skipc
  3977     0637  2E39               	goto	u1041
  3978     0638  2E3A               	goto	u1040
  3979     0639                     u1041:
  3980     0639  2E41               	goto	l1462
  3981     063A                     u1040:
  3982     063A                     l1458:
  3983     063A  0870               	movf	___awdiv@divisor,w
  3984     063B  02F2               	subwf	___awdiv@dividend,f
  3985     063C  0871               	movf	___awdiv@divisor+1,w
  3986     063D  1C03               	skipc
  3987     063E  03F3               	decf	___awdiv@dividend+1,f
  3988     063F  02F3               	subwf	___awdiv@dividend+1,f
  3989     0640                     l1460:
  3990     0640  1477               	bsf	___awdiv@quotient,0
  3991     0641                     l1462:
  3992     0641  3001               	movlw	1
  3993     0642                     u1055:
  3994     0642  1003               	clrc
  3995     0643  0CF1               	rrf	___awdiv@divisor+1,f
  3996     0644  0CF0               	rrf	___awdiv@divisor,f
  3997     0645  3EFF               	addlw	-1
  3998     0646  1D03               	skipz
  3999     0647  2E42               	goto	u1055
  4000     0648                     l1464:
  4001     0648  3001               	movlw	1
  4002     0649  02F5               	subwf	___awdiv@counter,f
  4003     064A  1D03               	btfss	3,2
  4004     064B  2E4D               	goto	u1061
  4005     064C  2E4E               	goto	u1060
  4006     064D                     u1061:
  4007     064D  2E29               	goto	l1456
  4008     064E                     u1060:
  4009     064E                     l1466:
  4010     064E  0876               	movf	___awdiv@sign,w
  4011     064F  1903               	btfsc	3,2
  4012     0650  2E52               	goto	u1071
  4013     0651  2E53               	goto	u1070
  4014     0652                     u1071:
  4015     0652  2E58               	goto	l1470
  4016     0653                     u1070:
  4017     0653                     l1468:
  4018     0653  09F7               	comf	___awdiv@quotient,f
  4019     0654  09F8               	comf	___awdiv@quotient+1,f
  4020     0655  0AF7               	incf	___awdiv@quotient,f
  4021     0656  1903               	skipnz
  4022     0657  0AF8               	incf	___awdiv@quotient+1,f
  4023     0658                     l1470:
  4024     0658  0878               	movf	___awdiv@quotient+1,w
  4025     0659  00F1               	movwf	?___awdiv+1
  4026     065A  0877               	movf	___awdiv@quotient,w
  4027     065B  00F0               	movwf	?___awdiv
  4028     065C                     l505:
  4029     065C  0008               	return
  4030     065D                     __end_of___awdiv:
  4031                           
  4032                           	psect	text23
  4033     0251                     __ptext23:	
  4034 ;; *************** function _Lcd_Write_Char *****************
  4035 ;; Defined at:
  4036 ;;		line 83 in file "LCD.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  a               1    wreg     unsigned char 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  a               1    4[COMMON] unsigned char 
  4041 ;;  y               1    3[COMMON] unsigned char 
  4042 ;;  temp            1    2[COMMON] unsigned char 
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  1    wreg      void 
  4045 ;; Registers used:
  4046 ;;		wreg, status,2, status,0, pclath, cstack
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4052 ;;      Params:         0       0       0       0       0
  4053 ;;      Locals:         3       0       0       0       0
  4054 ;;      Temps:          1       0       0       0       0
  4055 ;;      Totals:         4       0       0       0       0
  4056 ;;Total ram usage:        4 bytes
  4057 ;; Hardware stack levels used: 1
  4058 ;; Hardware stack levels required when called: 1
  4059 ;; This function calls:
  4060 ;;		_Lcd_Port
  4061 ;; This function is called by:
  4062 ;;		_main
  4063 ;;		_Escribir_dato
  4064 ;;		_Lcd_Write_String
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068     0251                     _Lcd_Write_Char:	
  4069                           ;psect for function _Lcd_Write_Char
  4070                           
  4071                           
  4072                           ;incstack = 0
  4073                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4074                           ;Lcd_Write_Char@a stored from wreg
  4075     0251  00F4               	movwf	Lcd_Write_Char@a
  4076     0252                     l1532:
  4077                           
  4078                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  4079     0252  0874               	movf	Lcd_Write_Char@a,w
  4080     0253  390F               	andlw	15
  4081     0254  00F2               	movwf	Lcd_Write_Char@temp
  4082                           
  4083                           ;LCD.c: 86:     y = a & 0xF0;
  4084     0255  0874               	movf	Lcd_Write_Char@a,w
  4085     0256  39F0               	andlw	240
  4086     0257  00F3               	movwf	Lcd_Write_Char@y
  4087     0258                     l1534:
  4088                           
  4089                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  4090     0258  1283               	bcf	3,5	;RP0=0, select bank0
  4091     0259  1303               	bcf	3,6	;RP1=0, select bank0
  4092     025A  1508               	bsf	8,2	;volatile
  4093     025B                     l1536:
  4094                           
  4095                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  4096     025B  0873               	movf	Lcd_Write_Char@y,w
  4097     025C  00F1               	movwf	??_Lcd_Write_Char
  4098     025D  3004               	movlw	4
  4099     025E                     u1215:
  4100     025E  1003               	clrc
  4101     025F  0CF1               	rrf	??_Lcd_Write_Char,f
  4102     0260  3EFF               	addlw	-1
  4103     0261  1D03               	skipz
  4104     0262  2A5E               	goto	u1215
  4105     0263  0871               	movf	??_Lcd_Write_Char,w
  4106     0264  120A  118A  21AF  120A  118A  	fcall	_Lcd_Port
  4107     0269                     l1538:
  4108                           
  4109                           ;LCD.c: 89:     RD3 = 1;
  4110     0269  1283               	bcf	3,5	;RP0=0, select bank0
  4111     026A  1303               	bcf	3,6	;RP1=0, select bank0
  4112     026B  1588               	bsf	8,3	;volatile
  4113     026C                     l1540:
  4114                           
  4115                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4116     026C  301A               	movlw	26
  4117     026D  00F1               	movwf	??_Lcd_Write_Char
  4118     026E                     u1737:
  4119     026E  0BF1               	decfsz	??_Lcd_Write_Char,f
  4120     026F  2A6E               	goto	u1737
  4121     0270  0000               	nop
  4122     0271                     l1542:
  4123                           
  4124                           ;LCD.c: 91:     RD3 = 0;
  4125     0271  1283               	bcf	3,5	;RP0=0, select bank0
  4126     0272  1303               	bcf	3,6	;RP1=0, select bank0
  4127     0273  1188               	bcf	8,3	;volatile
  4128     0274                     l1544:
  4129                           
  4130                           ;LCD.c: 92:     Lcd_Port(temp);
  4131     0274  0872               	movf	Lcd_Write_Char@temp,w
  4132     0275  120A  118A  21AF  120A  118A  	fcall	_Lcd_Port
  4133     027A                     l1546:
  4134                           
  4135                           ;LCD.c: 93:     RD3 = 1;
  4136     027A  1283               	bcf	3,5	;RP0=0, select bank0
  4137     027B  1303               	bcf	3,6	;RP1=0, select bank0
  4138     027C  1588               	bsf	8,3	;volatile
  4139     027D                     l1548:
  4140                           
  4141                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4142     027D  301A               	movlw	26
  4143     027E  00F1               	movwf	??_Lcd_Write_Char
  4144     027F                     u1747:
  4145     027F  0BF1               	decfsz	??_Lcd_Write_Char,f
  4146     0280  2A7F               	goto	u1747
  4147     0281  0000               	nop
  4148     0282                     l1550:
  4149                           
  4150                           ;LCD.c: 95:     RD3 = 0;
  4151     0282  1283               	bcf	3,5	;RP0=0, select bank0
  4152     0283  1303               	bcf	3,6	;RP1=0, select bank0
  4153     0284  1188               	bcf	8,3	;volatile
  4154     0285                     l217:
  4155     0285  0008               	return
  4156     0286                     __end_of_Lcd_Write_Char:
  4157                           
  4158                           	psect	text24
  4159     0334                     __ptext24:	
  4160 ;; *************** function _Lcd_Set_Cursor *****************
  4161 ;; Defined at:
  4162 ;;		line 48 in file "LCD.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;  a               1    wreg     unsigned char 
  4165 ;;  b               1    4[COMMON] unsigned char 
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;  a               1    6[COMMON] unsigned char 
  4168 ;;  temp            1    9[COMMON] unsigned char 
  4169 ;;  y               1    8[COMMON] unsigned char 
  4170 ;;  z               1    7[COMMON] unsigned char 
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  1    wreg      void 
  4173 ;; Registers used:
  4174 ;;		wreg, status,2, status,0, pclath, cstack
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4180 ;;      Params:         1       0       0       0       0
  4181 ;;      Locals:         4       0       0       0       0
  4182 ;;      Temps:          1       0       0       0       0
  4183 ;;      Totals:         6       0       0       0       0
  4184 ;;Total ram usage:        6 bytes
  4185 ;; Hardware stack levels used: 1
  4186 ;; Hardware stack levels required when called: 2
  4187 ;; This function calls:
  4188 ;;		_Lcd_Cmd
  4189 ;; This function is called by:
  4190 ;;		_main
  4191 ;;		_Escribir_dato
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195     0334                     _Lcd_Set_Cursor:	
  4196                           ;psect for function _Lcd_Set_Cursor
  4197                           
  4198                           
  4199                           ;incstack = 0
  4200                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4201                           ;Lcd_Set_Cursor@a stored from wreg
  4202     0334  00F6               	movwf	Lcd_Set_Cursor@a
  4203     0335                     l1512:
  4204                           
  4205                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  4206     0335  0376               	decf	Lcd_Set_Cursor@a,w
  4207     0336  1D03               	btfss	3,2
  4208     0337  2B39               	goto	u1171
  4209     0338  2B3A               	goto	u1170
  4210     0339                     u1171:
  4211     0339  2B57               	goto	l1522
  4212     033A                     u1170:
  4213     033A                     l1514:
  4214                           
  4215                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  4216     033A  0874               	movf	Lcd_Set_Cursor@b,w
  4217     033B  3E7F               	addlw	127
  4218     033C  00F9               	movwf	Lcd_Set_Cursor@temp
  4219                           
  4220                           ;LCD.c: 52:         z = temp >> 4;
  4221     033D  0879               	movf	Lcd_Set_Cursor@temp,w
  4222     033E  00F5               	movwf	??_Lcd_Set_Cursor
  4223     033F  3004               	movlw	4
  4224     0340                     u1185:
  4225     0340  1003               	clrc
  4226     0341  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4227     0342  3EFF               	addlw	-1
  4228     0343  1D03               	skipz
  4229     0344  2B40               	goto	u1185
  4230     0345  0875               	movf	??_Lcd_Set_Cursor,w
  4231     0346  00F7               	movwf	Lcd_Set_Cursor@z
  4232     0347                     l1516:
  4233                           
  4234                           ;LCD.c: 53:         y = temp & 0x0F;
  4235     0347  0879               	movf	Lcd_Set_Cursor@temp,w
  4236     0348  390F               	andlw	15
  4237     0349  00F8               	movwf	Lcd_Set_Cursor@y
  4238     034A                     l1518:
  4239                           
  4240                           ;LCD.c: 54:         Lcd_Cmd(z);
  4241     034A  0877               	movf	Lcd_Set_Cursor@z,w
  4242     034B  120A  118A  217A  120A  118A  	fcall	_Lcd_Cmd
  4243     0350                     l1520:
  4244                           
  4245                           ;LCD.c: 55:         Lcd_Cmd(y);
  4246     0350  0878               	movf	Lcd_Set_Cursor@y,w
  4247     0351  120A  118A  217A  120A  118A  	fcall	_Lcd_Cmd
  4248                           
  4249                           ;LCD.c: 56:     } else if (a == 2) {
  4250     0356  2B79               	goto	l211
  4251     0357                     l1522:
  4252     0357  3002               	movlw	2
  4253     0358  0676               	xorwf	Lcd_Set_Cursor@a,w
  4254     0359  1D03               	btfss	3,2
  4255     035A  2B5C               	goto	u1191
  4256     035B  2B5D               	goto	u1190
  4257     035C                     u1191:
  4258     035C  2B79               	goto	l211
  4259     035D                     u1190:
  4260     035D                     l1524:
  4261                           
  4262                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  4263     035D  0874               	movf	Lcd_Set_Cursor@b,w
  4264     035E  3EBF               	addlw	191
  4265     035F  00F9               	movwf	Lcd_Set_Cursor@temp
  4266                           
  4267                           ;LCD.c: 58:         z = temp >> 4;
  4268     0360  0879               	movf	Lcd_Set_Cursor@temp,w
  4269     0361  00F5               	movwf	??_Lcd_Set_Cursor
  4270     0362  3004               	movlw	4
  4271     0363                     u1205:
  4272     0363  1003               	clrc
  4273     0364  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4274     0365  3EFF               	addlw	-1
  4275     0366  1D03               	skipz
  4276     0367  2B63               	goto	u1205
  4277     0368  0875               	movf	??_Lcd_Set_Cursor,w
  4278     0369  00F7               	movwf	Lcd_Set_Cursor@z
  4279     036A                     l1526:
  4280                           
  4281                           ;LCD.c: 59:         y = temp & 0x0F;
  4282     036A  0879               	movf	Lcd_Set_Cursor@temp,w
  4283     036B  390F               	andlw	15
  4284     036C  00F8               	movwf	Lcd_Set_Cursor@y
  4285     036D                     l1528:
  4286                           
  4287                           ;LCD.c: 60:         Lcd_Cmd(z);
  4288     036D  0877               	movf	Lcd_Set_Cursor@z,w
  4289     036E  120A  118A  217A  120A  118A  	fcall	_Lcd_Cmd
  4290     0373                     l1530:
  4291                           
  4292                           ;LCD.c: 61:         Lcd_Cmd(y);
  4293     0373  0878               	movf	Lcd_Set_Cursor@y,w
  4294     0374  120A  118A  217A  120A  118A  	fcall	_Lcd_Cmd
  4295     0379                     l211:
  4296     0379  0008               	return
  4297     037A                     __end_of_Lcd_Set_Cursor:
  4298                           
  4299                           	psect	text25
  4300     017A                     __ptext25:	
  4301 ;; *************** function _Lcd_Cmd *****************
  4302 ;; Defined at:
  4303 ;;		line 35 in file "LCD.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  a               1    wreg     unsigned char 
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;  a               1    3[COMMON] unsigned char 
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  1    wreg      void 
  4310 ;; Registers used:
  4311 ;;		wreg, status,2, status,0, pclath, cstack
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4317 ;;      Params:         0       0       0       0       0
  4318 ;;      Locals:         1       0       0       0       0
  4319 ;;      Temps:          2       0       0       0       0
  4320 ;;      Totals:         3       0       0       0       0
  4321 ;;Total ram usage:        3 bytes
  4322 ;; Hardware stack levels used: 1
  4323 ;; Hardware stack levels required when called: 1
  4324 ;; This function calls:
  4325 ;;		_Lcd_Port
  4326 ;; This function is called by:
  4327 ;;		_Lcd_Clear
  4328 ;;		_Lcd_Set_Cursor
  4329 ;;		_Lcd_Init
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333     017A                     _Lcd_Cmd:	
  4334                           ;psect for function _Lcd_Cmd
  4335                           
  4336                           
  4337                           ;incstack = 0
  4338                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4339                           ;Lcd_Cmd@a stored from wreg
  4340     017A  00F3               	movwf	Lcd_Cmd@a
  4341     017B                     l1382:
  4342                           
  4343                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  4344     017B  1283               	bcf	3,5	;RP0=0, select bank0
  4345     017C  1303               	bcf	3,6	;RP1=0, select bank0
  4346     017D  1108               	bcf	8,2	;volatile
  4347     017E                     l1384:
  4348                           
  4349                           ;LCD.c: 37:     Lcd_Port(a);
  4350     017E  0873               	movf	Lcd_Cmd@a,w
  4351     017F  120A  118A  21AF  120A  118A  	fcall	_Lcd_Port
  4352     0184                     l1386:
  4353                           
  4354                           ;LCD.c: 38:     RD3 = 1;
  4355     0184  1283               	bcf	3,5	;RP0=0, select bank0
  4356     0185  1303               	bcf	3,6	;RP1=0, select bank0
  4357     0186  1588               	bsf	8,3	;volatile
  4358     0187                     l1388:
  4359                           
  4360                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4361     0187  300B               	movlw	11
  4362     0188  00F2               	movwf	??_Lcd_Cmd+1
  4363     0189  3062               	movlw	98
  4364     018A  00F1               	movwf	??_Lcd_Cmd
  4365     018B                     u1757:
  4366     018B  0BF1               	decfsz	??_Lcd_Cmd,f
  4367     018C  298B               	goto	u1757
  4368     018D  0BF2               	decfsz	??_Lcd_Cmd+1,f
  4369     018E  298B               	goto	u1757
  4370     018F  0000               	nop
  4371     0190                     l1390:
  4372                           
  4373                           ;LCD.c: 40:     RD3 = 0;
  4374     0190  1283               	bcf	3,5	;RP0=0, select bank0
  4375     0191  1303               	bcf	3,6	;RP1=0, select bank0
  4376     0192  1188               	bcf	8,3	;volatile
  4377     0193                     l202:
  4378     0193  0008               	return
  4379     0194                     __end_of_Lcd_Cmd:
  4380                           
  4381                           	psect	text26
  4382     01AF                     __ptext26:	
  4383 ;; *************** function _Lcd_Port *****************
  4384 ;; Defined at:
  4385 ;;		line 13 in file "LCD.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;  a               1    wreg     unsigned char 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  a               1    0[COMMON] unsigned char 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      void 
  4392 ;; Registers used:
  4393 ;;		wreg
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4399 ;;      Params:         0       0       0       0       0
  4400 ;;      Locals:         1       0       0       0       0
  4401 ;;      Temps:          0       0       0       0       0
  4402 ;;      Totals:         1       0       0       0       0
  4403 ;;Total ram usage:        1 bytes
  4404 ;; Hardware stack levels used: 1
  4405 ;; This function calls:
  4406 ;;		Nothing
  4407 ;; This function is called by:
  4408 ;;		_Lcd_Cmd
  4409 ;;		_Lcd_Init
  4410 ;;		_Lcd_Write_Char
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414     01AF                     _Lcd_Port:	
  4415                           ;psect for function _Lcd_Port
  4416                           
  4417                           
  4418                           ;incstack = 0
  4419                           ; Regs used in _Lcd_Port: [wreg]
  4420                           ;Lcd_Port@a stored from wreg
  4421     01AF  00F0               	movwf	Lcd_Port@a
  4422     01B0                     l1368:
  4423                           
  4424                           ;LCD.c: 14:     if (a & 1)
  4425     01B0  1C70               	btfss	Lcd_Port@a,0
  4426     01B1  29B3               	goto	u831
  4427     01B2  29B4               	goto	u830
  4428     01B3                     u831:
  4429     01B3  29B8               	goto	l191
  4430     01B4                     u830:
  4431     01B4                     l1370:
  4432                           
  4433                           ;LCD.c: 15:         RD4 = 1;
  4434     01B4  1283               	bcf	3,5	;RP0=0, select bank0
  4435     01B5  1303               	bcf	3,6	;RP1=0, select bank0
  4436     01B6  1608               	bsf	8,4	;volatile
  4437     01B7  29BB               	goto	l192
  4438     01B8                     l191:	
  4439                           ;LCD.c: 16:     else
  4440                           
  4441                           
  4442                           ;LCD.c: 17:         RD4 = 0;
  4443     01B8  1283               	bcf	3,5	;RP0=0, select bank0
  4444     01B9  1303               	bcf	3,6	;RP1=0, select bank0
  4445     01BA  1208               	bcf	8,4	;volatile
  4446     01BB                     l192:
  4447                           
  4448                           ;LCD.c: 19:     if (a & 2)
  4449     01BB  1CF0               	btfss	Lcd_Port@a,1
  4450     01BC  29BE               	goto	u841
  4451     01BD  29BF               	goto	u840
  4452     01BE                     u841:
  4453     01BE  29C1               	goto	l193
  4454     01BF                     u840:
  4455     01BF                     l1372:
  4456                           
  4457                           ;LCD.c: 20:         RD5 = 1;
  4458     01BF  1688               	bsf	8,5	;volatile
  4459     01C0  29C2               	goto	l194
  4460     01C1                     l193:	
  4461                           ;LCD.c: 21:     else
  4462                           
  4463                           
  4464                           ;LCD.c: 22:         RD5 = 0;
  4465     01C1  1288               	bcf	8,5	;volatile
  4466     01C2                     l194:
  4467                           
  4468                           ;LCD.c: 24:     if (a & 4)
  4469     01C2  1D70               	btfss	Lcd_Port@a,2
  4470     01C3  29C5               	goto	u851
  4471     01C4  29C6               	goto	u850
  4472     01C5                     u851:
  4473     01C5  29C8               	goto	l195
  4474     01C6                     u850:
  4475     01C6                     l1374:
  4476                           
  4477                           ;LCD.c: 25:         RD6 = 1;
  4478     01C6  1708               	bsf	8,6	;volatile
  4479     01C7  29C9               	goto	l196
  4480     01C8                     l195:	
  4481                           ;LCD.c: 26:     else
  4482                           
  4483                           
  4484                           ;LCD.c: 27:         RD6 = 0;
  4485     01C8  1308               	bcf	8,6	;volatile
  4486     01C9                     l196:
  4487                           
  4488                           ;LCD.c: 29:     if (a & 8)
  4489     01C9  1DF0               	btfss	Lcd_Port@a,3
  4490     01CA  29CC               	goto	u861
  4491     01CB  29CD               	goto	u860
  4492     01CC                     u861:
  4493     01CC  29CF               	goto	l197
  4494     01CD                     u860:
  4495     01CD                     l1376:
  4496                           
  4497                           ;LCD.c: 30:         RD7 = 1;
  4498     01CD  1788               	bsf	8,7	;volatile
  4499     01CE  29D0               	goto	l199
  4500     01CF                     l197:	
  4501                           ;LCD.c: 31:     else
  4502                           
  4503                           
  4504                           ;LCD.c: 32:         RD7 = 0;
  4505     01CF  1388               	bcf	8,7	;volatile
  4506     01D0                     l199:
  4507     01D0  0008               	return
  4508     01D1                     __end_of_Lcd_Port:
  4509     007E                     btemp	set	126	;btemp
  4510     007E                     wtemp0	set	126
  4511                           
  4512                           	psect	idloc
  4513                           
  4514                           ;Config register IDLOC0 @ 0x2000
  4515                           ;	unspecified, using default values
  4516     2000                     	org	8192
  4517     2000  3FFF               	dw	16383
  4518                           
  4519                           ;Config register IDLOC1 @ 0x2001
  4520                           ;	unspecified, using default values
  4521     2001                     	org	8193
  4522     2001  3FFF               	dw	16383
  4523                           
  4524                           ;Config register IDLOC2 @ 0x2002
  4525                           ;	unspecified, using default values
  4526     2002                     	org	8194
  4527     2002  3FFF               	dw	16383
  4528                           
  4529                           ;Config register IDLOC3 @ 0x2003
  4530                           ;	unspecified, using default values
  4531     2003                     	org	8195
  4532     2003  3FFF               	dw	16383
  4533                           
  4534                           	psect	config
  4535                           
  4536                           ;Config register CONFIG1 @ 0x2007
  4537                           ;	Oscillator Selection bits
  4538                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4539                           ;	Watchdog Timer Enable bit
  4540                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4541                           ;	Power-up Timer Enable bit
  4542                           ;	PWRTE = OFF, PWRT disabled
  4543                           ;	RE3/MCLR pin function select bit
  4544                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4545                           ;	Code Protection bit
  4546                           ;	CP = OFF, Program memory code protection is disabled
  4547                           ;	Data Code Protection bit
  4548                           ;	CPD = OFF, Data memory code protection is disabled
  4549                           ;	Brown Out Reset Selection bits
  4550                           ;	BOREN = OFF, BOR disabled
  4551                           ;	Internal External Switchover bit
  4552                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4553                           ;	Fail-Safe Clock Monitor Enabled bit
  4554                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4555                           ;	Low Voltage Programming Enable bit
  4556                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4557                           ;	In-Circuit Debugger Mode bit
  4558                           ;	DEBUG = 0x1, unprogramme  4559     2007                     	org	8199
  4560     2007  20D4               	dw	8404
  4561                           
  4562                           ;Config register CONFIG2 @ 0x2008
  4563                           ;	Brown-out Reset Selection bit
  4564                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4565                           ;	Flash Program Memory Self Write Enable bits
  4566                           ;	WRT = OFF, Write protection off
  4567     2008                     	org	8200
  4568     2008  3FFF               	dw	16383

Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _I2C_Master_Init->___lldiv
    _leer_x->_convertir
    _convertir->___bmul
    _enviar_x->_I2C_Master_Write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Escribir_dato->_descomponer
    _descomponer->___awdiv
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _portsetup->_I2C_Master_Init
    _Escribir_dato->_descomponer

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8376
                                              8 BANK0      3     3      0
                      _Escribir_dato
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _enviar_x
                             _leer_x
                          _portsetup
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _portsetup                                            0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _leer_x                                               4     4      0    1024
                                              9 COMMON     4     4      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _convertir
 ---------------------------------------------------------------------------------
 (2) _convertir                                            5     5      0     281
                                              4 COMMON     5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     121
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _enviar_x                                             4     3      1     826
                                              2 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     554
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     301
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Escribir_dato                                        3     1      2    4443
                                              3 BANK0      3     1      2
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                        _descomponer
                          _inttochar
 ---------------------------------------------------------------------------------
 (2) _inttochar                                            1     1      0     220
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _descomponer                                          8     5      3    2013
                                              9 COMMON     5     2      3
                                              0 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     684
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_dato
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _descomponer
       ___awdiv
       ___awmod
     _inttochar
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_Char
   _Lcd_Write_String
     _Lcd_Write_Char
   _enviar_x
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _leer_x
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _convertir
       ___bmul
   _portsetup
     _I2C_Master_Init
       ___lldiv
   _setupINTOSC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      28       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      1A       5       32.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      28      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 23 18:16:22 2023

                               pc 0002                    ___bmul@product 0072                    ?_Escribir_dato 0032  
                              l90 077F                      ___awdiv@sign 0076                                fsr 0004  
                             l112 03C5                               l202 0193                               l211 0379  
                             l131 0333                               l205 0157                               l125 01AE  
                             l109 0222                               l214 04CB                               l134 02BA  
                             l223 01F5                               l151 02F2                               l240 0415  
                             l160 012E                               l217 0285                               l154 0158  
                             l227 0415                               l163 0140                               l172 0248  
                             l260 04EF                               l157 0164                               l173 024B  
                             l261 04FB                               l166 0137                               l174 0250  
                             l262 0507                               l191 01B8                               l263 0513  
                             l192 01BB                               l264 051E                               l193 01C1  
                             l505 065C                               l249 058F                               l169 014A  
                             l194 01C2                               l266 052A                               l258 04D7  
                             l195 01C8                               l259 04E3                               l196 01C9  
                             l197 01CF                               l518 046E                               l199 01D0  
                             l378 0179                               l388 05F5                               _RD3 0043  
                             _RD4 0044                               _RD5 0045                               _RD6 0046  
                             _RD7 0047                               u900 0178                               u901 0177  
                             u830 01B4                               u910 05A0                               u831 01B3  
                             u911 059F                               u840 01BF                               u841 01BE  
                             u850 01C6                               u930 05B4                               u851 01C5  
                             u931 05B3                               u860 01CD                               u861 01CC  
                             u925 05A5                               u870 015E                               u950 05CF  
                             u871 015D                               u951 05CE                               u880 0164  
                             u881 0163                               u945 05B6                               u890 016B  
                             u970 05ED                               u891 016A                               u971 05EC  
                             u955 05CB                               u980 05FB                               u981 05FA  
                             u965 05DF                               u990 0606                               u991 0605  
                             _min 0029                               _sec 002B                               fsr0 0004  
                    ___awmod@sign 0076                              l1400 0171                              l1402 0178  
                            l1410 05A3                              l1500 0453                              l1420 05DD  
                            l1412 05B0                              l1430 05F6                              l1502 045A  
                            l1422 05DE                              l1414 05B4                              l1406 0590  
                            l1520 0350                              l1512 0335                              l1440 0606  
                            l1432 05F7                              l1504 0460                              l1424 05E7  
                            l1416 05BD                              l1408 05A0                              l1370 01B4  
                            l1530 0373                              l1514 033A                              l1522 0357  
                            l1450 061A                              l1442 060B                              l1434 05FB  
                            l1506 0465                              l1418 05CF                              l1426 05ED  
                            l1372 01BF                              l1524 035D                              l1516 0347  
                            l1540 026C                              l1532 0252                              l1460 0640  
                            l1452 0621                              l1444 060F                              l1436 0600  
                            l1508 046A                              l1620 03E5                              l1612 03DD  
                            l1604 03D5                              l1380 015E                              l1700 024C  
                            l1374 01C6                              l1390 0190                              l1382 017B  
                            l1526 036A                              l1518 034A                              l1550 0282  
                            l1542 0271                              l1534 0258                              l1470 0658  
                            l1462 0641                              l1454 0625                              l1446 0611  
                            l1438 0602                              l1630 03F3                              l1622 03EB  
                            l1614 03E3                              l1606 03DB                              l1710 04D3  
                            l1376 01CD                              l1368 01B0                              l1384 017E  
                            l1528 036D                              l1544 0274                              l1536 025B  
                            l1464 0648                              l1456 0629                              l1448 0617  
                            l1480 0420                              l1704 012F                              l1392 0166  
                            l1560 02F0                              l1552 02BB                              l1720 050D  
                            l1712 04DD                              l1800 06E7                              l1386 0184  
                            l1546 027A                              l1538 0269                              l1458 063A  
                            l1466 064E                              l1490 0434                              l1482 0422  
                            l1474 0416                              l1378 0158                              l1706 0134  
                            l1394 0167                              l1562 02F1                              l1554 02BF  
                            l1730 0206                              l1722 0518                              l1714 04E9  
                            l1810 0716                              l1802 06F3                              l1388 0187  
                            l1548 027D                              l1468 0653                              l1492 043B  
                            l1484 0426                              l1476 0417                              l1564 052B  
                            l1660 040D                              l1652 0405                              l1644 03FD  
                            l1636 03F5                              l1628 03ED                              l1740 046F  
                            l1396 016B                              l1556 02C2                              l1732 020A  
                            l1724 0523                              l1716 04F5                              l1708 04CD  
                            l1820 0731                              l1812 071B                              l1804 06FF  
                            l1494 043F                              l1486 042B                              l1478 041B  
                            l1582 0588                              l1574 0570                              l1566 0567  
                            l1662 0413                              l1654 040B                              l1646 0403  
                            l1638 03FB                              l1590 03CC                              l1750 014B  
                            l1742 0475                              l1398 016F                              l1670 01A3  
                            l1558 02EF                              l1734 020E                              l1726 0527  
                            l1718 0501                              l1830 0749                              l1822 0737  
                            l1806 0705                              l1814 071C                              l1496 0443  
                            l1488 0431                              l1584 058E                              l1576 0576  
                            l1568 056E                              l1744 047E                              l1752 01D2  
                            l1680 0141                              l1760 0287                              l1672 01AD  
                            l1736 0212                              l1728 01F6                              l1840 0764  
                            l1832 074E                              l1824 073C                              l1816 0720  
                            l1808 070F                              l1498 044D                              l1746 048D  
                            l1754 01D5                              l1682 0146                              l1690 0228  
                            l1666 0195                              l1762 02F4                              l1738 0213  
                            l1850 0779                              l1842 0769                              l1826 073E  
                            l1818 072A                              l1834 074F                              l1770 065D  
                            l1596 03CE                              l1588 03C7                              l1748 0493  
                            l1756 01E2                              l1676 0126                              l1692 0230  
                            l1684 0138                              l1668 0198                              l1764 0332  
                            l1860 07CD                              l1852 077C                              l1844 076C  
                            l1836 0753                              l1828 0743                              l1780 0693  
                            l1772 0688                              l1598 03D3                              l1758 01E8  
                            l1678 012B                              l1694 0239                              l1686 013D  
                            l1862 07D1                              l1846 076F                              l1838 075D  
                            l1854 077F                              l1790 06B8                              l1782 069A  
                            l1774 068E                              l1768 037D                              l1696 023E  
                            l1688 0223                              l1864 07D7                              l1856 0785  
                            l1848 0774                              l1792 06C1                              l1784 069E  
                            l1776 0691                              l1698 0244                              l1866 07DD  
                            l1858 07A5                              l1794 06CB                              l1786 06A5  
                            l1778 0692                              l1868 07DE                              l1796 06D1  
                            l1788 06AE                              l1798 06DC                              STR_1 0009  
                            u1000 0617                              u1001 0616                              u1020 0629  
                            u1100 0431                              u1021 0628                              u1101 0430  
                            u1015 061B                              u1040 063A                              u1120 0443  
                            u1041 0639                              u1121 0442                              u1130 044D  
                            u1035 062A                              u1131 044C                              u1115 0435  
                            u1060 064E                              u1300 03EB                              u1220 02D2  
                            u1205 0363                              u1061 064D                              u1045 0636  
                            u1301 03EA                              u1070 0653                              u1150 0460  
                            u1230 056E                              u1310 03F3                              u1215 025E  
                            u1071 0652                              u1055 0642                              u1151 045F  
                            u1135 0449                              u1231 056D                              u1311 03F2  
                            u1160 0465                              u1080 041B                              u1240 0576  
                            u1320 03FB                              u1400 04E9                              u1161 0464  
                            u1145 0454                              u1081 041A                              u1241 0575  
                            u1321 03FA                              u1225 02CD                              u1401 04E8  
                            u1170 033A                              u1090 0426                              u1250 058E  
                            u1330 0403                              u1410 04F5                              u1171 0339  
                            u1091 0425                              u1251 058D                              u1331 0402  
                            u1411 04F4                              u1340 040B                              u1260 03CC  
                            u1420 0501                              u1500 0720                              u1341 040A  
                            u1261 03CB                              u1421 0500                              u1501 071F  
                            u1190 035D                              u1350 0413                              u1270 03D3  
                            u1430 050D                              u1510 0731                              u1191 035C  
                            u1351 0412                              u1271 03D2                              u1431 050C  
                            u1511 0730                              u1280 03DB                              u1440 0518  
                            u1600 0785                              u1520 0737                              u1185 0340  
                            u1281 03DA                              u1441 0517                              u1601 0784  
                            u1521 0736                              u1290 03E3                              u1370 0244  
                            u1450 0523                              u1610 07D7                              u1530 0743  
                            u1291 03E2                              u1371 0243                              u1451 0522  
                            u1611 07D6                              u1531 0742                              u1460 01F5  
                            u1380 04D3                              u1620 07DD                              u1540 0749  
                            u1461 01F4                              u1365 019B                              u1381 04D2  
                            u1621 07DC                              u1541 0748                              u1390 04DD  
                            u1630 07E7                              u1550 0753                              u1470 06D1  
                            u1391 04DC                              u1631 07E6                              u1551 0752  
                            u1471 06D0                              u1560 0764                              u1480 0705  
                            u1561 0763                              u1481 0704                              u1570 0769  
                            u1490 0716                              u1707 0479                              u1571 0768  
                            u1491 0715                              u1580 0774                              u1717 0488  
                            u1581 0773                              u1590 0779                              u1727 0497  
                            u1591 0778                              u1737 026E                              u1657 06D7  
                            u1747 027F                              u1667 06E2                              u1757 018B  
                            u1677 070B                              u1687 0726                              u1697 0759  
                            _WPUB 0095                 ?_Lcd_Write_String 0070  __end_of_I2C_Master_RepeatedStart 0141  
                            _main 065D                              _modo 0027                              btemp 007E  
                            start 0000                ??_Lcd_Write_String 0075                   __end_of_Lcd_Cmd 0194  
               ___bmul@multiplier 0073                  ?_I2C_Master_Init 002F                  ?_I2C_Master_Read 0070  
                ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070                             ?_main 0070  
                 __end_of___awdiv 065D                   __end_of___awmod 046F                             _ANSEL 0188  
                 __end_of___lldiv 05F6                   ___awdiv@divisor 0070                   ___awdiv@counter 0075  
                           _PORTA 0005                             _PORTB 0006                             _PORTD 0008  
                           _TRISA 0085                             _TRISB 0086                             _TRISD 0088  
                           pclath 000A                             status 0003                             wtemp0 007E  
                     leer_x@valor 007C                  __end_of_Lcd_Init 04CC                  __end_of_Lcd_Port 01D1  
                 __initialization 07EB                   ??_Escribir_dato 007E                      __end_of_main 07EB  
                          ??_main 0037                 ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0070  
              ??_I2C_Master_Start 0070                ??_I2C_Master_Write 0072                  ___awdiv@dividend 0072  
                          _ANSELH 0189                         ??_Lcd_Cmd 0071                            _SSPADD 0093  
                          _SSPCON 0014                            _SSPBUF 0013          _I2C_Master_RepeatedStart 0138  
                          ___bmul 0165                         ??___awdiv 0074                            _lecADC 002E  
                          _decena 002C                         ??___awmod 0074                         ??___lldiv 0078  
                __end_of_enviar_x 02BB                            _conver 0020                            _leer_x 02F3  
                          _valADC 0024                  ___awdiv@quotient 0077                   ___awmod@divisor 0070  
                 ___awmod@counter 0075                            _unidad 002D                      ?_setupINTOSC 0070  
                 Lcd_Set_Cursor@a 0076                   Lcd_Set_Cursor@b 0074                   Lcd_Set_Cursor@y 0078  
                 Lcd_Set_Cursor@z 0077           __end_of__initialization 07FC                 __end_of_Lcd_Clear 0158  
             ___bmul@multiplicand 0070                   descomponer@cent 002F                    __pcstackCOMMON 0070  
                  _Lcd_Set_Cursor 0334                    _OPTION_REGbits 0081                         ?_Lcd_Init 0070  
                       ?_Lcd_Port 0070                      enviar_x@val1 0075                      enviar_x@val2 0072  
                      __pbssBANK0 0020                        __pmaintext 065D                           ?___bmul 0070  
             convertir@conversion 0077                           ?_leer_x 0070            __end_of_Lcd_Set_Cursor 037A  
                      ??_Lcd_Init 0074                        ??_Lcd_Port 0070                           _SSPCON2 0091  
                         _SSPSTAT 0094                        __stringtab 0003                         ?_enviar_x 0072  
                  _Lcd_Write_Char 0251                           _Lcd_Cmd 017A                           ___awdiv 05F6  
                         ___awmod 0416                           ___lldiv 0590                 __end_of_convertir 01AF  
                 ?_Lcd_Set_Cursor 0074                           __ptext1 04CC                           __ptext2 01F6  
                         __ptext3 02BB                           __ptext4 0590                           __ptext5 02F3  
                         __ptext6 0194                           __ptext7 0165                           __ptext8 0138  
                         __ptext9 0223                  ___awmod@dividend 0072                           _minutos 0028  
               __end_of_inttochar 0416            __end_of_Lcd_Write_Char 0286              end_of_initialization 07FC  
      ??_I2C_Master_RepeatedStart 0070                        ??_enviar_x 0073                   ___lldiv@divisor 0070  
                 ___lldiv@counter 007D                  I2C_Master_Init@c 002F                  I2C_Master_Read@a 0070  
                   leer_x@address 007B                         Lcd_Port@a 0070                 __end_of_portsetup 0223  
           __end_of_Escribir_dato 03C6                         _PORTBbits 0006                         _PORTDbits 0008  
                   ??_descomponer 007C                         _TRISCbits 0087                   ?_Lcd_Write_Char 0070  
               Lcd_Write_String@a 0077                 Lcd_Write_String@i 0075                         _Lcd_Clear 014B  
                  __end_of___bmul 017A                  _Lcd_Write_String 01D1                    __end_of_leer_x 0334  
             start_initialization 07EB               __end_of_descomponer 0590                 ??_I2C_Master_Init 0033  
               ??_I2C_Master_Read 0072                 ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070  
               Escribir_dato@dato 0034                 Escribir_dato@posx 0032                 Escribir_dato@posy 0033  
                      ?_Lcd_Clear 0070                          ??___bmul 0071                          ??_leer_x 0079  
                 Lcd_Write_Char@a 0074                   Lcd_Write_Char@y 0073                         ___latbits 0002  
                  descomponer@dec 0031                     __pcstackBANK0 002F                    descomponer@num 007B  
                  descomponer@pos 0079                    descomponer@uni 0030                   setupINTOSC@IRCF 0070  
                        ?_Lcd_Cmd 0070                  _I2C_Master_Start 0126                  _I2C_Master_Write 0141  
                ??_Lcd_Set_Cursor 0075                      inttochar@num 0070                          ?___awdiv 0070  
                        ?___awmod 0070                          ?___lldiv 0070                         __pstrings 0003  
                       _convertir 0194                       _descomponer 052B                         _inttochar 03C6  
                        Lcd_Cmd@a 0073                       ??_Lcd_Clear 0074                       __stringbase 0008  
                   ??_setupINTOSC 0070                         _portsetup 01F6                        ?_convertir 0070  
                ??_Lcd_Write_Char 0071                   convertir@decena 0076                          _Lcd_Init 046F  
                        _Lcd_Port 01AF               I2C_Master_Read@temp 0074                   convertir@unidad 0075  
        __end_of_Lcd_Write_String 01F6                        ?_inttochar 0070         ?_I2C_Master_RepeatedStart 0070  
              __end_of__stringtab 0009                        ?_portsetup 0070                   _I2C_Master_Init 02BB  
                 _I2C_Master_Read 0223                   _I2C_Master_Wait 0158                   _I2C_Master_Stop 012F  
                        _main$175 0039                          __ptext10 0286                          __ptext11 0141  
                        __ptext20 052B                          __ptext12 012F                          __ptext21 0416  
                        __ptext13 0126                          __ptext22 05F6                          __ptext14 0158  
                        __ptext23 0251                          __ptext15 01D1                          __ptext24 0334  
                        __ptext16 046F                          __ptext25 017A                          __ptext17 014B  
                        __ptext26 01AF                          __ptext18 037A                          __ptext19 03C6  
             __end_of_setupINTOSC 052B                          _enviar_x 0286                          _segundos 002A  
                  convertir@valor 0078                       ??_convertir 0074          __end_of_I2C_Master_Start 012F  
        __end_of_I2C_Master_Write 014B                Lcd_Write_Char@temp 0072                  ___lldiv@dividend 0074  
                     ??_inttochar 0070                         stringcode 0003                        _OSCCONbits 008F  
         __end_of_I2C_Master_Init 02F3           __end_of_I2C_Master_Read 0251           __end_of_I2C_Master_Wait 0165  
                   _Escribir_dato 037A           __end_of_I2C_Master_Stop 0138                Lcd_Set_Cursor@temp 0079  
                     ??_portsetup 007E                       _setupINTOSC 04CC                      ?_descomponer 0079  
                ___lldiv@quotient 0079                 I2C_Master_Write@d 0070                          stringdir 0003  
                        stringtab 0003                       _SSPCON2bits 0091  
