

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 23 17:42:11 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39     0000                     
    40                           ; Version 2.40
    41                           ; Generated 17/11/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75     0000                     	;# 
    76     0001                     	;# 
    77     0002                     	;# 
    78     0003                     	;# 
    79     0004                     	;# 
    80     0005                     	;# 
    81     0006                     	;# 
    82     0007                     	;# 
    83     0008                     	;# 
    84     0009                     	;# 
    85     000A                     	;# 
    86     000B                     	;# 
    87     000C                     	;# 
    88     000D                     	;# 
    89     000E                     	;# 
    90     000E                     	;# 
    91     000F                     	;# 
    92     0010                     	;# 
    93     0011                     	;# 
    94     0012                     	;# 
    95     0013                     	;# 
    96     0014                     	;# 
    97     0015                     	;# 
    98     0015                     	;# 
    99     0016                     	;# 
   100     0017                     	;# 
   101     0018                     	;# 
   102     0019                     	;# 
   103     001A                     	;# 
   104     001B                     	;# 
   105     001B                     	;# 
   106     001C                     	;# 
   107     001D                     	;# 
   108     001E                     	;# 
   109     001F                     	;# 
   110     0081                     	;# 
   111     0085                     	;# 
   112     0086                     	;# 
   113     0087                     	;# 
   114     0088                     	;# 
   115     0089                     	;# 
   116     008C                     	;# 
   117     008D                     	;# 
   118     008E                     	;# 
   119     008F                     	;# 
   120     0090                     	;# 
   121     0091                     	;# 
   122     0092                     	;# 
   123     0093                     	;# 
   124     0093                     	;# 
   125     0093                     	;# 
   126     0094                     	;# 
   127     0095                     	;# 
   128     0096                     	;# 
   129     0097                     	;# 
   130     0098                     	;# 
   131     0099                     	;# 
   132     009A                     	;# 
   133     009B                     	;# 
   134     009C                     	;# 
   135     009D                     	;# 
   136     009E                     	;# 
   137     009F                     	;# 
   138     0105                     	;# 
   139     0107                     	;# 
   140     0108                     	;# 
   141     0109                     	;# 
   142     010C                     	;# 
   143     010C                     	;# 
   144     010D                     	;# 
   145     010E                     	;# 
   146     010F                     	;# 
   147     0185                     	;# 
   148     0187                     	;# 
   149     0188                     	;# 
   150     0189                     	;# 
   151     018C                     	;# 
   152     018D                     	;# 
   153     0000                     	;# 
   154     0001                     	;# 
   155     0002                     	;# 
   156     0003                     	;# 
   157     0004                     	;# 
   158     0005                     	;# 
   159     0006                     	;# 
   160     0007                     	;# 
   161     0008                     	;# 
   162     0009                     	;# 
   163     000A                     	;# 
   164     000B                     	;# 
   165     000C                     	;# 
   166     000D                     	;# 
   167     000E                     	;# 
   168     000E                     	;# 
   169     000F                     	;# 
   170     0010                     	;# 
   171     0011                     	;# 
   172     0012                     	;# 
   173     0013                     	;# 
   174     0014                     	;# 
   175     0015                     	;# 
   176     0015                     	;# 
   177     0016                     	;# 
   178     0017                     	;# 
   179     0018                     	;# 
   180     0019                     	;# 
   181     001A                     	;# 
   182     001B                     	;# 
   183     001B                     	;# 
   184     001C                     	;# 
   185     001D                     	;# 
   186     001E                     	;# 
   187     001F                     	;# 
   188     0081                     	;# 
   189     0085                     	;# 
   190     0086                     	;# 
   191     0087                     	;# 
   192     0088                     	;# 
   193     0089                     	;# 
   194     008C                     	;# 
   195     008D                     	;# 
   196     008E                     	;# 
   197     008F                     	;# 
   198     0090                     	;# 
   199     0091                     	;# 
   200     0092                     	;# 
   201     0093                     	;# 
   202     0093                     	;# 
   203     0093                     	;# 
   204     0094                     	;# 
   205     0095                     	;# 
   206     0096                     	;# 
   207     0097                     	;# 
   208     0098                     	;# 
   209     0099                     	;# 
   210     009A                     	;# 
   211     009B                     	;# 
   212     009C                     	;# 
   213     009D                     	;# 
   214     009E                     	;# 
   215     009F                     	;# 
   216     0105                     	;# 
   217     0107                     	;# 
   218     0108                     	;# 
   219     0109                     	;# 
   220     010C                     	;# 
   221     010C                     	;# 
   222     010D                     	;# 
   223     010E                     	;# 
   224     010F                     	;# 
   225     0185                     	;# 
   226     0187                     	;# 
   227     0188                     	;# 
   228     0189                     	;# 
   229     018C                     	;# 
   230     018D                     	;# 
   231     0000                     	;# 
   232     0001                     	;# 
   233     0002                     	;# 
   234     0003                     	;# 
   235     0004                     	;# 
   236     0005                     	;# 
   237     0006                     	;# 
   238     0007                     	;# 
   239     0008                     	;# 
   240     0009                     	;# 
   241     000A                     	;# 
   242     000B                     	;# 
   243     000C                     	;# 
   244     000D                     	;# 
   245     000E                     	;# 
   246     000E                     	;# 
   247     000F                     	;# 
   248     0010                     	;# 
   249     0011                     	;# 
   250     0012                     	;# 
   251     0013                     	;# 
   252     0014                     	;# 
   253     0015                     	;# 
   254     0015                     	;# 
   255     0016                     	;# 
   256     0017                     	;# 
   257     0018                     	;# 
   258     0019                     	;# 
   259     001A                     	;# 
   260     001B                     	;# 
   261     001B                     	;# 
   262     001C                     	;# 
   263     001D                     	;# 
   264     001E                     	;# 
   265     001F                     	;# 
   266     0081                     	;# 
   267     0085                     	;# 
   268     0086                     	;# 
   269     0087                     	;# 
   270     0088                     	;# 
   271     0089                     	;# 
   272     008C                     	;# 
   273     008D                     	;# 
   274     008E                     	;# 
   275     008F                     	;# 
   276     0090                     	;# 
   277     0091                     	;# 
   278     0092                     	;# 
   279     0093                     	;# 
   280     0093                     	;# 
   281     0093                     	;# 
   282     0094                     	;# 
   283     0095                     	;# 
   284     0096                     	;# 
   285     0097                     	;# 
   286     0098                     	;# 
   287     0099                     	;# 
   288     009A                     	;# 
   289     009B                     	;# 
   290     009C                     	;# 
   291     009D                     	;# 
   292     009E                     	;# 
   293     009F                     	;# 
   294     0105                     	;# 
   295     0107                     	;# 
   296     0108                     	;# 
   297     0109                     	;# 
   298     010C                     	;# 
   299     010C                     	;# 
   300     010D                     	;# 
   301     010E                     	;# 
   302     010F                     	;# 
   303     0185                     	;# 
   304     0187                     	;# 
   305     0188                     	;# 
   306     0189                     	;# 
   307     018C                     	;# 
   308     018D                     	;# 
   309     0000                     	;# 
   310     0001                     	;# 
   311     0002                     	;# 
   312     0003                     	;# 
   313     0004                     	;# 
   314     0005                     	;# 
   315     0006                     	;# 
   316     0007                     	;# 
   317     0008                     	;# 
   318     0009                     	;# 
   319     000A                     	;# 
   320     000B                     	;# 
   321     000C                     	;# 
   322     000D                     	;# 
   323     000E                     	;# 
   324     000E                     	;# 
   325     000F                     	;# 
   326     0010                     	;# 
   327     0011                     	;# 
   328     0012                     	;# 
   329     0013                     	;# 
   330     0014                     	;# 
   331     0015                     	;# 
   332     0015                     	;# 
   333     0016                     	;# 
   334     0017                     	;# 
   335     0018                     	;# 
   336     0019                     	;# 
   337     001A                     	;# 
   338     001B                     	;# 
   339     001B                     	;# 
   340     001C                     	;# 
   341     001D                     	;# 
   342     001E                     	;# 
   343     001F                     	;# 
   344     0081                     	;# 
   345     0085                     	;# 
   346     0086                     	;# 
   347     0087                     	;# 
   348     0088                     	;# 
   349     0089                     	;# 
   350     008C                     	;# 
   351     008D                     	;# 
   352     008E                     	;# 
   353     008F                     	;# 
   354     0090                     	;# 
   355     0091                     	;# 
   356     0092                     	;# 
   357     0093                     	;# 
   358     0093                     	;# 
   359     0093                     	;# 
   360     0094                     	;# 
   361     0095                     	;# 
   362     0096                     	;# 
   363     0097                     	;# 
   364     0098                     	;# 
   365     0099                     	;# 
   366     009A                     	;# 
   367     009B                     	;# 
   368     009C                     	;# 
   369     009D                     	;# 
   370     009E                     	;# 
   371     009F                     	;# 
   372     0105                     	;# 
   373     0107                     	;# 
   374     0108                     	;# 
   375     0109                     	;# 
   376     010C                     	;# 
   377     010C                     	;# 
   378     010D                     	;# 
   379     010E                     	;# 
   380     010F                     	;# 
   381     0185                     	;# 
   382     0187                     	;# 
   383     0188                     	;# 
   384     0189                     	;# 
   385     018C                     	;# 
   386     018D                     	;# 
   387     0000                     	;# 
   388     0001                     	;# 
   389     0002                     	;# 
   390     0003                     	;# 
   391     0004                     	;# 
   392     0005                     	;# 
   393     0006                     	;# 
   394     0007                     	;# 
   395     0008                     	;# 
   396     0009                     	;# 
   397     000A                     	;# 
   398     000B                     	;# 
   399     000C                     	;# 
   400     000D                     	;# 
   401     000E                     	;# 
   402     000E                     	;# 
   403     000F                     	;# 
   404     0010                     	;# 
   405     0011                     	;# 
   406     0012                     	;# 
   407     0013                     	;# 
   408     0014                     	;# 
   409     0015                     	;# 
   410     0015                     	;# 
   411     0016                     	;# 
   412     0017                     	;# 
   413     0018                     	;# 
   414     0019                     	;# 
   415     001A                     	;# 
   416     001B                     	;# 
   417     001B                     	;# 
   418     001C                     	;# 
   419     001D                     	;# 
   420     001E                     	;# 
   421     001F                     	;# 
   422     0081                     	;# 
   423     0085                     	;# 
   424     0086                     	;# 
   425     0087                     	;# 
   426     0088                     	;# 
   427     0089                     	;# 
   428     008C                     	;# 
   429     008D                     	;# 
   430     008E                     	;# 
   431     008F                     	;# 
   432     0090                     	;# 
   433     0091                     	;# 
   434     0092                     	;# 
   435     0093                     	;# 
   436     0093                     	;# 
   437     0093                     	;# 
   438     0094                     	;# 
   439     0095                     	;# 
   440     0096                     	;# 
   441     0097                     	;# 
   442     0098                     	;# 
   443     0099                     	;# 
   444     009A                     	;# 
   445     009B                     	;# 
   446     009C                     	;# 
   447     009D                     	;# 
   448     009E                     	;# 
   449     009F                     	;# 
   450     0105                     	;# 
   451     0107                     	;# 
   452     0108                     	;# 
   453     0109                     	;# 
   454     010C                     	;# 
   455     010C                     	;# 
   456     010D                     	;# 
   457     010E                     	;# 
   458     010F                     	;# 
   459     0185                     	;# 
   460     0187                     	;# 
   461     0188                     	;# 
   462     0189                     	;# 
   463     018C                     	;# 
   464     018D                     	;# 
   465     0000                     	;# 
   466     0001                     	;# 
   467     0002                     	;# 
   468     0003                     	;# 
   469     0004                     	;# 
   470     0005                     	;# 
   471     0006                     	;# 
   472     0007                     	;# 
   473     0008                     	;# 
   474     0009                     	;# 
   475     000A                     	;# 
   476     000B                     	;# 
   477     000C                     	;# 
   478     000D                     	;# 
   479     000E                     	;# 
   480     000E                     	;# 
   481     000F                     	;# 
   482     0010                     	;# 
   483     0011                     	;# 
   484     0012                     	;# 
   485     0013                     	;# 
   486     0014                     	;# 
   487     0015                     	;# 
   488     0015                     	;# 
   489     0016                     	;# 
   490     0017                     	;# 
   491     0018                     	;# 
   492     0019                     	;# 
   493     001A                     	;# 
   494     001B                     	;# 
   495     001B                     	;# 
   496     001C                     	;# 
   497     001D                     	;# 
   498     001E                     	;# 
   499     001F                     	;# 
   500     0081                     	;# 
   501     0085                     	;# 
   502     0086                     	;# 
   503     0087                     	;# 
   504     0088                     	;# 
   505     0089                     	;# 
   506     008C                     	;# 
   507     008D                     	;# 
   508     008E                     	;# 
   509     008F                     	;# 
   510     0090                     	;# 
   511     0091                     	;# 
   512     0092                     	;# 
   513     0093                     	;# 
   514     0093                     	;# 
   515     0093                     	;# 
   516     0094                     	;# 
   517     0095                     	;# 
   518     0096                     	;# 
   519     0097                     	;# 
   520     0098                     	;# 
   521     0099                     	;# 
   522     009A                     	;# 
   523     009B                     	;# 
   524     009C                     	;# 
   525     009D                     	;# 
   526     009E                     	;# 
   527     009F                     	;# 
   528     0105                     	;# 
   529     0107                     	;# 
   530     0108                     	;# 
   531     0109                     	;# 
   532     010C                     	;# 
   533     010C                     	;# 
   534     010D                     	;# 
   535     010E                     	;# 
   536     010F                     	;# 
   537     0185                     	;# 
   538     0187                     	;# 
   539     0188                     	;# 
   540     0189                     	;# 
   541     018C                     	;# 
   542     018D                     	;# 
   543     0000                     	;# 
   544     0001                     	;# 
   545     0002                     	;# 
   546     0003                     	;# 
   547     0004                     	;# 
   548     0005                     	;# 
   549     0006                     	;# 
   550     0007                     	;# 
   551     0008                     	;# 
   552     0009                     	;# 
   553     000A                     	;# 
   554     000B                     	;# 
   555     000C                     	;# 
   556     000D                     	;# 
   557     000E                     	;# 
   558     000E                     	;# 
   559     000F                     	;# 
   560     0010                     	;# 
   561     0011                     	;# 
   562     0012                     	;# 
   563     0013                     	;# 
   564     0014                     	;# 
   565     0015                     	;# 
   566     0015                     	;# 
   567     0016                     	;# 
   568     0017                     	;# 
   569     0018                     	;# 
   570     0019                     	;# 
   571     001A                     	;# 
   572     001B                     	;# 
   573     001B                     	;# 
   574     001C                     	;# 
   575     001D                     	;# 
   576     001E                     	;# 
   577     001F                     	;# 
   578     0081                     	;# 
   579     0085                     	;# 
   580     0086                     	;# 
   581     0087                     	;# 
   582     0088                     	;# 
   583     0089                     	;# 
   584     008C                     	;# 
   585     008D                     	;# 
   586     008E                     	;# 
   587     008F                     	;# 
   588     0090                     	;# 
   589     0091                     	;# 
   590     0092                     	;# 
   591     0093                     	;# 
   592     0093                     	;# 
   593     0093                     	;# 
   594     0094                     	;# 
   595     0095                     	;# 
   596     0096                     	;# 
   597     0097                     	;# 
   598     0098                     	;# 
   599     0099                     	;# 
   600     009A                     	;# 
   601     009B                     	;# 
   602     009C                     	;# 
   603     009D                     	;# 
   604     009E                     	;# 
   605     009F                     	;# 
   606     0105                     	;# 
   607     0107                     	;# 
   608     0108                     	;# 
   609     0109                     	;# 
   610     010C                     	;# 
   611     010C                     	;# 
   612     010D                     	;# 
   613     010E                     	;# 
   614     010F                     	;# 
   615     0185                     	;# 
   616     0187                     	;# 
   617     0188                     	;# 
   618     0189                     	;# 
   619     018C                     	;# 
   620     018D                     	;# 
   621     0008                     _PORTDbits	set	8
   622     0013                     _SSPBUF	set	19
   623     0014                     _SSPCON	set	20
   624     0006                     _PORTB	set	6
   625     0008                     _PORTD	set	8
   626     0006                     _PORTBbits	set	6
   627     0005                     _PORTA	set	5
   628     0043                     _RD3	set	67
   629     0047                     _RD7	set	71
   630     0046                     _RD6	set	70
   631     0045                     _RD5	set	69
   632     0044                     _RD4	set	68
   633     008F                     _OSCCONbits	set	143
   634     0091                     _SSPCON2bits	set	145
   635     0087                     _TRISCbits	set	135
   636     0094                     _SSPSTAT	set	148
   637     0093                     _SSPADD	set	147
   638     0091                     _SSPCON2	set	145
   639     0081                     _OPTION_REGbits	set	129
   640     0095                     _WPUB	set	149
   641     0086                     _TRISB	set	134
   642     0088                     _TRISD	set	136
   643     0085                     _TRISA	set	133
   644     0189                     _ANSELH	set	393
   645     0188                     _ANSEL	set	392
   646                           
   647                           	psect	strings
   648     0003                     __pstrings:
   649     0003                     stringtab:
   650     0003                     __stringtab:
   651     0003                     stringcode:	
   652                           ;	String table - string pointers are 1 byte each
   653                           
   654     0003                     stringdir:
   655     0003  3000               	movlw	high stringdir
   656     0004  008A               	movwf	10
   657     0005  0804               	movf	4,w
   658     0006  0A84               	incf	4,f
   659     0007  0782               	addwf	2,f
   660     0008                     __stringbase:
   661     0008  3400               	retlw	0
   662     0009                     __end_of__stringtab:
   663     0009                     STR_2:
   664     0009  3420               	retlw	32	;' '
   665     000A  3420               	retlw	32	;' '
   666     000B  3420               	retlw	32	;' '
   667     000C  3420               	retlw	32	;' '
   668     000D  3456               	retlw	86	;'V'
   669     000E  3400               	retlw	0
   670     000F                     STR_1:
   671     000F  3453               	retlw	83	;'S'
   672     0010  3431               	retlw	49	;'1'
   673     0011  343A               	retlw	58	;':'
   674     0012  3420               	retlw	32	;' '
   675     0013  3400               	retlw	0
   676     0014                     STR_3:
   677     0014  343A               	retlw	58	;':'
   678     0015  3420               	retlw	32	;' '
   679     0016  3420               	retlw	32	;' '
   680     0017  343A               	retlw	58	;':'
   681     0018  3400               	retlw	0
   682                           
   683                           	psect	cinit
   684     07EB                     start_initialization:	
   685                           ; #config settings
   686                           
   687     07EB                     __initialization:
   688                           
   689                           ; Clear objects allocated to BANK0
   690     07EB  1283               	bcf	3,5	;RP0=0, select bank0
   691     07EC  1303               	bcf	3,6	;RP1=0, select bank0
   692     07ED  01A0               	clrf	__pbssBANK0& (0+127)
   693     07EE  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   694     07EF  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   695     07F0  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   696     07F1  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   697     07F2  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   698     07F3  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   699     07F4  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   700     07F5  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   701     07F6  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   702     07F7  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   703     07F8  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   704     07F9  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   705     07FA  01AD               	clrf	(__pbssBANK0+13)& (0+127)
   706     07FB  01AE               	clrf	(__pbssBANK0+14)& (0+127)
   707     07FC                     end_of_initialization:	
   708                           ;End of C runtime variable initialization code
   709                           
   710     07FC                     __end_of__initialization:
   711     07FC  0183               	clrf	3
   712     07FD  120A  118A  2EB1   	ljmp	_main	;jump to C main() function
   713                           
   714                           	psect	bssBANK0
   715     0020                     __pbssBANK0:
   716     0020                     _conver:
   717     0020                     	ds	4
   718     0024                     _valADC:
   719     0024                     	ds	3
   720     0027                     _modo:
   721     0027                     	ds	1
   722     0028                     _minutos:
   723     0028                     	ds	1
   724     0029                     _min:
   725     0029                     	ds	1
   726     002A                     _segundos:
   727     002A                     	ds	1
   728     002B                     _sec:
   729     002B                     	ds	1
   730     002C                     _decena:
   731     002C                     	ds	1
   732     002D                     _unidad:
   733     002D                     	ds	1
   734     002E                     _lecADC:
   735     002E                     	ds	1
   736                           
   737                           	psect	cstackCOMMON
   738     0070                     __pcstackCOMMON:
   739     0070                     ?_setupINTOSC:
   740     0070                     ??_setupINTOSC:	
   741                           ; 1 bytes @ 0x0
   742                           
   743     0070                     ?_portsetup:	
   744                           ; 1 bytes @ 0x0
   745                           
   746     0070                     ?_Lcd_Init:	
   747                           ; 1 bytes @ 0x0
   748                           
   749     0070                     ?_Lcd_Clear:	
   750                           ; 1 bytes @ 0x0
   751                           
   752     0070                     ?_Lcd_Write_String:	
   753                           ; 1 bytes @ 0x0
   754                           
   755     0070                     ?_leer_x:	
   756                           ; 1 bytes @ 0x0
   757                           
   758     0070                     ?_inttochar:	
   759                           ; 1 bytes @ 0x0
   760                           
   761     0070                     ??_inttochar:	
   762                           ; 1 bytes @ 0x0
   763                           
   764     0070                     ?_Lcd_Write_Char:	
   765                           ; 1 bytes @ 0x0
   766                           
   767     0070                     ?_I2C_Master_Start:	
   768                           ; 1 bytes @ 0x0
   769                           
   770     0070                     ??_I2C_Master_Start:	
   771                           ; 1 bytes @ 0x0
   772                           
   773     0070                     ?_I2C_Master_Write:	
   774                           ; 1 bytes @ 0x0
   775                           
   776     0070                     ?_I2C_Master_RepeatedStart:	
   777                           ; 1 bytes @ 0x0
   778                           
   779     0070                     ??_I2C_Master_RepeatedStart:	
   780                           ; 1 bytes @ 0x0
   781                           
   782     0070                     ?_I2C_Master_Stop:	
   783                           ; 1 bytes @ 0x0
   784                           
   785     0070                     ??_I2C_Master_Stop:	
   786                           ; 1 bytes @ 0x0
   787                           
   788     0070                     ?_main:	
   789                           ; 1 bytes @ 0x0
   790                           
   791     0070                     ?_convertir:	
   792                           ; 1 bytes @ 0x0
   793                           
   794     0070                     ?_I2C_Master_Wait:	
   795                           ; 1 bytes @ 0x0
   796                           
   797     0070                     ??_I2C_Master_Wait:	
   798                           ; 1 bytes @ 0x0
   799                           
   800     0070                     ?_Lcd_Port:	
   801                           ; 1 bytes @ 0x0
   802                           
   803     0070                     ??_Lcd_Port:	
   804                           ; 1 bytes @ 0x0
   805                           
   806     0070                     ?_Lcd_Cmd:	
   807                           ; 1 bytes @ 0x0
   808                           
   809     0070                     ?___bmul:	
   810                           ; 1 bytes @ 0x0
   811                           
   812     0070                     ?_I2C_Master_Read:	
   813                           ; 1 bytes @ 0x0
   814                           
   815     0070                     ?___awdiv:	
   816                           ; 2 bytes @ 0x0
   817                           
   818     0070                     ?___awmod:	
   819                           ; 2 bytes @ 0x0
   820                           
   821     0070                     ?___lldiv:	
   822                           ; 2 bytes @ 0x0
   823                           
   824     0070                     Lcd_Port@a:	
   825                           ; 4 bytes @ 0x0
   826                           
   827     0070                     inttochar@num:	
   828                           ; 1 bytes @ 0x0
   829                           
   830     0070                     setupINTOSC@IRCF:	
   831                           ; 1 bytes @ 0x0
   832                           
   833     0070                     ___bmul@multiplicand:	
   834                           ; 1 bytes @ 0x0
   835                           
   836     0070                     I2C_Master_Write@d:	
   837                           ; 1 bytes @ 0x0
   838                           
   839     0070                     I2C_Master_Read@a:	
   840                           ; 2 bytes @ 0x0
   841                           
   842     0070                     ___awdiv@divisor:	
   843                           ; 2 bytes @ 0x0
   844                           
   845     0070                     ___awmod@divisor:	
   846                           ; 2 bytes @ 0x0
   847                           
   848     0070                     ___lldiv@divisor:	
   849                           ; 2 bytes @ 0x0
   850                           
   851                           
   852                           ; 4 bytes @ 0x0
   853     0070                     	ds	1
   854     0071                     ??_Lcd_Write_Char:
   855     0071                     ??_Lcd_Cmd:	
   856                           ; 1 bytes @ 0x1
   857                           
   858     0071                     ??___bmul:	
   859                           ; 1 bytes @ 0x1
   860                           
   861                           
   862                           ; 1 bytes @ 0x1
   863     0071                     	ds	1
   864     0072                     ?_enviar_x:
   865     0072                     ??_I2C_Master_Write:	
   866                           ; 1 bytes @ 0x2
   867                           
   868     0072                     ??_I2C_Master_Read:	
   869                           ; 1 bytes @ 0x2
   870                           
   871     0072                     enviar_x@val2:	
   872                           ; 1 bytes @ 0x2
   873                           
   874     0072                     Lcd_Write_Char@temp:	
   875                           ; 1 bytes @ 0x2
   876                           
   877     0072                     ___bmul@product:	
   878                           ; 1 bytes @ 0x2
   879                           
   880     0072                     ___awdiv@dividend:	
   881                           ; 1 bytes @ 0x2
   882                           
   883     0072                     ___awmod@dividend:	
   884                           ; 2 bytes @ 0x2
   885                           
   886                           
   887                           ; 2 bytes @ 0x2
   888     0072                     	ds	1
   889     0073                     ??_enviar_x:
   890     0073                     Lcd_Cmd@a:	
   891                           ; 1 bytes @ 0x3
   892                           
   893     0073                     Lcd_Write_Char@y:	
   894                           ; 1 bytes @ 0x3
   895                           
   896     0073                     ___bmul@multiplier:	
   897                           ; 1 bytes @ 0x3
   898                           
   899                           
   900                           ; 1 bytes @ 0x3
   901     0073                     	ds	1
   902     0074                     ??_Lcd_Init:
   903     0074                     ??_Lcd_Clear:	
   904                           ; 1 bytes @ 0x4
   905                           
   906     0074                     ?_Lcd_Set_Cursor:	
   907                           ; 1 bytes @ 0x4
   908                           
   909     0074                     ??_convertir:	
   910                           ; 1 bytes @ 0x4
   911                           
   912     0074                     ??___awdiv:	
   913                           ; 1 bytes @ 0x4
   914                           
   915     0074                     ??___awmod:	
   916                           ; 1 bytes @ 0x4
   917                           
   918     0074                     Lcd_Set_Cursor@b:	
   919                           ; 1 bytes @ 0x4
   920                           
   921     0074                     Lcd_Write_Char@a:	
   922                           ; 1 bytes @ 0x4
   923                           
   924     0074                     I2C_Master_Read@temp:	
   925                           ; 1 bytes @ 0x4
   926                           
   927     0074                     ___lldiv@dividend:	
   928                           ; 2 bytes @ 0x4
   929                           
   930                           
   931                           ; 4 bytes @ 0x4
   932     0074                     	ds	1
   933     0075                     ??_Lcd_Set_Cursor:
   934     0075                     ??_Lcd_Write_String:	
   935                           ; 1 bytes @ 0x5
   936                           
   937     0075                     convertir@unidad:	
   938                           ; 1 bytes @ 0x5
   939                           
   940     0075                     enviar_x@val1:	
   941                           ; 1 bytes @ 0x5
   942                           
   943     0075                     ___awdiv@counter:	
   944                           ; 1 bytes @ 0x5
   945                           
   946     0075                     ___awmod@counter:	
   947                           ; 1 bytes @ 0x5
   948                           
   949     0075                     Lcd_Write_String@i:	
   950                           ; 1 bytes @ 0x5
   951                           
   952                           
   953                           ; 2 bytes @ 0x5
   954     0075                     	ds	1
   955     0076                     convertir@decena:
   956     0076                     Lcd_Set_Cursor@a:	
   957                           ; 1 bytes @ 0x6
   958                           
   959     0076                     ___awdiv@sign:	
   960                           ; 1 bytes @ 0x6
   961                           
   962     0076                     ___awmod@sign:	
   963                           ; 1 bytes @ 0x6
   964                           
   965                           
   966                           ; 1 bytes @ 0x6
   967     0076                     	ds	1
   968     0077                     convertir@conversion:
   969     0077                     Lcd_Set_Cursor@z:	
   970                           ; 1 bytes @ 0x7
   971                           
   972     0077                     Lcd_Write_String@a:	
   973                           ; 1 bytes @ 0x7
   974                           
   975     0077                     ___awdiv@quotient:	
   976                           ; 1 bytes @ 0x7
   977                           
   978                           
   979                           ; 2 bytes @ 0x7
   980     0077                     	ds	1
   981     0078                     ??___lldiv:
   982     0078                     convertir@valor:	
   983                           ; 1 bytes @ 0x8
   984                           
   985     0078                     Lcd_Set_Cursor@y:	
   986                           ; 1 bytes @ 0x8
   987                           
   988                           
   989                           ; 1 bytes @ 0x8
   990     0078                     	ds	1
   991     0079                     ??_leer_x:
   992     0079                     ?_descomponer:	
   993                           ; 1 bytes @ 0x9
   994                           
   995     0079                     Lcd_Set_Cursor@temp:	
   996                           ; 1 bytes @ 0x9
   997                           
   998     0079                     descomponer@pos:	
   999                           ; 1 bytes @ 0x9
  1000                           
  1001     0079                     ___lldiv@quotient:	
  1002                           ; 2 bytes @ 0x9
  1003                           
  1004                           
  1005                           ; 4 bytes @ 0x9
  1006     0079                     	ds	2
  1007     007B                     leer_x@address:
  1008     007B                     descomponer@num:	
  1009                           ; 1 bytes @ 0xB
  1010                           
  1011                           
  1012                           ; 1 bytes @ 0xB
  1013     007B                     	ds	1
  1014     007C                     ??_descomponer:
  1015     007C                     leer_x@valor:	
  1016                           ; 1 bytes @ 0xC
  1017                           
  1018                           
  1019                           ; 1 bytes @ 0xC
  1020     007C                     	ds	1
  1021     007D                     ___lldiv@counter:
  1022                           
  1023                           ; 1 bytes @ 0xD
  1024     007D                     	ds	1
  1025     007E                     ??_portsetup:
  1026     007E                     ??_Escribir_dato:	
  1027                           ; 1 bytes @ 0xE
  1028                           
  1029                           
  1030                           	psect	cstackBANK0
  1031     002F                     __pcstackBANK0:	
  1032                           ; 1 bytes @ 0xE
  1033                           
  1034     002F                     ?_I2C_Master_Init:
  1035     002F                     descomponer@cent:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038     002F                     I2C_Master_Init@c:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041                           
  1042                           ; 4 bytes @ 0x0
  1043     002F                     	ds	1
  1044     0030                     descomponer@uni:
  1045                           
  1046                           ; 1 bytes @ 0x1
  1047     0030                     	ds	1
  1048     0031                     descomponer@dec:
  1049                           
  1050                           ; 1 bytes @ 0x2
  1051     0031                     	ds	1
  1052     0032                     ?_Escribir_dato:
  1053     0032                     Escribir_dato@posx:	
  1054                           ; 1 bytes @ 0x3
  1055                           
  1056                           
  1057                           ; 1 bytes @ 0x3
  1058     0032                     	ds	1
  1059     0033                     ??_I2C_Master_Init:
  1060     0033                     Escribir_dato@posy:	
  1061                           ; 1 bytes @ 0x4
  1062                           
  1063                           
  1064                           ; 1 bytes @ 0x4
  1065     0033                     	ds	1
  1066     0034                     Escribir_dato@dato:
  1067                           
  1068                           ; 1 bytes @ 0x5
  1069     0034                     	ds	3
  1070     0037                     ??_main:
  1071                           
  1072                           ; 1 bytes @ 0x8
  1073     0037                     	ds	2
  1074                           
  1075                           	psect	maintext
  1076     06B1                     __pmaintext:	
  1077 ;;
  1078 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1079 ;;
  1080 ;; *************** function _main *****************
  1081 ;; Defined at:
  1082 ;;		line 63 in file "main.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;		None
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;		None
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : B00/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1096 ;;      Params:         0       0       0       0       0
  1097 ;;      Locals:         0       0       0       0       0
  1098 ;;      Temps:          0       2       0       0       0
  1099 ;;      Totals:         0       2       0       0       0
  1100 ;;Total ram usage:        2 bytes
  1101 ;; Hardware stack levels required when called: 4
  1102 ;; This function calls:
  1103 ;;		_Escribir_dato
  1104 ;;		_Lcd_Clear
  1105 ;;		_Lcd_Init
  1106 ;;		_Lcd_Set_Cursor
  1107 ;;		_Lcd_Write_String
  1108 ;;		_enviar_x
  1109 ;;		_leer_x
  1110 ;;		_portsetup
  1111 ;;		_setupINTOSC
  1112 ;; This function is called by:
  1113 ;;		Startup code after reset
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117     06B1                     _main:	
  1118                           ;psect for function _main
  1119                           
  1120     06B1                     l1757:	
  1121                           ;incstack = 0
  1122                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1123                           
  1124                           
  1125                           ;main.c: 64:     setupINTOSC(7);
  1126     06B1  3007               	movlw	7
  1127     06B2  120A  118A  2520  120A  118A  	fcall	_setupINTOSC
  1128                           
  1129                           ;main.c: 65:     portsetup();
  1130     06B7  120A  118A  224A  120A  118A  	fcall	_portsetup
  1131                           
  1132                           ;main.c: 67:     Lcd_Init();
  1133     06BC  120A  118A  24C3  120A  118A  	fcall	_Lcd_Init
  1134                           
  1135                           ;main.c: 68:     Lcd_Clear();
  1136     06C1  120A  118A  219F  120A  118A  	fcall	_Lcd_Clear
  1137                           
  1138                           ;main.c: 69:     Lcd_Set_Cursor(1,2);
  1139     06C6  3002               	movlw	2
  1140     06C7  00F4               	movwf	Lcd_Set_Cursor@b
  1141     06C8  3001               	movlw	1
  1142     06C9  120A  118A  2388  120A  118A  	fcall	_Lcd_Set_Cursor
  1143     06CE                     l1759:
  1144                           
  1145                           ;main.c: 70:     Lcd_Write_String("S1: ");
  1146     06CE  3007               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1147     06CF  120A  118A  2225  120A  118A  	fcall	_Lcd_Write_String
  1148     06D4                     l1761:
  1149                           
  1150                           ;main.c: 71:     Lcd_Set_Cursor(2,1);
  1151     06D4  01F4               	clrf	Lcd_Set_Cursor@b
  1152     06D5  0AF4               	incf	Lcd_Set_Cursor@b,f
  1153     06D6  3002               	movlw	2
  1154     06D7  120A  118A  2388  120A  118A  	fcall	_Lcd_Set_Cursor
  1155                           
  1156                           ;main.c: 72:     Lcd_Write_String("    V");
  1157     06DC  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1158     06DD  120A  118A  2225  120A  118A  	fcall	_Lcd_Write_String
  1159     06E2                     l1763:
  1160                           
  1161                           ;main.c: 73:     Lcd_Set_Cursor(1,10);
  1162     06E2  300A               	movlw	10
  1163     06E3  00F4               	movwf	Lcd_Set_Cursor@b
  1164     06E4  3001               	movlw	1
  1165     06E5  120A  118A  2388  120A  118A  	fcall	_Lcd_Set_Cursor
  1166     06EA                     l1765:
  1167                           
  1168                           ;main.c: 74:     Lcd_Write_String(":  :");
  1169     06EA  300C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1170     06EB  120A  118A  2225  120A  118A  	fcall	_Lcd_Write_String
  1171     06F0                     l1767:
  1172                           
  1173                           ;main.c: 76:     modo = 0;
  1174     06F0  1283               	bcf	3,5	;RP0=0, select bank0
  1175     06F1  1303               	bcf	3,6	;RP1=0, select bank0
  1176     06F2  01A7               	clrf	_modo
  1177     06F3                     l1769:
  1178                           
  1179                           ;main.c: 77:     sec = 0;
  1180     06F3  01AB               	clrf	_sec
  1181     06F4                     l1771:
  1182                           
  1183                           ;main.c: 78:     min = 0;
  1184     06F4  01A9               	clrf	_min
  1185     06F5                     l1773:
  1186                           
  1187                           ;main.c: 80:     enviar_x(0, 0);
  1188     06F5  01F2               	clrf	enviar_x@val2
  1189     06F6  3000               	movlw	0
  1190     06F7  120A  118A  22DA  120A  118A  	fcall	_enviar_x
  1191     06FC                     l1775:
  1192                           
  1193                           ;main.c: 83:         PORTA = modo;
  1194     06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1195     06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1196     06FE  0827               	movf	_modo,w
  1197     06FF  0085               	movwf	5	;volatile
  1198     0700                     l1777:
  1199                           
  1200                           ;main.c: 85:         enviar_x(0, 0);
  1201     0700  01F2               	clrf	enviar_x@val2
  1202     0701  3000               	movlw	0
  1203     0702  120A  118A  22DA  120A  118A  	fcall	_enviar_x
  1204     0707                     l1779:
  1205                           
  1206                           ;main.c: 87:         sec = leer_x(0x00);
  1207     0707  3000               	movlw	0
  1208     0708  120A  118A  2347  120A  118A  	fcall	_leer_x
  1209     070D  1283               	bcf	3,5	;RP0=0, select bank0
  1210     070E  1303               	bcf	3,6	;RP1=0, select bank0
  1211     070F  00AB               	movwf	_sec
  1212     0710                     l1781:
  1213                           
  1214                           ;main.c: 88:         Escribir_dato(sec, 14, 1);
  1215     0710  300E               	movlw	14
  1216     0711  00B2               	movwf	Escribir_dato@posx
  1217     0712  01B3               	clrf	Escribir_dato@posy
  1218     0713  0AB3               	incf	Escribir_dato@posy,f
  1219     0714  082B               	movf	_sec,w
  1220     0715  120A  118A  23CE  120A  118A  	fcall	_Escribir_dato
  1221     071A                     l1783:
  1222                           
  1223                           ;main.c: 90:         min = leer_x(0x01);
  1224     071A  3001               	movlw	1
  1225     071B  120A  118A  2347  120A  118A  	fcall	_leer_x
  1226     0720  1283               	bcf	3,5	;RP0=0, select bank0
  1227     0721  1303               	bcf	3,6	;RP1=0, select bank0
  1228     0722  00A9               	movwf	_min
  1229     0723                     l1785:
  1230                           
  1231                           ;main.c: 91:         Escribir_dato(min, 11, 1);
  1232     0723  300B               	movlw	11
  1233     0724  00B2               	movwf	Escribir_dato@posx
  1234     0725  01B3               	clrf	Escribir_dato@posy
  1235     0726  0AB3               	incf	Escribir_dato@posy,f
  1236     0727  0829               	movf	_min,w
  1237     0728  120A  118A  23CE  120A  118A  	fcall	_Escribir_dato
  1238     072D                     l1787:
  1239                           
  1240                           ;main.c: 93:         if(!PORTBbits.RB4){
  1241     072D  1283               	bcf	3,5	;RP0=0, select bank0
  1242     072E  1303               	bcf	3,6	;RP1=0, select bank0
  1243     072F  1A06               	btfsc	6,4	;volatile
  1244     0730  2F32               	goto	u1441
  1245     0731  2F33               	goto	u1440
  1246     0732                     u1441:
  1247     0732  2EFC               	goto	l1775
  1248     0733                     u1440:
  1249     0733                     l1789:
  1250                           
  1251                           ;main.c: 94:             _delay((unsigned long)((20)*(8000000/4000.0)));
  1252     0733  3034               	movlw	52
  1253     0734  1283               	bcf	3,5	;RP0=0, select bank0
  1254     0735  1303               	bcf	3,6	;RP1=0, select bank0
  1255     0736  00B8               	movwf	??_main+1
  1256     0737  30F1               	movlw	241
  1257     0738  00B7               	movwf	??_main
  1258     0739                     u1597:
  1259     0739  0BB7               	decfsz	??_main,f
  1260     073A  2F39               	goto	u1597
  1261     073B  0BB8               	decfsz	??_main+1,f
  1262     073C  2F39               	goto	u1597
  1263                           
  1264                           ;main.c: 95:             while(PORTBbits.RB3){
  1265     073D  2FE1               	goto	l1847
  1266     073E                     l1791:
  1267                           
  1268                           ;main.c: 96:                 _delay((unsigned long)((30)*(8000000/4000.0)));
  1269     073E  304E               	movlw	78
  1270     073F  1283               	bcf	3,5	;RP0=0, select bank0
  1271     0740  1303               	bcf	3,6	;RP1=0, select bank0
  1272     0741  00B8               	movwf	??_main+1
  1273     0742  30EA               	movlw	234
  1274     0743  00B7               	movwf	??_main
  1275     0744                     u1607:
  1276     0744  0BB7               	decfsz	??_main,f
  1277     0745  2F44               	goto	u1607
  1278     0746  0BB8               	decfsz	??_main+1,f
  1279     0747  2F44               	goto	u1607
  1280     0748  0000               	nop
  1281     0749                     l1793:
  1282                           
  1283                           ;main.c: 97:                 Escribir_dato(sec, 14, 1);
  1284     0749  300E               	movlw	14
  1285     074A  1283               	bcf	3,5	;RP0=0, select bank0
  1286     074B  1303               	bcf	3,6	;RP1=0, select bank0
  1287     074C  00B2               	movwf	Escribir_dato@posx
  1288     074D  01B3               	clrf	Escribir_dato@posy
  1289     074E  0AB3               	incf	Escribir_dato@posy,f
  1290     074F  082B               	movf	_sec,w
  1291     0750  120A  118A  23CE  120A  118A  	fcall	_Escribir_dato
  1292     0755                     l1795:
  1293                           
  1294                           ;main.c: 98:                 Escribir_dato(min, 11, 1);
  1295     0755  300B               	movlw	11
  1296     0756  1283               	bcf	3,5	;RP0=0, select bank0
  1297     0757  1303               	bcf	3,6	;RP1=0, select bank0
  1298     0758  00B2               	movwf	Escribir_dato@posx
  1299     0759  01B3               	clrf	Escribir_dato@posy
  1300     075A  0AB3               	incf	Escribir_dato@posy,f
  1301     075B  0829               	movf	_min,w
  1302     075C  120A  118A  23CE  120A  118A  	fcall	_Escribir_dato
  1303     0761                     l1797:
  1304                           
  1305                           ;main.c: 100:                 if(PORTBbits.RB7 == 0){
  1306     0761  1283               	bcf	3,5	;RP0=0, select bank0
  1307     0762  1303               	bcf	3,6	;RP1=0, select bank0
  1308     0763  1B86               	btfsc	6,7	;volatile
  1309     0764  2F66               	goto	u1451
  1310     0765  2F67               	goto	u1450
  1311     0766                     u1451:
  1312     0766  2F7E               	goto	l1807
  1313     0767                     u1450:
  1314     0767                     l1799:
  1315                           
  1316                           ;main.c: 101:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1317     0767  3034               	movlw	52
  1318     0768  1283               	bcf	3,5	;RP0=0, select bank0
  1319     0769  1303               	bcf	3,6	;RP1=0, select bank0
  1320     076A  00B8               	movwf	??_main+1
  1321     076B  30F1               	movlw	241
  1322     076C  00B7               	movwf	??_main
  1323     076D                     u1617:
  1324     076D  0BB7               	decfsz	??_main,f
  1325     076E  2F6D               	goto	u1617
  1326     076F  0BB8               	decfsz	??_main+1,f
  1327     0770  2F6D               	goto	u1617
  1328     0771                     l1801:
  1329                           
  1330                           ;main.c: 102:                     if (modo < 1){
  1331     0771  1283               	bcf	3,5	;RP0=0, select bank0
  1332     0772  1303               	bcf	3,6	;RP1=0, select bank0
  1333     0773  0827               	movf	_modo,w
  1334     0774  1D03               	btfss	3,2
  1335     0775  2F77               	goto	u1461
  1336     0776  2F78               	goto	u1460
  1337     0777                     u1461:
  1338     0777  2F7D               	goto	l1805
  1339     0778                     u1460:
  1340     0778                     l1803:
  1341                           
  1342                           ;main.c: 103:                         modo += 1;
  1343     0778  3001               	movlw	1
  1344     0779  00B7               	movwf	??_main
  1345     077A  0837               	movf	??_main,w
  1346     077B  07A7               	addwf	_modo,f
  1347                           
  1348                           ;main.c: 104:                     }
  1349     077C  2F7E               	goto	l1807
  1350     077D                     l1805:
  1351                           
  1352                           ;main.c: 106:                         modo = 0;
  1353     077D  01A7               	clrf	_modo
  1354     077E                     l1807:
  1355                           
  1356                           ;main.c: 110:                 if(PORTBbits.RB6 == 0){
  1357     077E  1B06               	btfsc	6,6	;volatile
  1358     077F  2F81               	goto	u1471
  1359     0780  2F82               	goto	u1470
  1360     0781                     u1471:
  1361     0781  2FB1               	goto	l1827
  1362     0782                     u1470:
  1363     0782                     l1809:
  1364                           
  1365                           ;main.c: 111:                     _delay((unsigned long)((50)*(8000000/4000.0)));
  1366     0782  3082               	movlw	130
  1367     0783  1283               	bcf	3,5	;RP0=0, select bank0
  1368     0784  1303               	bcf	3,6	;RP1=0, select bank0
  1369     0785  00B8               	movwf	??_main+1
  1370     0786  30DD               	movlw	221
  1371     0787  00B7               	movwf	??_main
  1372     0788                     u1627:
  1373     0788  0BB7               	decfsz	??_main,f
  1374     0789  2F88               	goto	u1627
  1375     078A  0BB8               	decfsz	??_main+1,f
  1376     078B  2F88               	goto	u1627
  1377     078C                     l1811:
  1378                           
  1379                           ;main.c: 112:                     if (modo == 0){
  1380     078C  1283               	bcf	3,5	;RP0=0, select bank0
  1381     078D  1303               	bcf	3,6	;RP1=0, select bank0
  1382     078E  0827               	movf	_modo,w
  1383     078F  1D03               	btfss	3,2
  1384     0790  2F92               	goto	u1481
  1385     0791  2F93               	goto	u1480
  1386     0792                     u1481:
  1387     0792  2FA0               	goto	l1819
  1388     0793                     u1480:
  1389     0793                     l1813:
  1390                           
  1391                           ;main.c: 113:                         if (sec<59){
  1392     0793  303B               	movlw	59
  1393     0794  022B               	subwf	_sec,w
  1394     0795  1803               	skipnc
  1395     0796  2F98               	goto	u1491
  1396     0797  2F99               	goto	u1490
  1397     0798                     u1491:
  1398     0798  2F9E               	goto	l1817
  1399     0799                     u1490:
  1400     0799                     l1815:
  1401                           
  1402                           ;main.c: 114:                             sec ++;
  1403     0799  3001               	movlw	1
  1404     079A  00B7               	movwf	??_main
  1405     079B  0837               	movf	??_main,w
  1406     079C  07AB               	addwf	_sec,f
  1407                           
  1408                           ;main.c: 115:                         }
  1409     079D  2FB1               	goto	l1827
  1410     079E                     l1817:
  1411                           
  1412                           ;main.c: 117:                             sec = 0;
  1413     079E  01AB               	clrf	_sec
  1414     079F  2FB1               	goto	l1827
  1415     07A0                     l1819:
  1416     07A0  0327               	decf	_modo,w
  1417     07A1  1D03               	btfss	3,2
  1418     07A2  2FA4               	goto	u1501
  1419     07A3  2FA5               	goto	u1500
  1420     07A4                     u1501:
  1421     07A4  2FB1               	goto	l1827
  1422     07A5                     u1500:
  1423     07A5                     l1821:
  1424                           
  1425                           ;main.c: 121:                         if (min<59){
  1426     07A5  303B               	movlw	59
  1427     07A6  0229               	subwf	_min,w
  1428     07A7  1803               	skipnc
  1429     07A8  2FAA               	goto	u1511
  1430     07A9  2FAB               	goto	u1510
  1431     07AA                     u1511:
  1432     07AA  2FB0               	goto	l1825
  1433     07AB                     u1510:
  1434     07AB                     l1823:
  1435                           
  1436                           ;main.c: 122:                             min++;
  1437     07AB  3001               	movlw	1
  1438     07AC  00B7               	movwf	??_main
  1439     07AD  0837               	movf	??_main,w
  1440     07AE  07A9               	addwf	_min,f
  1441                           
  1442                           ;main.c: 123:                         }
  1443     07AF  2FB1               	goto	l1827
  1444     07B0                     l1825:
  1445                           
  1446                           ;main.c: 125:                             min = 0;
  1447     07B0  01A9               	clrf	_min
  1448     07B1                     l1827:
  1449                           
  1450                           ;main.c: 132:                 if(PORTBbits.RB5 == 0){
  1451     07B1  1A86               	btfsc	6,5	;volatile
  1452     07B2  2FB4               	goto	u1521
  1453     07B3  2FB5               	goto	u1520
  1454     07B4                     u1521:
  1455     07B4  2FE1               	goto	l1847
  1456     07B5                     u1520:
  1457     07B5                     l1829:
  1458                           
  1459                           ;main.c: 133:                     _delay((unsigned long)((50)*(8000000/4000.0)));
  1460     07B5  3082               	movlw	130
  1461     07B6  1283               	bcf	3,5	;RP0=0, select bank0
  1462     07B7  1303               	bcf	3,6	;RP1=0, select bank0
  1463     07B8  00B8               	movwf	??_main+1
  1464     07B9  30DD               	movlw	221
  1465     07BA  00B7               	movwf	??_main
  1466     07BB                     u1637:
  1467     07BB  0BB7               	decfsz	??_main,f
  1468     07BC  2FBB               	goto	u1637
  1469     07BD  0BB8               	decfsz	??_main+1,f
  1470     07BE  2FBB               	goto	u1637
  1471     07BF                     l1831:
  1472                           
  1473                           ;main.c: 135:                     if (modo == 0){
  1474     07BF  1283               	bcf	3,5	;RP0=0, select bank0
  1475     07C0  1303               	bcf	3,6	;RP1=0, select bank0
  1476     07C1  0827               	movf	_modo,w
  1477     07C2  1D03               	btfss	3,2
  1478     07C3  2FC5               	goto	u1531
  1479     07C4  2FC6               	goto	u1530
  1480     07C5                     u1531:
  1481     07C5  2FD1               	goto	l1839
  1482     07C6                     u1530:
  1483     07C6                     l1833:
  1484                           
  1485                           ;main.c: 136:                         if (sec > 0){
  1486     07C6  082B               	movf	_sec,w
  1487     07C7  1903               	btfsc	3,2
  1488     07C8  2FCA               	goto	u1541
  1489     07C9  2FCB               	goto	u1540
  1490     07CA                     u1541:
  1491     07CA  2FCE               	goto	l1837
  1492     07CB                     u1540:
  1493     07CB                     l1835:
  1494                           
  1495                           ;main.c: 137:                             sec--;
  1496     07CB  3001               	movlw	1
  1497     07CC  02AB               	subwf	_sec,f
  1498                           
  1499                           ;main.c: 138:                         }
  1500     07CD  2FE1               	goto	l1847
  1501     07CE                     l1837:
  1502                           
  1503                           ;main.c: 140:                             sec = 59;
  1504     07CE  303B               	movlw	59
  1505     07CF  00AB               	movwf	_sec
  1506     07D0  2FE1               	goto	l1847
  1507     07D1                     l1839:
  1508     07D1  0327               	decf	_modo,w
  1509     07D2  1D03               	btfss	3,2
  1510     07D3  2FD5               	goto	u1551
  1511     07D4  2FD6               	goto	u1550
  1512     07D5                     u1551:
  1513     07D5  2FE1               	goto	l90
  1514     07D6                     u1550:
  1515     07D6                     l1841:
  1516                           
  1517                           ;main.c: 144:                         if (min > 0){
  1518     07D6  0829               	movf	_min,w
  1519     07D7  1903               	btfsc	3,2
  1520     07D8  2FDA               	goto	u1561
  1521     07D9  2FDB               	goto	u1560
  1522     07DA                     u1561:
  1523     07DA  2FDE               	goto	l1845
  1524     07DB                     u1560:
  1525     07DB                     l1843:
  1526                           
  1527                           ;main.c: 145:                             min--;
  1528     07DB  3001               	movlw	1
  1529     07DC  02A9               	subwf	_min,f
  1530                           
  1531                           ;main.c: 146:                         }
  1532     07DD  2FE1               	goto	l1847
  1533     07DE                     l1845:
  1534                           
  1535                           ;main.c: 148:                             min = 59;
  1536     07DE  303B               	movlw	59
  1537     07DF  00A9               	movwf	_min
  1538     07E0  2FE1               	goto	l1847
  1539     07E1                     l90:	
  1540                           ;main.c: 151:                 }
  1541                           
  1542     07E1                     l1847:
  1543                           
  1544                           ;main.c: 95:             while(PORTBbits.RB3){
  1545     07E1  1283               	bcf	3,5	;RP0=0, select bank0
  1546     07E2  1303               	bcf	3,6	;RP1=0, select bank0
  1547     07E3  1986               	btfsc	6,3	;volatile
  1548     07E4  2FE6               	goto	u1571
  1549     07E5  2FE7               	goto	u1570
  1550     07E6                     u1571:
  1551     07E6  2F3E               	goto	l1791
  1552     07E7                     u1570:
  1553     07E7  2EFC               	goto	l1775
  1554     07E8  120A  118A  2800   	ljmp	start
  1555     07EB                     __end_of_main:
  1556                           
  1557                           	psect	text1
  1558     0520                     __ptext1:	
  1559 ;; *************** function _setupINTOSC *****************
  1560 ;; Defined at:
  1561 ;;		line 10 in file "oscilador.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  IRCF            1    wreg     unsigned char 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  IRCF            1    0[COMMON] unsigned char 
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg, status,2, status,0
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1575 ;;      Params:         0       0       0       0       0
  1576 ;;      Locals:         1       0       0       0       0
  1577 ;;      Temps:          0       0       0       0       0
  1578 ;;      Totals:         1       0       0       0       0
  1579 ;;Total ram usage:        1 bytes
  1580 ;; Hardware stack levels used: 1
  1581 ;; This function calls:
  1582 ;;		Nothing
  1583 ;; This function is called by:
  1584 ;;		_main
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588     0520                     _setupINTOSC:	
  1589                           ;psect for function _setupINTOSC
  1590                           
  1591                           
  1592                           ;incstack = 0
  1593                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  1594                           ;setupINTOSC@IRCF stored from wreg
  1595     0520  00F0               	movwf	setupINTOSC@IRCF
  1596     0521                     l1695:
  1597                           
  1598                           ;oscilador.c: 11:     if (IRCF == 7){
  1599     0521  3007               	movlw	7
  1600     0522  0670               	xorwf	setupINTOSC@IRCF,w
  1601     0523  1D03               	btfss	3,2
  1602     0524  2D26               	goto	u1351
  1603     0525  2D27               	goto	u1350
  1604     0526                     u1351:
  1605     0526  2D2B               	goto	l253
  1606     0527                     u1350:
  1607     0527                     l1697:
  1608                           
  1609                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  1610     0527  3070               	movlw	112
  1611     0528  1683               	bsf	3,5	;RP0=1, select bank1
  1612     0529  1303               	bcf	3,6	;RP1=0, select bank1
  1613     052A  048F               	iorwf	15,f	;volatile
  1614     052B                     l253:	
  1615                           ;oscilador.c: 13:     }
  1616                           
  1617                           
  1618                           ;oscilador.c: 14:     if (IRCF == 6){
  1619     052B  3006               	movlw	6
  1620     052C  0670               	xorwf	setupINTOSC@IRCF,w
  1621     052D  1D03               	btfss	3,2
  1622     052E  2D30               	goto	u1361
  1623     052F  2D31               	goto	u1360
  1624     0530                     u1361:
  1625     0530  2D37               	goto	l254
  1626     0531                     u1360:
  1627     0531                     l1699:
  1628                           
  1629                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  1630     0531  1683               	bsf	3,5	;RP0=1, select bank1
  1631     0532  1303               	bcf	3,6	;RP1=0, select bank1
  1632     0533  080F               	movf	15,w	;volatile
  1633     0534  398F               	andlw	-113
  1634     0535  3860               	iorlw	96
  1635     0536  008F               	movwf	15	;volatile
  1636     0537                     l254:	
  1637                           ;oscilador.c: 16:     }
  1638                           
  1639                           
  1640                           ;oscilador.c: 17:     if (IRCF == 5){
  1641     0537  3005               	movlw	5
  1642     0538  0670               	xorwf	setupINTOSC@IRCF,w
  1643     0539  1D03               	btfss	3,2
  1644     053A  2D3C               	goto	u1371
  1645     053B  2D3D               	goto	u1370
  1646     053C                     u1371:
  1647     053C  2D43               	goto	l255
  1648     053D                     u1370:
  1649     053D                     l1701:
  1650                           
  1651                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  1652     053D  1683               	bsf	3,5	;RP0=1, select bank1
  1653     053E  1303               	bcf	3,6	;RP1=0, select bank1
  1654     053F  080F               	movf	15,w	;volatile
  1655     0540  398F               	andlw	-113
  1656     0541  3850               	iorlw	80
  1657     0542  008F               	movwf	15	;volatile
  1658     0543                     l255:	
  1659                           ;oscilador.c: 19:     }
  1660                           
  1661                           
  1662                           ;oscilador.c: 20:     if (IRCF == 4){
  1663     0543  3004               	movlw	4
  1664     0544  0670               	xorwf	setupINTOSC@IRCF,w
  1665     0545  1D03               	btfss	3,2
  1666     0546  2D48               	goto	u1381
  1667     0547  2D49               	goto	u1380
  1668     0548                     u1381:
  1669     0548  2D4F               	goto	l256
  1670     0549                     u1380:
  1671     0549                     l1703:
  1672                           
  1673                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  1674     0549  1683               	bsf	3,5	;RP0=1, select bank1
  1675     054A  1303               	bcf	3,6	;RP1=0, select bank1
  1676     054B  080F               	movf	15,w	;volatile
  1677     054C  398F               	andlw	-113
  1678     054D  3840               	iorlw	64
  1679     054E  008F               	movwf	15	;volatile
  1680     054F                     l256:	
  1681                           ;oscilador.c: 22:     }
  1682                           
  1683                           
  1684                           ;oscilador.c: 23:     if (IRCF == 3){
  1685     054F  3003               	movlw	3
  1686     0550  0670               	xorwf	setupINTOSC@IRCF,w
  1687     0551  1D03               	btfss	3,2
  1688     0552  2D54               	goto	u1391
  1689     0553  2D55               	goto	u1390
  1690     0554                     u1391:
  1691     0554  2D5B               	goto	l257
  1692     0555                     u1390:
  1693     0555                     l1705:
  1694                           
  1695                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  1696     0555  1683               	bsf	3,5	;RP0=1, select bank1
  1697     0556  1303               	bcf	3,6	;RP1=0, select bank1
  1698     0557  080F               	movf	15,w	;volatile
  1699     0558  398F               	andlw	-113
  1700     0559  3830               	iorlw	48
  1701     055A  008F               	movwf	15	;volatile
  1702     055B                     l257:	
  1703                           ;oscilador.c: 25:     }
  1704                           
  1705                           
  1706                           ;oscilador.c: 26:     if (IRCF == 2){
  1707     055B  3002               	movlw	2
  1708     055C  0670               	xorwf	setupINTOSC@IRCF,w
  1709     055D  1D03               	btfss	3,2
  1710     055E  2D60               	goto	u1401
  1711     055F  2D61               	goto	u1400
  1712     0560                     u1401:
  1713     0560  2D67               	goto	l258
  1714     0561                     u1400:
  1715     0561                     l1707:
  1716                           
  1717                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  1718     0561  1683               	bsf	3,5	;RP0=1, select bank1
  1719     0562  1303               	bcf	3,6	;RP1=0, select bank1
  1720     0563  080F               	movf	15,w	;volatile
  1721     0564  398F               	andlw	-113
  1722     0565  3820               	iorlw	32
  1723     0566  008F               	movwf	15	;volatile
  1724     0567                     l258:	
  1725                           ;oscilador.c: 28:     }
  1726                           
  1727                           
  1728                           ;oscilador.c: 29:     if (IRCF == 1){
  1729     0567  0370               	decf	setupINTOSC@IRCF,w
  1730     0568  1D03               	btfss	3,2
  1731     0569  2D6B               	goto	u1411
  1732     056A  2D6C               	goto	u1410
  1733     056B                     u1411:
  1734     056B  2D72               	goto	l259
  1735     056C                     u1410:
  1736     056C                     l1709:
  1737                           
  1738                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  1739     056C  1683               	bsf	3,5	;RP0=1, select bank1
  1740     056D  1303               	bcf	3,6	;RP1=0, select bank1
  1741     056E  080F               	movf	15,w	;volatile
  1742     056F  398F               	andlw	-113
  1743     0570  3810               	iorlw	16
  1744     0571  008F               	movwf	15	;volatile
  1745     0572                     l259:	
  1746                           ;oscilador.c: 31:     }
  1747                           
  1748                           
  1749                           ;oscilador.c: 32:     if (IRCF == 0){
  1750     0572  0870               	movf	setupINTOSC@IRCF,w
  1751     0573  1D03               	btfss	3,2
  1752     0574  2D76               	goto	u1421
  1753     0575  2D77               	goto	u1420
  1754     0576                     u1421:
  1755     0576  2D7B               	goto	l1713
  1756     0577                     u1420:
  1757     0577                     l1711:
  1758                           
  1759                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  1760     0577  308F               	movlw	-113
  1761     0578  1683               	bsf	3,5	;RP0=1, select bank1
  1762     0579  1303               	bcf	3,6	;RP1=0, select bank1
  1763     057A  058F               	andwf	15,f	;volatile
  1764     057B                     l1713:
  1765                           
  1766                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  1767     057B  1683               	bsf	3,5	;RP0=1, select bank1
  1768     057C  1303               	bcf	3,6	;RP1=0, select bank1
  1769     057D  140F               	bsf	15,0	;volatile
  1770     057E                     l261:
  1771     057E  0008               	return
  1772     057F                     __end_of_setupINTOSC:
  1773                           
  1774                           	psect	text2
  1775     024A                     __ptext2:	
  1776 ;; *************** function _portsetup *****************
  1777 ;; Defined at:
  1778 ;;		line 161 in file "main.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;		None
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;		None
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, status,2, status,0, pclath, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1792 ;;      Params:         0       0       0       0       0
  1793 ;;      Locals:         0       0       0       0       0
  1794 ;;      Temps:          0       0       0       0       0
  1795 ;;      Totals:         0       0       0       0       0
  1796 ;;Total ram usage:        0 bytes
  1797 ;; Hardware stack levels used: 1
  1798 ;; Hardware stack levels required when called: 2
  1799 ;; This function calls:
  1800 ;;		_I2C_Master_Init
  1801 ;; This function is called by:
  1802 ;;		_main
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806     024A                     _portsetup:	
  1807                           ;psect for function _portsetup
  1808                           
  1809     024A                     l1715:	
  1810                           ;incstack = 0
  1811                           ; Regs used in _portsetup: [wreg+status,2+status,0+pclath+cstack]
  1812                           
  1813                           
  1814                           ;main.c: 162:     ANSEL = 0;
  1815     024A  1683               	bsf	3,5	;RP0=1, select bank3
  1816     024B  1703               	bsf	3,6	;RP1=1, select bank3
  1817     024C  0188               	clrf	8	;volatile
  1818                           
  1819                           ;main.c: 163:     ANSELH = 0;
  1820     024D  0189               	clrf	9	;volatile
  1821                           
  1822                           ;main.c: 164:     TRISA = 0;
  1823     024E  1683               	bsf	3,5	;RP0=1, select bank1
  1824     024F  1303               	bcf	3,6	;RP1=0, select bank1
  1825     0250  0185               	clrf	5	;volatile
  1826                           
  1827                           ;main.c: 165:     PORTA = 0;
  1828     0251  1283               	bcf	3,5	;RP0=0, select bank0
  1829     0252  1303               	bcf	3,6	;RP1=0, select bank0
  1830     0253  0185               	clrf	5	;volatile
  1831                           
  1832                           ;main.c: 166:     TRISD = 0;
  1833     0254  1683               	bsf	3,5	;RP0=1, select bank1
  1834     0255  1303               	bcf	3,6	;RP1=0, select bank1
  1835     0256  0188               	clrf	8	;volatile
  1836                           
  1837                           ;main.c: 167:     PORTD = 0;
  1838     0257  1283               	bcf	3,5	;RP0=0, select bank0
  1839     0258  1303               	bcf	3,6	;RP1=0, select bank0
  1840     0259  0188               	clrf	8	;volatile
  1841     025A                     l1717:
  1842                           
  1843                           ;main.c: 170:     TRISB = 0b11111000;
  1844     025A  30F8               	movlw	248
  1845     025B  1683               	bsf	3,5	;RP0=1, select bank1
  1846     025C  1303               	bcf	3,6	;RP1=0, select bank1
  1847     025D  0086               	movwf	6	;volatile
  1848     025E                     l1719:
  1849                           
  1850                           ;main.c: 171:     PORTB = 0b11111000;
  1851     025E  30F8               	movlw	248
  1852     025F  1283               	bcf	3,5	;RP0=0, select bank0
  1853     0260  1303               	bcf	3,6	;RP1=0, select bank0
  1854     0261  0086               	movwf	6	;volatile
  1855     0262                     l1721:
  1856                           
  1857                           ;main.c: 172:     WPUB = 0b11111000;
  1858     0262  30F8               	movlw	248
  1859     0263  1683               	bsf	3,5	;RP0=1, select bank1
  1860     0264  1303               	bcf	3,6	;RP1=0, select bank1
  1861     0265  0095               	movwf	21	;volatile
  1862     0266                     l1723:
  1863                           
  1864                           ;main.c: 173:     OPTION_REGbits.nRBPU = 0;
  1865     0266  1381               	bcf	1,7	;volatile
  1866     0267                     l1725:
  1867                           
  1868                           ;main.c: 175:     I2C_Master_Init(100000);
  1869     0267  3000               	movlw	0
  1870     0268  1283               	bcf	3,5	;RP0=0, select bank0
  1871     0269  1303               	bcf	3,6	;RP1=0, select bank0
  1872     026A  00B2               	movwf	I2C_Master_Init@c+3
  1873     026B  3001               	movlw	1
  1874     026C  00B1               	movwf	I2C_Master_Init@c+2
  1875     026D  3086               	movlw	134
  1876     026E  00B0               	movwf	I2C_Master_Init@c+1
  1877     026F  30A0               	movlw	160
  1878     0270  00AF               	movwf	I2C_Master_Init@c
  1879     0271  120A  118A  230F  120A  118A  	fcall	_I2C_Master_Init
  1880     0276                     l104:
  1881     0276  0008               	return
  1882     0277                     __end_of_portsetup:
  1883                           
  1884                           	psect	text3
  1885     030F                     __ptext3:	
  1886 ;; *************** function _I2C_Master_Init *****************
  1887 ;; Defined at:
  1888 ;;		line 16 in file "I2C.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  c               4    0[BANK0 ] const unsigned long 
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      void 
  1895 ;; Registers used:
  1896 ;;		wreg, status,2, status,0, pclath, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1902 ;;      Params:         0       4       0       0       0
  1903 ;;      Locals:         0       0       0       0       0
  1904 ;;      Temps:          0       4       0       0       0
  1905 ;;      Totals:         0       8       0       0       0
  1906 ;;Total ram usage:        8 bytes
  1907 ;; Hardware stack levels used: 1
  1908 ;; Hardware stack levels required when called: 1
  1909 ;; This function calls:
  1910 ;;		___lldiv
  1911 ;; This function is called by:
  1912 ;;		_portsetup
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916     030F                     _I2C_Master_Init:	
  1917                           ;psect for function _I2C_Master_Init
  1918                           
  1919     030F                     l1519:	
  1920                           ;incstack = 0
  1921                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1922                           
  1923                           
  1924                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1925     030F  3028               	movlw	40
  1926     0310  1283               	bcf	3,5	;RP0=0, select bank0
  1927     0311  1303               	bcf	3,6	;RP1=0, select bank0
  1928     0312  0094               	movwf	20	;volatile
  1929     0313                     l1521:
  1930                           
  1931                           ;I2C.c: 19:     SSPCON2 = 0;
  1932     0313  1683               	bsf	3,5	;RP0=1, select bank1
  1933     0314  1303               	bcf	3,6	;RP1=0, select bank1
  1934     0315  0191               	clrf	17	;volatile
  1935     0316                     l1523:
  1936                           
  1937                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1938     0316  1283               	bcf	3,5	;RP0=0, select bank0
  1939     0317  1303               	bcf	3,6	;RP1=0, select bank0
  1940     0318  082F               	movf	I2C_Master_Init@c,w
  1941     0319  00B3               	movwf	??_I2C_Master_Init
  1942     031A  0830               	movf	I2C_Master_Init@c+1,w
  1943     031B  00B4               	movwf	??_I2C_Master_Init+1
  1944     031C  0831               	movf	I2C_Master_Init@c+2,w
  1945     031D  00B5               	movwf	??_I2C_Master_Init+2
  1946     031E  0832               	movf	I2C_Master_Init@c+3,w
  1947     031F  00B6               	movwf	??_I2C_Master_Init+3
  1948     0320  3002               	movlw	2
  1949     0321                     u1185:
  1950     0321  1003               	clrc
  1951     0322  0DB3               	rlf	??_I2C_Master_Init,f
  1952     0323  0DB4               	rlf	??_I2C_Master_Init+1,f
  1953     0324  0DB5               	rlf	??_I2C_Master_Init+2,f
  1954     0325  0DB6               	rlf	??_I2C_Master_Init+3,f
  1955     0326                     u1180:
  1956     0326  3EFF               	addlw	-1
  1957     0327  1D03               	skipz
  1958     0328  2B21               	goto	u1185
  1959     0329  0836               	movf	??_I2C_Master_Init+3,w
  1960     032A  00F3               	movwf	___lldiv@divisor+3
  1961     032B  0835               	movf	??_I2C_Master_Init+2,w
  1962     032C  00F2               	movwf	___lldiv@divisor+2
  1963     032D  0834               	movf	??_I2C_Master_Init+1,w
  1964     032E  00F1               	movwf	___lldiv@divisor+1
  1965     032F  0833               	movf	??_I2C_Master_Init,w
  1966     0330  00F0               	movwf	___lldiv@divisor
  1967     0331  3000               	movlw	0
  1968     0332  00F7               	movwf	___lldiv@dividend+3
  1969     0333  307A               	movlw	122
  1970     0334  00F6               	movwf	___lldiv@dividend+2
  1971     0335  3012               	movlw	18
  1972     0336  00F5               	movwf	___lldiv@dividend+1
  1973     0337  3000               	movlw	0
  1974     0338  00F4               	movwf	___lldiv@dividend
  1975     0339  120A  118A  25E4  120A  118A  	fcall	___lldiv
  1976     033E  0870               	movf	?___lldiv,w
  1977     033F  3EFF               	addlw	255
  1978     0340  1683               	bsf	3,5	;RP0=1, select bank1
  1979     0341  1303               	bcf	3,6	;RP1=0, select bank1
  1980     0342  0093               	movwf	19	;volatile
  1981     0343                     l1525:
  1982                           
  1983                           ;I2C.c: 21:     SSPSTAT = 0;
  1984     0343  0194               	clrf	20	;volatile
  1985     0344                     l1527:
  1986                           
  1987                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1988     0344  1587               	bsf	7,3	;volatile
  1989     0345                     l1529:
  1990                           
  1991                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1992     0345  1607               	bsf	7,4	;volatile
  1993     0346                     l146:
  1994     0346  0008               	return
  1995     0347                     __end_of_I2C_Master_Init:
  1996                           
  1997                           	psect	text4
  1998     05E4                     __ptext4:	
  1999 ;; *************** function ___lldiv *****************
  2000 ;; Defined at:
  2001 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  divisor         4    0[COMMON] unsigned long 
  2004 ;;  dividend        4    4[COMMON] unsigned long 
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  quotient        4    9[COMMON] unsigned long 
  2007 ;;  counter         1   13[COMMON] unsigned char 
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  4    0[COMMON] unsigned long 
  2010 ;; Registers used:
  2011 ;;		wreg, status,2, status,0
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2017 ;;      Params:         8       0       0       0       0
  2018 ;;      Locals:         5       0       0       0       0
  2019 ;;      Temps:          1       0       0       0       0
  2020 ;;      Totals:        14       0       0       0       0
  2021 ;;Total ram usage:       14 bytes
  2022 ;; Hardware stack levels used: 1
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		_I2C_Master_Init
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030     05E4                     ___lldiv:	
  2031                           ;psect for function ___lldiv
  2032                           
  2033     05E4                     l1393:	
  2034                           ;incstack = 0
  2035                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2036                           
  2037     05E4  3000               	movlw	0
  2038     05E5  00FC               	movwf	___lldiv@quotient+3
  2039     05E6  3000               	movlw	0
  2040     05E7  00FB               	movwf	___lldiv@quotient+2
  2041     05E8  3000               	movlw	0
  2042     05E9  00FA               	movwf	___lldiv@quotient+1
  2043     05EA  3000               	movlw	0
  2044     05EB  00F9               	movwf	___lldiv@quotient
  2045     05EC  0873               	movf	___lldiv@divisor+3,w
  2046     05ED  0472               	iorwf	___lldiv@divisor+2,w
  2047     05EE  0471               	iorwf	___lldiv@divisor+1,w
  2048     05EF  0470               	iorwf	___lldiv@divisor,w
  2049     05F0  1903               	skipnz
  2050     05F1  2DF3               	goto	u881
  2051     05F2  2DF4               	goto	u880
  2052     05F3                     u881:
  2053     05F3  2E41               	goto	l1413
  2054     05F4                     u880:
  2055     05F4                     l1395:
  2056     05F4  01FD               	clrf	___lldiv@counter
  2057     05F5  0AFD               	incf	___lldiv@counter,f
  2058     05F6  2E04               	goto	l1399
  2059     05F7                     l1397:
  2060     05F7  3001               	movlw	1
  2061     05F8  00F8               	movwf	??___lldiv
  2062     05F9                     u895:
  2063     05F9  1003               	clrc
  2064     05FA  0DF0               	rlf	___lldiv@divisor,f
  2065     05FB  0DF1               	rlf	___lldiv@divisor+1,f
  2066     05FC  0DF2               	rlf	___lldiv@divisor+2,f
  2067     05FD  0DF3               	rlf	___lldiv@divisor+3,f
  2068     05FE  0BF8               	decfsz	??___lldiv,f
  2069     05FF  2DF9               	goto	u895
  2070     0600  3001               	movlw	1
  2071     0601  00F8               	movwf	??___lldiv
  2072     0602  0878               	movf	??___lldiv,w
  2073     0603  07FD               	addwf	___lldiv@counter,f
  2074     0604                     l1399:
  2075     0604  1FF3               	btfss	___lldiv@divisor+3,7
  2076     0605  2E07               	goto	u901
  2077     0606  2E08               	goto	u900
  2078     0607                     u901:
  2079     0607  2DF7               	goto	l1397
  2080     0608                     u900:
  2081     0608                     l1401:
  2082     0608  3001               	movlw	1
  2083     0609  00F8               	movwf	??___lldiv
  2084     060A                     u915:
  2085     060A  1003               	clrc
  2086     060B  0DF9               	rlf	___lldiv@quotient,f
  2087     060C  0DFA               	rlf	___lldiv@quotient+1,f
  2088     060D  0DFB               	rlf	___lldiv@quotient+2,f
  2089     060E  0DFC               	rlf	___lldiv@quotient+3,f
  2090     060F  0BF8               	decfsz	??___lldiv,f
  2091     0610  2E0A               	goto	u915
  2092     0611                     l1403:
  2093     0611  0873               	movf	___lldiv@divisor+3,w
  2094     0612  0277               	subwf	___lldiv@dividend+3,w
  2095     0613  1D03               	skipz
  2096     0614  2E1F               	goto	u925
  2097     0615  0872               	movf	___lldiv@divisor+2,w
  2098     0616  0276               	subwf	___lldiv@dividend+2,w
  2099     0617  1D03               	skipz
  2100     0618  2E1F               	goto	u925
  2101     0619  0871               	movf	___lldiv@divisor+1,w
  2102     061A  0275               	subwf	___lldiv@dividend+1,w
  2103     061B  1D03               	skipz
  2104     061C  2E1F               	goto	u925
  2105     061D  0870               	movf	___lldiv@divisor,w
  2106     061E  0274               	subwf	___lldiv@dividend,w
  2107     061F                     u925:
  2108     061F  1C03               	skipc
  2109     0620  2E22               	goto	u921
  2110     0621  2E23               	goto	u920
  2111     0622                     u921:
  2112     0622  2E32               	goto	l1409
  2113     0623                     u920:
  2114     0623                     l1405:
  2115     0623  0870               	movf	___lldiv@divisor,w
  2116     0624  02F4               	subwf	___lldiv@dividend,f
  2117     0625  0871               	movf	___lldiv@divisor+1,w
  2118     0626  1C03               	skipc
  2119     0627  0F71               	incfsz	___lldiv@divisor+1,w
  2120     0628  02F5               	subwf	___lldiv@dividend+1,f
  2121     0629  0872               	movf	___lldiv@divisor+2,w
  2122     062A  1C03               	skipc
  2123     062B  0F72               	incfsz	___lldiv@divisor+2,w
  2124     062C  02F6               	subwf	___lldiv@dividend+2,f
  2125     062D  0873               	movf	___lldiv@divisor+3,w
  2126     062E  1C03               	skipc
  2127     062F  0F73               	incfsz	___lldiv@divisor+3,w
  2128     0630  02F7               	subwf	___lldiv@dividend+3,f
  2129     0631                     l1407:
  2130     0631  1479               	bsf	___lldiv@quotient,0
  2131     0632                     l1409:
  2132     0632  3001               	movlw	1
  2133     0633                     u935:
  2134     0633  1003               	clrc
  2135     0634  0CF3               	rrf	___lldiv@divisor+3,f
  2136     0635  0CF2               	rrf	___lldiv@divisor+2,f
  2137     0636  0CF1               	rrf	___lldiv@divisor+1,f
  2138     0637  0CF0               	rrf	___lldiv@divisor,f
  2139     0638  3EFF               	addlw	-1
  2140     0639  1D03               	skipz
  2141     063A  2E33               	goto	u935
  2142     063B                     l1411:
  2143     063B  3001               	movlw	1
  2144     063C  02FD               	subwf	___lldiv@counter,f
  2145     063D  1D03               	btfss	3,2
  2146     063E  2E40               	goto	u941
  2147     063F  2E41               	goto	u940
  2148     0640                     u941:
  2149     0640  2E08               	goto	l1401
  2150     0641                     u940:
  2151     0641                     l1413:
  2152     0641  087C               	movf	___lldiv@quotient+3,w
  2153     0642  00F3               	movwf	?___lldiv+3
  2154     0643  087B               	movf	___lldiv@quotient+2,w
  2155     0644  00F2               	movwf	?___lldiv+2
  2156     0645  087A               	movf	___lldiv@quotient+1,w
  2157     0646  00F1               	movwf	?___lldiv+1
  2158     0647  0879               	movf	___lldiv@quotient,w
  2159     0648  00F0               	movwf	?___lldiv
  2160     0649                     l383:
  2161     0649  0008               	return
  2162     064A                     __end_of___lldiv:
  2163                           
  2164                           	psect	text5
  2165     0347                     __ptext5:	
  2166 ;; *************** function _leer_x *****************
  2167 ;; Defined at:
  2168 ;;		line 24 in file "DS3231.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  address         1    wreg     unsigned char 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  address         1   11[COMMON] unsigned char 
  2173 ;;  valor           1   12[COMMON] unsigned char 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      unsigned char 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0, pclath, cstack
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2183 ;;      Params:         0       0       0       0       0
  2184 ;;      Locals:         2       0       0       0       0
  2185 ;;      Temps:          2       0       0       0       0
  2186 ;;      Totals:         4       0       0       0       0
  2187 ;;Total ram usage:        4 bytes
  2188 ;; Hardware stack levels used: 1
  2189 ;; Hardware stack levels required when called: 2
  2190 ;; This function calls:
  2191 ;;		_I2C_Master_Read
  2192 ;;		_I2C_Master_RepeatedStart
  2193 ;;		_I2C_Master_Start
  2194 ;;		_I2C_Master_Stop
  2195 ;;		_I2C_Master_Write
  2196 ;;		_convertir
  2197 ;; This function is called by:
  2198 ;;		_main
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202     0347                     _leer_x:	
  2203                           ;psect for function _leer_x
  2204                           
  2205                           
  2206                           ;incstack = 0
  2207                           ; Regs used in _leer_x: [wreg+status,2+status,0+pclath+cstack]
  2208                           ;leer_x@address stored from wreg
  2209     0347  00FB               	movwf	leer_x@address
  2210     0348                     l1749:
  2211                           
  2212                           ;DS3231.c: 25:     uint8_t valor;;DS3231.c: 26:     I2C_Master_Start();
  2213     0348  120A  118A  217A  120A  118A  	fcall	_I2C_Master_Start
  2214                           
  2215                           ;DS3231.c: 27:     I2C_Master_Write(0xD0);
  2216     034D  30D0               	movlw	208
  2217     034E  00F0               	movwf	I2C_Master_Write@d
  2218     034F  3000               	movlw	0
  2219     0350  00F1               	movwf	I2C_Master_Write@d+1
  2220     0351  120A  118A  2195  120A  118A  	fcall	_I2C_Master_Write
  2221                           
  2222                           ;DS3231.c: 28:     I2C_Master_Write(address);
  2223     0356  087B               	movf	leer_x@address,w
  2224     0357  00F9               	movwf	??_leer_x
  2225     0358  01FA               	clrf	??_leer_x+1
  2226     0359  0879               	movf	??_leer_x,w
  2227     035A  00F0               	movwf	I2C_Master_Write@d
  2228     035B  087A               	movf	??_leer_x+1,w
  2229     035C  00F1               	movwf	I2C_Master_Write@d+1
  2230     035D  120A  118A  2195  120A  118A  	fcall	_I2C_Master_Write
  2231                           
  2232                           ;DS3231.c: 29:     I2C_Master_RepeatedStart();
  2233     0362  120A  118A  218C  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2234                           
  2235                           ;DS3231.c: 30:     I2C_Master_Write(0xD1);
  2236     0367  30D1               	movlw	209
  2237     0368  00F0               	movwf	I2C_Master_Write@d
  2238     0369  3000               	movlw	0
  2239     036A  00F1               	movwf	I2C_Master_Write@d+1
  2240     036B  120A  118A  2195  120A  118A  	fcall	_I2C_Master_Write
  2241                           
  2242                           ;DS3231.c: 31:     valor = I2C_Master_Read(0);
  2243     0370  3000               	movlw	0
  2244     0371  00F0               	movwf	I2C_Master_Read@a
  2245     0372  00F1               	movwf	I2C_Master_Read@a+1
  2246     0373  120A  118A  2277  120A  118A  	fcall	_I2C_Master_Read
  2247     0378  0870               	movf	?_I2C_Master_Read,w
  2248     0379  00FC               	movwf	leer_x@valor
  2249                           
  2250                           ;DS3231.c: 32:     I2C_Master_Stop();
  2251     037A  120A  118A  2183  120A  118A  	fcall	_I2C_Master_Stop
  2252                           
  2253                           ;DS3231.c: 33:     valor = convertir(valor);
  2254     037F  087C               	movf	leer_x@valor,w
  2255     0380  120A  118A  21E8  120A  118A  	fcall	_convertir
  2256     0385  00FC               	movwf	leer_x@valor
  2257     0386                     l1751:
  2258                           
  2259                           ;DS3231.c: 35:     return valor;
  2260     0386  087C               	movf	leer_x@valor,w
  2261     0387                     l126:
  2262     0387  0008               	return
  2263     0388                     __end_of_leer_x:
  2264                           
  2265                           	psect	text6
  2266     01E8                     __ptext6:	
  2267 ;; *************** function _convertir *****************
  2268 ;; Defined at:
  2269 ;;		line 5 in file "DS3231.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  valor           1    wreg     unsigned char 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  valor           1    8[COMMON] unsigned char 
  2274 ;;  conversion      1    7[COMMON] unsigned char 
  2275 ;;  decena          1    6[COMMON] unsigned char 
  2276 ;;  unidad          1    5[COMMON] unsigned char 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      unsigned char 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0, pclath, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2286 ;;      Params:         0       0       0       0       0
  2287 ;;      Locals:         4       0       0       0       0
  2288 ;;      Temps:          1       0       0       0       0
  2289 ;;      Totals:         5       0       0       0       0
  2290 ;;Total ram usage:        5 bytes
  2291 ;; Hardware stack levels used: 1
  2292 ;; Hardware stack levels required when called: 1
  2293 ;; This function calls:
  2294 ;;		___bmul
  2295 ;; This function is called by:
  2296 ;;		_leer_x
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300     01E8                     _convertir:	
  2301                           ;psect for function _convertir
  2302                           
  2303                           
  2304                           ;incstack = 0
  2305                           ; Regs used in _convertir: [wreg+status,2+status,0+pclath+cstack]
  2306                           ;convertir@valor stored from wreg
  2307     01E8  00F8               	movwf	convertir@valor
  2308     01E9                     l1653:
  2309                           
  2310                           ;DS3231.c: 6:     uint8_t unidad;;DS3231.c: 7:     uint8_t decena;;DS3231.c: 8:     uint
      +                          8_t conversion;;DS3231.c: 9:     unidad = valor & 0x0F;
  2311     01E9  0878               	movf	convertir@valor,w
  2312     01EA  390F               	andlw	15
  2313     01EB  00F5               	movwf	convertir@unidad
  2314     01EC                     l1655:
  2315                           
  2316                           ;DS3231.c: 10:     decena = ((valor & 0xF0) >> 4);
  2317     01EC  0878               	movf	convertir@valor,w
  2318     01ED  00F4               	movwf	??_convertir
  2319     01EE  3004               	movlw	4
  2320     01EF                     u1335:
  2321     01EF  1003               	clrc
  2322     01F0  0CF4               	rrf	??_convertir,f
  2323     01F1  3EFF               	addlw	-1
  2324     01F2  1D03               	skipz
  2325     01F3  29EF               	goto	u1335
  2326     01F4  0874               	movf	??_convertir,w
  2327     01F5  390F               	andlw	15
  2328     01F6  00F6               	movwf	convertir@decena
  2329     01F7                     l1657:
  2330                           
  2331                           ;DS3231.c: 11:     conversion = unidad+(decena*10);
  2332     01F7  300A               	movlw	10
  2333     01F8  00F0               	movwf	___bmul@multiplicand
  2334     01F9  0876               	movf	convertir@decena,w
  2335     01FA  120A  118A  21B9  120A  118A  	fcall	___bmul
  2336     01FF  0775               	addwf	convertir@unidad,w
  2337     0200  00F7               	movwf	convertir@conversion
  2338     0201                     l1659:
  2339                           
  2340                           ;DS3231.c: 12:     return conversion;
  2341     0201  0877               	movf	convertir@conversion,w
  2342     0202                     l120:
  2343     0202  0008               	return
  2344     0203                     __end_of_convertir:
  2345                           
  2346                           	psect	text7
  2347     01B9                     __ptext7:	
  2348 ;; *************** function ___bmul *****************
  2349 ;; Defined at:
  2350 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  multiplier      1    wreg     unsigned char 
  2353 ;;  multiplicand    1    0[COMMON] unsigned char 
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  multiplier      1    3[COMMON] unsigned char 
  2356 ;;  product         1    2[COMMON] unsigned char 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      unsigned char 
  2359 ;; Registers used:
  2360 ;;		wreg, status,2, status,0
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2366 ;;      Params:         1       0       0       0       0
  2367 ;;      Locals:         2       0       0       0       0
  2368 ;;      Temps:          1       0       0       0       0
  2369 ;;      Totals:         4       0       0       0       0
  2370 ;;Total ram usage:        4 bytes
  2371 ;; Hardware stack levels used: 1
  2372 ;; This function calls:
  2373 ;;		Nothing
  2374 ;; This function is called by:
  2375 ;;		_convertir
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379     01B9                     ___bmul:	
  2380                           ;psect for function ___bmul
  2381                           
  2382                           
  2383                           ;incstack = 0
  2384                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2385                           ;___bmul@multiplier stored from wreg
  2386     01B9  00F3               	movwf	___bmul@multiplier
  2387     01BA                     l1379:
  2388     01BA  01F2               	clrf	___bmul@product
  2389     01BB                     l1381:
  2390     01BB  1C73               	btfss	___bmul@multiplier,0
  2391     01BC  29BE               	goto	u861
  2392     01BD  29BF               	goto	u860
  2393     01BE                     u861:
  2394     01BE  29C3               	goto	l1385
  2395     01BF                     u860:
  2396     01BF                     l1383:
  2397     01BF  0870               	movf	___bmul@multiplicand,w
  2398     01C0  00F1               	movwf	??___bmul
  2399     01C1  0871               	movf	??___bmul,w
  2400     01C2  07F2               	addwf	___bmul@product,f
  2401     01C3                     l1385:
  2402     01C3  1003               	clrc
  2403     01C4  0DF0               	rlf	___bmul@multiplicand,f
  2404     01C5                     l1387:
  2405     01C5  1003               	clrc
  2406     01C6  0CF3               	rrf	___bmul@multiplier,f
  2407     01C7  0873               	movf	___bmul@multiplier,w
  2408     01C8  1D03               	btfss	3,2
  2409     01C9  29CB               	goto	u871
  2410     01CA  29CC               	goto	u870
  2411     01CB                     u871:
  2412     01CB  29BB               	goto	l1381
  2413     01CC                     u870:
  2414     01CC                     l1389:
  2415     01CC  0872               	movf	___bmul@product,w
  2416     01CD                     l373:
  2417     01CD  0008               	return
  2418     01CE                     __end_of___bmul:
  2419                           
  2420                           	psect	text8
  2421     018C                     __ptext8:	
  2422 ;; *************** function _I2C_Master_RepeatedStart *****************
  2423 ;; Defined at:
  2424 ;;		line 47 in file "I2C.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;		None
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;		None
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0, pclath, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2438 ;;      Params:         0       0       0       0       0
  2439 ;;      Locals:         0       0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0
  2441 ;;      Totals:         0       0       0       0       0
  2442 ;;Total ram usage:        0 bytes
  2443 ;; Hardware stack levels used: 1
  2444 ;; Hardware stack levels required when called: 1
  2445 ;; This function calls:
  2446 ;;		_I2C_Master_Wait
  2447 ;; This function is called by:
  2448 ;;		_leer_x
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452     018C                     _I2C_Master_RepeatedStart:	
  2453                           ;psect for function _I2C_Master_RepeatedStart
  2454                           
  2455     018C                     l1671:	
  2456                           ;incstack = 0
  2457                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2458                           
  2459                           
  2460                           ;I2C.c: 49:     I2C_Master_Wait();
  2461     018C  120A  118A  21AC  120A  118A  	fcall	_I2C_Master_Wait
  2462     0191                     l1673:
  2463                           
  2464                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2465     0191  1683               	bsf	3,5	;RP0=1, select bank1
  2466     0192  1303               	bcf	3,6	;RP1=0, select bank1
  2467     0193  1491               	bsf	17,1	;volatile
  2468     0194                     l158:
  2469     0194  0008               	return
  2470     0195                     __end_of_I2C_Master_RepeatedStart:
  2471                           
  2472                           	psect	text9
  2473     0277                     __ptext9:	
  2474 ;; *************** function _I2C_Master_Read *****************
  2475 ;; Defined at:
  2476 ;;		line 74 in file "I2C.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;  a               2    0[COMMON] unsigned short 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  temp            2    4[COMMON] unsigned short 
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  2    0[COMMON] unsigned short 
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0, pclath, cstack
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2490 ;;      Params:         2       0       0       0       0
  2491 ;;      Locals:         2       0       0       0       0
  2492 ;;      Temps:          2       0       0       0       0
  2493 ;;      Totals:         6       0       0       0       0
  2494 ;;Total ram usage:        6 bytes
  2495 ;; Hardware stack levels used: 1
  2496 ;; Hardware stack levels required when called: 1
  2497 ;; This function calls:
  2498 ;;		_I2C_Master_Wait
  2499 ;; This function is called by:
  2500 ;;		_leer_x
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504     0277                     _I2C_Master_Read:	
  2505                           ;psect for function _I2C_Master_Read
  2506                           
  2507     0277                     l1675:	
  2508                           ;incstack = 0
  2509                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2510                           
  2511                           
  2512                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2513     0277  120A  118A  21AC  120A  118A  	fcall	_I2C_Master_Wait
  2514     027C                     l1677:
  2515                           
  2516                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2517     027C  1683               	bsf	3,5	;RP0=1, select bank1
  2518     027D  1303               	bcf	3,6	;RP1=0, select bank1
  2519     027E  1591               	bsf	17,3	;volatile
  2520                           
  2521                           ;I2C.c: 79:     I2C_Master_Wait();
  2522     027F  120A  118A  21AC  120A  118A  	fcall	_I2C_Master_Wait
  2523     0284                     l1679:
  2524                           
  2525                           ;I2C.c: 80:     temp = SSPBUF;
  2526     0284  1283               	bcf	3,5	;RP0=0, select bank0
  2527     0285  1303               	bcf	3,6	;RP1=0, select bank0
  2528     0286  0813               	movf	19,w	;volatile
  2529     0287  00F2               	movwf	??_I2C_Master_Read
  2530     0288  01F3               	clrf	??_I2C_Master_Read+1
  2531     0289  0872               	movf	??_I2C_Master_Read,w
  2532     028A  00F4               	movwf	I2C_Master_Read@temp
  2533     028B  0873               	movf	??_I2C_Master_Read+1,w
  2534     028C  00F5               	movwf	I2C_Master_Read@temp+1
  2535     028D                     l1681:
  2536                           
  2537                           ;I2C.c: 81:     I2C_Master_Wait();
  2538     028D  120A  118A  21AC  120A  118A  	fcall	_I2C_Master_Wait
  2539     0292                     l1683:
  2540                           
  2541                           ;I2C.c: 82:     if(a == 1){
  2542     0292  0370               	decf	I2C_Master_Read@a,w
  2543     0293  0471               	iorwf	I2C_Master_Read@a+1,w
  2544     0294  1D03               	btfss	3,2
  2545     0295  2A97               	goto	u1341
  2546     0296  2A98               	goto	u1340
  2547     0297                     u1341:
  2548     0297  2A9C               	goto	l167
  2549     0298                     u1340:
  2550     0298                     l1685:
  2551                           
  2552                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2553     0298  1683               	bsf	3,5	;RP0=1, select bank1
  2554     0299  1303               	bcf	3,6	;RP1=0, select bank1
  2555     029A  1291               	bcf	17,5	;volatile
  2556                           
  2557                           ;I2C.c: 84:     }else{
  2558     029B  2A9F               	goto	l168
  2559     029C                     l167:
  2560                           
  2561                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2562     029C  1683               	bsf	3,5	;RP0=1, select bank1
  2563     029D  1303               	bcf	3,6	;RP1=0, select bank1
  2564     029E  1691               	bsf	17,5	;volatile
  2565     029F                     l168:	
  2566                           ;I2C.c: 86:     }
  2567                           
  2568                           
  2569                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2570     029F  1611               	bsf	17,4	;volatile
  2571     02A0                     l1687:
  2572                           
  2573                           ;I2C.c: 88:     return temp;
  2574     02A0  0875               	movf	I2C_Master_Read@temp+1,w
  2575     02A1  00F1               	movwf	?_I2C_Master_Read+1
  2576     02A2  0874               	movf	I2C_Master_Read@temp,w
  2577     02A3  00F0               	movwf	?_I2C_Master_Read
  2578     02A4                     l169:
  2579     02A4  0008               	return
  2580     02A5                     __end_of_I2C_Master_Read:
  2581                           
  2582                           	psect	text10
  2583     02DA                     __ptext10:	
  2584 ;; *************** function _enviar_x *****************
  2585 ;; Defined at:
  2586 ;;		line 38 in file "DS3231.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  val1            1    wreg     unsigned char 
  2589 ;;  val2            1    2[COMMON] unsigned char 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  val1            1    5[COMMON] unsigned char 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0, pclath, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2601 ;;      Params:         1       0       0       0       0
  2602 ;;      Locals:         1       0       0       0       0
  2603 ;;      Temps:          2       0       0       0       0
  2604 ;;      Totals:         4       0       0       0       0
  2605 ;;Total ram usage:        4 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; Hardware stack levels required when called: 2
  2608 ;; This function calls:
  2609 ;;		_I2C_Master_Start
  2610 ;;		_I2C_Master_Stop
  2611 ;;		_I2C_Master_Write
  2612 ;; This function is called by:
  2613 ;;		_main
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617     02DA                     _enviar_x:	
  2618                           ;psect for function _enviar_x
  2619                           
  2620                           
  2621                           ;incstack = 0
  2622                           ; Regs used in _enviar_x: [wreg+status,2+status,0+pclath+cstack]
  2623                           ;enviar_x@val1 stored from wreg
  2624     02DA  00F5               	movwf	enviar_x@val1
  2625     02DB                     l1747:
  2626                           
  2627                           ;DS3231.c: 39:     I2C_Master_Start();
  2628     02DB  120A  118A  217A  120A  118A  	fcall	_I2C_Master_Start
  2629                           
  2630                           ;DS3231.c: 40:     I2C_Master_Write(0xD0);
  2631     02E0  30D0               	movlw	208
  2632     02E1  00F0               	movwf	I2C_Master_Write@d
  2633     02E2  3000               	movlw	0
  2634     02E3  00F1               	movwf	I2C_Master_Write@d+1
  2635     02E4  120A  118A  2195  120A  118A  	fcall	_I2C_Master_Write
  2636                           
  2637                           ;DS3231.c: 41:     I2C_Master_Write(0);
  2638     02E9  3000               	movlw	0
  2639     02EA  00F0               	movwf	I2C_Master_Write@d
  2640     02EB  00F1               	movwf	I2C_Master_Write@d+1
  2641     02EC  120A  118A  2195  120A  118A  	fcall	_I2C_Master_Write
  2642                           
  2643                           ;DS3231.c: 42:     I2C_Master_Write(val1);
  2644     02F1  0875               	movf	enviar_x@val1,w
  2645     02F2  00F3               	movwf	??_enviar_x
  2646     02F3  01F4               	clrf	??_enviar_x+1
  2647     02F4  0873               	movf	??_enviar_x,w
  2648     02F5  00F0               	movwf	I2C_Master_Write@d
  2649     02F6  0874               	movf	??_enviar_x+1,w
  2650     02F7  00F1               	movwf	I2C_Master_Write@d+1
  2651     02F8  120A  118A  2195  120A  118A  	fcall	_I2C_Master_Write
  2652                           
  2653                           ;DS3231.c: 43:     I2C_Master_Write(val2);
  2654     02FD  0872               	movf	enviar_x@val2,w
  2655     02FE  00F3               	movwf	??_enviar_x
  2656     02FF  01F4               	clrf	??_enviar_x+1
  2657     0300  0873               	movf	??_enviar_x,w
  2658     0301  00F0               	movwf	I2C_Master_Write@d
  2659     0302  0874               	movf	??_enviar_x+1,w
  2660     0303  00F1               	movwf	I2C_Master_Write@d+1
  2661     0304  120A  118A  2195  120A  118A  	fcall	_I2C_Master_Write
  2662                           
  2663                           ;DS3231.c: 44:     I2C_Master_Stop();
  2664     0309  120A  118A  2183  120A  118A  	fcall	_I2C_Master_Stop
  2665     030E                     l129:
  2666     030E  0008               	return
  2667     030F                     __end_of_enviar_x:
  2668                           
  2669                           	psect	text11
  2670     0195                     __ptext11:	
  2671 ;; *************** function _I2C_Master_Write *****************
  2672 ;; Defined at:
  2673 ;;		line 65 in file "I2C.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;  d               2    0[COMMON] unsigned int 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;		None
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      void 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0, pclath, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2687 ;;      Params:         2       0       0       0       0
  2688 ;;      Locals:         0       0       0       0       0
  2689 ;;      Temps:          0       0       0       0       0
  2690 ;;      Totals:         2       0       0       0       0
  2691 ;;Total ram usage:        2 bytes
  2692 ;; Hardware stack levels used: 1
  2693 ;; Hardware stack levels required when called: 1
  2694 ;; This function calls:
  2695 ;;		_I2C_Master_Wait
  2696 ;; This function is called by:
  2697 ;;		_leer_x
  2698 ;;		_enviar_x
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702     0195                     _I2C_Master_Write:	
  2703                           ;psect for function _I2C_Master_Write
  2704                           
  2705     0195                     l1667:	
  2706                           ;incstack = 0
  2707                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2708                           
  2709                           
  2710                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2711     0195  120A  118A  21AC  120A  118A  	fcall	_I2C_Master_Wait
  2712     019A                     l1669:
  2713                           
  2714                           ;I2C.c: 68:     SSPBUF = d;
  2715     019A  0870               	movf	I2C_Master_Write@d,w
  2716     019B  1283               	bcf	3,5	;RP0=0, select bank0
  2717     019C  1303               	bcf	3,6	;RP1=0, select bank0
  2718     019D  0093               	movwf	19	;volatile
  2719     019E                     l164:
  2720     019E  0008               	return
  2721     019F                     __end_of_I2C_Master_Write:
  2722                           
  2723                           	psect	text12
  2724     0183                     __ptext12:	
  2725 ;; *************** function _I2C_Master_Stop *****************
  2726 ;; Defined at:
  2727 ;;		line 55 in file "I2C.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;		None
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;		None
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      void 
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0, pclath, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2741 ;;      Params:         0       0       0       0       0
  2742 ;;      Locals:         0       0       0       0       0
  2743 ;;      Temps:          0       0       0       0       0
  2744 ;;      Totals:         0       0       0       0       0
  2745 ;;Total ram usage:        0 bytes
  2746 ;; Hardware stack levels used: 1
  2747 ;; Hardware stack levels required when called: 1
  2748 ;; This function calls:
  2749 ;;		_I2C_Master_Wait
  2750 ;; This function is called by:
  2751 ;;		_leer_x
  2752 ;;		_enviar_x
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756     0183                     _I2C_Master_Stop:	
  2757                           ;psect for function _I2C_Master_Stop
  2758                           
  2759     0183                     l1691:	
  2760                           ;incstack = 0
  2761                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2762                           
  2763                           
  2764                           ;I2C.c: 57:     I2C_Master_Wait();
  2765     0183  120A  118A  21AC  120A  118A  	fcall	_I2C_Master_Wait
  2766     0188                     l1693:
  2767                           
  2768                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2769     0188  1683               	bsf	3,5	;RP0=1, select bank1
  2770     0189  1303               	bcf	3,6	;RP1=0, select bank1
  2771     018A  1511               	bsf	17,2	;volatile
  2772     018B                     l161:
  2773     018B  0008               	return
  2774     018C                     __end_of_I2C_Master_Stop:
  2775                           
  2776                           	psect	text13
  2777     017A                     __ptext13:	
  2778 ;; *************** function _I2C_Master_Start *****************
  2779 ;; Defined at:
  2780 ;;		line 39 in file "I2C.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;		None
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;		None
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		wreg, status,2, status,0, pclath, cstack
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2794 ;;      Params:         0       0       0       0       0
  2795 ;;      Locals:         0       0       0       0       0
  2796 ;;      Temps:          0       0       0       0       0
  2797 ;;      Totals:         0       0       0       0       0
  2798 ;;Total ram usage:        0 bytes
  2799 ;; Hardware stack levels used: 1
  2800 ;; Hardware stack levels required when called: 1
  2801 ;; This function calls:
  2802 ;;		_I2C_Master_Wait
  2803 ;; This function is called by:
  2804 ;;		_leer_x
  2805 ;;		_enviar_x
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809     017A                     _I2C_Master_Start:	
  2810                           ;psect for function _I2C_Master_Start
  2811                           
  2812     017A                     l1663:	
  2813                           ;incstack = 0
  2814                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2815                           
  2816                           
  2817                           ;I2C.c: 41:     I2C_Master_Wait();
  2818     017A  120A  118A  21AC  120A  118A  	fcall	_I2C_Master_Wait
  2819     017F                     l1665:
  2820                           
  2821                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2822     017F  1683               	bsf	3,5	;RP0=1, select bank1
  2823     0180  1303               	bcf	3,6	;RP1=0, select bank1
  2824     0181  1411               	bsf	17,0	;volatile
  2825     0182                     l155:
  2826     0182  0008               	return
  2827     0183                     __end_of_I2C_Master_Start:
  2828                           
  2829                           	psect	text14
  2830     01AC                     __ptext14:	
  2831 ;; *************** function _I2C_Master_Wait *****************
  2832 ;; Defined at:
  2833 ;;		line 32 in file "I2C.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;		None
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;		None
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      void 
  2840 ;; Registers used:
  2841 ;;		wreg, status,2
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2847 ;;      Params:         0       0       0       0       0
  2848 ;;      Locals:         0       0       0       0       0
  2849 ;;      Temps:          0       0       0       0       0
  2850 ;;      Totals:         0       0       0       0       0
  2851 ;;Total ram usage:        0 bytes
  2852 ;; Hardware stack levels used: 1
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_I2C_Master_Start
  2857 ;;		_I2C_Master_RepeatedStart
  2858 ;;		_I2C_Master_Stop
  2859 ;;		_I2C_Master_Write
  2860 ;;		_I2C_Master_Read
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864     01AC                     _I2C_Master_Wait:	
  2865                           ;psect for function _I2C_Master_Wait
  2866                           
  2867     01AC                     l1365:	
  2868                           ;incstack = 0
  2869                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2870                           
  2871     01AC                     l149:	
  2872                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2873                           
  2874     01AC  1683               	bsf	3,5	;RP0=1, select bank1
  2875     01AD  1303               	bcf	3,6	;RP1=0, select bank1
  2876     01AE  1914               	btfsc	20,2	;volatile
  2877     01AF  29B1               	goto	u841
  2878     01B0  29B2               	goto	u840
  2879     01B1                     u841:
  2880     01B1  29AC               	goto	l149
  2881     01B2                     u840:
  2882     01B2                     l1367:
  2883     01B2  0811               	movf	17,w	;volatile
  2884     01B3  391F               	andlw	31
  2885     01B4  1D03               	btfss	3,2
  2886     01B5  29B7               	goto	u851
  2887     01B6  29B8               	goto	u850
  2888     01B7                     u851:
  2889     01B7  29AC               	goto	l149
  2890     01B8                     u850:
  2891     01B8                     l152:
  2892     01B8  0008               	return
  2893     01B9                     __end_of_I2C_Master_Wait:
  2894                           
  2895                           	psect	text15
  2896     0225                     __ptext15:	
  2897 ;; *************** function _Lcd_Write_String *****************
  2898 ;; Defined at:
  2899 ;;		line 98 in file "LCD.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  a               1    wreg     PTR unsigned char 
  2902 ;;		 -> STR_3(5), STR_2(6), STR_1(5), 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  a               1    7[COMMON] PTR unsigned char 
  2905 ;;		 -> STR_3(5), STR_2(6), STR_1(5), 
  2906 ;;  i               2    5[COMMON] int 
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      void 
  2909 ;; Registers used:
  2910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2916 ;;      Params:         0       0       0       0       0
  2917 ;;      Locals:         3       0       0       0       0
  2918 ;;      Temps:          0       0       0       0       0
  2919 ;;      Totals:         3       0       0       0       0
  2920 ;;Total ram usage:        3 bytes
  2921 ;; Hardware stack levels used: 1
  2922 ;; Hardware stack levels required when called: 2
  2923 ;; This function calls:
  2924 ;;		_Lcd_Write_Char
  2925 ;; This function is called by:
  2926 ;;		_main
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930     0225                     _Lcd_Write_String:	
  2931                           ;psect for function _Lcd_Write_String
  2932                           
  2933                           
  2934                           ;incstack = 0
  2935                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2936                           ;Lcd_Write_String@a stored from wreg
  2937     0225  00F7               	movwf	Lcd_Write_String@a
  2938     0226                     l1739:
  2939                           
  2940                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2941     0226  01F5               	clrf	Lcd_Write_String@i
  2942     0227  01F6               	clrf	Lcd_Write_String@i+1
  2943     0228  2A3C               	goto	l1745
  2944     0229                     l1741:
  2945                           
  2946                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2947     0229  0875               	movf	Lcd_Write_String@i,w
  2948     022A  0777               	addwf	Lcd_Write_String@a,w
  2949     022B  0084               	movwf	4
  2950     022C  120A  118A  2003  120A  118A  	fcall	stringdir
  2951     0231  120A  118A  22A5  120A  118A  	fcall	_Lcd_Write_Char
  2952     0236                     l1743:
  2953     0236  3001               	movlw	1
  2954     0237  07F5               	addwf	Lcd_Write_String@i,f
  2955     0238  1803               	skipnc
  2956     0239  0AF6               	incf	Lcd_Write_String@i+1,f
  2957     023A  3000               	movlw	0
  2958     023B  07F6               	addwf	Lcd_Write_String@i+1,f
  2959     023C                     l1745:
  2960     023C  0875               	movf	Lcd_Write_String@i,w
  2961     023D  0777               	addwf	Lcd_Write_String@a,w
  2962     023E  0084               	movwf	4
  2963     023F  120A  118A  2003  120A  118A  	fcall	stringdir
  2964     0244  3A00               	xorlw	0
  2965     0245  1D03               	skipz
  2966     0246  2A48               	goto	u1431
  2967     0247  2A49               	goto	u1430
  2968     0248                     u1431:
  2969     0248  2A29               	goto	l1741
  2970     0249                     u1430:
  2971     0249                     l218:
  2972     0249  0008               	return
  2973     024A                     __end_of_Lcd_Write_String:
  2974                           
  2975                           	psect	text16
  2976     04C3                     __ptext16:	
  2977 ;; *************** function _Lcd_Init *****************
  2978 ;; Defined at:
  2979 ;;		line 65 in file "LCD.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;		None
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;		None
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		wreg, status,2, status,0, pclath, cstack
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2993 ;;      Params:         0       0       0       0       0
  2994 ;;      Locals:         0       0       0       0       0
  2995 ;;      Temps:          2       0       0       0       0
  2996 ;;      Totals:         2       0       0       0       0
  2997 ;;Total ram usage:        2 bytes
  2998 ;; Hardware stack levels used: 1
  2999 ;; Hardware stack levels required when called: 2
  3000 ;; This function calls:
  3001 ;;		_Lcd_Cmd
  3002 ;;		_Lcd_Port
  3003 ;; This function is called by:
  3004 ;;		_main
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008     04C3                     _Lcd_Init:	
  3009                           ;psect for function _Lcd_Init
  3010                           
  3011     04C3                     l1727:	
  3012                           ;incstack = 0
  3013                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3014                           
  3015                           
  3016                           ;LCD.c: 66:     Lcd_Port(0x00);
  3017     04C3  3000               	movlw	0
  3018     04C4  120A  118A  2203  120A  118A  	fcall	_Lcd_Port
  3019     04C9                     l1729:
  3020                           
  3021                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3022     04C9  3034               	movlw	52
  3023     04CA  00F5               	movwf	??_Lcd_Init+1
  3024     04CB  30F1               	movlw	241
  3025     04CC  00F4               	movwf	??_Lcd_Init
  3026     04CD                     u1647:
  3027     04CD  0BF4               	decfsz	??_Lcd_Init,f
  3028     04CE  2CCD               	goto	u1647
  3029     04CF  0BF5               	decfsz	??_Lcd_Init+1,f
  3030     04D0  2CCD               	goto	u1647
  3031     04D1  2CD2               	nop2
  3032     04D2                     l1731:
  3033                           
  3034                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  3035     04D2  3003               	movlw	3
  3036     04D3  120A  118A  21CE  120A  118A  	fcall	_Lcd_Cmd
  3037                           
  3038                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3039     04D8  300D               	movlw	13
  3040     04D9  00F5               	movwf	??_Lcd_Init+1
  3041     04DA  30FB               	movlw	251
  3042     04DB  00F4               	movwf	??_Lcd_Init
  3043     04DC                     u1657:
  3044     04DC  0BF4               	decfsz	??_Lcd_Init,f
  3045     04DD  2CDC               	goto	u1657
  3046     04DE  0BF5               	decfsz	??_Lcd_Init+1,f
  3047     04DF  2CDC               	goto	u1657
  3048     04E0  2CE1               	nop2
  3049     04E1                     l1733:
  3050                           
  3051                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  3052     04E1  3003               	movlw	3
  3053     04E2  120A  118A  21CE  120A  118A  	fcall	_Lcd_Cmd
  3054     04E7                     l1735:
  3055                           
  3056                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3057     04E7  301D               	movlw	29
  3058     04E8  00F5               	movwf	??_Lcd_Init+1
  3059     04E9  3091               	movlw	145
  3060     04EA  00F4               	movwf	??_Lcd_Init
  3061     04EB                     u1667:
  3062     04EB  0BF4               	decfsz	??_Lcd_Init,f
  3063     04EC  2CEB               	goto	u1667
  3064     04ED  0BF5               	decfsz	??_Lcd_Init+1,f
  3065     04EE  2CEB               	goto	u1667
  3066                           
  3067                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  3068     04EF  3003               	movlw	3
  3069     04F0  120A  118A  21CE  120A  118A  	fcall	_Lcd_Cmd
  3070                           
  3071                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  3072     04F5  3002               	movlw	2
  3073     04F6  120A  118A  21CE  120A  118A  	fcall	_Lcd_Cmd
  3074                           
  3075                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  3076     04FB  3002               	movlw	2
  3077     04FC  120A  118A  21CE  120A  118A  	fcall	_Lcd_Cmd
  3078                           
  3079                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  3080     0501  3008               	movlw	8
  3081     0502  120A  118A  21CE  120A  118A  	fcall	_Lcd_Cmd
  3082                           
  3083                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  3084     0507  3000               	movlw	0
  3085     0508  120A  118A  21CE  120A  118A  	fcall	_Lcd_Cmd
  3086                           
  3087                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  3088     050D  300C               	movlw	12
  3089     050E  120A  118A  21CE  120A  118A  	fcall	_Lcd_Cmd
  3090                           
  3091                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  3092     0513  3000               	movlw	0
  3093     0514  120A  118A  21CE  120A  118A  	fcall	_Lcd_Cmd
  3094                           
  3095                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  3096     0519  3006               	movlw	6
  3097     051A  120A  118A  21CE  120A  118A  	fcall	_Lcd_Cmd
  3098     051F                     l209:
  3099     051F  0008               	return
  3100     0520                     __end_of_Lcd_Init:
  3101                           
  3102                           	psect	text17
  3103     019F                     __ptext17:	
  3104 ;; *************** function _Lcd_Clear *****************
  3105 ;; Defined at:
  3106 ;;		line 43 in file "LCD.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;		None
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;		None
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  1    wreg      void 
  3113 ;; Registers used:
  3114 ;;		wreg, status,2, status,0, pclath, cstack
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3120 ;;      Params:         0       0       0       0       0
  3121 ;;      Locals:         0       0       0       0       0
  3122 ;;      Temps:          0       0       0       0       0
  3123 ;;      Totals:         0       0       0       0       0
  3124 ;;Total ram usage:        0 bytes
  3125 ;; Hardware stack levels used: 1
  3126 ;; Hardware stack levels required when called: 2
  3127 ;; This function calls:
  3128 ;;		_Lcd_Cmd
  3129 ;; This function is called by:
  3130 ;;		_main
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134     019F                     _Lcd_Clear:	
  3135                           ;psect for function _Lcd_Clear
  3136                           
  3137     019F                     l1737:	
  3138                           ;incstack = 0
  3139                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3140                           
  3141                           
  3142                           ;LCD.c: 44:     Lcd_Cmd(0);
  3143     019F  3000               	movlw	0
  3144     01A0  120A  118A  21CE  120A  118A  	fcall	_Lcd_Cmd
  3145                           
  3146                           ;LCD.c: 45:     Lcd_Cmd(1);
  3147     01A5  3001               	movlw	1
  3148     01A6  120A  118A  21CE  120A  118A  	fcall	_Lcd_Cmd
  3149     01AB                     l200:
  3150     01AB  0008               	return
  3151     01AC                     __end_of_Lcd_Clear:
  3152                           
  3153                           	psect	text18
  3154     03CE                     __ptext18:	
  3155 ;; *************** function _Escribir_dato *****************
  3156 ;; Defined at:
  3157 ;;		line 179 in file "main.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  dato            1    wreg     unsigned char 
  3160 ;;  posx            1    3[BANK0 ] unsigned char 
  3161 ;;  posy            1    4[BANK0 ] unsigned char 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;  dato            1    5[BANK0 ] unsigned char 
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  1    wreg      void 
  3166 ;; Registers used:
  3167 ;;		wreg, status,2, status,0, pclath, cstack
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3173 ;;      Params:         0       2       0       0       0
  3174 ;;      Locals:         0       1       0       0       0
  3175 ;;      Temps:          0       0       0       0       0
  3176 ;;      Totals:         0       3       0       0       0
  3177 ;;Total ram usage:        3 bytes
  3178 ;; Hardware stack levels used: 1
  3179 ;; Hardware stack levels required when called: 3
  3180 ;; This function calls:
  3181 ;;		_Lcd_Set_Cursor
  3182 ;;		_Lcd_Write_Char
  3183 ;;		_descomponer
  3184 ;;		_inttochar
  3185 ;; This function is called by:
  3186 ;;		_main
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190     03CE                     _Escribir_dato:	
  3191                           ;psect for function _Escribir_dato
  3192                           
  3193                           
  3194                           ;incstack = 0
  3195                           ; Regs used in _Escribir_dato: [wreg+status,2+status,0+pclath+cstack]
  3196                           ;Escribir_dato@dato stored from wreg
  3197     03CE  1283               	bcf	3,5	;RP0=0, select bank0
  3198     03CF  1303               	bcf	3,6	;RP1=0, select bank0
  3199     03D0  00B4               	movwf	Escribir_dato@dato
  3200     03D1                     l1755:
  3201                           
  3202                           ;main.c: 180:     Lcd_Set_Cursor(posy, posx+1);
  3203     03D1  0832               	movf	Escribir_dato@posx,w
  3204     03D2  3E01               	addlw	1
  3205     03D3  00F4               	movwf	Lcd_Set_Cursor@b
  3206     03D4  0833               	movf	Escribir_dato@posy,w
  3207     03D5  120A  118A  2388  120A  118A  	fcall	_Lcd_Set_Cursor
  3208                           
  3209                           ;main.c: 181:     unidad = inttochar(descomponer(0, dato));
  3210     03DA  3000               	movlw	0
  3211     03DB  00F9               	movwf	descomponer@pos
  3212     03DC  00FA               	movwf	descomponer@pos+1
  3213     03DD  1283               	bcf	3,5	;RP0=0, select bank0
  3214     03DE  1303               	bcf	3,6	;RP1=0, select bank0
  3215     03DF  0834               	movf	Escribir_dato@dato,w
  3216     03E0  00FB               	movwf	descomponer@num
  3217     03E1  120A  118A  257F  120A  118A  	fcall	_descomponer
  3218     03E6  120A  118A  241A  120A  118A  	fcall	_inttochar
  3219     03EB  1283               	bcf	3,5	;RP0=0, select bank0
  3220     03EC  1303               	bcf	3,6	;RP1=0, select bank0
  3221     03ED  00AD               	movwf	_unidad
  3222                           
  3223                           ;main.c: 182:     Lcd_Write_Char(unidad);
  3224     03EE  082D               	movf	_unidad,w
  3225     03EF  120A  118A  22A5  120A  118A  	fcall	_Lcd_Write_Char
  3226                           
  3227                           ;main.c: 183:     Lcd_Set_Cursor(posy, posx);
  3228     03F4  1283               	bcf	3,5	;RP0=0, select bank0
  3229     03F5  1303               	bcf	3,6	;RP1=0, select bank0
  3230     03F6  0832               	movf	Escribir_dato@posx,w
  3231     03F7  00F4               	movwf	Lcd_Set_Cursor@b
  3232     03F8  0833               	movf	Escribir_dato@posy,w
  3233     03F9  120A  118A  2388  120A  118A  	fcall	_Lcd_Set_Cursor
  3234                           
  3235                           ;main.c: 184:     decena = inttochar(descomponer(1, dato));
  3236     03FE  3001               	movlw	1
  3237     03FF  00F9               	movwf	descomponer@pos
  3238     0400  3000               	movlw	0
  3239     0401  00FA               	movwf	descomponer@pos+1
  3240     0402  1283               	bcf	3,5	;RP0=0, select bank0
  3241     0403  1303               	bcf	3,6	;RP1=0, select bank0
  3242     0404  0834               	movf	Escribir_dato@dato,w
  3243     0405  00FB               	movwf	descomponer@num
  3244     0406  120A  118A  257F  120A  118A  	fcall	_descomponer
  3245     040B  120A  118A  241A  120A  118A  	fcall	_inttochar
  3246     0410  1283               	bcf	3,5	;RP0=0, select bank0
  3247     0411  1303               	bcf	3,6	;RP1=0, select bank0
  3248     0412  00AC               	movwf	_decena
  3249                           
  3250                           ;main.c: 185:     Lcd_Write_Char(decena);
  3251     0413  082C               	movf	_decena,w
  3252     0414  120A  118A  22A5  120A  118A  	fcall	_Lcd_Write_Char
  3253     0419                     l107:
  3254     0419  0008               	return
  3255     041A                     __end_of_Escribir_dato:
  3256                           
  3257                           	psect	text19
  3258     041A                     __ptext19:	
  3259 ;; *************** function _inttochar *****************
  3260 ;; Defined at:
  3261 ;;		line 12 in file "conversiones.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  num             1    wreg     unsigned char 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  num             1    0[COMMON] unsigned char 
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      unsigned char 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3275 ;;      Params:         0       0       0       0       0
  3276 ;;      Locals:         1       0       0       0       0
  3277 ;;      Temps:          0       0       0       0       0
  3278 ;;      Totals:         1       0       0       0       0
  3279 ;;Total ram usage:        1 bytes
  3280 ;; Hardware stack levels used: 1
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		_Escribir_dato
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288     041A                     _inttochar:	
  3289                           ;psect for function _inttochar
  3290                           
  3291                           
  3292                           ;incstack = 0
  3293                           ; Regs used in _inttochar: [wreg+status,2+status,0]
  3294                           ;inttochar@num stored from wreg
  3295     041A  00F0               	movwf	inttochar@num
  3296     041B                     l1555:
  3297                           
  3298                           ;conversiones.c: 13:     if(num == 0){
  3299     041B  0870               	movf	inttochar@num,w
  3300     041C  1D03               	btfss	3,2
  3301     041D  2C1F               	goto	u1221
  3302     041E  2C20               	goto	u1220
  3303     041F                     u1221:
  3304     041F  2C22               	goto	l1563
  3305     0420                     u1220:
  3306     0420                     l1557:
  3307                           
  3308                           ;conversiones.c: 14:         return '0';
  3309     0420  3030               	movlw	48
  3310     0421  2C69               	goto	l222
  3311     0422                     l1563:
  3312     0422  0370               	decf	inttochar@num,w
  3313     0423  1D03               	btfss	3,2
  3314     0424  2C26               	goto	u1231
  3315     0425  2C27               	goto	u1230
  3316     0426                     u1231:
  3317     0426  2C29               	goto	l1571
  3318     0427                     u1230:
  3319     0427                     l1565:
  3320                           
  3321                           ;conversiones.c: 17:         return '1';
  3322     0427  3031               	movlw	49
  3323     0428  2C69               	goto	l222
  3324     0429                     l1571:
  3325     0429  3002               	movlw	2
  3326     042A  0670               	xorwf	inttochar@num,w
  3327     042B  1D03               	btfss	3,2
  3328     042C  2C2E               	goto	u1241
  3329     042D  2C2F               	goto	u1240
  3330     042E                     u1241:
  3331     042E  2C31               	goto	l1579
  3332     042F                     u1240:
  3333     042F                     l1573:
  3334                           
  3335                           ;conversiones.c: 20:         return '2';
  3336     042F  3032               	movlw	50
  3337     0430  2C69               	goto	l222
  3338     0431                     l1579:
  3339     0431  3003               	movlw	3
  3340     0432  0670               	xorwf	inttochar@num,w
  3341     0433  1D03               	btfss	3,2
  3342     0434  2C36               	goto	u1251
  3343     0435  2C37               	goto	u1250
  3344     0436                     u1251:
  3345     0436  2C39               	goto	l1587
  3346     0437                     u1250:
  3347     0437                     l1581:
  3348                           
  3349                           ;conversiones.c: 23:         return '3';
  3350     0437  3033               	movlw	51
  3351     0438  2C69               	goto	l222
  3352     0439                     l1587:
  3353     0439  3004               	movlw	4
  3354     043A  0670               	xorwf	inttochar@num,w
  3355     043B  1D03               	btfss	3,2
  3356     043C  2C3E               	goto	u1261
  3357     043D  2C3F               	goto	u1260
  3358     043E                     u1261:
  3359     043E  2C41               	goto	l1595
  3360     043F                     u1260:
  3361     043F                     l1589:
  3362                           
  3363                           ;conversiones.c: 26:         return '4';
  3364     043F  3034               	movlw	52
  3365     0440  2C69               	goto	l222
  3366     0441                     l1595:
  3367     0441  3005               	movlw	5
  3368     0442  0670               	xorwf	inttochar@num,w
  3369     0443  1D03               	btfss	3,2
  3370     0444  2C46               	goto	u1271
  3371     0445  2C47               	goto	u1270
  3372     0446                     u1271:
  3373     0446  2C49               	goto	l1603
  3374     0447                     u1270:
  3375     0447                     l1597:
  3376                           
  3377                           ;conversiones.c: 29:         return '5';
  3378     0447  3035               	movlw	53
  3379     0448  2C69               	goto	l222
  3380     0449                     l1603:
  3381     0449  3006               	movlw	6
  3382     044A  0670               	xorwf	inttochar@num,w
  3383     044B  1D03               	btfss	3,2
  3384     044C  2C4E               	goto	u1281
  3385     044D  2C4F               	goto	u1280
  3386     044E                     u1281:
  3387     044E  2C51               	goto	l1611
  3388     044F                     u1280:
  3389     044F                     l1605:
  3390                           
  3391                           ;conversiones.c: 32:         return '6';
  3392     044F  3036               	movlw	54
  3393     0450  2C69               	goto	l222
  3394     0451                     l1611:
  3395     0451  3007               	movlw	7
  3396     0452  0670               	xorwf	inttochar@num,w
  3397     0453  1D03               	btfss	3,2
  3398     0454  2C56               	goto	u1291
  3399     0455  2C57               	goto	u1290
  3400     0456                     u1291:
  3401     0456  2C59               	goto	l1619
  3402     0457                     u1290:
  3403     0457                     l1613:
  3404                           
  3405                           ;conversiones.c: 35:         return '7';
  3406     0457  3037               	movlw	55
  3407     0458  2C69               	goto	l222
  3408     0459                     l1619:
  3409     0459  3008               	movlw	8
  3410     045A  0670               	xorwf	inttochar@num,w
  3411     045B  1D03               	btfss	3,2
  3412     045C  2C5E               	goto	u1301
  3413     045D  2C5F               	goto	u1300
  3414     045E                     u1301:
  3415     045E  2C61               	goto	l1627
  3416     045F                     u1300:
  3417     045F                     l1621:
  3418                           
  3419                           ;conversiones.c: 38:         return '8';
  3420     045F  3038               	movlw	56
  3421     0460  2C69               	goto	l222
  3422     0461                     l1627:
  3423     0461  3009               	movlw	9
  3424     0462  0670               	xorwf	inttochar@num,w
  3425     0463  1D03               	btfss	3,2
  3426     0464  2C66               	goto	u1311
  3427     0465  2C67               	goto	u1310
  3428     0466                     u1311:
  3429     0466  2C69               	goto	l235
  3430     0467                     u1310:
  3431     0467                     l1629:
  3432                           
  3433                           ;conversiones.c: 41:         return '9';
  3434     0467  3039               	movlw	57
  3435     0468  2C69               	goto	l222
  3436     0469                     l235:
  3437     0469                     l222:
  3438     0469  0008               	return
  3439     046A                     __end_of_inttochar:
  3440                           
  3441                           	psect	text20
  3442     057F                     __ptext20:	
  3443 ;; *************** function _descomponer *****************
  3444 ;; Defined at:
  3445 ;;		line 45 in file "conversiones.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  pos             2    9[COMMON] int 
  3448 ;;  num             1   11[COMMON] unsigned char 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;  dec             1    2[BANK0 ] unsigned char 
  3451 ;;  uni             1    1[BANK0 ] unsigned char 
  3452 ;;  cent            1    0[BANK0 ] unsigned char 
  3453 ;; Return value:  Size  Location     Type
  3454 ;;                  1    wreg      unsigned char 
  3455 ;; Registers used:
  3456 ;;		wreg, status,2, status,0, pclath, cstack
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3462 ;;      Params:         3       0       0       0       0
  3463 ;;      Locals:         0       3       0       0       0
  3464 ;;      Temps:          2       0       0       0       0
  3465 ;;      Totals:         5       3       0       0       0
  3466 ;;Total ram usage:        8 bytes
  3467 ;; Hardware stack levels used: 1
  3468 ;; Hardware stack levels required when called: 1
  3469 ;; This function calls:
  3470 ;;		___awdiv
  3471 ;;		___awmod
  3472 ;; This function is called by:
  3473 ;;		_Escribir_dato
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477     057F                     _descomponer:	
  3478                           ;psect for function _descomponer
  3479                           
  3480     057F                     l1531:	
  3481                           ;incstack = 0
  3482                           ; Regs used in _descomponer: [wreg+status,2+status,0+pclath+cstack]
  3483                           
  3484                           
  3485                           ;conversiones.c: 46:     uint8_t cent;;conversiones.c: 47:     uint8_t dec;;conversiones
      +                          .c: 48:     uint8_t uni;;conversiones.c: 49:     cent = (num/100);
  3486     057F  3064               	movlw	100
  3487     0580  00F0               	movwf	___awdiv@divisor
  3488     0581  3000               	movlw	0
  3489     0582  00F1               	movwf	___awdiv@divisor+1
  3490     0583  087B               	movf	descomponer@num,w
  3491     0584  00FC               	movwf	??_descomponer
  3492     0585  01FD               	clrf	??_descomponer+1
  3493     0586  087C               	movf	??_descomponer,w
  3494     0587  00F2               	movwf	___awdiv@dividend
  3495     0588  087D               	movf	??_descomponer+1,w
  3496     0589  00F3               	movwf	___awdiv@dividend+1
  3497     058A  120A  118A  264A  120A  118A  	fcall	___awdiv
  3498     058F  0870               	movf	?___awdiv,w
  3499     0590  1283               	bcf	3,5	;RP0=0, select bank0
  3500     0591  1303               	bcf	3,6	;RP1=0, select bank0
  3501     0592  00AF               	movwf	descomponer@cent
  3502                           
  3503                           ;conversiones.c: 50:     dec = (num%100);
  3504     0593  3064               	movlw	100
  3505     0594  00F0               	movwf	___awmod@divisor
  3506     0595  3000               	movlw	0
  3507     0596  00F1               	movwf	___awmod@divisor+1
  3508     0597  087B               	movf	descomponer@num,w
  3509     0598  00FC               	movwf	??_descomponer
  3510     0599  01FD               	clrf	??_descomponer+1
  3511     059A  087C               	movf	??_descomponer,w
  3512     059B  00F2               	movwf	___awmod@dividend
  3513     059C  087D               	movf	??_descomponer+1,w
  3514     059D  00F3               	movwf	___awmod@dividend+1
  3515     059E  120A  118A  246A  120A  118A  	fcall	___awmod
  3516     05A3  0870               	movf	?___awmod,w
  3517     05A4  1283               	bcf	3,5	;RP0=0, select bank0
  3518     05A5  1303               	bcf	3,6	;RP1=0, select bank0
  3519     05A6  00B1               	movwf	descomponer@dec
  3520                           
  3521                           ;conversiones.c: 51:     uni = (dec%10);
  3522     05A7  300A               	movlw	10
  3523     05A8  00F0               	movwf	___awmod@divisor
  3524     05A9  3000               	movlw	0
  3525     05AA  00F1               	movwf	___awmod@divisor+1
  3526     05AB  0831               	movf	descomponer@dec,w
  3527     05AC  00FC               	movwf	??_descomponer
  3528     05AD  01FD               	clrf	??_descomponer+1
  3529     05AE  087C               	movf	??_descomponer,w
  3530     05AF  00F2               	movwf	___awmod@dividend
  3531     05B0  087D               	movf	??_descomponer+1,w
  3532     05B1  00F3               	movwf	___awmod@dividend+1
  3533     05B2  120A  118A  246A  120A  118A  	fcall	___awmod
  3534     05B7  0870               	movf	?___awmod,w
  3535     05B8  1283               	bcf	3,5	;RP0=0, select bank0
  3536     05B9  1303               	bcf	3,6	;RP1=0, select bank0
  3537     05BA  00B0               	movwf	descomponer@uni
  3538     05BB                     l1533:
  3539                           
  3540                           ;conversiones.c: 52:     if(pos == 2){
  3541     05BB  3002               	movlw	2
  3542     05BC  0679               	xorwf	descomponer@pos,w
  3543     05BD  047A               	iorwf	descomponer@pos+1,w
  3544     05BE  1D03               	btfss	3,2
  3545     05BF  2DC1               	goto	u1191
  3546     05C0  2DC2               	goto	u1190
  3547     05C1                     u1191:
  3548     05C1  2DC4               	goto	l1541
  3549     05C2                     u1190:
  3550     05C2                     l1535:
  3551                           
  3552                           ;conversiones.c: 53:         return cent;
  3553     05C2  082F               	movf	descomponer@cent,w
  3554     05C3  2DE3               	goto	l244
  3555     05C4                     l1541:
  3556     05C4  0379               	decf	descomponer@pos,w
  3557     05C5  047A               	iorwf	descomponer@pos+1,w
  3558     05C6  1D03               	btfss	3,2
  3559     05C7  2DC9               	goto	u1201
  3560     05C8  2DCA               	goto	u1200
  3561     05C9                     u1201:
  3562     05C9  2DDC               	goto	l1549
  3563     05CA                     u1200:
  3564     05CA                     l1543:
  3565                           
  3566                           ;conversiones.c: 56:         return (dec/10);
  3567     05CA  300A               	movlw	10
  3568     05CB  00F0               	movwf	___awdiv@divisor
  3569     05CC  3000               	movlw	0
  3570     05CD  00F1               	movwf	___awdiv@divisor+1
  3571     05CE  0831               	movf	descomponer@dec,w
  3572     05CF  00FC               	movwf	??_descomponer
  3573     05D0  01FD               	clrf	??_descomponer+1
  3574     05D1  087C               	movf	??_descomponer,w
  3575     05D2  00F2               	movwf	___awdiv@dividend
  3576     05D3  087D               	movf	??_descomponer+1,w
  3577     05D4  00F3               	movwf	___awdiv@dividend+1
  3578     05D5  120A  118A  264A  120A  118A  	fcall	___awdiv
  3579     05DA  0870               	movf	?___awdiv,w
  3580     05DB  2DE3               	goto	l244
  3581     05DC                     l1549:
  3582     05DC  0879               	movf	descomponer@pos,w
  3583     05DD  047A               	iorwf	descomponer@pos+1,w
  3584     05DE  1D03               	btfss	3,2
  3585     05DF  2DE1               	goto	u1211
  3586     05E0  2DE2               	goto	u1210
  3587     05E1                     u1211:
  3588     05E1  2DE3               	goto	l244
  3589     05E2                     u1210:
  3590     05E2                     l1551:
  3591                           
  3592                           ;conversiones.c: 59:         return uni;
  3593     05E2  0830               	movf	descomponer@uni,w
  3594     05E3                     l244:
  3595     05E3  0008               	return
  3596     05E4                     __end_of_descomponer:
  3597                           
  3598                           	psect	text21
  3599     046A                     __ptext21:	
  3600 ;; *************** function ___awmod *****************
  3601 ;; Defined at:
  3602 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  divisor         2    0[COMMON] int 
  3605 ;;  dividend        2    2[COMMON] int 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  sign            1    6[COMMON] unsigned char 
  3608 ;;  counter         1    5[COMMON] unsigned char 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  2    0[COMMON] int 
  3611 ;; Registers used:
  3612 ;;		wreg, status,2, status,0
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3618 ;;      Params:         4       0       0       0       0
  3619 ;;      Locals:         2       0       0       0       0
  3620 ;;      Temps:          1       0       0       0       0
  3621 ;;      Totals:         7       0       0       0       0
  3622 ;;Total ram usage:        7 bytes
  3623 ;; Hardware stack levels used: 1
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_descomponer
  3628 ;;		_desconvertir
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632     046A                     ___awmod:	
  3633                           ;psect for function ___awmod
  3634                           
  3635     046A                     l1461:	
  3636                           ;incstack = 0
  3637                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3638                           
  3639     046A  01F6               	clrf	___awmod@sign
  3640     046B                     l1463:
  3641     046B  1FF3               	btfss	___awmod@dividend+1,7
  3642     046C  2C6E               	goto	u1051
  3643     046D  2C6F               	goto	u1050
  3644     046E                     u1051:
  3645     046E  2C76               	goto	l1469
  3646     046F                     u1050:
  3647     046F                     l1465:
  3648     046F  09F2               	comf	___awmod@dividend,f
  3649     0470  09F3               	comf	___awmod@dividend+1,f
  3650     0471  0AF2               	incf	___awmod@dividend,f
  3651     0472  1903               	skipnz
  3652     0473  0AF3               	incf	___awmod@dividend+1,f
  3653     0474                     l1467:
  3654     0474  01F6               	clrf	___awmod@sign
  3655     0475  0AF6               	incf	___awmod@sign,f
  3656     0476                     l1469:
  3657     0476  1FF1               	btfss	___awmod@divisor+1,7
  3658     0477  2C79               	goto	u1061
  3659     0478  2C7A               	goto	u1060
  3660     0479                     u1061:
  3661     0479  2C7F               	goto	l1473
  3662     047A                     u1060:
  3663     047A                     l1471:
  3664     047A  09F0               	comf	___awmod@divisor,f
  3665     047B  09F1               	comf	___awmod@divisor+1,f
  3666     047C  0AF0               	incf	___awmod@divisor,f
  3667     047D  1903               	skipnz
  3668     047E  0AF1               	incf	___awmod@divisor+1,f
  3669     047F                     l1473:
  3670     047F  0870               	movf	___awmod@divisor,w
  3671     0480  0471               	iorwf	___awmod@divisor+1,w
  3672     0481  1903               	btfsc	3,2
  3673     0482  2C84               	goto	u1071
  3674     0483  2C85               	goto	u1070
  3675     0484                     u1071:
  3676     0484  2CB4               	goto	l1491
  3677     0485                     u1070:
  3678     0485                     l1475:
  3679     0485  01F5               	clrf	___awmod@counter
  3680     0486  0AF5               	incf	___awmod@counter,f
  3681     0487  2C93               	goto	l1481
  3682     0488                     l1477:
  3683     0488  3001               	movlw	1
  3684     0489                     u1085:
  3685     0489  1003               	clrc
  3686     048A  0DF0               	rlf	___awmod@divisor,f
  3687     048B  0DF1               	rlf	___awmod@divisor+1,f
  3688     048C  3EFF               	addlw	-1
  3689     048D  1D03               	skipz
  3690     048E  2C89               	goto	u1085
  3691     048F                     l1479:
  3692     048F  3001               	movlw	1
  3693     0490  00F4               	movwf	??___awmod
  3694     0491  0874               	movf	??___awmod,w
  3695     0492  07F5               	addwf	___awmod@counter,f
  3696     0493                     l1481:
  3697     0493  1FF1               	btfss	___awmod@divisor+1,7
  3698     0494  2C96               	goto	u1091
  3699     0495  2C97               	goto	u1090
  3700     0496                     u1091:
  3701     0496  2C88               	goto	l1477
  3702     0497                     u1090:
  3703     0497                     l1483:
  3704     0497  0871               	movf	___awmod@divisor+1,w
  3705     0498  0273               	subwf	___awmod@dividend+1,w
  3706     0499  1D03               	skipz
  3707     049A  2C9D               	goto	u1105
  3708     049B  0870               	movf	___awmod@divisor,w
  3709     049C  0272               	subwf	___awmod@dividend,w
  3710     049D                     u1105:
  3711     049D  1C03               	skipc
  3712     049E  2CA0               	goto	u1101
  3713     049F  2CA1               	goto	u1100
  3714     04A0                     u1101:
  3715     04A0  2CA7               	goto	l1487
  3716     04A1                     u1100:
  3717     04A1                     l1485:
  3718     04A1  0870               	movf	___awmod@divisor,w
  3719     04A2  02F2               	subwf	___awmod@dividend,f
  3720     04A3  0871               	movf	___awmod@divisor+1,w
  3721     04A4  1C03               	skipc
  3722     04A5  03F3               	decf	___awmod@dividend+1,f
  3723     04A6  02F3               	subwf	___awmod@dividend+1,f
  3724     04A7                     l1487:
  3725     04A7  3001               	movlw	1
  3726     04A8                     u1115:
  3727     04A8  1003               	clrc
  3728     04A9  0CF1               	rrf	___awmod@divisor+1,f
  3729     04AA  0CF0               	rrf	___awmod@divisor,f
  3730     04AB  3EFF               	addlw	-1
  3731     04AC  1D03               	skipz
  3732     04AD  2CA8               	goto	u1115
  3733     04AE                     l1489:
  3734     04AE  3001               	movlw	1
  3735     04AF  02F5               	subwf	___awmod@counter,f
  3736     04B0  1D03               	btfss	3,2
  3737     04B1  2CB3               	goto	u1121
  3738     04B2  2CB4               	goto	u1120
  3739     04B3                     u1121:
  3740     04B3  2C97               	goto	l1483
  3741     04B4                     u1120:
  3742     04B4                     l1491:
  3743     04B4  0876               	movf	___awmod@sign,w
  3744     04B5  1903               	btfsc	3,2
  3745     04B6  2CB8               	goto	u1131
  3746     04B7  2CB9               	goto	u1130
  3747     04B8                     u1131:
  3748     04B8  2CBE               	goto	l1495
  3749     04B9                     u1130:
  3750     04B9                     l1493:
  3751     04B9  09F2               	comf	___awmod@dividend,f
  3752     04BA  09F3               	comf	___awmod@dividend+1,f
  3753     04BB  0AF2               	incf	___awmod@dividend,f
  3754     04BC  1903               	skipnz
  3755     04BD  0AF3               	incf	___awmod@dividend+1,f
  3756     04BE                     l1495:
  3757     04BE  0873               	movf	___awmod@dividend+1,w
  3758     04BF  00F1               	movwf	?___awmod+1
  3759     04C0  0872               	movf	___awmod@dividend,w
  3760     04C1  00F0               	movwf	?___awmod
  3761     04C2                     l513:
  3762     04C2  0008               	return
  3763     04C3                     __end_of___awmod:
  3764                           
  3765                           	psect	text22
  3766     064A                     __ptext22:	
  3767 ;; *************** function ___awdiv *****************
  3768 ;; Defined at:
  3769 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  divisor         2    0[COMMON] int 
  3772 ;;  dividend        2    2[COMMON] int 
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;  quotient        2    7[COMMON] int 
  3775 ;;  sign            1    6[COMMON] unsigned char 
  3776 ;;  counter         1    5[COMMON] unsigned char 
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  2    0[COMMON] int 
  3779 ;; Registers used:
  3780 ;;		wreg, status,2, status,0
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3786 ;;      Params:         4       0       0       0       0
  3787 ;;      Locals:         4       0       0       0       0
  3788 ;;      Temps:          1       0       0       0       0
  3789 ;;      Totals:         9       0       0       0       0
  3790 ;;Total ram usage:        9 bytes
  3791 ;; Hardware stack levels used: 1
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_descomponer
  3796 ;;		_desconvertir
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800     064A                     ___awdiv:	
  3801                           ;psect for function ___awdiv
  3802                           
  3803     064A                     l1417:	
  3804                           ;incstack = 0
  3805                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3806                           
  3807     064A  01F6               	clrf	___awdiv@sign
  3808     064B                     l1419:
  3809     064B  1FF1               	btfss	___awdiv@divisor+1,7
  3810     064C  2E4E               	goto	u951
  3811     064D  2E4F               	goto	u950
  3812     064E                     u951:
  3813     064E  2E56               	goto	l1425
  3814     064F                     u950:
  3815     064F                     l1421:
  3816     064F  09F0               	comf	___awdiv@divisor,f
  3817     0650  09F1               	comf	___awdiv@divisor+1,f
  3818     0651  0AF0               	incf	___awdiv@divisor,f
  3819     0652  1903               	skipnz
  3820     0653  0AF1               	incf	___awdiv@divisor+1,f
  3821     0654                     l1423:
  3822     0654  01F6               	clrf	___awdiv@sign
  3823     0655  0AF6               	incf	___awdiv@sign,f
  3824     0656                     l1425:
  3825     0656  1FF3               	btfss	___awdiv@dividend+1,7
  3826     0657  2E59               	goto	u961
  3827     0658  2E5A               	goto	u960
  3828     0659                     u961:
  3829     0659  2E63               	goto	l1431
  3830     065A                     u960:
  3831     065A                     l1427:
  3832     065A  09F2               	comf	___awdiv@dividend,f
  3833     065B  09F3               	comf	___awdiv@dividend+1,f
  3834     065C  0AF2               	incf	___awdiv@dividend,f
  3835     065D  1903               	skipnz
  3836     065E  0AF3               	incf	___awdiv@dividend+1,f
  3837     065F                     l1429:
  3838     065F  3001               	movlw	1
  3839     0660  00F4               	movwf	??___awdiv
  3840     0661  0874               	movf	??___awdiv,w
  3841     0662  06F6               	xorwf	___awdiv@sign,f
  3842     0663                     l1431:
  3843     0663  01F7               	clrf	___awdiv@quotient
  3844     0664  01F8               	clrf	___awdiv@quotient+1
  3845     0665                     l1433:
  3846     0665  0870               	movf	___awdiv@divisor,w
  3847     0666  0471               	iorwf	___awdiv@divisor+1,w
  3848     0667  1903               	btfsc	3,2
  3849     0668  2E6A               	goto	u971
  3850     0669  2E6B               	goto	u970
  3851     066A                     u971:
  3852     066A  2EA2               	goto	l1453
  3853     066B                     u970:
  3854     066B                     l1435:
  3855     066B  01F5               	clrf	___awdiv@counter
  3856     066C  0AF5               	incf	___awdiv@counter,f
  3857     066D  2E79               	goto	l1441
  3858     066E                     l1437:
  3859     066E  3001               	movlw	1
  3860     066F                     u985:
  3861     066F  1003               	clrc
  3862     0670  0DF0               	rlf	___awdiv@divisor,f
  3863     0671  0DF1               	rlf	___awdiv@divisor+1,f
  3864     0672  3EFF               	addlw	-1
  3865     0673  1D03               	skipz
  3866     0674  2E6F               	goto	u985
  3867     0675                     l1439:
  3868     0675  3001               	movlw	1
  3869     0676  00F4               	movwf	??___awdiv
  3870     0677  0874               	movf	??___awdiv,w
  3871     0678  07F5               	addwf	___awdiv@counter,f
  3872     0679                     l1441:
  3873     0679  1FF1               	btfss	___awdiv@divisor+1,7
  3874     067A  2E7C               	goto	u991
  3875     067B  2E7D               	goto	u990
  3876     067C                     u991:
  3877     067C  2E6E               	goto	l1437
  3878     067D                     u990:
  3879     067D                     l1443:
  3880     067D  3001               	movlw	1
  3881     067E                     u1005:
  3882     067E  1003               	clrc
  3883     067F  0DF7               	rlf	___awdiv@quotient,f
  3884     0680  0DF8               	rlf	___awdiv@quotient+1,f
  3885     0681  3EFF               	addlw	-1
  3886     0682  1D03               	skipz
  3887     0683  2E7E               	goto	u1005
  3888     0684  0871               	movf	___awdiv@divisor+1,w
  3889     0685  0273               	subwf	___awdiv@dividend+1,w
  3890     0686  1D03               	skipz
  3891     0687  2E8A               	goto	u1015
  3892     0688  0870               	movf	___awdiv@divisor,w
  3893     0689  0272               	subwf	___awdiv@dividend,w
  3894     068A                     u1015:
  3895     068A  1C03               	skipc
  3896     068B  2E8D               	goto	u1011
  3897     068C  2E8E               	goto	u1010
  3898     068D                     u1011:
  3899     068D  2E95               	goto	l1449
  3900     068E                     u1010:
  3901     068E                     l1445:
  3902     068E  0870               	movf	___awdiv@divisor,w
  3903     068F  02F2               	subwf	___awdiv@dividend,f
  3904     0690  0871               	movf	___awdiv@divisor+1,w
  3905     0691  1C03               	skipc
  3906     0692  03F3               	decf	___awdiv@dividend+1,f
  3907     0693  02F3               	subwf	___awdiv@dividend+1,f
  3908     0694                     l1447:
  3909     0694  1477               	bsf	___awdiv@quotient,0
  3910     0695                     l1449:
  3911     0695  3001               	movlw	1
  3912     0696                     u1025:
  3913     0696  1003               	clrc
  3914     0697  0CF1               	rrf	___awdiv@divisor+1,f
  3915     0698  0CF0               	rrf	___awdiv@divisor,f
  3916     0699  3EFF               	addlw	-1
  3917     069A  1D03               	skipz
  3918     069B  2E96               	goto	u1025
  3919     069C                     l1451:
  3920     069C  3001               	movlw	1
  3921     069D  02F5               	subwf	___awdiv@counter,f
  3922     069E  1D03               	btfss	3,2
  3923     069F  2EA1               	goto	u1031
  3924     06A0  2EA2               	goto	u1030
  3925     06A1                     u1031:
  3926     06A1  2E7D               	goto	l1443
  3927     06A2                     u1030:
  3928     06A2                     l1453:
  3929     06A2  0876               	movf	___awdiv@sign,w
  3930     06A3  1903               	btfsc	3,2
  3931     06A4  2EA6               	goto	u1041
  3932     06A5  2EA7               	goto	u1040
  3933     06A6                     u1041:
  3934     06A6  2EAC               	goto	l1457
  3935     06A7                     u1040:
  3936     06A7                     l1455:
  3937     06A7  09F7               	comf	___awdiv@quotient,f
  3938     06A8  09F8               	comf	___awdiv@quotient+1,f
  3939     06A9  0AF7               	incf	___awdiv@quotient,f
  3940     06AA  1903               	skipnz
  3941     06AB  0AF8               	incf	___awdiv@quotient+1,f
  3942     06AC                     l1457:
  3943     06AC  0878               	movf	___awdiv@quotient+1,w
  3944     06AD  00F1               	movwf	?___awdiv+1
  3945     06AE  0877               	movf	___awdiv@quotient,w
  3946     06AF  00F0               	movwf	?___awdiv
  3947     06B0                     l500:
  3948     06B0  0008               	return
  3949     06B1                     __end_of___awdiv:
  3950                           
  3951                           	psect	text23
  3952     02A5                     __ptext23:	
  3953 ;; *************** function _Lcd_Write_Char *****************
  3954 ;; Defined at:
  3955 ;;		line 83 in file "LCD.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;  a               1    wreg     unsigned char 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;  a               1    4[COMMON] unsigned char 
  3960 ;;  y               1    3[COMMON] unsigned char 
  3961 ;;  temp            1    2[COMMON] unsigned char 
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      void 
  3964 ;; Registers used:
  3965 ;;		wreg, status,2, status,0, pclath, cstack
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3971 ;;      Params:         0       0       0       0       0
  3972 ;;      Locals:         3       0       0       0       0
  3973 ;;      Temps:          1       0       0       0       0
  3974 ;;      Totals:         4       0       0       0       0
  3975 ;;Total ram usage:        4 bytes
  3976 ;; Hardware stack levels used: 1
  3977 ;; Hardware stack levels required when called: 1
  3978 ;; This function calls:
  3979 ;;		_Lcd_Port
  3980 ;; This function is called by:
  3981 ;;		_Escribir_dato
  3982 ;;		_Lcd_Write_String
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986     02A5                     _Lcd_Write_Char:	
  3987                           ;psect for function _Lcd_Write_Char
  3988                           
  3989                           
  3990                           ;incstack = 0
  3991                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3992                           ;Lcd_Write_Char@a stored from wreg
  3993     02A5  00F4               	movwf	Lcd_Write_Char@a
  3994     02A6                     l1633:
  3995                           
  3996                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  3997     02A6  0874               	movf	Lcd_Write_Char@a,w
  3998     02A7  390F               	andlw	15
  3999     02A8  00F2               	movwf	Lcd_Write_Char@temp
  4000                           
  4001                           ;LCD.c: 86:     y = a & 0xF0;
  4002     02A9  0874               	movf	Lcd_Write_Char@a,w
  4003     02AA  39F0               	andlw	240
  4004     02AB  00F3               	movwf	Lcd_Write_Char@y
  4005     02AC                     l1635:
  4006                           
  4007                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  4008     02AC  1283               	bcf	3,5	;RP0=0, select bank0
  4009     02AD  1303               	bcf	3,6	;RP1=0, select bank0
  4010     02AE  1508               	bsf	8,2	;volatile
  4011     02AF                     l1637:
  4012                           
  4013                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  4014     02AF  0873               	movf	Lcd_Write_Char@y,w
  4015     02B0  00F1               	movwf	??_Lcd_Write_Char
  4016     02B1  3004               	movlw	4
  4017     02B2                     u1325:
  4018     02B2  1003               	clrc
  4019     02B3  0CF1               	rrf	??_Lcd_Write_Char,f
  4020     02B4  3EFF               	addlw	-1
  4021     02B5  1D03               	skipz
  4022     02B6  2AB2               	goto	u1325
  4023     02B7  0871               	movf	??_Lcd_Write_Char,w
  4024     02B8  120A  118A  2203  120A  118A  	fcall	_Lcd_Port
  4025     02BD                     l1639:
  4026                           
  4027                           ;LCD.c: 89:     RD3 = 1;
  4028     02BD  1283               	bcf	3,5	;RP0=0, select bank0
  4029     02BE  1303               	bcf	3,6	;RP1=0, select bank0
  4030     02BF  1588               	bsf	8,3	;volatile
  4031     02C0                     l1641:
  4032                           
  4033                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4034     02C0  301A               	movlw	26
  4035     02C1  00F1               	movwf	??_Lcd_Write_Char
  4036     02C2                     u1677:
  4037     02C2  0BF1               	decfsz	??_Lcd_Write_Char,f
  4038     02C3  2AC2               	goto	u1677
  4039     02C4  0000               	nop
  4040     02C5                     l1643:
  4041                           
  4042                           ;LCD.c: 91:     RD3 = 0;
  4043     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  4044     02C6  1303               	bcf	3,6	;RP1=0, select bank0
  4045     02C7  1188               	bcf	8,3	;volatile
  4046     02C8                     l1645:
  4047                           
  4048                           ;LCD.c: 92:     Lcd_Port(temp);
  4049     02C8  0872               	movf	Lcd_Write_Char@temp,w
  4050     02C9  120A  118A  2203  120A  118A  	fcall	_Lcd_Port
  4051     02CE                     l1647:
  4052                           
  4053                           ;LCD.c: 93:     RD3 = 1;
  4054     02CE  1283               	bcf	3,5	;RP0=0, select bank0
  4055     02CF  1303               	bcf	3,6	;RP1=0, select bank0
  4056     02D0  1588               	bsf	8,3	;volatile
  4057     02D1                     l1649:
  4058                           
  4059                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4060     02D1  301A               	movlw	26
  4061     02D2  00F1               	movwf	??_Lcd_Write_Char
  4062     02D3                     u1687:
  4063     02D3  0BF1               	decfsz	??_Lcd_Write_Char,f
  4064     02D4  2AD3               	goto	u1687
  4065     02D5  0000               	nop
  4066     02D6                     l1651:
  4067                           
  4068                           ;LCD.c: 95:     RD3 = 0;
  4069     02D6  1283               	bcf	3,5	;RP0=0, select bank0
  4070     02D7  1303               	bcf	3,6	;RP1=0, select bank0
  4071     02D8  1188               	bcf	8,3	;volatile
  4072     02D9                     l212:
  4073     02D9  0008               	return
  4074     02DA                     __end_of_Lcd_Write_Char:
  4075                           
  4076                           	psect	text24
  4077     0388                     __ptext24:	
  4078 ;; *************** function _Lcd_Set_Cursor *****************
  4079 ;; Defined at:
  4080 ;;		line 48 in file "LCD.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  a               1    wreg     unsigned char 
  4083 ;;  b               1    4[COMMON] unsigned char 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;  a               1    6[COMMON] unsigned char 
  4086 ;;  temp            1    9[COMMON] unsigned char 
  4087 ;;  y               1    8[COMMON] unsigned char 
  4088 ;;  z               1    7[COMMON] unsigned char 
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg, status,2, status,0, pclath, cstack
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4098 ;;      Params:         1       0       0       0       0
  4099 ;;      Locals:         4       0       0       0       0
  4100 ;;      Temps:          1       0       0       0       0
  4101 ;;      Totals:         6       0       0       0       0
  4102 ;;Total ram usage:        6 bytes
  4103 ;; Hardware stack levels used: 1
  4104 ;; Hardware stack levels required when called: 2
  4105 ;; This function calls:
  4106 ;;		_Lcd_Cmd
  4107 ;; This function is called by:
  4108 ;;		_main
  4109 ;;		_Escribir_dato
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113     0388                     _Lcd_Set_Cursor:	
  4114                           ;psect for function _Lcd_Set_Cursor
  4115                           
  4116                           
  4117                           ;incstack = 0
  4118                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4119                           ;Lcd_Set_Cursor@a stored from wreg
  4120     0388  00F6               	movwf	Lcd_Set_Cursor@a
  4121     0389                     l1499:
  4122                           
  4123                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  4124     0389  0376               	decf	Lcd_Set_Cursor@a,w
  4125     038A  1D03               	btfss	3,2
  4126     038B  2B8D               	goto	u1141
  4127     038C  2B8E               	goto	u1140
  4128     038D                     u1141:
  4129     038D  2BAB               	goto	l1509
  4130     038E                     u1140:
  4131     038E                     l1501:
  4132                           
  4133                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  4134     038E  0874               	movf	Lcd_Set_Cursor@b,w
  4135     038F  3E7F               	addlw	127
  4136     0390  00F9               	movwf	Lcd_Set_Cursor@temp
  4137                           
  4138                           ;LCD.c: 52:         z = temp >> 4;
  4139     0391  0879               	movf	Lcd_Set_Cursor@temp,w
  4140     0392  00F5               	movwf	??_Lcd_Set_Cursor
  4141     0393  3004               	movlw	4
  4142     0394                     u1155:
  4143     0394  1003               	clrc
  4144     0395  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4145     0396  3EFF               	addlw	-1
  4146     0397  1D03               	skipz
  4147     0398  2B94               	goto	u1155
  4148     0399  0875               	movf	??_Lcd_Set_Cursor,w
  4149     039A  00F7               	movwf	Lcd_Set_Cursor@z
  4150     039B                     l1503:
  4151                           
  4152                           ;LCD.c: 53:         y = temp & 0x0F;
  4153     039B  0879               	movf	Lcd_Set_Cursor@temp,w
  4154     039C  390F               	andlw	15
  4155     039D  00F8               	movwf	Lcd_Set_Cursor@y
  4156     039E                     l1505:
  4157                           
  4158                           ;LCD.c: 54:         Lcd_Cmd(z);
  4159     039E  0877               	movf	Lcd_Set_Cursor@z,w
  4160     039F  120A  118A  21CE  120A  118A  	fcall	_Lcd_Cmd
  4161     03A4                     l1507:
  4162                           
  4163                           ;LCD.c: 55:         Lcd_Cmd(y);
  4164     03A4  0878               	movf	Lcd_Set_Cursor@y,w
  4165     03A5  120A  118A  21CE  120A  118A  	fcall	_Lcd_Cmd
  4166                           
  4167                           ;LCD.c: 56:     } else if (a == 2) {
  4168     03AA  2BCD               	goto	l206
  4169     03AB                     l1509:
  4170     03AB  3002               	movlw	2
  4171     03AC  0676               	xorwf	Lcd_Set_Cursor@a,w
  4172     03AD  1D03               	btfss	3,2
  4173     03AE  2BB0               	goto	u1161
  4174     03AF  2BB1               	goto	u1160
  4175     03B0                     u1161:
  4176     03B0  2BCD               	goto	l206
  4177     03B1                     u1160:
  4178     03B1                     l1511:
  4179                           
  4180                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  4181     03B1  0874               	movf	Lcd_Set_Cursor@b,w
  4182     03B2  3EBF               	addlw	191
  4183     03B3  00F9               	movwf	Lcd_Set_Cursor@temp
  4184                           
  4185                           ;LCD.c: 58:         z = temp >> 4;
  4186     03B4  0879               	movf	Lcd_Set_Cursor@temp,w
  4187     03B5  00F5               	movwf	??_Lcd_Set_Cursor
  4188     03B6  3004               	movlw	4
  4189     03B7                     u1175:
  4190     03B7  1003               	clrc
  4191     03B8  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4192     03B9  3EFF               	addlw	-1
  4193     03BA  1D03               	skipz
  4194     03BB  2BB7               	goto	u1175
  4195     03BC  0875               	movf	??_Lcd_Set_Cursor,w
  4196     03BD  00F7               	movwf	Lcd_Set_Cursor@z
  4197     03BE                     l1513:
  4198                           
  4199                           ;LCD.c: 59:         y = temp & 0x0F;
  4200     03BE  0879               	movf	Lcd_Set_Cursor@temp,w
  4201     03BF  390F               	andlw	15
  4202     03C0  00F8               	movwf	Lcd_Set_Cursor@y
  4203     03C1                     l1515:
  4204                           
  4205                           ;LCD.c: 60:         Lcd_Cmd(z);
  4206     03C1  0877               	movf	Lcd_Set_Cursor@z,w
  4207     03C2  120A  118A  21CE  120A  118A  	fcall	_Lcd_Cmd
  4208     03C7                     l1517:
  4209                           
  4210                           ;LCD.c: 61:         Lcd_Cmd(y);
  4211     03C7  0878               	movf	Lcd_Set_Cursor@y,w
  4212     03C8  120A  118A  21CE  120A  118A  	fcall	_Lcd_Cmd
  4213     03CD                     l206:
  4214     03CD  0008               	return
  4215     03CE                     __end_of_Lcd_Set_Cursor:
  4216                           
  4217                           	psect	text25
  4218     01CE                     __ptext25:	
  4219 ;; *************** function _Lcd_Cmd *****************
  4220 ;; Defined at:
  4221 ;;		line 35 in file "LCD.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;  a               1    wreg     unsigned char 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  a               1    3[COMMON] unsigned char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  1    wreg      void 
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, status,0, pclath, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4235 ;;      Params:         0       0       0       0       0
  4236 ;;      Locals:         1       0       0       0       0
  4237 ;;      Temps:          2       0       0       0       0
  4238 ;;      Totals:         3       0       0       0       0
  4239 ;;Total ram usage:        3 bytes
  4240 ;; Hardware stack levels used: 1
  4241 ;; Hardware stack levels required when called: 1
  4242 ;; This function calls:
  4243 ;;		_Lcd_Port
  4244 ;; This function is called by:
  4245 ;;		_Lcd_Clear
  4246 ;;		_Lcd_Set_Cursor
  4247 ;;		_Lcd_Init
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251     01CE                     _Lcd_Cmd:	
  4252                           ;psect for function _Lcd_Cmd
  4253                           
  4254                           
  4255                           ;incstack = 0
  4256                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4257                           ;Lcd_Cmd@a stored from wreg
  4258     01CE  00F3               	movwf	Lcd_Cmd@a
  4259     01CF                     l1369:
  4260                           
  4261                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  4262     01CF  1283               	bcf	3,5	;RP0=0, select bank0
  4263     01D0  1303               	bcf	3,6	;RP1=0, select bank0
  4264     01D1  1108               	bcf	8,2	;volatile
  4265     01D2                     l1371:
  4266                           
  4267                           ;LCD.c: 37:     Lcd_Port(a);
  4268     01D2  0873               	movf	Lcd_Cmd@a,w
  4269     01D3  120A  118A  2203  120A  118A  	fcall	_Lcd_Port
  4270     01D8                     l1373:
  4271                           
  4272                           ;LCD.c: 38:     RD3 = 1;
  4273     01D8  1283               	bcf	3,5	;RP0=0, select bank0
  4274     01D9  1303               	bcf	3,6	;RP1=0, select bank0
  4275     01DA  1588               	bsf	8,3	;volatile
  4276     01DB                     l1375:
  4277                           
  4278                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4279     01DB  300B               	movlw	11
  4280     01DC  00F2               	movwf	??_Lcd_Cmd+1
  4281     01DD  3062               	movlw	98
  4282     01DE  00F1               	movwf	??_Lcd_Cmd
  4283     01DF                     u1697:
  4284     01DF  0BF1               	decfsz	??_Lcd_Cmd,f
  4285     01E0  29DF               	goto	u1697
  4286     01E1  0BF2               	decfsz	??_Lcd_Cmd+1,f
  4287     01E2  29DF               	goto	u1697
  4288     01E3  0000               	nop
  4289     01E4                     l1377:
  4290                           
  4291                           ;LCD.c: 40:     RD3 = 0;
  4292     01E4  1283               	bcf	3,5	;RP0=0, select bank0
  4293     01E5  1303               	bcf	3,6	;RP1=0, select bank0
  4294     01E6  1188               	bcf	8,3	;volatile
  4295     01E7                     l197:
  4296     01E7  0008               	return
  4297     01E8                     __end_of_Lcd_Cmd:
  4298                           
  4299                           	psect	text26
  4300     0203                     __ptext26:	
  4301 ;; *************** function _Lcd_Port *****************
  4302 ;; Defined at:
  4303 ;;		line 13 in file "LCD.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  a               1    wreg     unsigned char 
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;  a               1    0[COMMON] unsigned char 
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  1    wreg      void 
  4310 ;; Registers used:
  4311 ;;		wreg
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4317 ;;      Params:         0       0       0       0       0
  4318 ;;      Locals:         1       0       0       0       0
  4319 ;;      Temps:          0       0       0       0       0
  4320 ;;      Totals:         1       0       0       0       0
  4321 ;;Total ram usage:        1 bytes
  4322 ;; Hardware stack levels used: 1
  4323 ;; This function calls:
  4324 ;;		Nothing
  4325 ;; This function is called by:
  4326 ;;		_Lcd_Cmd
  4327 ;;		_Lcd_Init
  4328 ;;		_Lcd_Write_Char
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332     0203                     _Lcd_Port:	
  4333                           ;psect for function _Lcd_Port
  4334                           
  4335                           
  4336                           ;incstack = 0
  4337                           ; Regs used in _Lcd_Port: [wreg]
  4338                           ;Lcd_Port@a stored from wreg
  4339     0203  00F0               	movwf	Lcd_Port@a
  4340     0204                     l1355:
  4341                           
  4342                           ;LCD.c: 14:     if (a & 1)
  4343     0204  1C70               	btfss	Lcd_Port@a,0
  4344     0205  2A07               	goto	u801
  4345     0206  2A08               	goto	u800
  4346     0207                     u801:
  4347     0207  2A0C               	goto	l186
  4348     0208                     u800:
  4349     0208                     l1357:
  4350                           
  4351                           ;LCD.c: 15:         RD4 = 1;
  4352     0208  1283               	bcf	3,5	;RP0=0, select bank0
  4353     0209  1303               	bcf	3,6	;RP1=0, select bank0
  4354     020A  1608               	bsf	8,4	;volatile
  4355     020B  2A0F               	goto	l187
  4356     020C                     l186:	
  4357                           ;LCD.c: 16:     else
  4358                           
  4359                           
  4360                           ;LCD.c: 17:         RD4 = 0;
  4361     020C  1283               	bcf	3,5	;RP0=0, select bank0
  4362     020D  1303               	bcf	3,6	;RP1=0, select bank0
  4363     020E  1208               	bcf	8,4	;volatile
  4364     020F                     l187:
  4365                           
  4366                           ;LCD.c: 19:     if (a & 2)
  4367     020F  1CF0               	btfss	Lcd_Port@a,1
  4368     0210  2A12               	goto	u811
  4369     0211  2A13               	goto	u810
  4370     0212                     u811:
  4371     0212  2A15               	goto	l188
  4372     0213                     u810:
  4373     0213                     l1359:
  4374                           
  4375                           ;LCD.c: 20:         RD5 = 1;
  4376     0213  1688               	bsf	8,5	;volatile
  4377     0214  2A16               	goto	l189
  4378     0215                     l188:	
  4379                           ;LCD.c: 21:     else
  4380                           
  4381                           
  4382                           ;LCD.c: 22:         RD5 = 0;
  4383     0215  1288               	bcf	8,5	;volatile
  4384     0216                     l189:
  4385                           
  4386                           ;LCD.c: 24:     if (a & 4)
  4387     0216  1D70               	btfss	Lcd_Port@a,2
  4388     0217  2A19               	goto	u821
  4389     0218  2A1A               	goto	u820
  4390     0219                     u821:
  4391     0219  2A1C               	goto	l190
  4392     021A                     u820:
  4393     021A                     l1361:
  4394                           
  4395                           ;LCD.c: 25:         RD6 = 1;
  4396     021A  1708               	bsf	8,6	;volatile
  4397     021B  2A1D               	goto	l191
  4398     021C                     l190:	
  4399                           ;LCD.c: 26:     else
  4400                           
  4401                           
  4402                           ;LCD.c: 27:         RD6 = 0;
  4403     021C  1308               	bcf	8,6	;volatile
  4404     021D                     l191:
  4405                           
  4406                           ;LCD.c: 29:     if (a & 8)
  4407     021D  1DF0               	btfss	Lcd_Port@a,3
  4408     021E  2A20               	goto	u831
  4409     021F  2A21               	goto	u830
  4410     0220                     u831:
  4411     0220  2A23               	goto	l192
  4412     0221                     u830:
  4413     0221                     l1363:
  4414                           
  4415                           ;LCD.c: 30:         RD7 = 1;
  4416     0221  1788               	bsf	8,7	;volatile
  4417     0222  2A24               	goto	l194
  4418     0223                     l192:	
  4419                           ;LCD.c: 31:     else
  4420                           
  4421                           
  4422                           ;LCD.c: 32:         RD7 = 0;
  4423     0223  1388               	bcf	8,7	;volatile
  4424     0224                     l194:
  4425     0224  0008               	return
  4426     0225                     __end_of_Lcd_Port:
  4427     007E                     btemp	set	126	;btemp
  4428     007E                     wtemp0	set	126
  4429                           
  4430                           	psect	idloc
  4431                           
  4432                           ;Config register IDLOC0 @ 0x2000
  4433                           ;	unspecified, using default values
  4434     2000                     	org	8192
  4435     2000  3FFF               	dw	16383
  4436                           
  4437                           ;Config register IDLOC1 @ 0x2001
  4438                           ;	unspecified, using default values
  4439     2001                     	org	8193
  4440     2001  3FFF               	dw	16383
  4441                           
  4442                           ;Config register IDLOC2 @ 0x2002
  4443                           ;	unspecified, using default values
  4444     2002                     	org	8194
  4445     2002  3FFF               	dw	16383
  4446                           
  4447                           ;Config register IDLOC3 @ 0x2003
  4448                           ;	unspecified, using default values
  4449     2003                     	org	8195
  4450     2003  3FFF               	dw	16383
  4451                           
  4452                           	psect	config
  4453                           
  4454                           ;Config register CONFIG1 @ 0x2007
  4455                           ;	Oscillator Selection bits
  4456                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4457                           ;	Watchdog Timer Enable bit
  4458                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4459                           ;	Power-up Timer Enable bit
  4460                           ;	PWRTE = OFF, PWRT disabled
  4461                           ;	RE3/MCLR pin function select bit
  4462                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4463                           ;	Code Protection bit
  4464                           ;	CP = OFF, Program memory code protection is disabled
  4465                           ;	Data Code Protection bit
  4466                           ;	CPD = OFF, Data memory code protection is disabled
  4467                           ;	Brown Out Reset Selection bits
  4468                           ;	BOREN = OFF, BOR disabled
  4469                           ;	Internal External Switchover bit
  4470                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4471                           ;	Fail-Safe Clock Monitor Enabled bit
  4472                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4473                           ;	Low Voltage Programming Enable bit
  4474                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4475                           ;	In-Circuit Debugger Mode bit
  4476                           ;	DEBUG = 0x1, unprogramme  4477     2007                     	org	8199
  4478     2007  20D4               	dw	8404
  4479                           
  4480                           ;Config register CONFIG2 @ 0x2008
  4481                           ;	Brown-out Reset Selection bit
  4482                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4483                           ;	Flash Program Memory Self Write Enable bits
  4484                           ;	WRT = OFF, Write protection off
  4485     2008                     	org	8200
  4486     2008  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 6
		 -> STR_3(CODE[5]), STR_2(CODE[6]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _I2C_Master_Init->___lldiv
    _leer_x->_convertir
    _convertir->___bmul
    _enviar_x->_I2C_Master_Write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Escribir_dato->_descomponer
    _descomponer->___awdiv
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _portsetup->_I2C_Master_Init
    _Escribir_dato->_descomponer

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7708
                                              8 BANK0      2     2      0
                      _Escribir_dato
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _enviar_x
                             _leer_x
                          _portsetup
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _portsetup                                            0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _leer_x                                               4     4      0    1024
                                              9 COMMON     4     4      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _convertir
 ---------------------------------------------------------------------------------
 (2) _convertir                                            5     5      0     281
                                              4 COMMON     5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     121
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _enviar_x                                             4     3      1     750
                                              2 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     554
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     367
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Escribir_dato                                        3     1      2    3911
                                              3 BANK0      3     1      2
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                        _descomponer
                          _inttochar
 ---------------------------------------------------------------------------------
 (2) _inttochar                                            1     1      0     220
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _descomponer                                          8     5      3    2013
                                              9 COMMON     5     2      3
                                              0 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     760
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_dato
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _descomponer
       ___awdiv
       ___awmod
     _inttochar
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_String
     _Lcd_Write_Char
   _enviar_x
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _leer_x
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _convertir
       ___bmul
   _portsetup
     _I2C_Master_Init
       ___lldiv
   _setupINTOSC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      27       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      27      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 23 17:42:11 2023

                               pc 0002                    ___bmul@product 0072                    ?_Escribir_dato 0032  
                              l90 07E1                      ___awdiv@sign 0076                                fsr 0004  
                             l200 01AB                               l120 0202                               l104 0276  
                             l107 0419                               l212 02D9                               l206 03CD  
                             l222 0469                               l126 0387                               l152 01B8  
                             l209 051F                               l161 018B                               l129 030E  
                             l218 0249                               l146 0346                               l235 0469  
                             l155 0182                               l500 06B0                               l244 05E3  
                             l164 019E                               l149 01AC                               l261 057E  
                             l253 052B                               l190 021C                               l158 0194  
                             l254 0537                               l191 021D                               l167 029C  
                             l255 0543                               l192 0223                               l168 029F  
                             l256 054F                               l513 04C2                               l169 02A4  
                             l257 055B                               l194 0224                               l186 020C  
                             l258 0567                               l187 020F                               l259 0572  
                             l188 0215                               l189 0216                               l197 01E7  
                             l373 01CD                               l383 0649                               _RD3 0043  
                             _RD4 0044                               _RD5 0045                               _RD6 0046  
                             _RD7 0047                               u800 0208                               u801 0207  
                             u810 0213                               u811 0212                               u820 021A  
                             u900 0608                               u821 0219                               u901 0607  
                             u830 0221                               u831 0220                               u840 01B2  
                             u920 0623                               u841 01B1                               u921 0622  
                             u850 01B8                               u851 01B7                               u915 060A  
                             u860 01BF                               u940 0641                               u861 01BE  
                             u941 0640                               u925 061F                               u950 064F  
                             u870 01CC                               u951 064E                               u871 01CB  
                             u935 0633                               u960 065A                               u880 05F4  
                             u961 0659                               u881 05F3                               u970 066B  
                             u971 066A                               u990 067D                               u991 067C  
                             u895 05F9                               u985 066F                               _min 0029  
                             _sec 002B                               fsr0 0004                      ___awmod@sign 0076  
                            l1401 0608                              l1411 063B                              l1403 0611  
                            l1501 038E                              l1421 064F                              l1405 0623  
                            l1413 0641                              l1511 03B1                              l1503 039B  
                            l1431 0663                              l1423 0654                              l1407 0631  
                            l1361 021A                              l1513 03BE                              l1505 039E  
                            l1441 0679                              l1433 0665                              l1425 0656  
                            l1417 064A                              l1409 0632                              l1521 0313  
                            l1363 0221                              l1355 0204                              l1371 01D2  
                            l1515 03C1                              l1507 03A4                              l1451 069C  
                            l1443 067D                              l1435 066B                              l1427 065A  
                            l1419 064B                              l1531 057F                              l1611 0451  
                            l1603 0449                              l1523 0316                              l1357 0208  
                            l1373 01D8                              l1517 03C7                              l1509 03AB  
                            l1445 068E                              l1437 066E                              l1453 06A2  
                            l1429 065F                              l1461 046A                              l1541 05C4  
                            l1533 05BB                              l1621 045F                              l1613 0457  
                            l1605 044F                              l1365 01AC                              l1381 01BB  
                            l1525 0343                              l1701 053D                              l1359 0213  
                            l1375 01DB                              l1455 06A7                              l1447 0694  
                            l1439 0675                              l1471 047A                              l1463 046B  
                            l1551 05E2                              l1543 05CA                              l1535 05C2  
                            l1367 01B2                              l1383 01BF                              l1527 0344  
                            l1519 030F                              l1711 0577                              l1703 0549  
                            l1377 01E4                              l1369 01CF                              l1641 02C0  
                            l1633 02A6                              l1457 06AC                              l1449 0695  
                            l1481 0493                              l1473 047F                              l1465 046F  
                            l1385 01C3                              l1393 05E4                              l1529 0345  
                            l1721 0262                              l1713 057B                              l1705 0555  
                            l1801 0771                              l1651 02D6                              l1643 02C5  
                            l1635 02AC                              l1483 0497                              l1475 0485  
                            l1491 04B4                              l1467 0474                              l1627 0461  
                            l1619 0459                              l1571 0429                              l1563 0422  
                            l1555 041B                              l1731 04D2                              l1387 01C5  
                            l1379 01BA                              l1395 05F4                              l1723 0266  
                            l1715 024A                              l1707 0561                              l1811 078C  
                            l1803 0778                              l1645 02C8                              l1637 02AF  
                            l1493 04B9                              l1485 04A1                              l1477 0488  
                            l1469 0476                              l1549 05DC                              l1629 0467  
                            l1581 0437                              l1573 042F                              l1565 0427  
                            l1557 0420                              l1733 04E1                              l1741 0229  
                            l1389 01CC                              l1653 01E9                              l1397 05F7  
                            l1725 0267                              l1717 025A                              l1709 056C  
                            l1821 07A5                              l1813 0793                              l1805 077D  
                            l1647 02CE                              l1639 02BD                              l1495 04BE  
                            l1487 04A7                              l1479 048F                              l1735 04E7  
                            l1727 04C3                              l1743 0236                              l1663 017A  
                            l1671 018C                              l1655 01EC                              l1751 0386  
                            l1399 0604                              l1719 025E                              l1831 07BF  
                            l1823 07AB                              l1815 0799                              l1807 077E  
                            l1649 02D1                              l1489 04AE                              l1737 019F  
                            l1729 04C9                              l1745 023C                              l1665 017F  
                            l1681 028D                              l1673 0191                              l1657 01F7  
                            l1841 07D6                              l1833 07C6                              l1825 07B0  
                            l1817 079E                              l1809 0782                              l1761 06D4  
                            l1499 0389                              l1595 0441                              l1587 0439  
                            l1579 0431                              l1755 03D1                              l1739 0226  
                            l1691 0183                              l1667 0195                              l1747 02DB  
                            l1683 0292                              l1675 0277                              l1659 0201  
                            l1843 07DB                              l1835 07CB                              l1819 07A0  
                            l1827 07B1                              l1771 06F4                              l1763 06E2  
                            l1597 0447                              l1589 043F                              l1693 0188  
                            l1669 019A                              l1685 0298                              l1677 027C  
                            l1749 0348                              l1845 07DE                              l1837 07CE  
                            l1829 07B5                              l1781 0710                              l1773 06F5  
                            l1765 06EA                              l1757 06B1                              l1687 02A0  
                            l1679 0284                              l1695 0521                              l1839 07D1  
                            l1791 073E                              l1847 07E1                              l1783 071A  
                            l1775 06FC                              l1767 06F0                              l1759 06CE  
                            l1697 0527                              l1793 0749                              l1785 0723  
                            l1777 0700                              l1769 06F3                              l1699 0531  
                            l1795 0755                              l1787 072D                              l1779 0707  
                            l1797 0761                              l1789 0733                              l1799 0767  
                            STR_1 000F                              STR_2 0009                              STR_3 0014  
                            u1010 068E                              u1011 068D                              u1100 04A1  
                            u1005 067E                              u1101 04A0                              u1030 06A2  
                            u1031 06A1                              u1015 068A                              u1040 06A7  
                            u1120 04B4                              u1200 05CA                              u1041 06A6  
                            u1025 0696                              u1121 04B3                              u1105 049D  
                            u1201 05C9                              u1130 04B9                              u1050 046F  
                            u1210 05E2                              u1131 04B8                              u1115 04A8  
                            u1051 046E                              u1211 05E1                              u1140 038E  
                            u1060 047A                              u1300 045F                              u1220 0420  
                            u1141 038D                              u1061 0479                              u1301 045E  
                            u1221 041F                              u1070 0485                              u1310 0467  
                            u1230 0427                              u1071 0484                              u1311 0466  
                            u1231 0426                              u1160 03B1                              u1240 042F  
                            u1400 0561                              u1161 03B0                              u1241 042E  
                            u1401 0560                              u1090 0497                              u1250 0437  
                            u1410 056C                              u1155 0394                              u1091 0496  
                            u1251 0436                              u1411 056B                              u1260 043F  
                            u1340 0298                              u1180 0326                              u1420 0577  
                            u1500 07A5                              u1325 02B2                              u1085 0489  
                            u1261 043E                              u1341 0297                              u1421 0576  
                            u1501 07A4                              u1190 05C2                              u1270 0447  
                            u1430 0249                              u1350 0527                              u1510 07AB  
                            u1175 03B7                              u1191 05C1                              u1271 0446  
                            u1431 0248                              u1335 01EF                              u1351 0526  
                            u1511 07AA                              u1280 044F                              u1360 0531  
                            u1520 07B5                              u1440 0733                              u1281 044E  
                            u1185 0321                              u1361 0530                              u1521 07B4  
                            u1441 0732                              u1290 0457                              u1370 053D  
                            u1530 07C6                              u1450 0767                              u1291 0456  
                            u1371 053C                              u1531 07C5                              u1451 0766  
                            u1380 0549                              u1540 07CB                              u1460 0778  
                            u1381 0548                              u1541 07CA                              u1461 0777  
                            u1390 0555                              u1550 07D6                              u1470 0782  
                            u1391 0554                              u1551 07D5                              u1471 0781  
                            u1607 0744                              u1560 07DB                              u1480 0793  
                            u1561 07DA                              u1481 0792                              u1617 076D  
                            u1570 07E7                              u1490 0799                              u1571 07E6  
                            u1491 0798                              u1627 0788                              u1637 07BB  
                            u1647 04CD                              u1657 04DC                              u1667 04EB  
                            u1677 02C2                              u1597 0739                              u1687 02D3  
                            u1697 01DF                              _WPUB 0095                 ?_Lcd_Write_String 0070  
__end_of_I2C_Master_RepeatedStart 0195                              _main 06B1                              _modo 0027  
                            btemp 007E                              start 0000                ??_Lcd_Write_String 0075  
                 __end_of_Lcd_Cmd 01E8                 ___bmul@multiplier 0073                  ?_I2C_Master_Init 002F  
                ?_I2C_Master_Read 0070                  ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070  
                           ?_main 0070                   __end_of___awdiv 06B1                   __end_of___awmod 04C3  
                           _ANSEL 0188                   __end_of___lldiv 064A                   ___awdiv@divisor 0070  
                 ___awdiv@counter 0075                             _PORTA 0005                             _PORTB 0006  
                           _PORTD 0008                             _TRISA 0085                             _TRISB 0086  
                           _TRISD 0088                             pclath 000A                             status 0003  
                           wtemp0 007E                       leer_x@valor 007C                  __end_of_Lcd_Init 0520  
                __end_of_Lcd_Port 0225                   __initialization 07EB                   ??_Escribir_dato 007E  
                    __end_of_main 07EB                            ??_main 0037                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070                ??_I2C_Master_Write 0072  
                ___awdiv@dividend 0072                            _ANSELH 0189                         ??_Lcd_Cmd 0071  
                          _SSPADD 0093                            _SSPCON 0014                            _SSPBUF 0013  
        _I2C_Master_RepeatedStart 018C                            ___bmul 01B9                         ??___awdiv 0074  
                          _lecADC 002E                            _decena 002C                         ??___awmod 0074  
                       ??___lldiv 0078                  __end_of_enviar_x 030F                            _conver 0020  
                          _leer_x 0347                            _valADC 0024                  ___awdiv@quotient 0077  
                 ___awmod@divisor 0070                   ___awmod@counter 0075                            _unidad 002D  
                    ?_setupINTOSC 0070                   Lcd_Set_Cursor@a 0076                   Lcd_Set_Cursor@b 0074  
                 Lcd_Set_Cursor@y 0078                   Lcd_Set_Cursor@z 0077           __end_of__initialization 07FC  
               __end_of_Lcd_Clear 01AC               ___bmul@multiplicand 0070                   descomponer@cent 002F  
                  __pcstackCOMMON 0070                    _Lcd_Set_Cursor 0388                    _OPTION_REGbits 0081  
                       ?_Lcd_Init 0070                         ?_Lcd_Port 0070                      enviar_x@val1 0075  
                    enviar_x@val2 0072                        __pbssBANK0 0020                        __pmaintext 06B1  
                         ?___bmul 0070               convertir@conversion 0077                           ?_leer_x 0070  
          __end_of_Lcd_Set_Cursor 03CE                        ??_Lcd_Init 0074                        ??_Lcd_Port 0070  
                         _SSPCON2 0091                           _SSPSTAT 0094                        __stringtab 0003  
                       ?_enviar_x 0072                    _Lcd_Write_Char 02A5                           _Lcd_Cmd 01CE  
                         ___awdiv 064A                           ___awmod 046A                           ___lldiv 05E4  
               __end_of_convertir 0203                   ?_Lcd_Set_Cursor 0074                           __ptext1 0520  
                         __ptext2 024A                           __ptext3 030F                           __ptext4 05E4  
                         __ptext5 0347                           __ptext6 01E8                           __ptext7 01B9  
                         __ptext8 018C                           __ptext9 0277                  ___awmod@dividend 0072  
                         _minutos 0028                 __end_of_inttochar 046A            __end_of_Lcd_Write_Char 02DA  
            end_of_initialization 07FC        ??_I2C_Master_RepeatedStart 0070                        ??_enviar_x 0073  
                 ___lldiv@divisor 0070                   ___lldiv@counter 007D                  I2C_Master_Init@c 002F  
                I2C_Master_Read@a 0070                     leer_x@address 007B                         Lcd_Port@a 0070  
               __end_of_portsetup 0277             __end_of_Escribir_dato 041A                         _PORTBbits 0006  
                       _PORTDbits 0008                     ??_descomponer 007C                         _TRISCbits 0087  
                 ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0077                 Lcd_Write_String@i 0075  
                       _Lcd_Clear 019F                    __end_of___bmul 01CE                  _Lcd_Write_String 0225  
                  __end_of_leer_x 0388               start_initialization 07EB               __end_of_descomponer 05E4  
               ??_I2C_Master_Init 0033                 ??_I2C_Master_Read 0072                 ??_I2C_Master_Wait 0070  
               ??_I2C_Master_Stop 0070                 Escribir_dato@dato 0034                 Escribir_dato@posx 0032  
               Escribir_dato@posy 0033                        ?_Lcd_Clear 0070                          ??___bmul 0071  
                        ??_leer_x 0079                   Lcd_Write_Char@a 0074                   Lcd_Write_Char@y 0073  
                       ___latbits 0002                    descomponer@dec 0031                     __pcstackBANK0 002F  
                  descomponer@num 007B                    descomponer@pos 0079                    descomponer@uni 0030  
                 setupINTOSC@IRCF 0070                          ?_Lcd_Cmd 0070                  _I2C_Master_Start 017A  
                _I2C_Master_Write 0195                  ??_Lcd_Set_Cursor 0075                      inttochar@num 0070  
                        ?___awdiv 0070                          ?___awmod 0070                          ?___lldiv 0070  
                       __pstrings 0003                         _convertir 01E8                       _descomponer 057F  
                       _inttochar 041A                          Lcd_Cmd@a 0073                       ??_Lcd_Clear 0074  
                     __stringbase 0008                     ??_setupINTOSC 0070                         _portsetup 024A  
                      ?_convertir 0070                  ??_Lcd_Write_Char 0071                   convertir@decena 0076  
                        _Lcd_Init 04C3                          _Lcd_Port 0203               I2C_Master_Read@temp 0074  
                 convertir@unidad 0075          __end_of_Lcd_Write_String 024A                        ?_inttochar 0070  
       ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0009                        ?_portsetup 0070  
                 _I2C_Master_Init 030F                   _I2C_Master_Read 0277                   _I2C_Master_Wait 01AC  
                 _I2C_Master_Stop 0183                          __ptext10 02DA                          __ptext11 0195  
                        __ptext20 057F                          __ptext12 0183                          __ptext21 046A  
                        __ptext13 017A                          __ptext22 064A                          __ptext14 01AC  
                        __ptext23 02A5                          __ptext15 0225                          __ptext24 0388  
                        __ptext16 04C3                          __ptext25 01CE                          __ptext17 019F  
                        __ptext26 0203                          __ptext18 03CE                          __ptext19 041A  
             __end_of_setupINTOSC 057F                          _enviar_x 02DA                          _segundos 002A  
                  convertir@valor 0078                       ??_convertir 0074          __end_of_I2C_Master_Start 0183  
        __end_of_I2C_Master_Write 019F                Lcd_Write_Char@temp 0072                  ___lldiv@dividend 0074  
                     ??_inttochar 0070                         stringcode 0003                        _OSCCONbits 008F  
         __end_of_I2C_Master_Init 0347           __end_of_I2C_Master_Read 02A5           __end_of_I2C_Master_Wait 01B9  
                   _Escribir_dato 03CE           __end_of_I2C_Master_Stop 018C                Lcd_Set_Cursor@temp 0079  
                     ??_portsetup 007E                       _setupINTOSC 0520                      ?_descomponer 0079  
                ___lldiv@quotient 0079                 I2C_Master_Write@d 0070                          stringdir 0003  
                        stringtab 0003                       _SSPCON2bits 0091  
