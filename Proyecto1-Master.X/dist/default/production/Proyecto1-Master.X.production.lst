

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 23 18:27:54 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39     0000                     
    40                           ; Version 2.40
    41                           ; Generated 17/11/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75     0000                     	;# 
    76     0001                     	;# 
    77     0002                     	;# 
    78     0003                     	;# 
    79     0004                     	;# 
    80     0005                     	;# 
    81     0006                     	;# 
    82     0007                     	;# 
    83     0008                     	;# 
    84     0009                     	;# 
    85     000A                     	;# 
    86     000B                     	;# 
    87     000C                     	;# 
    88     000D                     	;# 
    89     000E                     	;# 
    90     000E                     	;# 
    91     000F                     	;# 
    92     0010                     	;# 
    93     0011                     	;# 
    94     0012                     	;# 
    95     0013                     	;# 
    96     0014                     	;# 
    97     0015                     	;# 
    98     0015                     	;# 
    99     0016                     	;# 
   100     0017                     	;# 
   101     0018                     	;# 
   102     0019                     	;# 
   103     001A                     	;# 
   104     001B                     	;# 
   105     001B                     	;# 
   106     001C                     	;# 
   107     001D                     	;# 
   108     001E                     	;# 
   109     001F                     	;# 
   110     0081                     	;# 
   111     0085                     	;# 
   112     0086                     	;# 
   113     0087                     	;# 
   114     0088                     	;# 
   115     0089                     	;# 
   116     008C                     	;# 
   117     008D                     	;# 
   118     008E                     	;# 
   119     008F                     	;# 
   120     0090                     	;# 
   121     0091                     	;# 
   122     0092                     	;# 
   123     0093                     	;# 
   124     0093                     	;# 
   125     0093                     	;# 
   126     0094                     	;# 
   127     0095                     	;# 
   128     0096                     	;# 
   129     0097                     	;# 
   130     0098                     	;# 
   131     0099                     	;# 
   132     009A                     	;# 
   133     009B                     	;# 
   134     009C                     	;# 
   135     009D                     	;# 
   136     009E                     	;# 
   137     009F                     	;# 
   138     0105                     	;# 
   139     0107                     	;# 
   140     0108                     	;# 
   141     0109                     	;# 
   142     010C                     	;# 
   143     010C                     	;# 
   144     010D                     	;# 
   145     010E                     	;# 
   146     010F                     	;# 
   147     0185                     	;# 
   148     0187                     	;# 
   149     0188                     	;# 
   150     0189                     	;# 
   151     018C                     	;# 
   152     018D                     	;# 
   153     0000                     	;# 
   154     0001                     	;# 
   155     0002                     	;# 
   156     0003                     	;# 
   157     0004                     	;# 
   158     0005                     	;# 
   159     0006                     	;# 
   160     0007                     	;# 
   161     0008                     	;# 
   162     0009                     	;# 
   163     000A                     	;# 
   164     000B                     	;# 
   165     000C                     	;# 
   166     000D                     	;# 
   167     000E                     	;# 
   168     000E                     	;# 
   169     000F                     	;# 
   170     0010                     	;# 
   171     0011                     	;# 
   172     0012                     	;# 
   173     0013                     	;# 
   174     0014                     	;# 
   175     0015                     	;# 
   176     0015                     	;# 
   177     0016                     	;# 
   178     0017                     	;# 
   179     0018                     	;# 
   180     0019                     	;# 
   181     001A                     	;# 
   182     001B                     	;# 
   183     001B                     	;# 
   184     001C                     	;# 
   185     001D                     	;# 
   186     001E                     	;# 
   187     001F                     	;# 
   188     0081                     	;# 
   189     0085                     	;# 
   190     0086                     	;# 
   191     0087                     	;# 
   192     0088                     	;# 
   193     0089                     	;# 
   194     008C                     	;# 
   195     008D                     	;# 
   196     008E                     	;# 
   197     008F                     	;# 
   198     0090                     	;# 
   199     0091                     	;# 
   200     0092                     	;# 
   201     0093                     	;# 
   202     0093                     	;# 
   203     0093                     	;# 
   204     0094                     	;# 
   205     0095                     	;# 
   206     0096                     	;# 
   207     0097                     	;# 
   208     0098                     	;# 
   209     0099                     	;# 
   210     009A                     	;# 
   211     009B                     	;# 
   212     009C                     	;# 
   213     009D                     	;# 
   214     009E                     	;# 
   215     009F                     	;# 
   216     0105                     	;# 
   217     0107                     	;# 
   218     0108                     	;# 
   219     0109                     	;# 
   220     010C                     	;# 
   221     010C                     	;# 
   222     010D                     	;# 
   223     010E                     	;# 
   224     010F                     	;# 
   225     0185                     	;# 
   226     0187                     	;# 
   227     0188                     	;# 
   228     0189                     	;# 
   229     018C                     	;# 
   230     018D                     	;# 
   231     0000                     	;# 
   232     0001                     	;# 
   233     0002                     	;# 
   234     0003                     	;# 
   235     0004                     	;# 
   236     0005                     	;# 
   237     0006                     	;# 
   238     0007                     	;# 
   239     0008                     	;# 
   240     0009                     	;# 
   241     000A                     	;# 
   242     000B                     	;# 
   243     000C                     	;# 
   244     000D                     	;# 
   245     000E                     	;# 
   246     000E                     	;# 
   247     000F                     	;# 
   248     0010                     	;# 
   249     0011                     	;# 
   250     0012                     	;# 
   251     0013                     	;# 
   252     0014                     	;# 
   253     0015                     	;# 
   254     0015                     	;# 
   255     0016                     	;# 
   256     0017                     	;# 
   257     0018                     	;# 
   258     0019                     	;# 
   259     001A                     	;# 
   260     001B                     	;# 
   261     001B                     	;# 
   262     001C                     	;# 
   263     001D                     	;# 
   264     001E                     	;# 
   265     001F                     	;# 
   266     0081                     	;# 
   267     0085                     	;# 
   268     0086                     	;# 
   269     0087                     	;# 
   270     0088                     	;# 
   271     0089                     	;# 
   272     008C                     	;# 
   273     008D                     	;# 
   274     008E                     	;# 
   275     008F                     	;# 
   276     0090                     	;# 
   277     0091                     	;# 
   278     0092                     	;# 
   279     0093                     	;# 
   280     0093                     	;# 
   281     0093                     	;# 
   282     0094                     	;# 
   283     0095                     	;# 
   284     0096                     	;# 
   285     0097                     	;# 
   286     0098                     	;# 
   287     0099                     	;# 
   288     009A                     	;# 
   289     009B                     	;# 
   290     009C                     	;# 
   291     009D                     	;# 
   292     009E                     	;# 
   293     009F                     	;# 
   294     0105                     	;# 
   295     0107                     	;# 
   296     0108                     	;# 
   297     0109                     	;# 
   298     010C                     	;# 
   299     010C                     	;# 
   300     010D                     	;# 
   301     010E                     	;# 
   302     010F                     	;# 
   303     0185                     	;# 
   304     0187                     	;# 
   305     0188                     	;# 
   306     0189                     	;# 
   307     018C                     	;# 
   308     018D                     	;# 
   309     0000                     	;# 
   310     0001                     	;# 
   311     0002                     	;# 
   312     0003                     	;# 
   313     0004                     	;# 
   314     0005                     	;# 
   315     0006                     	;# 
   316     0007                     	;# 
   317     0008                     	;# 
   318     0009                     	;# 
   319     000A                     	;# 
   320     000B                     	;# 
   321     000C                     	;# 
   322     000D                     	;# 
   323     000E                     	;# 
   324     000E                     	;# 
   325     000F                     	;# 
   326     0010                     	;# 
   327     0011                     	;# 
   328     0012                     	;# 
   329     0013                     	;# 
   330     0014                     	;# 
   331     0015                     	;# 
   332     0015                     	;# 
   333     0016                     	;# 
   334     0017                     	;# 
   335     0018                     	;# 
   336     0019                     	;# 
   337     001A                     	;# 
   338     001B                     	;# 
   339     001B                     	;# 
   340     001C                     	;# 
   341     001D                     	;# 
   342     001E                     	;# 
   343     001F                     	;# 
   344     0081                     	;# 
   345     0085                     	;# 
   346     0086                     	;# 
   347     0087                     	;# 
   348     0088                     	;# 
   349     0089                     	;# 
   350     008C                     	;# 
   351     008D                     	;# 
   352     008E                     	;# 
   353     008F                     	;# 
   354     0090                     	;# 
   355     0091                     	;# 
   356     0092                     	;# 
   357     0093                     	;# 
   358     0093                     	;# 
   359     0093                     	;# 
   360     0094                     	;# 
   361     0095                     	;# 
   362     0096                     	;# 
   363     0097                     	;# 
   364     0098                     	;# 
   365     0099                     	;# 
   366     009A                     	;# 
   367     009B                     	;# 
   368     009C                     	;# 
   369     009D                     	;# 
   370     009E                     	;# 
   371     009F                     	;# 
   372     0105                     	;# 
   373     0107                     	;# 
   374     0108                     	;# 
   375     0109                     	;# 
   376     010C                     	;# 
   377     010C                     	;# 
   378     010D                     	;# 
   379     010E                     	;# 
   380     010F                     	;# 
   381     0185                     	;# 
   382     0187                     	;# 
   383     0188                     	;# 
   384     0189                     	;# 
   385     018C                     	;# 
   386     018D                     	;# 
   387     0000                     	;# 
   388     0001                     	;# 
   389     0002                     	;# 
   390     0003                     	;# 
   391     0004                     	;# 
   392     0005                     	;# 
   393     0006                     	;# 
   394     0007                     	;# 
   395     0008                     	;# 
   396     0009                     	;# 
   397     000A                     	;# 
   398     000B                     	;# 
   399     000C                     	;# 
   400     000D                     	;# 
   401     000E                     	;# 
   402     000E                     	;# 
   403     000F                     	;# 
   404     0010                     	;# 
   405     0011                     	;# 
   406     0012                     	;# 
   407     0013                     	;# 
   408     0014                     	;# 
   409     0015                     	;# 
   410     0015                     	;# 
   411     0016                     	;# 
   412     0017                     	;# 
   413     0018                     	;# 
   414     0019                     	;# 
   415     001A                     	;# 
   416     001B                     	;# 
   417     001B                     	;# 
   418     001C                     	;# 
   419     001D                     	;# 
   420     001E                     	;# 
   421     001F                     	;# 
   422     0081                     	;# 
   423     0085                     	;# 
   424     0086                     	;# 
   425     0087                     	;# 
   426     0088                     	;# 
   427     0089                     	;# 
   428     008C                     	;# 
   429     008D                     	;# 
   430     008E                     	;# 
   431     008F                     	;# 
   432     0090                     	;# 
   433     0091                     	;# 
   434     0092                     	;# 
   435     0093                     	;# 
   436     0093                     	;# 
   437     0093                     	;# 
   438     0094                     	;# 
   439     0095                     	;# 
   440     0096                     	;# 
   441     0097                     	;# 
   442     0098                     	;# 
   443     0099                     	;# 
   444     009A                     	;# 
   445     009B                     	;# 
   446     009C                     	;# 
   447     009D                     	;# 
   448     009E                     	;# 
   449     009F                     	;# 
   450     0105                     	;# 
   451     0107                     	;# 
   452     0108                     	;# 
   453     0109                     	;# 
   454     010C                     	;# 
   455     010C                     	;# 
   456     010D                     	;# 
   457     010E                     	;# 
   458     010F                     	;# 
   459     0185                     	;# 
   460     0187                     	;# 
   461     0188                     	;# 
   462     0189                     	;# 
   463     018C                     	;# 
   464     018D                     	;# 
   465     0000                     	;# 
   466     0001                     	;# 
   467     0002                     	;# 
   468     0003                     	;# 
   469     0004                     	;# 
   470     0005                     	;# 
   471     0006                     	;# 
   472     0007                     	;# 
   473     0008                     	;# 
   474     0009                     	;# 
   475     000A                     	;# 
   476     000B                     	;# 
   477     000C                     	;# 
   478     000D                     	;# 
   479     000E                     	;# 
   480     000E                     	;# 
   481     000F                     	;# 
   482     0010                     	;# 
   483     0011                     	;# 
   484     0012                     	;# 
   485     0013                     	;# 
   486     0014                     	;# 
   487     0015                     	;# 
   488     0015                     	;# 
   489     0016                     	;# 
   490     0017                     	;# 
   491     0018                     	;# 
   492     0019                     	;# 
   493     001A                     	;# 
   494     001B                     	;# 
   495     001B                     	;# 
   496     001C                     	;# 
   497     001D                     	;# 
   498     001E                     	;# 
   499     001F                     	;# 
   500     0081                     	;# 
   501     0085                     	;# 
   502     0086                     	;# 
   503     0087                     	;# 
   504     0088                     	;# 
   505     0089                     	;# 
   506     008C                     	;# 
   507     008D                     	;# 
   508     008E                     	;# 
   509     008F                     	;# 
   510     0090                     	;# 
   511     0091                     	;# 
   512     0092                     	;# 
   513     0093                     	;# 
   514     0093                     	;# 
   515     0093                     	;# 
   516     0094                     	;# 
   517     0095                     	;# 
   518     0096                     	;# 
   519     0097                     	;# 
   520     0098                     	;# 
   521     0099                     	;# 
   522     009A                     	;# 
   523     009B                     	;# 
   524     009C                     	;# 
   525     009D                     	;# 
   526     009E                     	;# 
   527     009F                     	;# 
   528     0105                     	;# 
   529     0107                     	;# 
   530     0108                     	;# 
   531     0109                     	;# 
   532     010C                     	;# 
   533     010C                     	;# 
   534     010D                     	;# 
   535     010E                     	;# 
   536     010F                     	;# 
   537     0185                     	;# 
   538     0187                     	;# 
   539     0188                     	;# 
   540     0189                     	;# 
   541     018C                     	;# 
   542     018D                     	;# 
   543     0000                     	;# 
   544     0001                     	;# 
   545     0002                     	;# 
   546     0003                     	;# 
   547     0004                     	;# 
   548     0005                     	;# 
   549     0006                     	;# 
   550     0007                     	;# 
   551     0008                     	;# 
   552     0009                     	;# 
   553     000A                     	;# 
   554     000B                     	;# 
   555     000C                     	;# 
   556     000D                     	;# 
   557     000E                     	;# 
   558     000E                     	;# 
   559     000F                     	;# 
   560     0010                     	;# 
   561     0011                     	;# 
   562     0012                     	;# 
   563     0013                     	;# 
   564     0014                     	;# 
   565     0015                     	;# 
   566     0015                     	;# 
   567     0016                     	;# 
   568     0017                     	;# 
   569     0018                     	;# 
   570     0019                     	;# 
   571     001A                     	;# 
   572     001B                     	;# 
   573     001B                     	;# 
   574     001C                     	;# 
   575     001D                     	;# 
   576     001E                     	;# 
   577     001F                     	;# 
   578     0081                     	;# 
   579     0085                     	;# 
   580     0086                     	;# 
   581     0087                     	;# 
   582     0088                     	;# 
   583     0089                     	;# 
   584     008C                     	;# 
   585     008D                     	;# 
   586     008E                     	;# 
   587     008F                     	;# 
   588     0090                     	;# 
   589     0091                     	;# 
   590     0092                     	;# 
   591     0093                     	;# 
   592     0093                     	;# 
   593     0093                     	;# 
   594     0094                     	;# 
   595     0095                     	;# 
   596     0096                     	;# 
   597     0097                     	;# 
   598     0098                     	;# 
   599     0099                     	;# 
   600     009A                     	;# 
   601     009B                     	;# 
   602     009C                     	;# 
   603     009D                     	;# 
   604     009E                     	;# 
   605     009F                     	;# 
   606     0105                     	;# 
   607     0107                     	;# 
   608     0108                     	;# 
   609     0109                     	;# 
   610     010C                     	;# 
   611     010C                     	;# 
   612     010D                     	;# 
   613     010E                     	;# 
   614     010F                     	;# 
   615     0185                     	;# 
   616     0187                     	;# 
   617     0188                     	;# 
   618     0189                     	;# 
   619     018C                     	;# 
   620     018D                     	;# 
   621     0008                     _PORTDbits	set	8
   622     0013                     _SSPBUF	set	19
   623     0014                     _SSPCON	set	20
   624     0006                     _PORTB	set	6
   625     0008                     _PORTD	set	8
   626     0006                     _PORTBbits	set	6
   627     0005                     _PORTA	set	5
   628     0043                     _RD3	set	67
   629     0047                     _RD7	set	71
   630     0046                     _RD6	set	70
   631     0045                     _RD5	set	69
   632     0044                     _RD4	set	68
   633     008F                     _OSCCONbits	set	143
   634     0091                     _SSPCON2bits	set	145
   635     0087                     _TRISCbits	set	135
   636     0094                     _SSPSTAT	set	148
   637     0093                     _SSPADD	set	147
   638     0091                     _SSPCON2	set	145
   639     0081                     _OPTION_REGbits	set	129
   640     0095                     _WPUB	set	149
   641     0086                     _TRISB	set	134
   642     0088                     _TRISD	set	136
   643     0085                     _TRISA	set	133
   644     0189                     _ANSELH	set	393
   645     0188                     _ANSEL	set	392
   646                           
   647                           	psect	strings
   648     0003                     __pstrings:
   649     0003                     stringtab:
   650     0003                     __stringtab:
   651     0003                     stringcode:	
   652                           ;	String table - string pointers are 1 byte each
   653                           
   654     0003                     stringdir:
   655     0003  3000               	movlw	high stringdir
   656     0004  008A               	movwf	10
   657     0005  0804               	movf	4,w
   658     0006  0A84               	incf	4,f
   659     0007  0782               	addwf	2,f
   660     0008                     __stringbase:
   661     0008  3400               	retlw	0
   662     0009                     __end_of__stringtab:
   663     0009                     STR_1:
   664     0009  3453               	retlw	83	;'S'
   665     000A  343A               	retlw	58	;':'
   666     000B  3420               	retlw	32	;' '
   667     000C  3420               	retlw	32	;' '
   668     000D  343A               	retlw	58	;':'
   669     000E  3400               	retlw	0
   670                           
   671                           	psect	cinit
   672     07EB                     start_initialization:	
   673                           ; #config settings
   674                           
   675     07EB                     __initialization:
   676                           
   677                           ; Clear objects allocated to BANK0
   678     07EB  1283               	bcf	3,5	;RP0=0, select bank0
   679     07EC  1303               	bcf	3,6	;RP1=0, select bank0
   680     07ED  01A0               	clrf	__pbssBANK0& (0+127)
   681     07EE  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   682     07EF  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   683     07F0  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   684     07F1  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   685     07F2  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   686     07F3  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   687     07F4  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   688     07F5  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   689     07F6  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   690     07F7  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   691     07F8  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   692     07F9  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   693     07FA  01AD               	clrf	(__pbssBANK0+13)& (0+127)
   694     07FB  01AE               	clrf	(__pbssBANK0+14)& (0+127)
   695     07FC                     end_of_initialization:	
   696                           ;End of C runtime variable initialization code
   697                           
   698     07FC                     __end_of__initialization:
   699     07FC  0183               	clrf	3
   700     07FD  120A  118A  2E47   	ljmp	_main	;jump to C main() function
   701                           
   702                           	psect	bssBANK0
   703     0020                     __pbssBANK0:
   704     0020                     _conver:
   705     0020                     	ds	4
   706     0024                     _valADC:
   707     0024                     	ds	3
   708     0027                     _modo:
   709     0027                     	ds	1
   710     0028                     _minutos:
   711     0028                     	ds	1
   712     0029                     _min:
   713     0029                     	ds	1
   714     002A                     _segundos:
   715     002A                     	ds	1
   716     002B                     _sec:
   717     002B                     	ds	1
   718     002C                     _decena:
   719     002C                     	ds	1
   720     002D                     _unidad:
   721     002D                     	ds	1
   722     002E                     _lecADC:
   723     002E                     	ds	1
   724                           
   725                           	psect	cstackCOMMON
   726     0070                     __pcstackCOMMON:
   727     0070                     ?_setupINTOSC:
   728     0070                     ??_setupINTOSC:	
   729                           ; 1 bytes @ 0x0
   730                           
   731     0070                     ?_portsetup:	
   732                           ; 1 bytes @ 0x0
   733                           
   734     0070                     ?_Lcd_Init:	
   735                           ; 1 bytes @ 0x0
   736                           
   737     0070                     ?_Lcd_Clear:	
   738                           ; 1 bytes @ 0x0
   739                           
   740     0070                     ?_Lcd_Write_Char:	
   741                           ; 1 bytes @ 0x0
   742                           
   743     0070                     ?_Lcd_Write_String:	
   744                           ; 1 bytes @ 0x0
   745                           
   746     0070                     ?_leer_x:	
   747                           ; 1 bytes @ 0x0
   748                           
   749     0070                     ?_inttochar:	
   750                           ; 1 bytes @ 0x0
   751                           
   752     0070                     ??_inttochar:	
   753                           ; 1 bytes @ 0x0
   754                           
   755     0070                     ?_I2C_Master_Start:	
   756                           ; 1 bytes @ 0x0
   757                           
   758     0070                     ??_I2C_Master_Start:	
   759                           ; 1 bytes @ 0x0
   760                           
   761     0070                     ?_I2C_Master_Write:	
   762                           ; 1 bytes @ 0x0
   763                           
   764     0070                     ?_I2C_Master_RepeatedStart:	
   765                           ; 1 bytes @ 0x0
   766                           
   767     0070                     ??_I2C_Master_RepeatedStart:	
   768                           ; 1 bytes @ 0x0
   769                           
   770     0070                     ?_I2C_Master_Stop:	
   771                           ; 1 bytes @ 0x0
   772                           
   773     0070                     ??_I2C_Master_Stop:	
   774                           ; 1 bytes @ 0x0
   775                           
   776     0070                     ?_main:	
   777                           ; 1 bytes @ 0x0
   778                           
   779     0070                     ?_convertir:	
   780                           ; 1 bytes @ 0x0
   781                           
   782     0070                     ?_I2C_Master_Wait:	
   783                           ; 1 bytes @ 0x0
   784                           
   785     0070                     ??_I2C_Master_Wait:	
   786                           ; 1 bytes @ 0x0
   787                           
   788     0070                     ?_Lcd_Port:	
   789                           ; 1 bytes @ 0x0
   790                           
   791     0070                     ??_Lcd_Port:	
   792                           ; 1 bytes @ 0x0
   793                           
   794     0070                     ?_Lcd_Cmd:	
   795                           ; 1 bytes @ 0x0
   796                           
   797     0070                     ?___bmul:	
   798                           ; 1 bytes @ 0x0
   799                           
   800     0070                     ?_I2C_Master_Read:	
   801                           ; 1 bytes @ 0x0
   802                           
   803     0070                     ?___awdiv:	
   804                           ; 2 bytes @ 0x0
   805                           
   806     0070                     ?___awmod:	
   807                           ; 2 bytes @ 0x0
   808                           
   809     0070                     ?___lldiv:	
   810                           ; 2 bytes @ 0x0
   811                           
   812     0070                     Lcd_Port@a:	
   813                           ; 4 bytes @ 0x0
   814                           
   815     0070                     inttochar@num:	
   816                           ; 1 bytes @ 0x0
   817                           
   818     0070                     setupINTOSC@IRCF:	
   819                           ; 1 bytes @ 0x0
   820                           
   821     0070                     ___bmul@multiplicand:	
   822                           ; 1 bytes @ 0x0
   823                           
   824     0070                     I2C_Master_Write@d:	
   825                           ; 1 bytes @ 0x0
   826                           
   827     0070                     I2C_Master_Read@a:	
   828                           ; 2 bytes @ 0x0
   829                           
   830     0070                     ___awdiv@divisor:	
   831                           ; 2 bytes @ 0x0
   832                           
   833     0070                     ___awmod@divisor:	
   834                           ; 2 bytes @ 0x0
   835                           
   836     0070                     ___lldiv@divisor:	
   837                           ; 2 bytes @ 0x0
   838                           
   839                           
   840                           ; 4 bytes @ 0x0
   841     0070                     	ds	1
   842     0071                     ??_Lcd_Write_Char:
   843     0071                     ??_Lcd_Cmd:	
   844                           ; 1 bytes @ 0x1
   845                           
   846     0071                     ??___bmul:	
   847                           ; 1 bytes @ 0x1
   848                           
   849                           
   850                           ; 1 bytes @ 0x1
   851     0071                     	ds	1
   852     0072                     ?_enviar_x:
   853     0072                     ??_I2C_Master_Write:	
   854                           ; 1 bytes @ 0x2
   855                           
   856     0072                     ??_I2C_Master_Read:	
   857                           ; 1 bytes @ 0x2
   858                           
   859     0072                     enviar_x@val2:	
   860                           ; 1 bytes @ 0x2
   861                           
   862     0072                     Lcd_Write_Char@temp:	
   863                           ; 1 bytes @ 0x2
   864                           
   865     0072                     ___bmul@product:	
   866                           ; 1 bytes @ 0x2
   867                           
   868     0072                     ___awdiv@dividend:	
   869                           ; 1 bytes @ 0x2
   870                           
   871     0072                     ___awmod@dividend:	
   872                           ; 2 bytes @ 0x2
   873                           
   874                           
   875                           ; 2 bytes @ 0x2
   876     0072                     	ds	1
   877     0073                     ??_enviar_x:
   878     0073                     Lcd_Cmd@a:	
   879                           ; 1 bytes @ 0x3
   880                           
   881     0073                     Lcd_Write_Char@y:	
   882                           ; 1 bytes @ 0x3
   883                           
   884     0073                     ___bmul@multiplier:	
   885                           ; 1 bytes @ 0x3
   886                           
   887                           
   888                           ; 1 bytes @ 0x3
   889     0073                     	ds	1
   890     0074                     ??_Lcd_Init:
   891     0074                     ??_Lcd_Clear:	
   892                           ; 1 bytes @ 0x4
   893                           
   894     0074                     ?_Lcd_Set_Cursor:	
   895                           ; 1 bytes @ 0x4
   896                           
   897     0074                     ??_convertir:	
   898                           ; 1 bytes @ 0x4
   899                           
   900     0074                     ??___awdiv:	
   901                           ; 1 bytes @ 0x4
   902                           
   903     0074                     ??___awmod:	
   904                           ; 1 bytes @ 0x4
   905                           
   906     0074                     Lcd_Set_Cursor@b:	
   907                           ; 1 bytes @ 0x4
   908                           
   909     0074                     Lcd_Write_Char@a:	
   910                           ; 1 bytes @ 0x4
   911                           
   912     0074                     I2C_Master_Read@temp:	
   913                           ; 1 bytes @ 0x4
   914                           
   915     0074                     ___lldiv@dividend:	
   916                           ; 2 bytes @ 0x4
   917                           
   918                           
   919                           ; 4 bytes @ 0x4
   920     0074                     	ds	1
   921     0075                     ??_Lcd_Set_Cursor:
   922     0075                     ??_Lcd_Write_String:	
   923                           ; 1 bytes @ 0x5
   924                           
   925     0075                     convertir@unidad:	
   926                           ; 1 bytes @ 0x5
   927                           
   928     0075                     enviar_x@val1:	
   929                           ; 1 bytes @ 0x5
   930                           
   931     0075                     ___awdiv@counter:	
   932                           ; 1 bytes @ 0x5
   933                           
   934     0075                     ___awmod@counter:	
   935                           ; 1 bytes @ 0x5
   936                           
   937     0075                     Lcd_Write_String@i:	
   938                           ; 1 bytes @ 0x5
   939                           
   940                           
   941                           ; 2 bytes @ 0x5
   942     0075                     	ds	1
   943     0076                     convertir@decena:
   944     0076                     Lcd_Set_Cursor@a:	
   945                           ; 1 bytes @ 0x6
   946                           
   947     0076                     ___awdiv@sign:	
   948                           ; 1 bytes @ 0x6
   949                           
   950     0076                     ___awmod@sign:	
   951                           ; 1 bytes @ 0x6
   952                           
   953                           
   954                           ; 1 bytes @ 0x6
   955     0076                     	ds	1
   956     0077                     convertir@conversion:
   957     0077                     Lcd_Set_Cursor@z:	
   958                           ; 1 bytes @ 0x7
   959                           
   960     0077                     Lcd_Write_String@a:	
   961                           ; 1 bytes @ 0x7
   962                           
   963     0077                     ___awdiv@quotient:	
   964                           ; 1 bytes @ 0x7
   965                           
   966                           
   967                           ; 2 bytes @ 0x7
   968     0077                     	ds	1
   969     0078                     ??___lldiv:
   970     0078                     convertir@valor:	
   971                           ; 1 bytes @ 0x8
   972                           
   973     0078                     Lcd_Set_Cursor@y:	
   974                           ; 1 bytes @ 0x8
   975                           
   976                           
   977                           ; 1 bytes @ 0x8
   978     0078                     	ds	1
   979     0079                     ??_leer_x:
   980     0079                     ?_descomponer:	
   981                           ; 1 bytes @ 0x9
   982                           
   983     0079                     Lcd_Set_Cursor@temp:	
   984                           ; 1 bytes @ 0x9
   985                           
   986     0079                     descomponer@pos:	
   987                           ; 1 bytes @ 0x9
   988                           
   989     0079                     ___lldiv@quotient:	
   990                           ; 2 bytes @ 0x9
   991                           
   992                           
   993                           ; 4 bytes @ 0x9
   994     0079                     	ds	2
   995     007B                     leer_x@address:
   996     007B                     descomponer@num:	
   997                           ; 1 bytes @ 0xB
   998                           
   999                           
  1000                           ; 1 bytes @ 0xB
  1001     007B                     	ds	1
  1002     007C                     ??_descomponer:
  1003     007C                     leer_x@valor:	
  1004                           ; 1 bytes @ 0xC
  1005                           
  1006                           
  1007                           ; 1 bytes @ 0xC
  1008     007C                     	ds	1
  1009     007D                     ___lldiv@counter:
  1010                           
  1011                           ; 1 bytes @ 0xD
  1012     007D                     	ds	1
  1013     007E                     ??_portsetup:
  1014     007E                     ??_Escribir_dato:	
  1015                           ; 1 bytes @ 0xE
  1016                           
  1017                           
  1018                           	psect	cstackBANK0
  1019     002F                     __pcstackBANK0:	
  1020                           ; 1 bytes @ 0xE
  1021                           
  1022     002F                     ?_I2C_Master_Init:
  1023     002F                     descomponer@cent:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026     002F                     I2C_Master_Init@c:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029                           
  1030                           ; 4 bytes @ 0x0
  1031     002F                     	ds	1
  1032     0030                     descomponer@uni:
  1033                           
  1034                           ; 1 bytes @ 0x1
  1035     0030                     	ds	1
  1036     0031                     descomponer@dec:
  1037                           
  1038                           ; 1 bytes @ 0x2
  1039     0031                     	ds	1
  1040     0032                     ?_Escribir_dato:
  1041     0032                     Escribir_dato@posx:	
  1042                           ; 1 bytes @ 0x3
  1043                           
  1044                           
  1045                           ; 1 bytes @ 0x3
  1046     0032                     	ds	1
  1047     0033                     ??_I2C_Master_Init:
  1048     0033                     Escribir_dato@posy:	
  1049                           ; 1 bytes @ 0x4
  1050                           
  1051                           
  1052                           ; 1 bytes @ 0x4
  1053     0033                     	ds	1
  1054     0034                     Escribir_dato@dato:
  1055                           
  1056                           ; 1 bytes @ 0x5
  1057     0034                     	ds	3
  1058     0037                     ??_main:
  1059                           
  1060                           ; 1 bytes @ 0x8
  1061     0037                     	ds	2
  1062     0039                     _main$175:
  1063                           
  1064                           ; 1 bytes @ 0xA
  1065     0039                     	ds	1
  1066                           
  1067                           	psect	maintext
  1068     0647                     __pmaintext:	
  1069 ;;
  1070 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1071 ;;
  1072 ;; *************** function _main *****************
  1073 ;; Defined at:
  1074 ;;		line 63 in file "main.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;		None
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : B00/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1088 ;;      Params:         0       0       0       0       0
  1089 ;;      Locals:         0       1       0       0       0
  1090 ;;      Temps:          0       2       0       0       0
  1091 ;;      Totals:         0       3       0       0       0
  1092 ;;Total ram usage:        3 bytes
  1093 ;; Hardware stack levels required when called: 4
  1094 ;; This function calls:
  1095 ;;		_Escribir_dato
  1096 ;;		_Lcd_Clear
  1097 ;;		_Lcd_Init
  1098 ;;		_Lcd_Set_Cursor
  1099 ;;		_Lcd_Write_Char
  1100 ;;		_Lcd_Write_String
  1101 ;;		_enviar_x
  1102 ;;		_leer_x
  1103 ;;		_portsetup
  1104 ;;		_setupINTOSC
  1105 ;; This function is called by:
  1106 ;;		Startup code after reset
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110     0647                     _main:	
  1111                           ;psect for function _main
  1112                           
  1113     0647                     l1772:	
  1114                           ;incstack = 0
  1115                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1116                           
  1117                           
  1118                           ;main.c: 64:     setupINTOSC(7);
  1119     0647  3007               	movlw	7
  1120     0648  120A  118A  24B6  120A  118A  	fcall	_setupINTOSC
  1121                           
  1122                           ;main.c: 65:     portsetup();
  1123     064D  120A  118A  21E0  120A  118A  	fcall	_portsetup
  1124                           
  1125                           ;main.c: 67:     Lcd_Init();
  1126     0652  120A  118A  2459  120A  118A  	fcall	_Lcd_Init
  1127                           
  1128                           ;main.c: 68:     Lcd_Clear();
  1129     0657  120A  118A  2135  120A  118A  	fcall	_Lcd_Clear
  1130                           
  1131                           ;main.c: 69:     Lcd_Set_Cursor(1,13);
  1132     065C  300D               	movlw	13
  1133     065D  00F4               	movwf	Lcd_Set_Cursor@b
  1134     065E  3001               	movlw	1
  1135     065F  120A  118A  231E  120A  118A  	fcall	_Lcd_Set_Cursor
  1136                           
  1137                           ;main.c: 70:     Lcd_Write_Char(':');
  1138     0664  303A               	movlw	58
  1139     0665  120A  118A  223B  120A  118A  	fcall	_Lcd_Write_Char
  1140                           
  1141                           ;main.c: 71:     Lcd_Set_Cursor(2,9);
  1142     066A  3009               	movlw	9
  1143     066B  00F4               	movwf	Lcd_Set_Cursor@b
  1144     066C  3002               	movlw	2
  1145     066D  120A  118A  231E  120A  118A  	fcall	_Lcd_Set_Cursor
  1146     0672                     l1774:
  1147                           
  1148                           ;main.c: 72:     Lcd_Write_String("S:  :");
  1149     0672  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1150     0673  120A  118A  21BB  120A  118A  	fcall	_Lcd_Write_String
  1151     0678                     l1776:
  1152                           
  1153                           ;main.c: 75:     modo = 0;
  1154     0678  1283               	bcf	3,5	;RP0=0, select bank0
  1155     0679  1303               	bcf	3,6	;RP1=0, select bank0
  1156     067A  01A7               	clrf	_modo
  1157     067B                     l1778:
  1158                           
  1159                           ;main.c: 76:     sec = 0;
  1160     067B  01AB               	clrf	_sec
  1161     067C                     l1780:
  1162                           
  1163                           ;main.c: 77:     min = 0;
  1164     067C  01A9               	clrf	_min
  1165     067D                     l1782:
  1166                           
  1167                           ;main.c: 79:     enviar_x(0, 0);
  1168     067D  01F2               	clrf	enviar_x@val2
  1169     067E  3000               	movlw	0
  1170     067F  120A  118A  2270  120A  118A  	fcall	_enviar_x
  1171     0684                     l1784:
  1172                           
  1173                           ;main.c: 82:         PORTA = modo;
  1174     0684  1283               	bcf	3,5	;RP0=0, select bank0
  1175     0685  1303               	bcf	3,6	;RP1=0, select bank0
  1176     0686  0827               	movf	_modo,w
  1177     0687  0085               	movwf	5	;volatile
  1178     0688                     l1786:
  1179                           
  1180                           ;main.c: 84:         enviar_x(0, 0);
  1181     0688  01F2               	clrf	enviar_x@val2
  1182     0689  3000               	movlw	0
  1183     068A  120A  118A  2270  120A  118A  	fcall	_enviar_x
  1184     068F                     l1788:
  1185                           
  1186                           ;main.c: 86:         sec = leer_x(0x00);
  1187     068F  3000               	movlw	0
  1188     0690  120A  118A  22DD  120A  118A  	fcall	_leer_x
  1189     0695  1283               	bcf	3,5	;RP0=0, select bank0
  1190     0696  1303               	bcf	3,6	;RP1=0, select bank0
  1191     0697  00AB               	movwf	_sec
  1192     0698                     l1790:
  1193                           
  1194                           ;main.c: 87:         Escribir_dato(sec, 14, 1);
  1195     0698  300E               	movlw	14
  1196     0699  00B2               	movwf	Escribir_dato@posx
  1197     069A  01B3               	clrf	Escribir_dato@posy
  1198     069B  0AB3               	incf	Escribir_dato@posy,f
  1199     069C  082B               	movf	_sec,w
  1200     069D  120A  118A  2364  120A  118A  	fcall	_Escribir_dato
  1201     06A2                     l1792:
  1202                           
  1203                           ;main.c: 89:         min = leer_x(0x01);
  1204     06A2  3001               	movlw	1
  1205     06A3  120A  118A  22DD  120A  118A  	fcall	_leer_x
  1206     06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1207     06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1208     06AA  00A9               	movwf	_min
  1209     06AB                     l1794:
  1210                           
  1211                           ;main.c: 90:         Escribir_dato(min, 11, 1);
  1212     06AB  300B               	movlw	11
  1213     06AC  00B2               	movwf	Escribir_dato@posx
  1214     06AD  01B3               	clrf	Escribir_dato@posy
  1215     06AE  0AB3               	incf	Escribir_dato@posy,f
  1216     06AF  0829               	movf	_min,w
  1217     06B0  120A  118A  2364  120A  118A  	fcall	_Escribir_dato
  1218     06B5                     l1796:
  1219                           
  1220                           ;main.c: 92:         if(!PORTBbits.RB4){
  1221     06B5  1283               	bcf	3,5	;RP0=0, select bank0
  1222     06B6  1303               	bcf	3,6	;RP1=0, select bank0
  1223     06B7  1A06               	btfsc	6,4	;volatile
  1224     06B8  2EBA               	goto	u1471
  1225     06B9  2EBB               	goto	u1470
  1226     06BA                     u1471:
  1227     06BA  2E84               	goto	l1784
  1228     06BB                     u1470:
  1229     06BB                     l1798:
  1230                           
  1231                           ;main.c: 93:             _delay((unsigned long)((20)*(8000000/4000.0)));
  1232     06BB  3034               	movlw	52
  1233     06BC  1283               	bcf	3,5	;RP0=0, select bank0
  1234     06BD  1303               	bcf	3,6	;RP1=0, select bank0
  1235     06BE  00B8               	movwf	??_main+1
  1236     06BF  30F1               	movlw	241
  1237     06C0  00B7               	movwf	??_main
  1238     06C1                     u1657:
  1239     06C1  0BB7               	decfsz	??_main,f
  1240     06C2  2EC1               	goto	u1657
  1241     06C3  0BB8               	decfsz	??_main+1,f
  1242     06C4  2EC1               	goto	u1657
  1243                           
  1244                           ;main.c: 94:             while(PORTBbits.RB3){
  1245     06C5  2F69               	goto	l1856
  1246     06C6                     l1800:
  1247                           
  1248                           ;main.c: 95:                 _delay((unsigned long)((30)*(8000000/4000.0)));
  1249     06C6  304E               	movlw	78
  1250     06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1251     06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1252     06C9  00B8               	movwf	??_main+1
  1253     06CA  30EA               	movlw	234
  1254     06CB  00B7               	movwf	??_main
  1255     06CC                     u1667:
  1256     06CC  0BB7               	decfsz	??_main,f
  1257     06CD  2ECC               	goto	u1667
  1258     06CE  0BB8               	decfsz	??_main+1,f
  1259     06CF  2ECC               	goto	u1667
  1260     06D0  0000               	nop
  1261     06D1                     l1802:
  1262                           
  1263                           ;main.c: 96:                 Escribir_dato(sec, 14, 1);
  1264     06D1  300E               	movlw	14
  1265     06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1266     06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1267     06D4  00B2               	movwf	Escribir_dato@posx
  1268     06D5  01B3               	clrf	Escribir_dato@posy
  1269     06D6  0AB3               	incf	Escribir_dato@posy,f
  1270     06D7  082B               	movf	_sec,w
  1271     06D8  120A  118A  2364  120A  118A  	fcall	_Escribir_dato
  1272     06DD                     l1804:
  1273                           
  1274                           ;main.c: 97:                 Escribir_dato(min, 11, 1);
  1275     06DD  300B               	movlw	11
  1276     06DE  1283               	bcf	3,5	;RP0=0, select bank0
  1277     06DF  1303               	bcf	3,6	;RP1=0, select bank0
  1278     06E0  00B2               	movwf	Escribir_dato@posx
  1279     06E1  01B3               	clrf	Escribir_dato@posy
  1280     06E2  0AB3               	incf	Escribir_dato@posy,f
  1281     06E3  0829               	movf	_min,w
  1282     06E4  120A  118A  2364  120A  118A  	fcall	_Escribir_dato
  1283     06E9                     l1806:
  1284                           
  1285                           ;main.c: 99:                 if(PORTBbits.RB7 == 0){
  1286     06E9  1283               	bcf	3,5	;RP0=0, select bank0
  1287     06EA  1303               	bcf	3,6	;RP1=0, select bank0
  1288     06EB  1B86               	btfsc	6,7	;volatile
  1289     06EC  2EEE               	goto	u1481
  1290     06ED  2EEF               	goto	u1480
  1291     06EE                     u1481:
  1292     06EE  2F06               	goto	l1816
  1293     06EF                     u1480:
  1294     06EF                     l1808:
  1295                           
  1296                           ;main.c: 100:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1297     06EF  3034               	movlw	52
  1298     06F0  1283               	bcf	3,5	;RP0=0, select bank0
  1299     06F1  1303               	bcf	3,6	;RP1=0, select bank0
  1300     06F2  00B8               	movwf	??_main+1
  1301     06F3  30F1               	movlw	241
  1302     06F4  00B7               	movwf	??_main
  1303     06F5                     u1677:
  1304     06F5  0BB7               	decfsz	??_main,f
  1305     06F6  2EF5               	goto	u1677
  1306     06F7  0BB8               	decfsz	??_main+1,f
  1307     06F8  2EF5               	goto	u1677
  1308     06F9                     l1810:
  1309                           
  1310                           ;main.c: 101:                     if (modo < 1){
  1311     06F9  1283               	bcf	3,5	;RP0=0, select bank0
  1312     06FA  1303               	bcf	3,6	;RP1=0, select bank0
  1313     06FB  0827               	movf	_modo,w
  1314     06FC  1D03               	btfss	3,2
  1315     06FD  2EFF               	goto	u1491
  1316     06FE  2F00               	goto	u1490
  1317     06FF                     u1491:
  1318     06FF  2F05               	goto	l1814
  1319     0700                     u1490:
  1320     0700                     l1812:
  1321                           
  1322                           ;main.c: 102:                         modo += 1;
  1323     0700  3001               	movlw	1
  1324     0701  00B7               	movwf	??_main
  1325     0702  0837               	movf	??_main,w
  1326     0703  07A7               	addwf	_modo,f
  1327                           
  1328                           ;main.c: 103:                     }
  1329     0704  2F06               	goto	l1816
  1330     0705                     l1814:
  1331                           
  1332                           ;main.c: 105:                         modo = 0;
  1333     0705  01A7               	clrf	_modo
  1334     0706                     l1816:
  1335                           
  1336                           ;main.c: 109:                 if(PORTBbits.RB6 == 0){
  1337     0706  1B06               	btfsc	6,6	;volatile
  1338     0707  2F09               	goto	u1501
  1339     0708  2F0A               	goto	u1500
  1340     0709                     u1501:
  1341     0709  2F39               	goto	l1836
  1342     070A                     u1500:
  1343     070A                     l1818:
  1344                           
  1345                           ;main.c: 110:                     _delay((unsigned long)((50)*(8000000/4000.0)));
  1346     070A  3082               	movlw	130
  1347     070B  1283               	bcf	3,5	;RP0=0, select bank0
  1348     070C  1303               	bcf	3,6	;RP1=0, select bank0
  1349     070D  00B8               	movwf	??_main+1
  1350     070E  30DD               	movlw	221
  1351     070F  00B7               	movwf	??_main
  1352     0710                     u1687:
  1353     0710  0BB7               	decfsz	??_main,f
  1354     0711  2F10               	goto	u1687
  1355     0712  0BB8               	decfsz	??_main+1,f
  1356     0713  2F10               	goto	u1687
  1357     0714                     l1820:
  1358                           
  1359                           ;main.c: 111:                     if (modo == 0){
  1360     0714  1283               	bcf	3,5	;RP0=0, select bank0
  1361     0715  1303               	bcf	3,6	;RP1=0, select bank0
  1362     0716  0827               	movf	_modo,w
  1363     0717  1D03               	btfss	3,2
  1364     0718  2F1A               	goto	u1511
  1365     0719  2F1B               	goto	u1510
  1366     071A                     u1511:
  1367     071A  2F28               	goto	l1828
  1368     071B                     u1510:
  1369     071B                     l1822:
  1370                           
  1371                           ;main.c: 112:                         if (sec<59){
  1372     071B  303B               	movlw	59
  1373     071C  022B               	subwf	_sec,w
  1374     071D  1803               	skipnc
  1375     071E  2F20               	goto	u1521
  1376     071F  2F21               	goto	u1520
  1377     0720                     u1521:
  1378     0720  2F26               	goto	l1826
  1379     0721                     u1520:
  1380     0721                     l1824:
  1381                           
  1382                           ;main.c: 113:                             sec ++;
  1383     0721  3001               	movlw	1
  1384     0722  00B7               	movwf	??_main
  1385     0723  0837               	movf	??_main,w
  1386     0724  07AB               	addwf	_sec,f
  1387                           
  1388                           ;main.c: 114:                         }
  1389     0725  2F39               	goto	l1836
  1390     0726                     l1826:
  1391                           
  1392                           ;main.c: 116:                             sec = 0;
  1393     0726  01AB               	clrf	_sec
  1394     0727  2F39               	goto	l1836
  1395     0728                     l1828:
  1396     0728  0327               	decf	_modo,w
  1397     0729  1D03               	btfss	3,2
  1398     072A  2F2C               	goto	u1531
  1399     072B  2F2D               	goto	u1530
  1400     072C                     u1531:
  1401     072C  2F39               	goto	l1836
  1402     072D                     u1530:
  1403     072D                     l1830:
  1404                           
  1405                           ;main.c: 120:                         if (min<59){
  1406     072D  303B               	movlw	59
  1407     072E  0229               	subwf	_min,w
  1408     072F  1803               	skipnc
  1409     0730  2F32               	goto	u1541
  1410     0731  2F33               	goto	u1540
  1411     0732                     u1541:
  1412     0732  2F38               	goto	l1834
  1413     0733                     u1540:
  1414     0733                     l1832:
  1415                           
  1416                           ;main.c: 121:                             min++;
  1417     0733  3001               	movlw	1
  1418     0734  00B7               	movwf	??_main
  1419     0735  0837               	movf	??_main,w
  1420     0736  07A9               	addwf	_min,f
  1421                           
  1422                           ;main.c: 122:                         }
  1423     0737  2F39               	goto	l1836
  1424     0738                     l1834:
  1425                           
  1426                           ;main.c: 124:                             min = 0;
  1427     0738  01A9               	clrf	_min
  1428     0739                     l1836:
  1429                           
  1430                           ;main.c: 131:                 if(PORTBbits.RB5 == 0){
  1431     0739  1A86               	btfsc	6,5	;volatile
  1432     073A  2F3C               	goto	u1551
  1433     073B  2F3D               	goto	u1550
  1434     073C                     u1551:
  1435     073C  2F69               	goto	l1856
  1436     073D                     u1550:
  1437     073D                     l1838:
  1438                           
  1439                           ;main.c: 132:                     _delay((unsigned long)((50)*(8000000/4000.0)));
  1440     073D  3082               	movlw	130
  1441     073E  1283               	bcf	3,5	;RP0=0, select bank0
  1442     073F  1303               	bcf	3,6	;RP1=0, select bank0
  1443     0740  00B8               	movwf	??_main+1
  1444     0741  30DD               	movlw	221
  1445     0742  00B7               	movwf	??_main
  1446     0743                     u1697:
  1447     0743  0BB7               	decfsz	??_main,f
  1448     0744  2F43               	goto	u1697
  1449     0745  0BB8               	decfsz	??_main+1,f
  1450     0746  2F43               	goto	u1697
  1451     0747                     l1840:
  1452                           
  1453                           ;main.c: 134:                     if (modo == 0){
  1454     0747  1283               	bcf	3,5	;RP0=0, select bank0
  1455     0748  1303               	bcf	3,6	;RP1=0, select bank0
  1456     0749  0827               	movf	_modo,w
  1457     074A  1D03               	btfss	3,2
  1458     074B  2F4D               	goto	u1561
  1459     074C  2F4E               	goto	u1560
  1460     074D                     u1561:
  1461     074D  2F59               	goto	l1848
  1462     074E                     u1560:
  1463     074E                     l1842:
  1464                           
  1465                           ;main.c: 135:                         if (sec > 0){
  1466     074E  082B               	movf	_sec,w
  1467     074F  1903               	btfsc	3,2
  1468     0750  2F52               	goto	u1571
  1469     0751  2F53               	goto	u1570
  1470     0752                     u1571:
  1471     0752  2F56               	goto	l1846
  1472     0753                     u1570:
  1473     0753                     l1844:
  1474                           
  1475                           ;main.c: 136:                             sec--;
  1476     0753  3001               	movlw	1
  1477     0754  02AB               	subwf	_sec,f
  1478                           
  1479                           ;main.c: 137:                         }
  1480     0755  2F69               	goto	l1856
  1481     0756                     l1846:
  1482                           
  1483                           ;main.c: 139:                             sec = 59;
  1484     0756  303B               	movlw	59
  1485     0757  00AB               	movwf	_sec
  1486     0758  2F69               	goto	l1856
  1487     0759                     l1848:
  1488     0759  0327               	decf	_modo,w
  1489     075A  1D03               	btfss	3,2
  1490     075B  2F5D               	goto	u1581
  1491     075C  2F5E               	goto	u1580
  1492     075D                     u1581:
  1493     075D  2F69               	goto	l90
  1494     075E                     u1580:
  1495     075E                     l1850:
  1496                           
  1497                           ;main.c: 143:                         if (min > 0){
  1498     075E  0829               	movf	_min,w
  1499     075F  1903               	btfsc	3,2
  1500     0760  2F62               	goto	u1591
  1501     0761  2F63               	goto	u1590
  1502     0762                     u1591:
  1503     0762  2F66               	goto	l1854
  1504     0763                     u1590:
  1505     0763                     l1852:
  1506                           
  1507                           ;main.c: 144:                             min--;
  1508     0763  3001               	movlw	1
  1509     0764  02A9               	subwf	_min,f
  1510                           
  1511                           ;main.c: 145:                         }
  1512     0765  2F69               	goto	l1856
  1513     0766                     l1854:
  1514                           
  1515                           ;main.c: 147:                             min = 59;
  1516     0766  303B               	movlw	59
  1517     0767  00A9               	movwf	_min
  1518     0768  2F69               	goto	l1856
  1519     0769                     l90:	
  1520                           ;main.c: 150:                 }
  1521                           
  1522     0769                     l1856:
  1523                           
  1524                           ;main.c: 94:             while(PORTBbits.RB3){
  1525     0769  1283               	bcf	3,5	;RP0=0, select bank0
  1526     076A  1303               	bcf	3,6	;RP1=0, select bank0
  1527     076B  1986               	btfsc	6,3	;volatile
  1528     076C  2F6E               	goto	u1601
  1529     076D  2F6F               	goto	u1600
  1530     076E                     u1601:
  1531     076E  2EC6               	goto	l1800
  1532     076F                     u1600:
  1533     076F                     l1858:
  1534                           
  1535                           ;main.c: 152:             enviar_x(0,0);
  1536     076F  01F2               	clrf	enviar_x@val2
  1537     0770  3000               	movlw	0
  1538     0771  120A  118A  2270  120A  118A  	fcall	_enviar_x
  1539                           
  1540                           ;main.c: 153:             Escribir_dato(sec, 14, 2);
  1541     0776  300E               	movlw	14
  1542     0777  1283               	bcf	3,5	;RP0=0, select bank0
  1543     0778  1303               	bcf	3,6	;RP1=0, select bank0
  1544     0779  00B2               	movwf	Escribir_dato@posx
  1545     077A  3002               	movlw	2
  1546     077B  00B3               	movwf	Escribir_dato@posy
  1547     077C  082B               	movf	_sec,w
  1548     077D  120A  118A  2364  120A  118A  	fcall	_Escribir_dato
  1549                           
  1550                           ;main.c: 154:             Escribir_dato(min, 11, 2);
  1551     0782  300B               	movlw	11
  1552     0783  1283               	bcf	3,5	;RP0=0, select bank0
  1553     0784  1303               	bcf	3,6	;RP1=0, select bank0
  1554     0785  00B2               	movwf	Escribir_dato@posx
  1555     0786  3002               	movlw	2
  1556     0787  00B3               	movwf	Escribir_dato@posy
  1557     0788  0829               	movf	_min,w
  1558     0789  120A  118A  2364  120A  118A  	fcall	_Escribir_dato
  1559                           
  1560                           ;main.c: 155:             while(PORTBbits.RB2 & !((sec == segundos) & (min == minutos)) 
      +                          ){
  1561     078E  2FB7               	goto	l1862
  1562     078F                     l1860:
  1563                           
  1564                           ;main.c: 156:                 segundos = leer_x(0x00);
  1565     078F  3000               	movlw	0
  1566     0790  120A  118A  22DD  120A  118A  	fcall	_leer_x
  1567     0795  1283               	bcf	3,5	;RP0=0, select bank0
  1568     0796  1303               	bcf	3,6	;RP1=0, select bank0
  1569     0797  00AA               	movwf	_segundos
  1570                           
  1571                           ;main.c: 157:                 minutos = leer_x(0x01);
  1572     0798  3001               	movlw	1
  1573     0799  120A  118A  22DD  120A  118A  	fcall	_leer_x
  1574     079E  1283               	bcf	3,5	;RP0=0, select bank0
  1575     079F  1303               	bcf	3,6	;RP1=0, select bank0
  1576     07A0  00A8               	movwf	_minutos
  1577                           
  1578                           ;main.c: 158:                 Escribir_dato(segundos, 14, 1);
  1579     07A1  300E               	movlw	14
  1580     07A2  00B2               	movwf	Escribir_dato@posx
  1581     07A3  01B3               	clrf	Escribir_dato@posy
  1582     07A4  0AB3               	incf	Escribir_dato@posy,f
  1583     07A5  082A               	movf	_segundos,w
  1584     07A6  120A  118A  2364  120A  118A  	fcall	_Escribir_dato
  1585                           
  1586                           ;main.c: 159:                 Escribir_dato(minutos, 11, 1);
  1587     07AB  300B               	movlw	11
  1588     07AC  1283               	bcf	3,5	;RP0=0, select bank0
  1589     07AD  1303               	bcf	3,6	;RP1=0, select bank0
  1590     07AE  00B2               	movwf	Escribir_dato@posx
  1591     07AF  01B3               	clrf	Escribir_dato@posy
  1592     07B0  0AB3               	incf	Escribir_dato@posy,f
  1593     07B1  0828               	movf	_minutos,w
  1594     07B2  120A  118A  2364  120A  118A  	fcall	_Escribir_dato
  1595     07B7                     l1862:
  1596                           
  1597                           ;main.c: 155:             while(PORTBbits.RB2 & !((sec == segundos) & (min == minutos)) 
      +                          ){
  1598     07B7  1283               	bcf	3,5	;RP0=0, select bank0
  1599     07B8  1303               	bcf	3,6	;RP1=0, select bank0
  1600     07B9  01B9               	clrf	_main$175
  1601     07BA  0AB9               	incf	_main$175,f
  1602     07BB                     l1864:
  1603     07BB  082B               	movf	_sec,w
  1604     07BC  062A               	xorwf	_segundos,w
  1605     07BD  1D03               	skipz
  1606     07BE  2FC0               	goto	u1611
  1607     07BF  2FC1               	goto	u1610
  1608     07C0                     u1611:
  1609     07C0  2FC8               	goto	l1870
  1610     07C1                     u1610:
  1611     07C1                     l1866:
  1612     07C1  0829               	movf	_min,w
  1613     07C2  0628               	xorwf	_minutos,w
  1614     07C3  1D03               	skipz
  1615     07C4  2FC6               	goto	u1621
  1616     07C5  2FC7               	goto	u1620
  1617     07C6                     u1621:
  1618     07C6  2FC8               	goto	l1870
  1619     07C7                     u1620:
  1620     07C7                     l1868:
  1621     07C7  01B9               	clrf	_main$175
  1622     07C8                     l1870:
  1623     07C8  0C06               	rrf	6,w	;volatile
  1624     07C9  00B7               	movwf	??_main
  1625     07CA  0C37               	rrf	??_main,w
  1626     07CB  3901               	andlw	1
  1627     07CC  0539               	andwf	_main$175,w
  1628     07CD  1D03               	btfss	3,2
  1629     07CE  2FD0               	goto	u1631
  1630     07CF  2FD1               	goto	u1630
  1631     07D0                     u1631:
  1632     07D0  2F8F               	goto	l1860
  1633     07D1                     u1630:
  1634     07D1                     l1872:
  1635                           
  1636                           ;main.c: 162:             Escribir_dato(0, 14, 2);
  1637     07D1  300E               	movlw	14
  1638     07D2  00B2               	movwf	Escribir_dato@posx
  1639     07D3  3002               	movlw	2
  1640     07D4  00B3               	movwf	Escribir_dato@posy
  1641     07D5  3000               	movlw	0
  1642     07D6  120A  118A  2364  120A  118A  	fcall	_Escribir_dato
  1643                           
  1644                           ;main.c: 163:             Escribir_dato(0, 11, 2);
  1645     07DB  300B               	movlw	11
  1646     07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1647     07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1648     07DE  00B2               	movwf	Escribir_dato@posx
  1649     07DF  3002               	movlw	2
  1650     07E0  00B3               	movwf	Escribir_dato@posy
  1651     07E1  3000               	movlw	0
  1652     07E2  120A  118A  2364  120A  118A  	fcall	_Escribir_dato
  1653     07E7  2E84               	goto	l1784
  1654     07E8  120A  118A  2800   	ljmp	start
  1655     07EB                     __end_of_main:
  1656                           
  1657                           	psect	text1
  1658     04B6                     __ptext1:	
  1659 ;; *************** function _setupINTOSC *****************
  1660 ;; Defined at:
  1661 ;;		line 10 in file "oscilador.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  IRCF            1    wreg     unsigned char 
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;  IRCF            1    0[COMMON] unsigned char 
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, status,2, status,0
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1675 ;;      Params:         0       0       0       0       0
  1676 ;;      Locals:         1       0       0       0       0
  1677 ;;      Temps:          0       0       0       0       0
  1678 ;;      Totals:         1       0       0       0       0
  1679 ;;Total ram usage:        1 bytes
  1680 ;; Hardware stack levels used: 1
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_main
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688     04B6                     _setupINTOSC:	
  1689                           ;psect for function _setupINTOSC
  1690                           
  1691                           
  1692                           ;incstack = 0
  1693                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  1694                           ;setupINTOSC@IRCF stored from wreg
  1695     04B6  00F0               	movwf	setupINTOSC@IRCF
  1696     04B7                     l1710:
  1697                           
  1698                           ;oscilador.c: 11:     if (IRCF == 7){
  1699     04B7  3007               	movlw	7
  1700     04B8  0670               	xorwf	setupINTOSC@IRCF,w
  1701     04B9  1D03               	btfss	3,2
  1702     04BA  2CBC               	goto	u1381
  1703     04BB  2CBD               	goto	u1380
  1704     04BC                     u1381:
  1705     04BC  2CC1               	goto	l258
  1706     04BD                     u1380:
  1707     04BD                     l1712:
  1708                           
  1709                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  1710     04BD  3070               	movlw	112
  1711     04BE  1683               	bsf	3,5	;RP0=1, select bank1
  1712     04BF  1303               	bcf	3,6	;RP1=0, select bank1
  1713     04C0  048F               	iorwf	15,f	;volatile
  1714     04C1                     l258:	
  1715                           ;oscilador.c: 13:     }
  1716                           
  1717                           
  1718                           ;oscilador.c: 14:     if (IRCF == 6){
  1719     04C1  3006               	movlw	6
  1720     04C2  0670               	xorwf	setupINTOSC@IRCF,w
  1721     04C3  1D03               	btfss	3,2
  1722     04C4  2CC6               	goto	u1391
  1723     04C5  2CC7               	goto	u1390
  1724     04C6                     u1391:
  1725     04C6  2CCD               	goto	l259
  1726     04C7                     u1390:
  1727     04C7                     l1714:
  1728                           
  1729                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  1730     04C7  1683               	bsf	3,5	;RP0=1, select bank1
  1731     04C8  1303               	bcf	3,6	;RP1=0, select bank1
  1732     04C9  080F               	movf	15,w	;volatile
  1733     04CA  398F               	andlw	-113
  1734     04CB  3860               	iorlw	96
  1735     04CC  008F               	movwf	15	;volatile
  1736     04CD                     l259:	
  1737                           ;oscilador.c: 16:     }
  1738                           
  1739                           
  1740                           ;oscilador.c: 17:     if (IRCF == 5){
  1741     04CD  3005               	movlw	5
  1742     04CE  0670               	xorwf	setupINTOSC@IRCF,w
  1743     04CF  1D03               	btfss	3,2
  1744     04D0  2CD2               	goto	u1401
  1745     04D1  2CD3               	goto	u1400
  1746     04D2                     u1401:
  1747     04D2  2CD9               	goto	l260
  1748     04D3                     u1400:
  1749     04D3                     l1716:
  1750                           
  1751                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  1752     04D3  1683               	bsf	3,5	;RP0=1, select bank1
  1753     04D4  1303               	bcf	3,6	;RP1=0, select bank1
  1754     04D5  080F               	movf	15,w	;volatile
  1755     04D6  398F               	andlw	-113
  1756     04D7  3850               	iorlw	80
  1757     04D8  008F               	movwf	15	;volatile
  1758     04D9                     l260:	
  1759                           ;oscilador.c: 19:     }
  1760                           
  1761                           
  1762                           ;oscilador.c: 20:     if (IRCF == 4){
  1763     04D9  3004               	movlw	4
  1764     04DA  0670               	xorwf	setupINTOSC@IRCF,w
  1765     04DB  1D03               	btfss	3,2
  1766     04DC  2CDE               	goto	u1411
  1767     04DD  2CDF               	goto	u1410
  1768     04DE                     u1411:
  1769     04DE  2CE5               	goto	l261
  1770     04DF                     u1410:
  1771     04DF                     l1718:
  1772                           
  1773                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  1774     04DF  1683               	bsf	3,5	;RP0=1, select bank1
  1775     04E0  1303               	bcf	3,6	;RP1=0, select bank1
  1776     04E1  080F               	movf	15,w	;volatile
  1777     04E2  398F               	andlw	-113
  1778     04E3  3840               	iorlw	64
  1779     04E4  008F               	movwf	15	;volatile
  1780     04E5                     l261:	
  1781                           ;oscilador.c: 22:     }
  1782                           
  1783                           
  1784                           ;oscilador.c: 23:     if (IRCF == 3){
  1785     04E5  3003               	movlw	3
  1786     04E6  0670               	xorwf	setupINTOSC@IRCF,w
  1787     04E7  1D03               	btfss	3,2
  1788     04E8  2CEA               	goto	u1421
  1789     04E9  2CEB               	goto	u1420
  1790     04EA                     u1421:
  1791     04EA  2CF1               	goto	l262
  1792     04EB                     u1420:
  1793     04EB                     l1720:
  1794                           
  1795                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  1796     04EB  1683               	bsf	3,5	;RP0=1, select bank1
  1797     04EC  1303               	bcf	3,6	;RP1=0, select bank1
  1798     04ED  080F               	movf	15,w	;volatile
  1799     04EE  398F               	andlw	-113
  1800     04EF  3830               	iorlw	48
  1801     04F0  008F               	movwf	15	;volatile
  1802     04F1                     l262:	
  1803                           ;oscilador.c: 25:     }
  1804                           
  1805                           
  1806                           ;oscilador.c: 26:     if (IRCF == 2){
  1807     04F1  3002               	movlw	2
  1808     04F2  0670               	xorwf	setupINTOSC@IRCF,w
  1809     04F3  1D03               	btfss	3,2
  1810     04F4  2CF6               	goto	u1431
  1811     04F5  2CF7               	goto	u1430
  1812     04F6                     u1431:
  1813     04F6  2CFD               	goto	l263
  1814     04F7                     u1430:
  1815     04F7                     l1722:
  1816                           
  1817                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  1818     04F7  1683               	bsf	3,5	;RP0=1, select bank1
  1819     04F8  1303               	bcf	3,6	;RP1=0, select bank1
  1820     04F9  080F               	movf	15,w	;volatile
  1821     04FA  398F               	andlw	-113
  1822     04FB  3820               	iorlw	32
  1823     04FC  008F               	movwf	15	;volatile
  1824     04FD                     l263:	
  1825                           ;oscilador.c: 28:     }
  1826                           
  1827                           
  1828                           ;oscilador.c: 29:     if (IRCF == 1){
  1829     04FD  0370               	decf	setupINTOSC@IRCF,w
  1830     04FE  1D03               	btfss	3,2
  1831     04FF  2D01               	goto	u1441
  1832     0500  2D02               	goto	u1440
  1833     0501                     u1441:
  1834     0501  2D08               	goto	l264
  1835     0502                     u1440:
  1836     0502                     l1724:
  1837                           
  1838                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  1839     0502  1683               	bsf	3,5	;RP0=1, select bank1
  1840     0503  1303               	bcf	3,6	;RP1=0, select bank1
  1841     0504  080F               	movf	15,w	;volatile
  1842     0505  398F               	andlw	-113
  1843     0506  3810               	iorlw	16
  1844     0507  008F               	movwf	15	;volatile
  1845     0508                     l264:	
  1846                           ;oscilador.c: 31:     }
  1847                           
  1848                           
  1849                           ;oscilador.c: 32:     if (IRCF == 0){
  1850     0508  0870               	movf	setupINTOSC@IRCF,w
  1851     0509  1D03               	btfss	3,2
  1852     050A  2D0C               	goto	u1451
  1853     050B  2D0D               	goto	u1450
  1854     050C                     u1451:
  1855     050C  2D11               	goto	l1728
  1856     050D                     u1450:
  1857     050D                     l1726:
  1858                           
  1859                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  1860     050D  308F               	movlw	-113
  1861     050E  1683               	bsf	3,5	;RP0=1, select bank1
  1862     050F  1303               	bcf	3,6	;RP1=0, select bank1
  1863     0510  058F               	andwf	15,f	;volatile
  1864     0511                     l1728:
  1865                           
  1866                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  1867     0511  1683               	bsf	3,5	;RP0=1, select bank1
  1868     0512  1303               	bcf	3,6	;RP1=0, select bank1
  1869     0513  140F               	bsf	15,0	;volatile
  1870     0514                     l266:
  1871     0514  0008               	return
  1872     0515                     __end_of_setupINTOSC:
  1873                           
  1874                           	psect	text2
  1875     01E0                     __ptext2:	
  1876 ;; *************** function _portsetup *****************
  1877 ;; Defined at:
  1878 ;;		line 168 in file "main.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;		None
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0, pclath, cstack
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1892 ;;      Params:         0       0       0       0       0
  1893 ;;      Locals:         0       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0
  1895 ;;      Totals:         0       0       0       0       0
  1896 ;;Total ram usage:        0 bytes
  1897 ;; Hardware stack levels used: 1
  1898 ;; Hardware stack levels required when called: 2
  1899 ;; This function calls:
  1900 ;;		_I2C_Master_Init
  1901 ;; This function is called by:
  1902 ;;		_main
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906     01E0                     _portsetup:	
  1907                           ;psect for function _portsetup
  1908                           
  1909     01E0                     l1730:	
  1910                           ;incstack = 0
  1911                           ; Regs used in _portsetup: [wreg+status,2+status,0+pclath+cstack]
  1912                           
  1913                           
  1914                           ;main.c: 169:     ANSEL = 0;
  1915     01E0  1683               	bsf	3,5	;RP0=1, select bank3
  1916     01E1  1703               	bsf	3,6	;RP1=1, select bank3
  1917     01E2  0188               	clrf	8	;volatile
  1918                           
  1919                           ;main.c: 170:     ANSELH = 0;
  1920     01E3  0189               	clrf	9	;volatile
  1921                           
  1922                           ;main.c: 171:     TRISA = 0;
  1923     01E4  1683               	bsf	3,5	;RP0=1, select bank1
  1924     01E5  1303               	bcf	3,6	;RP1=0, select bank1
  1925     01E6  0185               	clrf	5	;volatile
  1926                           
  1927                           ;main.c: 172:     PORTA = 0;
  1928     01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1929     01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1930     01E9  0185               	clrf	5	;volatile
  1931                           
  1932                           ;main.c: 173:     TRISD = 0;
  1933     01EA  1683               	bsf	3,5	;RP0=1, select bank1
  1934     01EB  1303               	bcf	3,6	;RP1=0, select bank1
  1935     01EC  0188               	clrf	8	;volatile
  1936                           
  1937                           ;main.c: 174:     PORTD = 0;
  1938     01ED  1283               	bcf	3,5	;RP0=0, select bank0
  1939     01EE  1303               	bcf	3,6	;RP1=0, select bank0
  1940     01EF  0188               	clrf	8	;volatile
  1941     01F0                     l1732:
  1942                           
  1943                           ;main.c: 177:     TRISB = 0b11111100;
  1944     01F0  30FC               	movlw	252
  1945     01F1  1683               	bsf	3,5	;RP0=1, select bank1
  1946     01F2  1303               	bcf	3,6	;RP1=0, select bank1
  1947     01F3  0086               	movwf	6	;volatile
  1948     01F4                     l1734:
  1949                           
  1950                           ;main.c: 178:     PORTB = 0b11111100;
  1951     01F4  30FC               	movlw	252
  1952     01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1953     01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1954     01F7  0086               	movwf	6	;volatile
  1955     01F8                     l1736:
  1956                           
  1957                           ;main.c: 179:     WPUB = 0b11111100;
  1958     01F8  30FC               	movlw	252
  1959     01F9  1683               	bsf	3,5	;RP0=1, select bank1
  1960     01FA  1303               	bcf	3,6	;RP1=0, select bank1
  1961     01FB  0095               	movwf	21	;volatile
  1962     01FC                     l1738:
  1963                           
  1964                           ;main.c: 180:     OPTION_REGbits.nRBPU = 0;
  1965     01FC  1381               	bcf	1,7	;volatile
  1966     01FD                     l1740:
  1967                           
  1968                           ;main.c: 182:     I2C_Master_Init(100000);
  1969     01FD  3000               	movlw	0
  1970     01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1971     01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1972     0200  00B2               	movwf	I2C_Master_Init@c+3
  1973     0201  3001               	movlw	1
  1974     0202  00B1               	movwf	I2C_Master_Init@c+2
  1975     0203  3086               	movlw	134
  1976     0204  00B0               	movwf	I2C_Master_Init@c+1
  1977     0205  30A0               	movlw	160
  1978     0206  00AF               	movwf	I2C_Master_Init@c
  1979     0207  120A  118A  22A5  120A  118A  	fcall	_I2C_Master_Init
  1980     020C                     l109:
  1981     020C  0008               	return
  1982     020D                     __end_of_portsetup:
  1983                           
  1984                           	psect	text3
  1985     02A5                     __ptext3:	
  1986 ;; *************** function _I2C_Master_Init *****************
  1987 ;; Defined at:
  1988 ;;		line 16 in file "I2C.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  c               4    0[BANK0 ] const unsigned long 
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;		None
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      void 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0, pclath, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2002 ;;      Params:         0       4       0       0       0
  2003 ;;      Locals:         0       0       0       0       0
  2004 ;;      Temps:          0       4       0       0       0
  2005 ;;      Totals:         0       8       0       0       0
  2006 ;;Total ram usage:        8 bytes
  2007 ;; Hardware stack levels used: 1
  2008 ;; Hardware stack levels required when called: 1
  2009 ;; This function calls:
  2010 ;;		___lldiv
  2011 ;; This function is called by:
  2012 ;;		_portsetup
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016     02A5                     _I2C_Master_Init:	
  2017                           ;psect for function _I2C_Master_Init
  2018                           
  2019     02A5                     l1554:	
  2020                           ;incstack = 0
  2021                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2022                           
  2023                           
  2024                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2025     02A5  3028               	movlw	40
  2026     02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2027     02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2028     02A8  0094               	movwf	20	;volatile
  2029     02A9                     l1556:
  2030                           
  2031                           ;I2C.c: 19:     SSPCON2 = 0;
  2032     02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2033     02AA  1303               	bcf	3,6	;RP1=0, select bank1
  2034     02AB  0191               	clrf	17	;volatile
  2035     02AC                     l1558:
  2036                           
  2037                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2038     02AC  1283               	bcf	3,5	;RP0=0, select bank0
  2039     02AD  1303               	bcf	3,6	;RP1=0, select bank0
  2040     02AE  082F               	movf	I2C_Master_Init@c,w
  2041     02AF  00B3               	movwf	??_I2C_Master_Init
  2042     02B0  0830               	movf	I2C_Master_Init@c+1,w
  2043     02B1  00B4               	movwf	??_I2C_Master_Init+1
  2044     02B2  0831               	movf	I2C_Master_Init@c+2,w
  2045     02B3  00B5               	movwf	??_I2C_Master_Init+2
  2046     02B4  0832               	movf	I2C_Master_Init@c+3,w
  2047     02B5  00B6               	movwf	??_I2C_Master_Init+3
  2048     02B6  3002               	movlw	2
  2049     02B7                     u1225:
  2050     02B7  1003               	clrc
  2051     02B8  0DB3               	rlf	??_I2C_Master_Init,f
  2052     02B9  0DB4               	rlf	??_I2C_Master_Init+1,f
  2053     02BA  0DB5               	rlf	??_I2C_Master_Init+2,f
  2054     02BB  0DB6               	rlf	??_I2C_Master_Init+3,f
  2055     02BC                     u1220:
  2056     02BC  3EFF               	addlw	-1
  2057     02BD  1D03               	skipz
  2058     02BE  2AB7               	goto	u1225
  2059     02BF  0836               	movf	??_I2C_Master_Init+3,w
  2060     02C0  00F3               	movwf	___lldiv@divisor+3
  2061     02C1  0835               	movf	??_I2C_Master_Init+2,w
  2062     02C2  00F2               	movwf	___lldiv@divisor+2
  2063     02C3  0834               	movf	??_I2C_Master_Init+1,w
  2064     02C4  00F1               	movwf	___lldiv@divisor+1
  2065     02C5  0833               	movf	??_I2C_Master_Init,w
  2066     02C6  00F0               	movwf	___lldiv@divisor
  2067     02C7  3000               	movlw	0
  2068     02C8  00F7               	movwf	___lldiv@dividend+3
  2069     02C9  307A               	movlw	122
  2070     02CA  00F6               	movwf	___lldiv@dividend+2
  2071     02CB  3012               	movlw	18
  2072     02CC  00F5               	movwf	___lldiv@dividend+1
  2073     02CD  3000               	movlw	0
  2074     02CE  00F4               	movwf	___lldiv@dividend
  2075     02CF  120A  118A  257A  120A  118A  	fcall	___lldiv
  2076     02D4  0870               	movf	?___lldiv,w
  2077     02D5  3EFF               	addlw	255
  2078     02D6  1683               	bsf	3,5	;RP0=1, select bank1
  2079     02D7  1303               	bcf	3,6	;RP1=0, select bank1
  2080     02D8  0093               	movwf	19	;volatile
  2081     02D9                     l1560:
  2082                           
  2083                           ;I2C.c: 21:     SSPSTAT = 0;
  2084     02D9  0194               	clrf	20	;volatile
  2085     02DA                     l1562:
  2086                           
  2087                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2088     02DA  1587               	bsf	7,3	;volatile
  2089     02DB                     l1564:
  2090                           
  2091                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2092     02DB  1607               	bsf	7,4	;volatile
  2093     02DC                     l151:
  2094     02DC  0008               	return
  2095     02DD                     __end_of_I2C_Master_Init:
  2096                           
  2097                           	psect	text4
  2098     057A                     __ptext4:	
  2099 ;; *************** function ___lldiv *****************
  2100 ;; Defined at:
  2101 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  divisor         4    0[COMMON] unsigned long 
  2104 ;;  dividend        4    4[COMMON] unsigned long 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  quotient        4    9[COMMON] unsigned long 
  2107 ;;  counter         1   13[COMMON] unsigned char 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  4    0[COMMON] unsigned long 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2, status,0
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2117 ;;      Params:         8       0       0       0       0
  2118 ;;      Locals:         5       0       0       0       0
  2119 ;;      Temps:          1       0       0       0       0
  2120 ;;      Totals:        14       0       0       0       0
  2121 ;;Total ram usage:       14 bytes
  2122 ;; Hardware stack levels used: 1
  2123 ;; This function calls:
  2124 ;;		Nothing
  2125 ;; This function is called by:
  2126 ;;		_I2C_Master_Init
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130     057A                     ___lldiv:	
  2131                           ;psect for function ___lldiv
  2132                           
  2133     057A                     l1408:	
  2134                           ;incstack = 0
  2135                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2136                           
  2137     057A  3000               	movlw	0
  2138     057B  00FC               	movwf	___lldiv@quotient+3
  2139     057C  3000               	movlw	0
  2140     057D  00FB               	movwf	___lldiv@quotient+2
  2141     057E  3000               	movlw	0
  2142     057F  00FA               	movwf	___lldiv@quotient+1
  2143     0580  3000               	movlw	0
  2144     0581  00F9               	movwf	___lldiv@quotient
  2145     0582  0873               	movf	___lldiv@divisor+3,w
  2146     0583  0472               	iorwf	___lldiv@divisor+2,w
  2147     0584  0471               	iorwf	___lldiv@divisor+1,w
  2148     0585  0470               	iorwf	___lldiv@divisor,w
  2149     0586  1903               	skipnz
  2150     0587  2D89               	goto	u911
  2151     0588  2D8A               	goto	u910
  2152     0589                     u911:
  2153     0589  2DD7               	goto	l1428
  2154     058A                     u910:
  2155     058A                     l1410:
  2156     058A  01FD               	clrf	___lldiv@counter
  2157     058B  0AFD               	incf	___lldiv@counter,f
  2158     058C  2D9A               	goto	l1414
  2159     058D                     l1412:
  2160     058D  3001               	movlw	1
  2161     058E  00F8               	movwf	??___lldiv
  2162     058F                     u925:
  2163     058F  1003               	clrc
  2164     0590  0DF0               	rlf	___lldiv@divisor,f
  2165     0591  0DF1               	rlf	___lldiv@divisor+1,f
  2166     0592  0DF2               	rlf	___lldiv@divisor+2,f
  2167     0593  0DF3               	rlf	___lldiv@divisor+3,f
  2168     0594  0BF8               	decfsz	??___lldiv,f
  2169     0595  2D8F               	goto	u925
  2170     0596  3001               	movlw	1
  2171     0597  00F8               	movwf	??___lldiv
  2172     0598  0878               	movf	??___lldiv,w
  2173     0599  07FD               	addwf	___lldiv@counter,f
  2174     059A                     l1414:
  2175     059A  1FF3               	btfss	___lldiv@divisor+3,7
  2176     059B  2D9D               	goto	u931
  2177     059C  2D9E               	goto	u930
  2178     059D                     u931:
  2179     059D  2D8D               	goto	l1412
  2180     059E                     u930:
  2181     059E                     l1416:
  2182     059E  3001               	movlw	1
  2183     059F  00F8               	movwf	??___lldiv
  2184     05A0                     u945:
  2185     05A0  1003               	clrc
  2186     05A1  0DF9               	rlf	___lldiv@quotient,f
  2187     05A2  0DFA               	rlf	___lldiv@quotient+1,f
  2188     05A3  0DFB               	rlf	___lldiv@quotient+2,f
  2189     05A4  0DFC               	rlf	___lldiv@quotient+3,f
  2190     05A5  0BF8               	decfsz	??___lldiv,f
  2191     05A6  2DA0               	goto	u945
  2192     05A7                     l1418:
  2193     05A7  0873               	movf	___lldiv@divisor+3,w
  2194     05A8  0277               	subwf	___lldiv@dividend+3,w
  2195     05A9  1D03               	skipz
  2196     05AA  2DB5               	goto	u955
  2197     05AB  0872               	movf	___lldiv@divisor+2,w
  2198     05AC  0276               	subwf	___lldiv@dividend+2,w
  2199     05AD  1D03               	skipz
  2200     05AE  2DB5               	goto	u955
  2201     05AF  0871               	movf	___lldiv@divisor+1,w
  2202     05B0  0275               	subwf	___lldiv@dividend+1,w
  2203     05B1  1D03               	skipz
  2204     05B2  2DB5               	goto	u955
  2205     05B3  0870               	movf	___lldiv@divisor,w
  2206     05B4  0274               	subwf	___lldiv@dividend,w
  2207     05B5                     u955:
  2208     05B5  1C03               	skipc
  2209     05B6  2DB8               	goto	u951
  2210     05B7  2DB9               	goto	u950
  2211     05B8                     u951:
  2212     05B8  2DC8               	goto	l1424
  2213     05B9                     u950:
  2214     05B9                     l1420:
  2215     05B9  0870               	movf	___lldiv@divisor,w
  2216     05BA  02F4               	subwf	___lldiv@dividend,f
  2217     05BB  0871               	movf	___lldiv@divisor+1,w
  2218     05BC  1C03               	skipc
  2219     05BD  0F71               	incfsz	___lldiv@divisor+1,w
  2220     05BE  02F5               	subwf	___lldiv@dividend+1,f
  2221     05BF  0872               	movf	___lldiv@divisor+2,w
  2222     05C0  1C03               	skipc
  2223     05C1  0F72               	incfsz	___lldiv@divisor+2,w
  2224     05C2  02F6               	subwf	___lldiv@dividend+2,f
  2225     05C3  0873               	movf	___lldiv@divisor+3,w
  2226     05C4  1C03               	skipc
  2227     05C5  0F73               	incfsz	___lldiv@divisor+3,w
  2228     05C6  02F7               	subwf	___lldiv@dividend+3,f
  2229     05C7                     l1422:
  2230     05C7  1479               	bsf	___lldiv@quotient,0
  2231     05C8                     l1424:
  2232     05C8  3001               	movlw	1
  2233     05C9                     u965:
  2234     05C9  1003               	clrc
  2235     05CA  0CF3               	rrf	___lldiv@divisor+3,f
  2236     05CB  0CF2               	rrf	___lldiv@divisor+2,f
  2237     05CC  0CF1               	rrf	___lldiv@divisor+1,f
  2238     05CD  0CF0               	rrf	___lldiv@divisor,f
  2239     05CE  3EFF               	addlw	-1
  2240     05CF  1D03               	skipz
  2241     05D0  2DC9               	goto	u965
  2242     05D1                     l1426:
  2243     05D1  3001               	movlw	1
  2244     05D2  02FD               	subwf	___lldiv@counter,f
  2245     05D3  1D03               	btfss	3,2
  2246     05D4  2DD6               	goto	u971
  2247     05D5  2DD7               	goto	u970
  2248     05D6                     u971:
  2249     05D6  2D9E               	goto	l1416
  2250     05D7                     u970:
  2251     05D7                     l1428:
  2252     05D7  087C               	movf	___lldiv@quotient+3,w
  2253     05D8  00F3               	movwf	?___lldiv+3
  2254     05D9  087B               	movf	___lldiv@quotient+2,w
  2255     05DA  00F2               	movwf	?___lldiv+2
  2256     05DB  087A               	movf	___lldiv@quotient+1,w
  2257     05DC  00F1               	movwf	?___lldiv+1
  2258     05DD  0879               	movf	___lldiv@quotient,w
  2259     05DE  00F0               	movwf	?___lldiv
  2260     05DF                     l388:
  2261     05DF  0008               	return
  2262     05E0                     __end_of___lldiv:
  2263                           
  2264                           	psect	text5
  2265     02DD                     __ptext5:	
  2266 ;; *************** function _leer_x *****************
  2267 ;; Defined at:
  2268 ;;		line 24 in file "DS3231.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  address         1    wreg     unsigned char 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;  address         1   11[COMMON] unsigned char 
  2273 ;;  valor           1   12[COMMON] unsigned char 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      unsigned char 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0, pclath, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2283 ;;      Params:         0       0       0       0       0
  2284 ;;      Locals:         2       0       0       0       0
  2285 ;;      Temps:          2       0       0       0       0
  2286 ;;      Totals:         4       0       0       0       0
  2287 ;;Total ram usage:        4 bytes
  2288 ;; Hardware stack levels used: 1
  2289 ;; Hardware stack levels required when called: 2
  2290 ;; This function calls:
  2291 ;;		_I2C_Master_Read
  2292 ;;		_I2C_Master_RepeatedStart
  2293 ;;		_I2C_Master_Start
  2294 ;;		_I2C_Master_Stop
  2295 ;;		_I2C_Master_Write
  2296 ;;		_convertir
  2297 ;; This function is called by:
  2298 ;;		_main
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302     02DD                     _leer_x:	
  2303                           ;psect for function _leer_x
  2304                           
  2305                           
  2306                           ;incstack = 0
  2307                           ; Regs used in _leer_x: [wreg+status,2+status,0+pclath+cstack]
  2308                           ;leer_x@address stored from wreg
  2309     02DD  00FB               	movwf	leer_x@address
  2310     02DE                     l1764:
  2311                           
  2312                           ;DS3231.c: 25:     uint8_t valor;;DS3231.c: 26:     I2C_Master_Start();
  2313     02DE  120A  118A  2110  120A  118A  	fcall	_I2C_Master_Start
  2314                           
  2315                           ;DS3231.c: 27:     I2C_Master_Write(0xD0);
  2316     02E3  30D0               	movlw	208
  2317     02E4  00F0               	movwf	I2C_Master_Write@d
  2318     02E5  3000               	movlw	0
  2319     02E6  00F1               	movwf	I2C_Master_Write@d+1
  2320     02E7  120A  118A  212B  120A  118A  	fcall	_I2C_Master_Write
  2321                           
  2322                           ;DS3231.c: 28:     I2C_Master_Write(address);
  2323     02EC  087B               	movf	leer_x@address,w
  2324     02ED  00F9               	movwf	??_leer_x
  2325     02EE  01FA               	clrf	??_leer_x+1
  2326     02EF  0879               	movf	??_leer_x,w
  2327     02F0  00F0               	movwf	I2C_Master_Write@d
  2328     02F1  087A               	movf	??_leer_x+1,w
  2329     02F2  00F1               	movwf	I2C_Master_Write@d+1
  2330     02F3  120A  118A  212B  120A  118A  	fcall	_I2C_Master_Write
  2331                           
  2332                           ;DS3231.c: 29:     I2C_Master_RepeatedStart();
  2333     02F8  120A  118A  2122  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2334                           
  2335                           ;DS3231.c: 30:     I2C_Master_Write(0xD1);
  2336     02FD  30D1               	movlw	209
  2337     02FE  00F0               	movwf	I2C_Master_Write@d
  2338     02FF  3000               	movlw	0
  2339     0300  00F1               	movwf	I2C_Master_Write@d+1
  2340     0301  120A  118A  212B  120A  118A  	fcall	_I2C_Master_Write
  2341                           
  2342                           ;DS3231.c: 31:     valor = I2C_Master_Read(0);
  2343     0306  3000               	movlw	0
  2344     0307  00F0               	movwf	I2C_Master_Read@a
  2345     0308  00F1               	movwf	I2C_Master_Read@a+1
  2346     0309  120A  118A  220D  120A  118A  	fcall	_I2C_Master_Read
  2347     030E  0870               	movf	?_I2C_Master_Read,w
  2348     030F  00FC               	movwf	leer_x@valor
  2349                           
  2350                           ;DS3231.c: 32:     I2C_Master_Stop();
  2351     0310  120A  118A  2119  120A  118A  	fcall	_I2C_Master_Stop
  2352                           
  2353                           ;DS3231.c: 33:     valor = convertir(valor);
  2354     0315  087C               	movf	leer_x@valor,w
  2355     0316  120A  118A  217E  120A  118A  	fcall	_convertir
  2356     031B  00FC               	movwf	leer_x@valor
  2357     031C                     l1766:
  2358                           
  2359                           ;DS3231.c: 35:     return valor;
  2360     031C  087C               	movf	leer_x@valor,w
  2361     031D                     l131:
  2362     031D  0008               	return
  2363     031E                     __end_of_leer_x:
  2364                           
  2365                           	psect	text6
  2366     017E                     __ptext6:	
  2367 ;; *************** function _convertir *****************
  2368 ;; Defined at:
  2369 ;;		line 5 in file "DS3231.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  valor           1    wreg     unsigned char 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  valor           1    8[COMMON] unsigned char 
  2374 ;;  conversion      1    7[COMMON] unsigned char 
  2375 ;;  decena          1    6[COMMON] unsigned char 
  2376 ;;  unidad          1    5[COMMON] unsigned char 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      unsigned char 
  2379 ;; Registers used:
  2380 ;;		wreg, status,2, status,0, pclath, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2386 ;;      Params:         0       0       0       0       0
  2387 ;;      Locals:         4       0       0       0       0
  2388 ;;      Temps:          1       0       0       0       0
  2389 ;;      Totals:         5       0       0       0       0
  2390 ;;Total ram usage:        5 bytes
  2391 ;; Hardware stack levels used: 1
  2392 ;; Hardware stack levels required when called: 1
  2393 ;; This function calls:
  2394 ;;		___bmul
  2395 ;; This function is called by:
  2396 ;;		_leer_x
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400     017E                     _convertir:	
  2401                           ;psect for function _convertir
  2402                           
  2403                           
  2404                           ;incstack = 0
  2405                           ; Regs used in _convertir: [wreg+status,2+status,0+pclath+cstack]
  2406                           ;convertir@valor stored from wreg
  2407     017E  00F8               	movwf	convertir@valor
  2408     017F                     l1668:
  2409                           
  2410                           ;DS3231.c: 6:     uint8_t unidad;;DS3231.c: 7:     uint8_t decena;;DS3231.c: 8:     uint
      +                          8_t conversion;;DS3231.c: 9:     unidad = valor & 0x0F;
  2411     017F  0878               	movf	convertir@valor,w
  2412     0180  390F               	andlw	15
  2413     0181  00F5               	movwf	convertir@unidad
  2414     0182                     l1670:
  2415                           
  2416                           ;DS3231.c: 10:     decena = ((valor & 0xF0) >> 4);
  2417     0182  0878               	movf	convertir@valor,w
  2418     0183  00F4               	movwf	??_convertir
  2419     0184  3004               	movlw	4
  2420     0185                     u1365:
  2421     0185  1003               	clrc
  2422     0186  0CF4               	rrf	??_convertir,f
  2423     0187  3EFF               	addlw	-1
  2424     0188  1D03               	skipz
  2425     0189  2985               	goto	u1365
  2426     018A  0874               	movf	??_convertir,w
  2427     018B  390F               	andlw	15
  2428     018C  00F6               	movwf	convertir@decena
  2429     018D                     l1672:
  2430                           
  2431                           ;DS3231.c: 11:     conversion = unidad+(decena*10);
  2432     018D  300A               	movlw	10
  2433     018E  00F0               	movwf	___bmul@multiplicand
  2434     018F  0876               	movf	convertir@decena,w
  2435     0190  120A  118A  214F  120A  118A  	fcall	___bmul
  2436     0195  0775               	addwf	convertir@unidad,w
  2437     0196  00F7               	movwf	convertir@conversion
  2438     0197                     l1674:
  2439                           
  2440                           ;DS3231.c: 12:     return conversion;
  2441     0197  0877               	movf	convertir@conversion,w
  2442     0198                     l125:
  2443     0198  0008               	return
  2444     0199                     __end_of_convertir:
  2445                           
  2446                           	psect	text7
  2447     014F                     __ptext7:	
  2448 ;; *************** function ___bmul *****************
  2449 ;; Defined at:
  2450 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;  multiplier      1    wreg     unsigned char 
  2453 ;;  multiplicand    1    0[COMMON] unsigned char 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  multiplier      1    3[COMMON] unsigned char 
  2456 ;;  product         1    2[COMMON] unsigned char 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      unsigned char 
  2459 ;; Registers used:
  2460 ;;		wreg, status,2, status,0
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2466 ;;      Params:         1       0       0       0       0
  2467 ;;      Locals:         2       0       0       0       0
  2468 ;;      Temps:          1       0       0       0       0
  2469 ;;      Totals:         4       0       0       0       0
  2470 ;;Total ram usage:        4 bytes
  2471 ;; Hardware stack levels used: 1
  2472 ;; This function calls:
  2473 ;;		Nothing
  2474 ;; This function is called by:
  2475 ;;		_convertir
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479     014F                     ___bmul:	
  2480                           ;psect for function ___bmul
  2481                           
  2482                           
  2483                           ;incstack = 0
  2484                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2485                           ;___bmul@multiplier stored from wreg
  2486     014F  00F3               	movwf	___bmul@multiplier
  2487     0150                     l1394:
  2488     0150  01F2               	clrf	___bmul@product
  2489     0151                     l1396:
  2490     0151  1C73               	btfss	___bmul@multiplier,0
  2491     0152  2954               	goto	u891
  2492     0153  2955               	goto	u890
  2493     0154                     u891:
  2494     0154  2959               	goto	l1400
  2495     0155                     u890:
  2496     0155                     l1398:
  2497     0155  0870               	movf	___bmul@multiplicand,w
  2498     0156  00F1               	movwf	??___bmul
  2499     0157  0871               	movf	??___bmul,w
  2500     0158  07F2               	addwf	___bmul@product,f
  2501     0159                     l1400:
  2502     0159  1003               	clrc
  2503     015A  0DF0               	rlf	___bmul@multiplicand,f
  2504     015B                     l1402:
  2505     015B  1003               	clrc
  2506     015C  0CF3               	rrf	___bmul@multiplier,f
  2507     015D  0873               	movf	___bmul@multiplier,w
  2508     015E  1D03               	btfss	3,2
  2509     015F  2961               	goto	u901
  2510     0160  2962               	goto	u900
  2511     0161                     u901:
  2512     0161  2951               	goto	l1396
  2513     0162                     u900:
  2514     0162                     l1404:
  2515     0162  0872               	movf	___bmul@product,w
  2516     0163                     l378:
  2517     0163  0008               	return
  2518     0164                     __end_of___bmul:
  2519                           
  2520                           	psect	text8
  2521     0122                     __ptext8:	
  2522 ;; *************** function _I2C_Master_RepeatedStart *****************
  2523 ;; Defined at:
  2524 ;;		line 47 in file "I2C.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;		None
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;		None
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  1    wreg      void 
  2531 ;; Registers used:
  2532 ;;		wreg, status,2, status,0, pclath, cstack
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2538 ;;      Params:         0       0       0       0       0
  2539 ;;      Locals:         0       0       0       0       0
  2540 ;;      Temps:          0       0       0       0       0
  2541 ;;      Totals:         0       0       0       0       0
  2542 ;;Total ram usage:        0 bytes
  2543 ;; Hardware stack levels used: 1
  2544 ;; Hardware stack levels required when called: 1
  2545 ;; This function calls:
  2546 ;;		_I2C_Master_Wait
  2547 ;; This function is called by:
  2548 ;;		_leer_x
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552     0122                     _I2C_Master_RepeatedStart:	
  2553                           ;psect for function _I2C_Master_RepeatedStart
  2554                           
  2555     0122                     l1686:	
  2556                           ;incstack = 0
  2557                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2558                           
  2559                           
  2560                           ;I2C.c: 49:     I2C_Master_Wait();
  2561     0122  120A  118A  2142  120A  118A  	fcall	_I2C_Master_Wait
  2562     0127                     l1688:
  2563                           
  2564                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2565     0127  1683               	bsf	3,5	;RP0=1, select bank1
  2566     0128  1303               	bcf	3,6	;RP1=0, select bank1
  2567     0129  1491               	bsf	17,1	;volatile
  2568     012A                     l163:
  2569     012A  0008               	return
  2570     012B                     __end_of_I2C_Master_RepeatedStart:
  2571                           
  2572                           	psect	text9
  2573     020D                     __ptext9:	
  2574 ;; *************** function _I2C_Master_Read *****************
  2575 ;; Defined at:
  2576 ;;		line 74 in file "I2C.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  a               2    0[COMMON] unsigned short 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  temp            2    4[COMMON] unsigned short 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  2    0[COMMON] unsigned short 
  2583 ;; Registers used:
  2584 ;;		wreg, status,2, status,0, pclath, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2590 ;;      Params:         2       0       0       0       0
  2591 ;;      Locals:         2       0       0       0       0
  2592 ;;      Temps:          2       0       0       0       0
  2593 ;;      Totals:         6       0       0       0       0
  2594 ;;Total ram usage:        6 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; Hardware stack levels required when called: 1
  2597 ;; This function calls:
  2598 ;;		_I2C_Master_Wait
  2599 ;; This function is called by:
  2600 ;;		_leer_x
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604     020D                     _I2C_Master_Read:	
  2605                           ;psect for function _I2C_Master_Read
  2606                           
  2607     020D                     l1690:	
  2608                           ;incstack = 0
  2609                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2610                           
  2611                           
  2612                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2613     020D  120A  118A  2142  120A  118A  	fcall	_I2C_Master_Wait
  2614     0212                     l1692:
  2615                           
  2616                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2617     0212  1683               	bsf	3,5	;RP0=1, select bank1
  2618     0213  1303               	bcf	3,6	;RP1=0, select bank1
  2619     0214  1591               	bsf	17,3	;volatile
  2620                           
  2621                           ;I2C.c: 79:     I2C_Master_Wait();
  2622     0215  120A  118A  2142  120A  118A  	fcall	_I2C_Master_Wait
  2623     021A                     l1694:
  2624                           
  2625                           ;I2C.c: 80:     temp = SSPBUF;
  2626     021A  1283               	bcf	3,5	;RP0=0, select bank0
  2627     021B  1303               	bcf	3,6	;RP1=0, select bank0
  2628     021C  0813               	movf	19,w	;volatile
  2629     021D  00F2               	movwf	??_I2C_Master_Read
  2630     021E  01F3               	clrf	??_I2C_Master_Read+1
  2631     021F  0872               	movf	??_I2C_Master_Read,w
  2632     0220  00F4               	movwf	I2C_Master_Read@temp
  2633     0221  0873               	movf	??_I2C_Master_Read+1,w
  2634     0222  00F5               	movwf	I2C_Master_Read@temp+1
  2635     0223                     l1696:
  2636                           
  2637                           ;I2C.c: 81:     I2C_Master_Wait();
  2638     0223  120A  118A  2142  120A  118A  	fcall	_I2C_Master_Wait
  2639     0228                     l1698:
  2640                           
  2641                           ;I2C.c: 82:     if(a == 1){
  2642     0228  0370               	decf	I2C_Master_Read@a,w
  2643     0229  0471               	iorwf	I2C_Master_Read@a+1,w
  2644     022A  1D03               	btfss	3,2
  2645     022B  2A2D               	goto	u1371
  2646     022C  2A2E               	goto	u1370
  2647     022D                     u1371:
  2648     022D  2A32               	goto	l172
  2649     022E                     u1370:
  2650     022E                     l1700:
  2651                           
  2652                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2653     022E  1683               	bsf	3,5	;RP0=1, select bank1
  2654     022F  1303               	bcf	3,6	;RP1=0, select bank1
  2655     0230  1291               	bcf	17,5	;volatile
  2656                           
  2657                           ;I2C.c: 84:     }else{
  2658     0231  2A35               	goto	l173
  2659     0232                     l172:
  2660                           
  2661                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2662     0232  1683               	bsf	3,5	;RP0=1, select bank1
  2663     0233  1303               	bcf	3,6	;RP1=0, select bank1
  2664     0234  1691               	bsf	17,5	;volatile
  2665     0235                     l173:	
  2666                           ;I2C.c: 86:     }
  2667                           
  2668                           
  2669                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2670     0235  1611               	bsf	17,4	;volatile
  2671     0236                     l1702:
  2672                           
  2673                           ;I2C.c: 88:     return temp;
  2674     0236  0875               	movf	I2C_Master_Read@temp+1,w
  2675     0237  00F1               	movwf	?_I2C_Master_Read+1
  2676     0238  0874               	movf	I2C_Master_Read@temp,w
  2677     0239  00F0               	movwf	?_I2C_Master_Read
  2678     023A                     l174:
  2679     023A  0008               	return
  2680     023B                     __end_of_I2C_Master_Read:
  2681                           
  2682                           	psect	text10
  2683     0270                     __ptext10:	
  2684 ;; *************** function _enviar_x *****************
  2685 ;; Defined at:
  2686 ;;		line 38 in file "DS3231.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  val1            1    wreg     unsigned char 
  2689 ;;  val2            1    2[COMMON] unsigned char 
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;  val1            1    5[COMMON] unsigned char 
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      void 
  2694 ;; Registers used:
  2695 ;;		wreg, status,2, status,0, pclath, cstack
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2701 ;;      Params:         1       0       0       0       0
  2702 ;;      Locals:         1       0       0       0       0
  2703 ;;      Temps:          2       0       0       0       0
  2704 ;;      Totals:         4       0       0       0       0
  2705 ;;Total ram usage:        4 bytes
  2706 ;; Hardware stack levels used: 1
  2707 ;; Hardware stack levels required when called: 2
  2708 ;; This function calls:
  2709 ;;		_I2C_Master_Start
  2710 ;;		_I2C_Master_Stop
  2711 ;;		_I2C_Master_Write
  2712 ;; This function is called by:
  2713 ;;		_main
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717     0270                     _enviar_x:	
  2718                           ;psect for function _enviar_x
  2719                           
  2720                           
  2721                           ;incstack = 0
  2722                           ; Regs used in _enviar_x: [wreg+status,2+status,0+pclath+cstack]
  2723                           ;enviar_x@val1 stored from wreg
  2724     0270  00F5               	movwf	enviar_x@val1
  2725     0271                     l1762:
  2726                           
  2727                           ;DS3231.c: 39:     I2C_Master_Start();
  2728     0271  120A  118A  2110  120A  118A  	fcall	_I2C_Master_Start
  2729                           
  2730                           ;DS3231.c: 40:     I2C_Master_Write(0xD0);
  2731     0276  30D0               	movlw	208
  2732     0277  00F0               	movwf	I2C_Master_Write@d
  2733     0278  3000               	movlw	0
  2734     0279  00F1               	movwf	I2C_Master_Write@d+1
  2735     027A  120A  118A  212B  120A  118A  	fcall	_I2C_Master_Write
  2736                           
  2737                           ;DS3231.c: 41:     I2C_Master_Write(0);
  2738     027F  3000               	movlw	0
  2739     0280  00F0               	movwf	I2C_Master_Write@d
  2740     0281  00F1               	movwf	I2C_Master_Write@d+1
  2741     0282  120A  118A  212B  120A  118A  	fcall	_I2C_Master_Write
  2742                           
  2743                           ;DS3231.c: 42:     I2C_Master_Write(val1);
  2744     0287  0875               	movf	enviar_x@val1,w
  2745     0288  00F3               	movwf	??_enviar_x
  2746     0289  01F4               	clrf	??_enviar_x+1
  2747     028A  0873               	movf	??_enviar_x,w
  2748     028B  00F0               	movwf	I2C_Master_Write@d
  2749     028C  0874               	movf	??_enviar_x+1,w
  2750     028D  00F1               	movwf	I2C_Master_Write@d+1
  2751     028E  120A  118A  212B  120A  118A  	fcall	_I2C_Master_Write
  2752                           
  2753                           ;DS3231.c: 43:     I2C_Master_Write(val2);
  2754     0293  0872               	movf	enviar_x@val2,w
  2755     0294  00F3               	movwf	??_enviar_x
  2756     0295  01F4               	clrf	??_enviar_x+1
  2757     0296  0873               	movf	??_enviar_x,w
  2758     0297  00F0               	movwf	I2C_Master_Write@d
  2759     0298  0874               	movf	??_enviar_x+1,w
  2760     0299  00F1               	movwf	I2C_Master_Write@d+1
  2761     029A  120A  118A  212B  120A  118A  	fcall	_I2C_Master_Write
  2762                           
  2763                           ;DS3231.c: 44:     I2C_Master_Stop();
  2764     029F  120A  118A  2119  120A  118A  	fcall	_I2C_Master_Stop
  2765     02A4                     l134:
  2766     02A4  0008               	return
  2767     02A5                     __end_of_enviar_x:
  2768                           
  2769                           	psect	text11
  2770     012B                     __ptext11:	
  2771 ;; *************** function _I2C_Master_Write *****************
  2772 ;; Defined at:
  2773 ;;		line 65 in file "I2C.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  d               2    0[COMMON] unsigned int 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;		None
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0, pclath, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2787 ;;      Params:         2       0       0       0       0
  2788 ;;      Locals:         0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0
  2790 ;;      Totals:         2       0       0       0       0
  2791 ;;Total ram usage:        2 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 1
  2794 ;; This function calls:
  2795 ;;		_I2C_Master_Wait
  2796 ;; This function is called by:
  2797 ;;		_leer_x
  2798 ;;		_enviar_x
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802     012B                     _I2C_Master_Write:	
  2803                           ;psect for function _I2C_Master_Write
  2804                           
  2805     012B                     l1682:	
  2806                           ;incstack = 0
  2807                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2808                           
  2809                           
  2810                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2811     012B  120A  118A  2142  120A  118A  	fcall	_I2C_Master_Wait
  2812     0130                     l1684:
  2813                           
  2814                           ;I2C.c: 68:     SSPBUF = d;
  2815     0130  0870               	movf	I2C_Master_Write@d,w
  2816     0131  1283               	bcf	3,5	;RP0=0, select bank0
  2817     0132  1303               	bcf	3,6	;RP1=0, select bank0
  2818     0133  0093               	movwf	19	;volatile
  2819     0134                     l169:
  2820     0134  0008               	return
  2821     0135                     __end_of_I2C_Master_Write:
  2822                           
  2823                           	psect	text12
  2824     0119                     __ptext12:	
  2825 ;; *************** function _I2C_Master_Stop *****************
  2826 ;; Defined at:
  2827 ;;		line 55 in file "I2C.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;		None
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;		None
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      void 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2, status,0, pclath, cstack
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2841 ;;      Params:         0       0       0       0       0
  2842 ;;      Locals:         0       0       0       0       0
  2843 ;;      Temps:          0       0       0       0       0
  2844 ;;      Totals:         0       0       0       0       0
  2845 ;;Total ram usage:        0 bytes
  2846 ;; Hardware stack levels used: 1
  2847 ;; Hardware stack levels required when called: 1
  2848 ;; This function calls:
  2849 ;;		_I2C_Master_Wait
  2850 ;; This function is called by:
  2851 ;;		_leer_x
  2852 ;;		_enviar_x
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856     0119                     _I2C_Master_Stop:	
  2857                           ;psect for function _I2C_Master_Stop
  2858                           
  2859     0119                     l1706:	
  2860                           ;incstack = 0
  2861                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2862                           
  2863                           
  2864                           ;I2C.c: 57:     I2C_Master_Wait();
  2865     0119  120A  118A  2142  120A  118A  	fcall	_I2C_Master_Wait
  2866     011E                     l1708:
  2867                           
  2868                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2869     011E  1683               	bsf	3,5	;RP0=1, select bank1
  2870     011F  1303               	bcf	3,6	;RP1=0, select bank1
  2871     0120  1511               	bsf	17,2	;volatile
  2872     0121                     l166:
  2873     0121  0008               	return
  2874     0122                     __end_of_I2C_Master_Stop:
  2875                           
  2876                           	psect	text13
  2877     0110                     __ptext13:	
  2878 ;; *************** function _I2C_Master_Start *****************
  2879 ;; Defined at:
  2880 ;;		line 39 in file "I2C.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;		None
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      void 
  2887 ;; Registers used:
  2888 ;;		wreg, status,2, status,0, pclath, cstack
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2894 ;;      Params:         0       0       0       0       0
  2895 ;;      Locals:         0       0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0
  2897 ;;      Totals:         0       0       0       0       0
  2898 ;;Total ram usage:        0 bytes
  2899 ;; Hardware stack levels used: 1
  2900 ;; Hardware stack levels required when called: 1
  2901 ;; This function calls:
  2902 ;;		_I2C_Master_Wait
  2903 ;; This function is called by:
  2904 ;;		_leer_x
  2905 ;;		_enviar_x
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909     0110                     _I2C_Master_Start:	
  2910                           ;psect for function _I2C_Master_Start
  2911                           
  2912     0110                     l1678:	
  2913                           ;incstack = 0
  2914                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2915                           
  2916                           
  2917                           ;I2C.c: 41:     I2C_Master_Wait();
  2918     0110  120A  118A  2142  120A  118A  	fcall	_I2C_Master_Wait
  2919     0115                     l1680:
  2920                           
  2921                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2922     0115  1683               	bsf	3,5	;RP0=1, select bank1
  2923     0116  1303               	bcf	3,6	;RP1=0, select bank1
  2924     0117  1411               	bsf	17,0	;volatile
  2925     0118                     l160:
  2926     0118  0008               	return
  2927     0119                     __end_of_I2C_Master_Start:
  2928                           
  2929                           	psect	text14
  2930     0142                     __ptext14:	
  2931 ;; *************** function _I2C_Master_Wait *****************
  2932 ;; Defined at:
  2933 ;;		line 32 in file "I2C.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;		None
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;		None
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      void 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2947 ;;      Params:         0       0       0       0       0
  2948 ;;      Locals:         0       0       0       0       0
  2949 ;;      Temps:          0       0       0       0       0
  2950 ;;      Totals:         0       0       0       0       0
  2951 ;;Total ram usage:        0 bytes
  2952 ;; Hardware stack levels used: 1
  2953 ;; This function calls:
  2954 ;;		Nothing
  2955 ;; This function is called by:
  2956 ;;		_I2C_Master_Start
  2957 ;;		_I2C_Master_RepeatedStart
  2958 ;;		_I2C_Master_Stop
  2959 ;;		_I2C_Master_Write
  2960 ;;		_I2C_Master_Read
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964     0142                     _I2C_Master_Wait:	
  2965                           ;psect for function _I2C_Master_Wait
  2966                           
  2967     0142                     l1380:	
  2968                           ;incstack = 0
  2969                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2970                           
  2971     0142                     l154:	
  2972                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2973                           
  2974     0142  1683               	bsf	3,5	;RP0=1, select bank1
  2975     0143  1303               	bcf	3,6	;RP1=0, select bank1
  2976     0144  1914               	btfsc	20,2	;volatile
  2977     0145  2947               	goto	u871
  2978     0146  2948               	goto	u870
  2979     0147                     u871:
  2980     0147  2942               	goto	l154
  2981     0148                     u870:
  2982     0148                     l1382:
  2983     0148  0811               	movf	17,w	;volatile
  2984     0149  391F               	andlw	31
  2985     014A  1D03               	btfss	3,2
  2986     014B  294D               	goto	u881
  2987     014C  294E               	goto	u880
  2988     014D                     u881:
  2989     014D  2942               	goto	l154
  2990     014E                     u880:
  2991     014E                     l157:
  2992     014E  0008               	return
  2993     014F                     __end_of_I2C_Master_Wait:
  2994                           
  2995                           	psect	text15
  2996     01BB                     __ptext15:	
  2997 ;; *************** function _Lcd_Write_String *****************
  2998 ;; Defined at:
  2999 ;;		line 98 in file "LCD.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  a               1    wreg     PTR unsigned char 
  3002 ;;		 -> STR_1(6), 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  a               1    7[COMMON] PTR unsigned char 
  3005 ;;		 -> STR_1(6), 
  3006 ;;  i               2    5[COMMON] int 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3016 ;;      Params:         0       0       0       0       0
  3017 ;;      Locals:         3       0       0       0       0
  3018 ;;      Temps:          0       0       0       0       0
  3019 ;;      Totals:         3       0       0       0       0
  3020 ;;Total ram usage:        3 bytes
  3021 ;; Hardware stack levels used: 1
  3022 ;; Hardware stack levels required when called: 2
  3023 ;; This function calls:
  3024 ;;		_Lcd_Write_Char
  3025 ;; This function is called by:
  3026 ;;		_main
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030     01BB                     _Lcd_Write_String:	
  3031                           ;psect for function _Lcd_Write_String
  3032                           
  3033                           
  3034                           ;incstack = 0
  3035                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3036                           ;Lcd_Write_String@a stored from wreg
  3037     01BB  00F7               	movwf	Lcd_Write_String@a
  3038     01BC                     l1754:
  3039                           
  3040                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  3041     01BC  01F5               	clrf	Lcd_Write_String@i
  3042     01BD  01F6               	clrf	Lcd_Write_String@i+1
  3043     01BE  29D2               	goto	l1760
  3044     01BF                     l1756:
  3045                           
  3046                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  3047     01BF  0875               	movf	Lcd_Write_String@i,w
  3048     01C0  0777               	addwf	Lcd_Write_String@a,w
  3049     01C1  0084               	movwf	4
  3050     01C2  120A  118A  2003  120A  118A  	fcall	stringdir
  3051     01C7  120A  118A  223B  120A  118A  	fcall	_Lcd_Write_Char
  3052     01CC                     l1758:
  3053     01CC  3001               	movlw	1
  3054     01CD  07F5               	addwf	Lcd_Write_String@i,f
  3055     01CE  1803               	skipnc
  3056     01CF  0AF6               	incf	Lcd_Write_String@i+1,f
  3057     01D0  3000               	movlw	0
  3058     01D1  07F6               	addwf	Lcd_Write_String@i+1,f
  3059     01D2                     l1760:
  3060     01D2  0875               	movf	Lcd_Write_String@i,w
  3061     01D3  0777               	addwf	Lcd_Write_String@a,w
  3062     01D4  0084               	movwf	4
  3063     01D5  120A  118A  2003  120A  118A  	fcall	stringdir
  3064     01DA  3A00               	xorlw	0
  3065     01DB  1D03               	skipz
  3066     01DC  29DE               	goto	u1461
  3067     01DD  29DF               	goto	u1460
  3068     01DE                     u1461:
  3069     01DE  29BF               	goto	l1756
  3070     01DF                     u1460:
  3071     01DF                     l223:
  3072     01DF  0008               	return
  3073     01E0                     __end_of_Lcd_Write_String:
  3074                           
  3075                           	psect	text16
  3076     0459                     __ptext16:	
  3077 ;; *************** function _Lcd_Init *****************
  3078 ;; Defined at:
  3079 ;;		line 65 in file "LCD.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0, pclath, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3093 ;;      Params:         0       0       0       0       0
  3094 ;;      Locals:         0       0       0       0       0
  3095 ;;      Temps:          2       0       0       0       0
  3096 ;;      Totals:         2       0       0       0       0
  3097 ;;Total ram usage:        2 bytes
  3098 ;; Hardware stack levels used: 1
  3099 ;; Hardware stack levels required when called: 2
  3100 ;; This function calls:
  3101 ;;		_Lcd_Cmd
  3102 ;;		_Lcd_Port
  3103 ;; This function is called by:
  3104 ;;		_main
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108     0459                     _Lcd_Init:	
  3109                           ;psect for function _Lcd_Init
  3110                           
  3111     0459                     l1742:	
  3112                           ;incstack = 0
  3113                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3114                           
  3115                           
  3116                           ;LCD.c: 66:     Lcd_Port(0x00);
  3117     0459  3000               	movlw	0
  3118     045A  120A  118A  2199  120A  118A  	fcall	_Lcd_Port
  3119     045F                     l1744:
  3120                           
  3121                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3122     045F  3034               	movlw	52
  3123     0460  00F5               	movwf	??_Lcd_Init+1
  3124     0461  30F1               	movlw	241
  3125     0462  00F4               	movwf	??_Lcd_Init
  3126     0463                     u1707:
  3127     0463  0BF4               	decfsz	??_Lcd_Init,f
  3128     0464  2C63               	goto	u1707
  3129     0465  0BF5               	decfsz	??_Lcd_Init+1,f
  3130     0466  2C63               	goto	u1707
  3131     0467  2C68               	nop2
  3132     0468                     l1746:
  3133                           
  3134                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  3135     0468  3003               	movlw	3
  3136     0469  120A  118A  2164  120A  118A  	fcall	_Lcd_Cmd
  3137                           
  3138                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3139     046E  300D               	movlw	13
  3140     046F  00F5               	movwf	??_Lcd_Init+1
  3141     0470  30FB               	movlw	251
  3142     0471  00F4               	movwf	??_Lcd_Init
  3143     0472                     u1717:
  3144     0472  0BF4               	decfsz	??_Lcd_Init,f
  3145     0473  2C72               	goto	u1717
  3146     0474  0BF5               	decfsz	??_Lcd_Init+1,f
  3147     0475  2C72               	goto	u1717
  3148     0476  2C77               	nop2
  3149     0477                     l1748:
  3150                           
  3151                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  3152     0477  3003               	movlw	3
  3153     0478  120A  118A  2164  120A  118A  	fcall	_Lcd_Cmd
  3154     047D                     l1750:
  3155                           
  3156                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3157     047D  301D               	movlw	29
  3158     047E  00F5               	movwf	??_Lcd_Init+1
  3159     047F  3091               	movlw	145
  3160     0480  00F4               	movwf	??_Lcd_Init
  3161     0481                     u1727:
  3162     0481  0BF4               	decfsz	??_Lcd_Init,f
  3163     0482  2C81               	goto	u1727
  3164     0483  0BF5               	decfsz	??_Lcd_Init+1,f
  3165     0484  2C81               	goto	u1727
  3166                           
  3167                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  3168     0485  3003               	movlw	3
  3169     0486  120A  118A  2164  120A  118A  	fcall	_Lcd_Cmd
  3170                           
  3171                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  3172     048B  3002               	movlw	2
  3173     048C  120A  118A  2164  120A  118A  	fcall	_Lcd_Cmd
  3174                           
  3175                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  3176     0491  3002               	movlw	2
  3177     0492  120A  118A  2164  120A  118A  	fcall	_Lcd_Cmd
  3178                           
  3179                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  3180     0497  3008               	movlw	8
  3181     0498  120A  118A  2164  120A  118A  	fcall	_Lcd_Cmd
  3182                           
  3183                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  3184     049D  3000               	movlw	0
  3185     049E  120A  118A  2164  120A  118A  	fcall	_Lcd_Cmd
  3186                           
  3187                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  3188     04A3  300C               	movlw	12
  3189     04A4  120A  118A  2164  120A  118A  	fcall	_Lcd_Cmd
  3190                           
  3191                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  3192     04A9  3000               	movlw	0
  3193     04AA  120A  118A  2164  120A  118A  	fcall	_Lcd_Cmd
  3194                           
  3195                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  3196     04AF  3006               	movlw	6
  3197     04B0  120A  118A  2164  120A  118A  	fcall	_Lcd_Cmd
  3198     04B5                     l214:
  3199     04B5  0008               	return
  3200     04B6                     __end_of_Lcd_Init:
  3201                           
  3202                           	psect	text17
  3203     0135                     __ptext17:	
  3204 ;; *************** function _Lcd_Clear *****************
  3205 ;; Defined at:
  3206 ;;		line 43 in file "LCD.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;		None
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;		None
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		wreg, status,2, status,0, pclath, cstack
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3220 ;;      Params:         0       0       0       0       0
  3221 ;;      Locals:         0       0       0       0       0
  3222 ;;      Temps:          0       0       0       0       0
  3223 ;;      Totals:         0       0       0       0       0
  3224 ;;Total ram usage:        0 bytes
  3225 ;; Hardware stack levels used: 1
  3226 ;; Hardware stack levels required when called: 2
  3227 ;; This function calls:
  3228 ;;		_Lcd_Cmd
  3229 ;; This function is called by:
  3230 ;;		_main
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234     0135                     _Lcd_Clear:	
  3235                           ;psect for function _Lcd_Clear
  3236                           
  3237     0135                     l1752:	
  3238                           ;incstack = 0
  3239                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3240                           
  3241                           
  3242                           ;LCD.c: 44:     Lcd_Cmd(0);
  3243     0135  3000               	movlw	0
  3244     0136  120A  118A  2164  120A  118A  	fcall	_Lcd_Cmd
  3245                           
  3246                           ;LCD.c: 45:     Lcd_Cmd(1);
  3247     013B  3001               	movlw	1
  3248     013C  120A  118A  2164  120A  118A  	fcall	_Lcd_Cmd
  3249     0141                     l205:
  3250     0141  0008               	return
  3251     0142                     __end_of_Lcd_Clear:
  3252                           
  3253                           	psect	text18
  3254     0364                     __ptext18:	
  3255 ;; *************** function _Escribir_dato *****************
  3256 ;; Defined at:
  3257 ;;		line 185 in file "main.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;  dato            1    wreg     unsigned char 
  3260 ;;  posx            1    3[BANK0 ] unsigned char 
  3261 ;;  posy            1    4[BANK0 ] unsigned char 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  dato            1    5[BANK0 ] unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0, pclath, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3273 ;;      Params:         0       2       0       0       0
  3274 ;;      Locals:         0       1       0       0       0
  3275 ;;      Temps:          0       0       0       0       0
  3276 ;;      Totals:         0       3       0       0       0
  3277 ;;Total ram usage:        3 bytes
  3278 ;; Hardware stack levels used: 1
  3279 ;; Hardware stack levels required when called: 3
  3280 ;; This function calls:
  3281 ;;		_Lcd_Set_Cursor
  3282 ;;		_Lcd_Write_Char
  3283 ;;		_descomponer
  3284 ;;		_inttochar
  3285 ;; This function is called by:
  3286 ;;		_main
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290     0364                     _Escribir_dato:	
  3291                           ;psect for function _Escribir_dato
  3292                           
  3293                           
  3294                           ;incstack = 0
  3295                           ; Regs used in _Escribir_dato: [wreg+status,2+status,0+pclath+cstack]
  3296                           ;Escribir_dato@dato stored from wreg
  3297     0364  1283               	bcf	3,5	;RP0=0, select bank0
  3298     0365  1303               	bcf	3,6	;RP1=0, select bank0
  3299     0366  00B4               	movwf	Escribir_dato@dato
  3300     0367                     l1770:
  3301                           
  3302                           ;main.c: 186:     Lcd_Set_Cursor(posy, posx+1);
  3303     0367  0832               	movf	Escribir_dato@posx,w
  3304     0368  3E01               	addlw	1
  3305     0369  00F4               	movwf	Lcd_Set_Cursor@b
  3306     036A  0833               	movf	Escribir_dato@posy,w
  3307     036B  120A  118A  231E  120A  118A  	fcall	_Lcd_Set_Cursor
  3308                           
  3309                           ;main.c: 187:     unidad = inttochar(descomponer(0, dato));
  3310     0370  3000               	movlw	0
  3311     0371  00F9               	movwf	descomponer@pos
  3312     0372  00FA               	movwf	descomponer@pos+1
  3313     0373  1283               	bcf	3,5	;RP0=0, select bank0
  3314     0374  1303               	bcf	3,6	;RP1=0, select bank0
  3315     0375  0834               	movf	Escribir_dato@dato,w
  3316     0376  00FB               	movwf	descomponer@num
  3317     0377  120A  118A  2515  120A  118A  	fcall	_descomponer
  3318     037C  120A  118A  23B0  120A  118A  	fcall	_inttochar
  3319     0381  1283               	bcf	3,5	;RP0=0, select bank0
  3320     0382  1303               	bcf	3,6	;RP1=0, select bank0
  3321     0383  00AD               	movwf	_unidad
  3322                           
  3323                           ;main.c: 188:     Lcd_Write_Char(unidad);
  3324     0384  082D               	movf	_unidad,w
  3325     0385  120A  118A  223B  120A  118A  	fcall	_Lcd_Write_Char
  3326                           
  3327                           ;main.c: 189:     Lcd_Set_Cursor(posy, posx);
  3328     038A  1283               	bcf	3,5	;RP0=0, select bank0
  3329     038B  1303               	bcf	3,6	;RP1=0, select bank0
  3330     038C  0832               	movf	Escribir_dato@posx,w
  3331     038D  00F4               	movwf	Lcd_Set_Cursor@b
  3332     038E  0833               	movf	Escribir_dato@posy,w
  3333     038F  120A  118A  231E  120A  118A  	fcall	_Lcd_Set_Cursor
  3334                           
  3335                           ;main.c: 190:     decena = inttochar(descomponer(1, dato));
  3336     0394  3001               	movlw	1
  3337     0395  00F9               	movwf	descomponer@pos
  3338     0396  3000               	movlw	0
  3339     0397  00FA               	movwf	descomponer@pos+1
  3340     0398  1283               	bcf	3,5	;RP0=0, select bank0
  3341     0399  1303               	bcf	3,6	;RP1=0, select bank0
  3342     039A  0834               	movf	Escribir_dato@dato,w
  3343     039B  00FB               	movwf	descomponer@num
  3344     039C  120A  118A  2515  120A  118A  	fcall	_descomponer
  3345     03A1  120A  118A  23B0  120A  118A  	fcall	_inttochar
  3346     03A6  1283               	bcf	3,5	;RP0=0, select bank0
  3347     03A7  1303               	bcf	3,6	;RP1=0, select bank0
  3348     03A8  00AC               	movwf	_decena
  3349                           
  3350                           ;main.c: 191:     Lcd_Write_Char(decena);
  3351     03A9  082C               	movf	_decena,w
  3352     03AA  120A  118A  223B  120A  118A  	fcall	_Lcd_Write_Char
  3353     03AF                     l112:
  3354     03AF  0008               	return
  3355     03B0                     __end_of_Escribir_dato:
  3356                           
  3357                           	psect	text19
  3358     03B0                     __ptext19:	
  3359 ;; *************** function _inttochar *****************
  3360 ;; Defined at:
  3361 ;;		line 12 in file "conversiones.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  num             1    wreg     unsigned char 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  num             1    0[COMMON] unsigned char 
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      unsigned char 
  3368 ;; Registers used:
  3369 ;;		wreg, status,2, status,0
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3375 ;;      Params:         0       0       0       0       0
  3376 ;;      Locals:         1       0       0       0       0
  3377 ;;      Temps:          0       0       0       0       0
  3378 ;;      Totals:         1       0       0       0       0
  3379 ;;Total ram usage:        1 bytes
  3380 ;; Hardware stack levels used: 1
  3381 ;; This function calls:
  3382 ;;		Nothing
  3383 ;; This function is called by:
  3384 ;;		_Escribir_dato
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388     03B0                     _inttochar:	
  3389                           ;psect for function _inttochar
  3390                           
  3391                           
  3392                           ;incstack = 0
  3393                           ; Regs used in _inttochar: [wreg+status,2+status,0]
  3394                           ;inttochar@num stored from wreg
  3395     03B0  00F0               	movwf	inttochar@num
  3396     03B1                     l1590:
  3397                           
  3398                           ;conversiones.c: 13:     if(num == 0){
  3399     03B1  0870               	movf	inttochar@num,w
  3400     03B2  1D03               	btfss	3,2
  3401     03B3  2BB5               	goto	u1261
  3402     03B4  2BB6               	goto	u1260
  3403     03B5                     u1261:
  3404     03B5  2BB8               	goto	l1598
  3405     03B6                     u1260:
  3406     03B6                     l1592:
  3407                           
  3408                           ;conversiones.c: 14:         return '0';
  3409     03B6  3030               	movlw	48
  3410     03B7  2BFF               	goto	l227
  3411     03B8                     l1598:
  3412     03B8  0370               	decf	inttochar@num,w
  3413     03B9  1D03               	btfss	3,2
  3414     03BA  2BBC               	goto	u1271
  3415     03BB  2BBD               	goto	u1270
  3416     03BC                     u1271:
  3417     03BC  2BBF               	goto	l1606
  3418     03BD                     u1270:
  3419     03BD                     l1600:
  3420                           
  3421                           ;conversiones.c: 17:         return '1';
  3422     03BD  3031               	movlw	49
  3423     03BE  2BFF               	goto	l227
  3424     03BF                     l1606:
  3425     03BF  3002               	movlw	2
  3426     03C0  0670               	xorwf	inttochar@num,w
  3427     03C1  1D03               	btfss	3,2
  3428     03C2  2BC4               	goto	u1281
  3429     03C3  2BC5               	goto	u1280
  3430     03C4                     u1281:
  3431     03C4  2BC7               	goto	l1614
  3432     03C5                     u1280:
  3433     03C5                     l1608:
  3434                           
  3435                           ;conversiones.c: 20:         return '2';
  3436     03C5  3032               	movlw	50
  3437     03C6  2BFF               	goto	l227
  3438     03C7                     l1614:
  3439     03C7  3003               	movlw	3
  3440     03C8  0670               	xorwf	inttochar@num,w
  3441     03C9  1D03               	btfss	3,2
  3442     03CA  2BCC               	goto	u1291
  3443     03CB  2BCD               	goto	u1290
  3444     03CC                     u1291:
  3445     03CC  2BCF               	goto	l1622
  3446     03CD                     u1290:
  3447     03CD                     l1616:
  3448                           
  3449                           ;conversiones.c: 23:         return '3';
  3450     03CD  3033               	movlw	51
  3451     03CE  2BFF               	goto	l227
  3452     03CF                     l1622:
  3453     03CF  3004               	movlw	4
  3454     03D0  0670               	xorwf	inttochar@num,w
  3455     03D1  1D03               	btfss	3,2
  3456     03D2  2BD4               	goto	u1301
  3457     03D3  2BD5               	goto	u1300
  3458     03D4                     u1301:
  3459     03D4  2BD7               	goto	l1630
  3460     03D5                     u1300:
  3461     03D5                     l1624:
  3462                           
  3463                           ;conversiones.c: 26:         return '4';
  3464     03D5  3034               	movlw	52
  3465     03D6  2BFF               	goto	l227
  3466     03D7                     l1630:
  3467     03D7  3005               	movlw	5
  3468     03D8  0670               	xorwf	inttochar@num,w
  3469     03D9  1D03               	btfss	3,2
  3470     03DA  2BDC               	goto	u1311
  3471     03DB  2BDD               	goto	u1310
  3472     03DC                     u1311:
  3473     03DC  2BDF               	goto	l1638
  3474     03DD                     u1310:
  3475     03DD                     l1632:
  3476                           
  3477                           ;conversiones.c: 29:         return '5';
  3478     03DD  3035               	movlw	53
  3479     03DE  2BFF               	goto	l227
  3480     03DF                     l1638:
  3481     03DF  3006               	movlw	6
  3482     03E0  0670               	xorwf	inttochar@num,w
  3483     03E1  1D03               	btfss	3,2
  3484     03E2  2BE4               	goto	u1321
  3485     03E3  2BE5               	goto	u1320
  3486     03E4                     u1321:
  3487     03E4  2BE7               	goto	l1646
  3488     03E5                     u1320:
  3489     03E5                     l1640:
  3490                           
  3491                           ;conversiones.c: 32:         return '6';
  3492     03E5  3036               	movlw	54
  3493     03E6  2BFF               	goto	l227
  3494     03E7                     l1646:
  3495     03E7  3007               	movlw	7
  3496     03E8  0670               	xorwf	inttochar@num,w
  3497     03E9  1D03               	btfss	3,2
  3498     03EA  2BEC               	goto	u1331
  3499     03EB  2BED               	goto	u1330
  3500     03EC                     u1331:
  3501     03EC  2BEF               	goto	l1654
  3502     03ED                     u1330:
  3503     03ED                     l1648:
  3504                           
  3505                           ;conversiones.c: 35:         return '7';
  3506     03ED  3037               	movlw	55
  3507     03EE  2BFF               	goto	l227
  3508     03EF                     l1654:
  3509     03EF  3008               	movlw	8
  3510     03F0  0670               	xorwf	inttochar@num,w
  3511     03F1  1D03               	btfss	3,2
  3512     03F2  2BF4               	goto	u1341
  3513     03F3  2BF5               	goto	u1340
  3514     03F4                     u1341:
  3515     03F4  2BF7               	goto	l1662
  3516     03F5                     u1340:
  3517     03F5                     l1656:
  3518                           
  3519                           ;conversiones.c: 38:         return '8';
  3520     03F5  3038               	movlw	56
  3521     03F6  2BFF               	goto	l227
  3522     03F7                     l1662:
  3523     03F7  3009               	movlw	9
  3524     03F8  0670               	xorwf	inttochar@num,w
  3525     03F9  1D03               	btfss	3,2
  3526     03FA  2BFC               	goto	u1351
  3527     03FB  2BFD               	goto	u1350
  3528     03FC                     u1351:
  3529     03FC  2BFF               	goto	l240
  3530     03FD                     u1350:
  3531     03FD                     l1664:
  3532                           
  3533                           ;conversiones.c: 41:         return '9';
  3534     03FD  3039               	movlw	57
  3535     03FE  2BFF               	goto	l227
  3536     03FF                     l240:
  3537     03FF                     l227:
  3538     03FF  0008               	return
  3539     0400                     __end_of_inttochar:
  3540                           
  3541                           	psect	text20
  3542     0515                     __ptext20:	
  3543 ;; *************** function _descomponer *****************
  3544 ;; Defined at:
  3545 ;;		line 45 in file "conversiones.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;  pos             2    9[COMMON] int 
  3548 ;;  num             1   11[COMMON] unsigned char 
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;  dec             1    2[BANK0 ] unsigned char 
  3551 ;;  uni             1    1[BANK0 ] unsigned char 
  3552 ;;  cent            1    0[BANK0 ] unsigned char 
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      unsigned char 
  3555 ;; Registers used:
  3556 ;;		wreg, status,2, status,0, pclath, cstack
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3562 ;;      Params:         3       0       0       0       0
  3563 ;;      Locals:         0       3       0       0       0
  3564 ;;      Temps:          2       0       0       0       0
  3565 ;;      Totals:         5       3       0       0       0
  3566 ;;Total ram usage:        8 bytes
  3567 ;; Hardware stack levels used: 1
  3568 ;; Hardware stack levels required when called: 1
  3569 ;; This function calls:
  3570 ;;		___awdiv
  3571 ;;		___awmod
  3572 ;; This function is called by:
  3573 ;;		_Escribir_dato
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577     0515                     _descomponer:	
  3578                           ;psect for function _descomponer
  3579                           
  3580     0515                     l1566:	
  3581                           ;incstack = 0
  3582                           ; Regs used in _descomponer: [wreg+status,2+status,0+pclath+cstack]
  3583                           
  3584                           
  3585                           ;conversiones.c: 46:     uint8_t cent;;conversiones.c: 47:     uint8_t dec;;conversiones
      +                          .c: 48:     uint8_t uni;;conversiones.c: 49:     cent = (num/100);
  3586     0515  3064               	movlw	100
  3587     0516  00F0               	movwf	___awdiv@divisor
  3588     0517  3000               	movlw	0
  3589     0518  00F1               	movwf	___awdiv@divisor+1
  3590     0519  087B               	movf	descomponer@num,w
  3591     051A  00FC               	movwf	??_descomponer
  3592     051B  01FD               	clrf	??_descomponer+1
  3593     051C  087C               	movf	??_descomponer,w
  3594     051D  00F2               	movwf	___awdiv@dividend
  3595     051E  087D               	movf	??_descomponer+1,w
  3596     051F  00F3               	movwf	___awdiv@dividend+1
  3597     0520  120A  118A  25E0  120A  118A  	fcall	___awdiv
  3598     0525  0870               	movf	?___awdiv,w
  3599     0526  1283               	bcf	3,5	;RP0=0, select bank0
  3600     0527  1303               	bcf	3,6	;RP1=0, select bank0
  3601     0528  00AF               	movwf	descomponer@cent
  3602                           
  3603                           ;conversiones.c: 50:     dec = (num%100);
  3604     0529  3064               	movlw	100
  3605     052A  00F0               	movwf	___awmod@divisor
  3606     052B  3000               	movlw	0
  3607     052C  00F1               	movwf	___awmod@divisor+1
  3608     052D  087B               	movf	descomponer@num,w
  3609     052E  00FC               	movwf	??_descomponer
  3610     052F  01FD               	clrf	??_descomponer+1
  3611     0530  087C               	movf	??_descomponer,w
  3612     0531  00F2               	movwf	___awmod@dividend
  3613     0532  087D               	movf	??_descomponer+1,w
  3614     0533  00F3               	movwf	___awmod@dividend+1
  3615     0534  120A  118A  2400  120A  118A  	fcall	___awmod
  3616     0539  0870               	movf	?___awmod,w
  3617     053A  1283               	bcf	3,5	;RP0=0, select bank0
  3618     053B  1303               	bcf	3,6	;RP1=0, select bank0
  3619     053C  00B1               	movwf	descomponer@dec
  3620                           
  3621                           ;conversiones.c: 51:     uni = (dec%10);
  3622     053D  300A               	movlw	10
  3623     053E  00F0               	movwf	___awmod@divisor
  3624     053F  3000               	movlw	0
  3625     0540  00F1               	movwf	___awmod@divisor+1
  3626     0541  0831               	movf	descomponer@dec,w
  3627     0542  00FC               	movwf	??_descomponer
  3628     0543  01FD               	clrf	??_descomponer+1
  3629     0544  087C               	movf	??_descomponer,w
  3630     0545  00F2               	movwf	___awmod@dividend
  3631     0546  087D               	movf	??_descomponer+1,w
  3632     0547  00F3               	movwf	___awmod@dividend+1
  3633     0548  120A  118A  2400  120A  118A  	fcall	___awmod
  3634     054D  0870               	movf	?___awmod,w
  3635     054E  1283               	bcf	3,5	;RP0=0, select bank0
  3636     054F  1303               	bcf	3,6	;RP1=0, select bank0
  3637     0550  00B0               	movwf	descomponer@uni
  3638     0551                     l1568:
  3639                           
  3640                           ;conversiones.c: 52:     if(pos == 2){
  3641     0551  3002               	movlw	2
  3642     0552  0679               	xorwf	descomponer@pos,w
  3643     0553  047A               	iorwf	descomponer@pos+1,w
  3644     0554  1D03               	btfss	3,2
  3645     0555  2D57               	goto	u1231
  3646     0556  2D58               	goto	u1230
  3647     0557                     u1231:
  3648     0557  2D5A               	goto	l1576
  3649     0558                     u1230:
  3650     0558                     l1570:
  3651                           
  3652                           ;conversiones.c: 53:         return cent;
  3653     0558  082F               	movf	descomponer@cent,w
  3654     0559  2D79               	goto	l249
  3655     055A                     l1576:
  3656     055A  0379               	decf	descomponer@pos,w
  3657     055B  047A               	iorwf	descomponer@pos+1,w
  3658     055C  1D03               	btfss	3,2
  3659     055D  2D5F               	goto	u1241
  3660     055E  2D60               	goto	u1240
  3661     055F                     u1241:
  3662     055F  2D72               	goto	l1584
  3663     0560                     u1240:
  3664     0560                     l1578:
  3665                           
  3666                           ;conversiones.c: 56:         return (dec/10);
  3667     0560  300A               	movlw	10
  3668     0561  00F0               	movwf	___awdiv@divisor
  3669     0562  3000               	movlw	0
  3670     0563  00F1               	movwf	___awdiv@divisor+1
  3671     0564  0831               	movf	descomponer@dec,w
  3672     0565  00FC               	movwf	??_descomponer
  3673     0566  01FD               	clrf	??_descomponer+1
  3674     0567  087C               	movf	??_descomponer,w
  3675     0568  00F2               	movwf	___awdiv@dividend
  3676     0569  087D               	movf	??_descomponer+1,w
  3677     056A  00F3               	movwf	___awdiv@dividend+1
  3678     056B  120A  118A  25E0  120A  118A  	fcall	___awdiv
  3679     0570  0870               	movf	?___awdiv,w
  3680     0571  2D79               	goto	l249
  3681     0572                     l1584:
  3682     0572  0879               	movf	descomponer@pos,w
  3683     0573  047A               	iorwf	descomponer@pos+1,w
  3684     0574  1D03               	btfss	3,2
  3685     0575  2D77               	goto	u1251
  3686     0576  2D78               	goto	u1250
  3687     0577                     u1251:
  3688     0577  2D79               	goto	l249
  3689     0578                     u1250:
  3690     0578                     l1586:
  3691                           
  3692                           ;conversiones.c: 59:         return uni;
  3693     0578  0830               	movf	descomponer@uni,w
  3694     0579                     l249:
  3695     0579  0008               	return
  3696     057A                     __end_of_descomponer:
  3697                           
  3698                           	psect	text21
  3699     0400                     __ptext21:	
  3700 ;; *************** function ___awmod *****************
  3701 ;; Defined at:
  3702 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;  divisor         2    0[COMMON] int 
  3705 ;;  dividend        2    2[COMMON] int 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;  sign            1    6[COMMON] unsigned char 
  3708 ;;  counter         1    5[COMMON] unsigned char 
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  2    0[COMMON] int 
  3711 ;; Registers used:
  3712 ;;		wreg, status,2, status,0
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3718 ;;      Params:         4       0       0       0       0
  3719 ;;      Locals:         2       0       0       0       0
  3720 ;;      Temps:          1       0       0       0       0
  3721 ;;      Totals:         7       0       0       0       0
  3722 ;;Total ram usage:        7 bytes
  3723 ;; Hardware stack levels used: 1
  3724 ;; This function calls:
  3725 ;;		Nothing
  3726 ;; This function is called by:
  3727 ;;		_descomponer
  3728 ;;		_desconvertir
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732     0400                     ___awmod:	
  3733                           ;psect for function ___awmod
  3734                           
  3735     0400                     l1476:	
  3736                           ;incstack = 0
  3737                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3738                           
  3739     0400  01F6               	clrf	___awmod@sign
  3740     0401                     l1478:
  3741     0401  1FF3               	btfss	___awmod@dividend+1,7
  3742     0402  2C04               	goto	u1081
  3743     0403  2C05               	goto	u1080
  3744     0404                     u1081:
  3745     0404  2C0C               	goto	l1484
  3746     0405                     u1080:
  3747     0405                     l1480:
  3748     0405  09F2               	comf	___awmod@dividend,f
  3749     0406  09F3               	comf	___awmod@dividend+1,f
  3750     0407  0AF2               	incf	___awmod@dividend,f
  3751     0408  1903               	skipnz
  3752     0409  0AF3               	incf	___awmod@dividend+1,f
  3753     040A                     l1482:
  3754     040A  01F6               	clrf	___awmod@sign
  3755     040B  0AF6               	incf	___awmod@sign,f
  3756     040C                     l1484:
  3757     040C  1FF1               	btfss	___awmod@divisor+1,7
  3758     040D  2C0F               	goto	u1091
  3759     040E  2C10               	goto	u1090
  3760     040F                     u1091:
  3761     040F  2C15               	goto	l1488
  3762     0410                     u1090:
  3763     0410                     l1486:
  3764     0410  09F0               	comf	___awmod@divisor,f
  3765     0411  09F1               	comf	___awmod@divisor+1,f
  3766     0412  0AF0               	incf	___awmod@divisor,f
  3767     0413  1903               	skipnz
  3768     0414  0AF1               	incf	___awmod@divisor+1,f
  3769     0415                     l1488:
  3770     0415  0870               	movf	___awmod@divisor,w
  3771     0416  0471               	iorwf	___awmod@divisor+1,w
  3772     0417  1903               	btfsc	3,2
  3773     0418  2C1A               	goto	u1101
  3774     0419  2C1B               	goto	u1100
  3775     041A                     u1101:
  3776     041A  2C4A               	goto	l1506
  3777     041B                     u1100:
  3778     041B                     l1490:
  3779     041B  01F5               	clrf	___awmod@counter
  3780     041C  0AF5               	incf	___awmod@counter,f
  3781     041D  2C29               	goto	l1496
  3782     041E                     l1492:
  3783     041E  3001               	movlw	1
  3784     041F                     u1115:
  3785     041F  1003               	clrc
  3786     0420  0DF0               	rlf	___awmod@divisor,f
  3787     0421  0DF1               	rlf	___awmod@divisor+1,f
  3788     0422  3EFF               	addlw	-1
  3789     0423  1D03               	skipz
  3790     0424  2C1F               	goto	u1115
  3791     0425                     l1494:
  3792     0425  3001               	movlw	1
  3793     0426  00F4               	movwf	??___awmod
  3794     0427  0874               	movf	??___awmod,w
  3795     0428  07F5               	addwf	___awmod@counter,f
  3796     0429                     l1496:
  3797     0429  1FF1               	btfss	___awmod@divisor+1,7
  3798     042A  2C2C               	goto	u1121
  3799     042B  2C2D               	goto	u1120
  3800     042C                     u1121:
  3801     042C  2C1E               	goto	l1492
  3802     042D                     u1120:
  3803     042D                     l1498:
  3804     042D  0871               	movf	___awmod@divisor+1,w
  3805     042E  0273               	subwf	___awmod@dividend+1,w
  3806     042F  1D03               	skipz
  3807     0430  2C33               	goto	u1135
  3808     0431  0870               	movf	___awmod@divisor,w
  3809     0432  0272               	subwf	___awmod@dividend,w
  3810     0433                     u1135:
  3811     0433  1C03               	skipc
  3812     0434  2C36               	goto	u1131
  3813     0435  2C37               	goto	u1130
  3814     0436                     u1131:
  3815     0436  2C3D               	goto	l1502
  3816     0437                     u1130:
  3817     0437                     l1500:
  3818     0437  0870               	movf	___awmod@divisor,w
  3819     0438  02F2               	subwf	___awmod@dividend,f
  3820     0439  0871               	movf	___awmod@divisor+1,w
  3821     043A  1C03               	skipc
  3822     043B  03F3               	decf	___awmod@dividend+1,f
  3823     043C  02F3               	subwf	___awmod@dividend+1,f
  3824     043D                     l1502:
  3825     043D  3001               	movlw	1
  3826     043E                     u1145:
  3827     043E  1003               	clrc
  3828     043F  0CF1               	rrf	___awmod@divisor+1,f
  3829     0440  0CF0               	rrf	___awmod@divisor,f
  3830     0441  3EFF               	addlw	-1
  3831     0442  1D03               	skipz
  3832     0443  2C3E               	goto	u1145
  3833     0444                     l1504:
  3834     0444  3001               	movlw	1
  3835     0445  02F5               	subwf	___awmod@counter,f
  3836     0446  1D03               	btfss	3,2
  3837     0447  2C49               	goto	u1151
  3838     0448  2C4A               	goto	u1150
  3839     0449                     u1151:
  3840     0449  2C2D               	goto	l1498
  3841     044A                     u1150:
  3842     044A                     l1506:
  3843     044A  0876               	movf	___awmod@sign,w
  3844     044B  1903               	btfsc	3,2
  3845     044C  2C4E               	goto	u1161
  3846     044D  2C4F               	goto	u1160
  3847     044E                     u1161:
  3848     044E  2C54               	goto	l1510
  3849     044F                     u1160:
  3850     044F                     l1508:
  3851     044F  09F2               	comf	___awmod@dividend,f
  3852     0450  09F3               	comf	___awmod@dividend+1,f
  3853     0451  0AF2               	incf	___awmod@dividend,f
  3854     0452  1903               	skipnz
  3855     0453  0AF3               	incf	___awmod@dividend+1,f
  3856     0454                     l1510:
  3857     0454  0873               	movf	___awmod@dividend+1,w
  3858     0455  00F1               	movwf	?___awmod+1
  3859     0456  0872               	movf	___awmod@dividend,w
  3860     0457  00F0               	movwf	?___awmod
  3861     0458                     l518:
  3862     0458  0008               	return
  3863     0459                     __end_of___awmod:
  3864                           
  3865                           	psect	text22
  3866     05E0                     __ptext22:	
  3867 ;; *************** function ___awdiv *****************
  3868 ;; Defined at:
  3869 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  divisor         2    0[COMMON] int 
  3872 ;;  dividend        2    2[COMMON] int 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  quotient        2    7[COMMON] int 
  3875 ;;  sign            1    6[COMMON] unsigned char 
  3876 ;;  counter         1    5[COMMON] unsigned char 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  2    0[COMMON] int 
  3879 ;; Registers used:
  3880 ;;		wreg, status,2, status,0
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3886 ;;      Params:         4       0       0       0       0
  3887 ;;      Locals:         4       0       0       0       0
  3888 ;;      Temps:          1       0       0       0       0
  3889 ;;      Totals:         9       0       0       0       0
  3890 ;;Total ram usage:        9 bytes
  3891 ;; Hardware stack levels used: 1
  3892 ;; This function calls:
  3893 ;;		Nothing
  3894 ;; This function is called by:
  3895 ;;		_descomponer
  3896 ;;		_desconvertir
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900     05E0                     ___awdiv:	
  3901                           ;psect for function ___awdiv
  3902                           
  3903     05E0                     l1432:	
  3904                           ;incstack = 0
  3905                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3906                           
  3907     05E0  01F6               	clrf	___awdiv@sign
  3908     05E1                     l1434:
  3909     05E1  1FF1               	btfss	___awdiv@divisor+1,7
  3910     05E2  2DE4               	goto	u981
  3911     05E3  2DE5               	goto	u980
  3912     05E4                     u981:
  3913     05E4  2DEC               	goto	l1440
  3914     05E5                     u980:
  3915     05E5                     l1436:
  3916     05E5  09F0               	comf	___awdiv@divisor,f
  3917     05E6  09F1               	comf	___awdiv@divisor+1,f
  3918     05E7  0AF0               	incf	___awdiv@divisor,f
  3919     05E8  1903               	skipnz
  3920     05E9  0AF1               	incf	___awdiv@divisor+1,f
  3921     05EA                     l1438:
  3922     05EA  01F6               	clrf	___awdiv@sign
  3923     05EB  0AF6               	incf	___awdiv@sign,f
  3924     05EC                     l1440:
  3925     05EC  1FF3               	btfss	___awdiv@dividend+1,7
  3926     05ED  2DEF               	goto	u991
  3927     05EE  2DF0               	goto	u990
  3928     05EF                     u991:
  3929     05EF  2DF9               	goto	l1446
  3930     05F0                     u990:
  3931     05F0                     l1442:
  3932     05F0  09F2               	comf	___awdiv@dividend,f
  3933     05F1  09F3               	comf	___awdiv@dividend+1,f
  3934     05F2  0AF2               	incf	___awdiv@dividend,f
  3935     05F3  1903               	skipnz
  3936     05F4  0AF3               	incf	___awdiv@dividend+1,f
  3937     05F5                     l1444:
  3938     05F5  3001               	movlw	1
  3939     05F6  00F4               	movwf	??___awdiv
  3940     05F7  0874               	movf	??___awdiv,w
  3941     05F8  06F6               	xorwf	___awdiv@sign,f
  3942     05F9                     l1446:
  3943     05F9  01F7               	clrf	___awdiv@quotient
  3944     05FA  01F8               	clrf	___awdiv@quotient+1
  3945     05FB                     l1448:
  3946     05FB  0870               	movf	___awdiv@divisor,w
  3947     05FC  0471               	iorwf	___awdiv@divisor+1,w
  3948     05FD  1903               	btfsc	3,2
  3949     05FE  2E00               	goto	u1001
  3950     05FF  2E01               	goto	u1000
  3951     0600                     u1001:
  3952     0600  2E38               	goto	l1468
  3953     0601                     u1000:
  3954     0601                     l1450:
  3955     0601  01F5               	clrf	___awdiv@counter
  3956     0602  0AF5               	incf	___awdiv@counter,f
  3957     0603  2E0F               	goto	l1456
  3958     0604                     l1452:
  3959     0604  3001               	movlw	1
  3960     0605                     u1015:
  3961     0605  1003               	clrc
  3962     0606  0DF0               	rlf	___awdiv@divisor,f
  3963     0607  0DF1               	rlf	___awdiv@divisor+1,f
  3964     0608  3EFF               	addlw	-1
  3965     0609  1D03               	skipz
  3966     060A  2E05               	goto	u1015
  3967     060B                     l1454:
  3968     060B  3001               	movlw	1
  3969     060C  00F4               	movwf	??___awdiv
  3970     060D  0874               	movf	??___awdiv,w
  3971     060E  07F5               	addwf	___awdiv@counter,f
  3972     060F                     l1456:
  3973     060F  1FF1               	btfss	___awdiv@divisor+1,7
  3974     0610  2E12               	goto	u1021
  3975     0611  2E13               	goto	u1020
  3976     0612                     u1021:
  3977     0612  2E04               	goto	l1452
  3978     0613                     u1020:
  3979     0613                     l1458:
  3980     0613  3001               	movlw	1
  3981     0614                     u1035:
  3982     0614  1003               	clrc
  3983     0615  0DF7               	rlf	___awdiv@quotient,f
  3984     0616  0DF8               	rlf	___awdiv@quotient+1,f
  3985     0617  3EFF               	addlw	-1
  3986     0618  1D03               	skipz
  3987     0619  2E14               	goto	u1035
  3988     061A  0871               	movf	___awdiv@divisor+1,w
  3989     061B  0273               	subwf	___awdiv@dividend+1,w
  3990     061C  1D03               	skipz
  3991     061D  2E20               	goto	u1045
  3992     061E  0870               	movf	___awdiv@divisor,w
  3993     061F  0272               	subwf	___awdiv@dividend,w
  3994     0620                     u1045:
  3995     0620  1C03               	skipc
  3996     0621  2E23               	goto	u1041
  3997     0622  2E24               	goto	u1040
  3998     0623                     u1041:
  3999     0623  2E2B               	goto	l1464
  4000     0624                     u1040:
  4001     0624                     l1460:
  4002     0624  0870               	movf	___awdiv@divisor,w
  4003     0625  02F2               	subwf	___awdiv@dividend,f
  4004     0626  0871               	movf	___awdiv@divisor+1,w
  4005     0627  1C03               	skipc
  4006     0628  03F3               	decf	___awdiv@dividend+1,f
  4007     0629  02F3               	subwf	___awdiv@dividend+1,f
  4008     062A                     l1462:
  4009     062A  1477               	bsf	___awdiv@quotient,0
  4010     062B                     l1464:
  4011     062B  3001               	movlw	1
  4012     062C                     u1055:
  4013     062C  1003               	clrc
  4014     062D  0CF1               	rrf	___awdiv@divisor+1,f
  4015     062E  0CF0               	rrf	___awdiv@divisor,f
  4016     062F  3EFF               	addlw	-1
  4017     0630  1D03               	skipz
  4018     0631  2E2C               	goto	u1055
  4019     0632                     l1466:
  4020     0632  3001               	movlw	1
  4021     0633  02F5               	subwf	___awdiv@counter,f
  4022     0634  1D03               	btfss	3,2
  4023     0635  2E37               	goto	u1061
  4024     0636  2E38               	goto	u1060
  4025     0637                     u1061:
  4026     0637  2E13               	goto	l1458
  4027     0638                     u1060:
  4028     0638                     l1468:
  4029     0638  0876               	movf	___awdiv@sign,w
  4030     0639  1903               	btfsc	3,2
  4031     063A  2E3C               	goto	u1071
  4032     063B  2E3D               	goto	u1070
  4033     063C                     u1071:
  4034     063C  2E42               	goto	l1472
  4035     063D                     u1070:
  4036     063D                     l1470:
  4037     063D  09F7               	comf	___awdiv@quotient,f
  4038     063E  09F8               	comf	___awdiv@quotient+1,f
  4039     063F  0AF7               	incf	___awdiv@quotient,f
  4040     0640  1903               	skipnz
  4041     0641  0AF8               	incf	___awdiv@quotient+1,f
  4042     0642                     l1472:
  4043     0642  0878               	movf	___awdiv@quotient+1,w
  4044     0643  00F1               	movwf	?___awdiv+1
  4045     0644  0877               	movf	___awdiv@quotient,w
  4046     0645  00F0               	movwf	?___awdiv
  4047     0646                     l505:
  4048     0646  0008               	return
  4049     0647                     __end_of___awdiv:
  4050                           
  4051                           	psect	text23
  4052     023B                     __ptext23:	
  4053 ;; *************** function _Lcd_Write_Char *****************
  4054 ;; Defined at:
  4055 ;;		line 83 in file "LCD.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;  a               1    wreg     unsigned char 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;  a               1    4[COMMON] unsigned char 
  4060 ;;  y               1    3[COMMON] unsigned char 
  4061 ;;  temp            1    2[COMMON] unsigned char 
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  1    wreg      void 
  4064 ;; Registers used:
  4065 ;;		wreg, status,2, status,0, pclath, cstack
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4071 ;;      Params:         0       0       0       0       0
  4072 ;;      Locals:         3       0       0       0       0
  4073 ;;      Temps:          1       0       0       0       0
  4074 ;;      Totals:         4       0       0       0       0
  4075 ;;Total ram usage:        4 bytes
  4076 ;; Hardware stack levels used: 1
  4077 ;; Hardware stack levels required when called: 1
  4078 ;; This function calls:
  4079 ;;		_Lcd_Port
  4080 ;; This function is called by:
  4081 ;;		_main
  4082 ;;		_Escribir_dato
  4083 ;;		_Lcd_Write_String
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087     023B                     _Lcd_Write_Char:	
  4088                           ;psect for function _Lcd_Write_Char
  4089                           
  4090                           
  4091                           ;incstack = 0
  4092                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4093                           ;Lcd_Write_Char@a stored from wreg
  4094     023B  00F4               	movwf	Lcd_Write_Char@a
  4095     023C                     l1534:
  4096                           
  4097                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  4098     023C  0874               	movf	Lcd_Write_Char@a,w
  4099     023D  390F               	andlw	15
  4100     023E  00F2               	movwf	Lcd_Write_Char@temp
  4101                           
  4102                           ;LCD.c: 86:     y = a & 0xF0;
  4103     023F  0874               	movf	Lcd_Write_Char@a,w
  4104     0240  39F0               	andlw	240
  4105     0241  00F3               	movwf	Lcd_Write_Char@y
  4106     0242                     l1536:
  4107                           
  4108                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  4109     0242  1283               	bcf	3,5	;RP0=0, select bank0
  4110     0243  1303               	bcf	3,6	;RP1=0, select bank0
  4111     0244  1508               	bsf	8,2	;volatile
  4112     0245                     l1538:
  4113                           
  4114                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  4115     0245  0873               	movf	Lcd_Write_Char@y,w
  4116     0246  00F1               	movwf	??_Lcd_Write_Char
  4117     0247  3004               	movlw	4
  4118     0248                     u1215:
  4119     0248  1003               	clrc
  4120     0249  0CF1               	rrf	??_Lcd_Write_Char,f
  4121     024A  3EFF               	addlw	-1
  4122     024B  1D03               	skipz
  4123     024C  2A48               	goto	u1215
  4124     024D  0871               	movf	??_Lcd_Write_Char,w
  4125     024E  120A  118A  2199  120A  118A  	fcall	_Lcd_Port
  4126     0253                     l1540:
  4127                           
  4128                           ;LCD.c: 89:     RD3 = 1;
  4129     0253  1283               	bcf	3,5	;RP0=0, select bank0
  4130     0254  1303               	bcf	3,6	;RP1=0, select bank0
  4131     0255  1588               	bsf	8,3	;volatile
  4132     0256                     l1542:
  4133                           
  4134                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4135     0256  301A               	movlw	26
  4136     0257  00F1               	movwf	??_Lcd_Write_Char
  4137     0258                     u1737:
  4138     0258  0BF1               	decfsz	??_Lcd_Write_Char,f
  4139     0259  2A58               	goto	u1737
  4140     025A  0000               	nop
  4141     025B                     l1544:
  4142                           
  4143                           ;LCD.c: 91:     RD3 = 0;
  4144     025B  1283               	bcf	3,5	;RP0=0, select bank0
  4145     025C  1303               	bcf	3,6	;RP1=0, select bank0
  4146     025D  1188               	bcf	8,3	;volatile
  4147     025E                     l1546:
  4148                           
  4149                           ;LCD.c: 92:     Lcd_Port(temp);
  4150     025E  0872               	movf	Lcd_Write_Char@temp,w
  4151     025F  120A  118A  2199  120A  118A  	fcall	_Lcd_Port
  4152     0264                     l1548:
  4153                           
  4154                           ;LCD.c: 93:     RD3 = 1;
  4155     0264  1283               	bcf	3,5	;RP0=0, select bank0
  4156     0265  1303               	bcf	3,6	;RP1=0, select bank0
  4157     0266  1588               	bsf	8,3	;volatile
  4158     0267                     l1550:
  4159                           
  4160                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4161     0267  301A               	movlw	26
  4162     0268  00F1               	movwf	??_Lcd_Write_Char
  4163     0269                     u1747:
  4164     0269  0BF1               	decfsz	??_Lcd_Write_Char,f
  4165     026A  2A69               	goto	u1747
  4166     026B  0000               	nop
  4167     026C                     l1552:
  4168                           
  4169                           ;LCD.c: 95:     RD3 = 0;
  4170     026C  1283               	bcf	3,5	;RP0=0, select bank0
  4171     026D  1303               	bcf	3,6	;RP1=0, select bank0
  4172     026E  1188               	bcf	8,3	;volatile
  4173     026F                     l217:
  4174     026F  0008               	return
  4175     0270                     __end_of_Lcd_Write_Char:
  4176                           
  4177                           	psect	text24
  4178     031E                     __ptext24:	
  4179 ;; *************** function _Lcd_Set_Cursor *****************
  4180 ;; Defined at:
  4181 ;;		line 48 in file "LCD.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  a               1    wreg     unsigned char 
  4184 ;;  b               1    4[COMMON] unsigned char 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  a               1    6[COMMON] unsigned char 
  4187 ;;  temp            1    9[COMMON] unsigned char 
  4188 ;;  y               1    8[COMMON] unsigned char 
  4189 ;;  z               1    7[COMMON] unsigned char 
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  1    wreg      void 
  4192 ;; Registers used:
  4193 ;;		wreg, status,2, status,0, pclath, cstack
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4199 ;;      Params:         1       0       0       0       0
  4200 ;;      Locals:         4       0       0       0       0
  4201 ;;      Temps:          1       0       0       0       0
  4202 ;;      Totals:         6       0       0       0       0
  4203 ;;Total ram usage:        6 bytes
  4204 ;; Hardware stack levels used: 1
  4205 ;; Hardware stack levels required when called: 2
  4206 ;; This function calls:
  4207 ;;		_Lcd_Cmd
  4208 ;; This function is called by:
  4209 ;;		_main
  4210 ;;		_Escribir_dato
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214     031E                     _Lcd_Set_Cursor:	
  4215                           ;psect for function _Lcd_Set_Cursor
  4216                           
  4217                           
  4218                           ;incstack = 0
  4219                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4220                           ;Lcd_Set_Cursor@a stored from wreg
  4221     031E  00F6               	movwf	Lcd_Set_Cursor@a
  4222     031F                     l1514:
  4223                           
  4224                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  4225     031F  0376               	decf	Lcd_Set_Cursor@a,w
  4226     0320  1D03               	btfss	3,2
  4227     0321  2B23               	goto	u1171
  4228     0322  2B24               	goto	u1170
  4229     0323                     u1171:
  4230     0323  2B41               	goto	l1524
  4231     0324                     u1170:
  4232     0324                     l1516:
  4233                           
  4234                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  4235     0324  0874               	movf	Lcd_Set_Cursor@b,w
  4236     0325  3E7F               	addlw	127
  4237     0326  00F9               	movwf	Lcd_Set_Cursor@temp
  4238                           
  4239                           ;LCD.c: 52:         z = temp >> 4;
  4240     0327  0879               	movf	Lcd_Set_Cursor@temp,w
  4241     0328  00F5               	movwf	??_Lcd_Set_Cursor
  4242     0329  3004               	movlw	4
  4243     032A                     u1185:
  4244     032A  1003               	clrc
  4245     032B  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4246     032C  3EFF               	addlw	-1
  4247     032D  1D03               	skipz
  4248     032E  2B2A               	goto	u1185
  4249     032F  0875               	movf	??_Lcd_Set_Cursor,w
  4250     0330  00F7               	movwf	Lcd_Set_Cursor@z
  4251     0331                     l1518:
  4252                           
  4253                           ;LCD.c: 53:         y = temp & 0x0F;
  4254     0331  0879               	movf	Lcd_Set_Cursor@temp,w
  4255     0332  390F               	andlw	15
  4256     0333  00F8               	movwf	Lcd_Set_Cursor@y
  4257     0334                     l1520:
  4258                           
  4259                           ;LCD.c: 54:         Lcd_Cmd(z);
  4260     0334  0877               	movf	Lcd_Set_Cursor@z,w
  4261     0335  120A  118A  2164  120A  118A  	fcall	_Lcd_Cmd
  4262     033A                     l1522:
  4263                           
  4264                           ;LCD.c: 55:         Lcd_Cmd(y);
  4265     033A  0878               	movf	Lcd_Set_Cursor@y,w
  4266     033B  120A  118A  2164  120A  118A  	fcall	_Lcd_Cmd
  4267                           
  4268                           ;LCD.c: 56:     } else if (a == 2) {
  4269     0340  2B63               	goto	l211
  4270     0341                     l1524:
  4271     0341  3002               	movlw	2
  4272     0342  0676               	xorwf	Lcd_Set_Cursor@a,w
  4273     0343  1D03               	btfss	3,2
  4274     0344  2B46               	goto	u1191
  4275     0345  2B47               	goto	u1190
  4276     0346                     u1191:
  4277     0346  2B63               	goto	l211
  4278     0347                     u1190:
  4279     0347                     l1526:
  4280                           
  4281                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  4282     0347  0874               	movf	Lcd_Set_Cursor@b,w
  4283     0348  3EBF               	addlw	191
  4284     0349  00F9               	movwf	Lcd_Set_Cursor@temp
  4285                           
  4286                           ;LCD.c: 58:         z = temp >> 4;
  4287     034A  0879               	movf	Lcd_Set_Cursor@temp,w
  4288     034B  00F5               	movwf	??_Lcd_Set_Cursor
  4289     034C  3004               	movlw	4
  4290     034D                     u1205:
  4291     034D  1003               	clrc
  4292     034E  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4293     034F  3EFF               	addlw	-1
  4294     0350  1D03               	skipz
  4295     0351  2B4D               	goto	u1205
  4296     0352  0875               	movf	??_Lcd_Set_Cursor,w
  4297     0353  00F7               	movwf	Lcd_Set_Cursor@z
  4298     0354                     l1528:
  4299                           
  4300                           ;LCD.c: 59:         y = temp & 0x0F;
  4301     0354  0879               	movf	Lcd_Set_Cursor@temp,w
  4302     0355  390F               	andlw	15
  4303     0356  00F8               	movwf	Lcd_Set_Cursor@y
  4304     0357                     l1530:
  4305                           
  4306                           ;LCD.c: 60:         Lcd_Cmd(z);
  4307     0357  0877               	movf	Lcd_Set_Cursor@z,w
  4308     0358  120A  118A  2164  120A  118A  	fcall	_Lcd_Cmd
  4309     035D                     l1532:
  4310                           
  4311                           ;LCD.c: 61:         Lcd_Cmd(y);
  4312     035D  0878               	movf	Lcd_Set_Cursor@y,w
  4313     035E  120A  118A  2164  120A  118A  	fcall	_Lcd_Cmd
  4314     0363                     l211:
  4315     0363  0008               	return
  4316     0364                     __end_of_Lcd_Set_Cursor:
  4317                           
  4318                           	psect	text25
  4319     0164                     __ptext25:	
  4320 ;; *************** function _Lcd_Cmd *****************
  4321 ;; Defined at:
  4322 ;;		line 35 in file "LCD.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;  a               1    wreg     unsigned char 
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;  a               1    3[COMMON] unsigned char 
  4327 ;; Return value:  Size  Location     Type
  4328 ;;                  1    wreg      void 
  4329 ;; Registers used:
  4330 ;;		wreg, status,2, status,0, pclath, cstack
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4336 ;;      Params:         0       0       0       0       0
  4337 ;;      Locals:         1       0       0       0       0
  4338 ;;      Temps:          2       0       0       0       0
  4339 ;;      Totals:         3       0       0       0       0
  4340 ;;Total ram usage:        3 bytes
  4341 ;; Hardware stack levels used: 1
  4342 ;; Hardware stack levels required when called: 1
  4343 ;; This function calls:
  4344 ;;		_Lcd_Port
  4345 ;; This function is called by:
  4346 ;;		_Lcd_Clear
  4347 ;;		_Lcd_Set_Cursor
  4348 ;;		_Lcd_Init
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352     0164                     _Lcd_Cmd:	
  4353                           ;psect for function _Lcd_Cmd
  4354                           
  4355                           
  4356                           ;incstack = 0
  4357                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4358                           ;Lcd_Cmd@a stored from wreg
  4359     0164  00F3               	movwf	Lcd_Cmd@a
  4360     0165                     l1384:
  4361                           
  4362                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  4363     0165  1283               	bcf	3,5	;RP0=0, select bank0
  4364     0166  1303               	bcf	3,6	;RP1=0, select bank0
  4365     0167  1108               	bcf	8,2	;volatile
  4366     0168                     l1386:
  4367                           
  4368                           ;LCD.c: 37:     Lcd_Port(a);
  4369     0168  0873               	movf	Lcd_Cmd@a,w
  4370     0169  120A  118A  2199  120A  118A  	fcall	_Lcd_Port
  4371     016E                     l1388:
  4372                           
  4373                           ;LCD.c: 38:     RD3 = 1;
  4374     016E  1283               	bcf	3,5	;RP0=0, select bank0
  4375     016F  1303               	bcf	3,6	;RP1=0, select bank0
  4376     0170  1588               	bsf	8,3	;volatile
  4377     0171                     l1390:
  4378                           
  4379                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4380     0171  300B               	movlw	11
  4381     0172  00F2               	movwf	??_Lcd_Cmd+1
  4382     0173  3062               	movlw	98
  4383     0174  00F1               	movwf	??_Lcd_Cmd
  4384     0175                     u1757:
  4385     0175  0BF1               	decfsz	??_Lcd_Cmd,f
  4386     0176  2975               	goto	u1757
  4387     0177  0BF2               	decfsz	??_Lcd_Cmd+1,f
  4388     0178  2975               	goto	u1757
  4389     0179  0000               	nop
  4390     017A                     l1392:
  4391                           
  4392                           ;LCD.c: 40:     RD3 = 0;
  4393     017A  1283               	bcf	3,5	;RP0=0, select bank0
  4394     017B  1303               	bcf	3,6	;RP1=0, select bank0
  4395     017C  1188               	bcf	8,3	;volatile
  4396     017D                     l202:
  4397     017D  0008               	return
  4398     017E                     __end_of_Lcd_Cmd:
  4399                           
  4400                           	psect	text26
  4401     0199                     __ptext26:	
  4402 ;; *************** function _Lcd_Port *****************
  4403 ;; Defined at:
  4404 ;;		line 13 in file "LCD.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  a               1    wreg     unsigned char 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  a               1    0[COMMON] unsigned char 
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  1    wreg      void 
  4411 ;; Registers used:
  4412 ;;		wreg
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4418 ;;      Params:         0       0       0       0       0
  4419 ;;      Locals:         1       0       0       0       0
  4420 ;;      Temps:          0       0       0       0       0
  4421 ;;      Totals:         1       0       0       0       0
  4422 ;;Total ram usage:        1 bytes
  4423 ;; Hardware stack levels used: 1
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		_Lcd_Cmd
  4428 ;;		_Lcd_Init
  4429 ;;		_Lcd_Write_Char
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433     0199                     _Lcd_Port:	
  4434                           ;psect for function _Lcd_Port
  4435                           
  4436                           
  4437                           ;incstack = 0
  4438                           ; Regs used in _Lcd_Port: [wreg]
  4439                           ;Lcd_Port@a stored from wreg
  4440     0199  00F0               	movwf	Lcd_Port@a
  4441     019A                     l1370:
  4442                           
  4443                           ;LCD.c: 14:     if (a & 1)
  4444     019A  1C70               	btfss	Lcd_Port@a,0
  4445     019B  299D               	goto	u831
  4446     019C  299E               	goto	u830
  4447     019D                     u831:
  4448     019D  29A2               	goto	l191
  4449     019E                     u830:
  4450     019E                     l1372:
  4451                           
  4452                           ;LCD.c: 15:         RD4 = 1;
  4453     019E  1283               	bcf	3,5	;RP0=0, select bank0
  4454     019F  1303               	bcf	3,6	;RP1=0, select bank0
  4455     01A0  1608               	bsf	8,4	;volatile
  4456     01A1  29A5               	goto	l192
  4457     01A2                     l191:	
  4458                           ;LCD.c: 16:     else
  4459                           
  4460                           
  4461                           ;LCD.c: 17:         RD4 = 0;
  4462     01A2  1283               	bcf	3,5	;RP0=0, select bank0
  4463     01A3  1303               	bcf	3,6	;RP1=0, select bank0
  4464     01A4  1208               	bcf	8,4	;volatile
  4465     01A5                     l192:
  4466                           
  4467                           ;LCD.c: 19:     if (a & 2)
  4468     01A5  1CF0               	btfss	Lcd_Port@a,1
  4469     01A6  29A8               	goto	u841
  4470     01A7  29A9               	goto	u840
  4471     01A8                     u841:
  4472     01A8  29AB               	goto	l193
  4473     01A9                     u840:
  4474     01A9                     l1374:
  4475                           
  4476                           ;LCD.c: 20:         RD5 = 1;
  4477     01A9  1688               	bsf	8,5	;volatile
  4478     01AA  29AC               	goto	l194
  4479     01AB                     l193:	
  4480                           ;LCD.c: 21:     else
  4481                           
  4482                           
  4483                           ;LCD.c: 22:         RD5 = 0;
  4484     01AB  1288               	bcf	8,5	;volatile
  4485     01AC                     l194:
  4486                           
  4487                           ;LCD.c: 24:     if (a & 4)
  4488     01AC  1D70               	btfss	Lcd_Port@a,2
  4489     01AD  29AF               	goto	u851
  4490     01AE  29B0               	goto	u850
  4491     01AF                     u851:
  4492     01AF  29B2               	goto	l195
  4493     01B0                     u850:
  4494     01B0                     l1376:
  4495                           
  4496                           ;LCD.c: 25:         RD6 = 1;
  4497     01B0  1708               	bsf	8,6	;volatile
  4498     01B1  29B3               	goto	l196
  4499     01B2                     l195:	
  4500                           ;LCD.c: 26:     else
  4501                           
  4502                           
  4503                           ;LCD.c: 27:         RD6 = 0;
  4504     01B2  1308               	bcf	8,6	;volatile
  4505     01B3                     l196:
  4506                           
  4507                           ;LCD.c: 29:     if (a & 8)
  4508     01B3  1DF0               	btfss	Lcd_Port@a,3
  4509     01B4  29B6               	goto	u861
  4510     01B5  29B7               	goto	u860
  4511     01B6                     u861:
  4512     01B6  29B9               	goto	l197
  4513     01B7                     u860:
  4514     01B7                     l1378:
  4515                           
  4516                           ;LCD.c: 30:         RD7 = 1;
  4517     01B7  1788               	bsf	8,7	;volatile
  4518     01B8  29BA               	goto	l199
  4519     01B9                     l197:	
  4520                           ;LCD.c: 31:     else
  4521                           
  4522                           
  4523                           ;LCD.c: 32:         RD7 = 0;
  4524     01B9  1388               	bcf	8,7	;volatile
  4525     01BA                     l199:
  4526     01BA  0008               	return
  4527     01BB                     __end_of_Lcd_Port:
  4528     007E                     btemp	set	126	;btemp
  4529     007E                     wtemp0	set	126
  4530                           
  4531                           	psect	idloc
  4532                           
  4533                           ;Config register IDLOC0 @ 0x2000
  4534                           ;	unspecified, using default values
  4535     2000                     	org	8192
  4536     2000  3FFF               	dw	16383
  4537                           
  4538                           ;Config register IDLOC1 @ 0x2001
  4539                           ;	unspecified, using default values
  4540     2001                     	org	8193
  4541     2001  3FFF               	dw	16383
  4542                           
  4543                           ;Config register IDLOC2 @ 0x2002
  4544                           ;	unspecified, using default values
  4545     2002                     	org	8194
  4546     2002  3FFF               	dw	16383
  4547                           
  4548                           ;Config register IDLOC3 @ 0x2003
  4549                           ;	unspecified, using default values
  4550     2003                     	org	8195
  4551     2003  3FFF               	dw	16383
  4552                           
  4553                           	psect	config
  4554                           
  4555                           ;Config register CONFIG1 @ 0x2007
  4556                           ;	Oscillator Selection bits
  4557                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4558                           ;	Watchdog Timer Enable bit
  4559                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4560                           ;	Power-up Timer Enable bit
  4561                           ;	PWRTE = OFF, PWRT disabled
  4562                           ;	RE3/MCLR pin function select bit
  4563                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4564                           ;	Code Protection bit
  4565                           ;	CP = OFF, Program memory code protection is disabled
  4566                           ;	Data Code Protection bit
  4567                           ;	CPD = OFF, Data memory code protection is disabled
  4568                           ;	Brown Out Reset Selection bits
  4569                           ;	BOREN = OFF, BOR disabled
  4570                           ;	Internal External Switchover bit
  4571                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4572                           ;	Fail-Safe Clock Monitor Enabled bit
  4573                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4574                           ;	Low Voltage Programming Enable bit
  4575                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4576                           ;	In-Circuit Debugger Mode bit
  4577                           ;	DEBUG = 0x1, unprogramme  4578     2007                     	org	8199
  4579     2007  20D4               	dw	8404
  4580                           
  4581                           ;Config register CONFIG2 @ 0x2008
  4582                           ;	Brown-out Reset Selection bit
  4583                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4584                           ;	Flash Program Memory Self Write Enable bits
  4585                           ;	WRT = OFF, Write protection off
  4586     2008                     	org	8200
  4587     2008  3FFF               	dw	16383

Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _I2C_Master_Init->___lldiv
    _leer_x->_convertir
    _convertir->___bmul
    _enviar_x->_I2C_Master_Write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Escribir_dato->_descomponer
    _descomponer->___awdiv
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _portsetup->_I2C_Master_Init
    _Escribir_dato->_descomponer

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8680
                                              8 BANK0      3     3      0
                      _Escribir_dato
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _enviar_x
                             _leer_x
                          _portsetup
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _portsetup                                            0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _leer_x                                               4     4      0    1024
                                              9 COMMON     4     4      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _convertir
 ---------------------------------------------------------------------------------
 (2) _convertir                                            5     5      0     281
                                              4 COMMON     5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     121
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _enviar_x                                             4     3      1     826
                                              2 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     554
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     301
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Escribir_dato                                        3     1      2    4747
                                              3 BANK0      3     1      2
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                        _descomponer
                          _inttochar
 ---------------------------------------------------------------------------------
 (2) _inttochar                                            1     1      0     220
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _descomponer                                          8     5      3    2013
                                              9 COMMON     5     2      3
                                              0 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     684
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_dato
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _descomponer
       ___awdiv
       ___awmod
     _inttochar
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_Char
   _Lcd_Write_String
     _Lcd_Write_Char
   _enviar_x
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _leer_x
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _convertir
       ___bmul
   _portsetup
     _I2C_Master_Init
       ___lldiv
   _setupINTOSC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      28       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      1A       5       32.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      28      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 23 18:27:54 2023

                               pc 0002                    ___bmul@product 0072                    ?_Escribir_dato 0032  
                              l90 0769                      ___awdiv@sign 0076                                fsr 0004  
                             l112 03AF                               l202 017D                               l211 0363  
                             l131 031D                               l205 0141                               l125 0198  
                             l109 020C                               l214 04B5                               l134 02A4  
                             l223 01DF                               l151 02DC                               l240 03FF  
                             l160 0118                               l217 026F                               l154 0142  
                             l227 03FF                               l163 012A                               l172 0232  
                             l260 04D9                               l157 014E                               l173 0235  
                             l261 04E5                               l166 0121                               l174 023A  
                             l262 04F1                               l191 01A2                               l263 04FD  
                             l192 01A5                               l264 0508                               l193 01AB  
                             l505 0646                               l249 0579                               l169 0134  
                             l194 01AC                               l266 0514                               l258 04C1  
                             l195 01B2                               l259 04CD                               l196 01B3  
                             l197 01B9                               l518 0458                               l199 01BA  
                             l378 0163                               l388 05DF                               _RD3 0043  
                             _RD4 0044                               _RD5 0045                               _RD6 0046  
                             _RD7 0047                               u900 0162                               u901 0161  
                             u830 019E                               u910 058A                               u831 019D  
                             u911 0589                               u840 01A9                               u841 01A8  
                             u850 01B0                               u930 059E                               u851 01AF  
                             u931 059D                               u860 01B7                               u861 01B6  
                             u925 058F                               u870 0148                               u950 05B9  
                             u871 0147                               u951 05B8                               u880 014E  
                             u881 014D                               u945 05A0                               u890 0155  
                             u970 05D7                               u891 0154                               u971 05D6  
                             u955 05B5                               u980 05E5                               u981 05E4  
                             u965 05C9                               u990 05F0                               u991 05EF  
                             _min 0029                               _sec 002B                               fsr0 0004  
                    ___awmod@sign 0076                              l1400 0159                              l1402 015B  
                            l1410 058A                              l1500 0437                              l1404 0162  
                            l1420 05B9                              l1412 058D                              l1510 0454  
                            l1502 043D                              l1422 05C7                              l1414 059A  
                            l1520 0334                              l1440 05EC                              l1432 05E0  
                            l1504 0444                              l1600 03BD                              l1424 05C8  
                            l1416 059E                              l1408 057A                              l1370 019A  
                            l1530 0357                              l1522 033A                              l1514 031F  
                            l1450 0601                              l1442 05F0                              l1434 05E1  
                            l1506 044A                              l1426 05D1                              l1418 05A7  
                            l1372 019E                              l1532 035D                              l1516 0324  
                            l1524 0341                              l1540 0253                              l1460 0624  
                            l1452 0604                              l1444 05F5                              l1436 05E5  
                            l1508 044F                              l1380 0142                              l1700 022E  
                            l1428 05D7                              l1374 01A9                              l1390 0171  
                            l1526 0347                              l1518 0331                              l1550 0267  
                            l1542 0256                              l1534 023C                              l1470 063D  
                            l1462 062A                              l1454 060B                              l1446 05F9  
                            l1438 05EA                              l1630 03D7                              l1622 03CF  
                            l1614 03C7                              l1606 03BF                              l1382 0148  
                            l1702 0236                              l1710 04B7                              l1376 01B0  
                            l1392 017A                              l1384 0165                              l1528 0354  
                            l1552 026C                              l1544 025B                              l1536 0242  
                            l1472 0642                              l1464 062B                              l1456 060F  
                            l1448 05FB                              l1480 0405                              l1640 03E5  
                            l1632 03DD                              l1624 03D5                              l1616 03CD  
                            l1608 03C5                              l1560 02D9                              l1720 04EB  
                            l1712 04BD                              l1800 06C6                              l1378 01B7  
                            l1386 0168                              l1546 025E                              l1538 0245  
                            l1466 0632                              l1458 0613                              l1490 041B  
                            l1482 040A                              l1570 0558                              l1706 0119  
                            l1394 0150                              l1562 02DA                              l1554 02A5  
                            l1730 01E0                              l1722 04F7                              l1714 04C7  
                            l1810 06F9                              l1802 06D1                              l1388 016E  
                            l1548 0264                              l1468 0638                              l1492 041E  
                            l1484 040C                              l1476 0400                              l1708 011E  
                            l1396 0151                              l1564 02DB                              l1556 02A9  
                            l1740 01FD                              l1732 01F0                              l1724 0502  
                            l1716 04D3                              l1820 0714                              l1812 0700  
                            l1804 06DD                              l1494 0425                              l1486 0410  
                            l1478 0401                              l1566 0515                              l1662 03F7  
                            l1654 03EF                              l1646 03E7                              l1638 03DF  
                            l1590 03B1                              l1750 047D                              l1742 0459  
                            l1398 0155                              l1670 0182                              l1558 02AC  
                            l1734 01F4                              l1726 050D                              l1718 04DF  
                            l1830 072D                              l1822 071B                              l1814 0705  
                            l1806 06E9                              l1496 0429                              l1488 0415  
                            l1584 0572                              l1576 055A                              l1568 0551  
                            l1664 03FD                              l1656 03F5                              l1648 03ED  
                            l1592 03B6                              l1752 0135                              l1744 045F  
                            l1760 01D2                              l1680 0115                              l1672 018D  
                            l1736 01F8                              l1728 0511                              l1840 0747  
                            l1832 0733                              l1824 0721                              l1808 06EF  
                            l1816 0706                              l1498 042D                              l1586 0578  
                            l1578 0560                              l1770 0367                              l1746 0468  
                            l1754 01BC                              l1682 012B                              l1762 0271  
                            l1690 020D                              l1674 0197                              l1738 01FC  
                            l1850 075E                              l1842 074E                              l1834 0738  
                            l1826 0726                              l1818 070A                              l1748 0477  
                            l1756 01BF                              l1684 0130                              l1692 0212  
                            l1668 017F                              l1764 02DE                              l1860 078F  
                            l1852 0763                              l1844 0753                              l1828 0728  
                            l1836 0739                              l1780 067C                              l1772 0647  
                            l1598 03B8                              l1758 01CC                              l1678 0110  
                            l1694 021A                              l1686 0122                              l1766 031C  
                            l1870 07C8                              l1862 07B7                              l1854 0766  
                            l1846 0756                              l1838 073D                              l1790 0698  
                            l1782 067D                              l1774 0672                              l1696 0223  
                            l1688 0127                              l1872 07D1                              l1864 07BB  
                            l1848 0759                              l1856 0769                              l1792 06A2  
                            l1784 0684                              l1776 0678                              l1698 0228  
                            l1866 07C1                              l1858 076F                              l1794 06AB  
                            l1786 0688                              l1778 067B                              l1868 07C7  
                            l1796 06B5                              l1788 068F                              l1798 06BB  
                            STR_1 0009                              u1000 0601                              u1001 0600  
                            u1020 0613                              u1100 041B                              u1021 0612  
                            u1101 041A                              u1015 0605                              u1040 0624  
                            u1120 042D                              u1041 0623                              u1121 042C  
                            u1130 0437                              u1035 0614                              u1131 0436  
                            u1115 041F                              u1060 0638                              u1300 03D5  
                            u1220 02BC                              u1205 034D                              u1061 0637  
                            u1045 0620                              u1301 03D4                              u1070 063D  
                            u1150 044A                              u1230 0558                              u1310 03DD  
                            u1215 0248                              u1071 063C                              u1055 062C  
                            u1151 0449                              u1135 0433                              u1231 0557  
                            u1311 03DC                              u1160 044F                              u1080 0405  
                            u1240 0560                              u1320 03E5                              u1400 04D3  
                            u1161 044E                              u1145 043E                              u1081 0404  
                            u1241 055F                              u1321 03E4                              u1225 02B7  
                            u1401 04D2                              u1170 0324                              u1090 0410  
                            u1250 0578                              u1330 03ED                              u1410 04DF  
                            u1171 0323                              u1091 040F                              u1251 0577  
                            u1331 03EC                              u1411 04DE                              u1340 03F5  
                            u1260 03B6                              u1420 04EB                              u1500 070A  
                            u1341 03F4                              u1261 03B5                              u1421 04EA  
                            u1501 0709                              u1190 0347                              u1350 03FD  
                            u1270 03BD                              u1430 04F7                              u1510 071B  
                            u1191 0346                              u1351 03FC                              u1271 03BC  
                            u1431 04F6                              u1511 071A                              u1280 03C5  
                            u1440 0502                              u1600 076F                              u1520 0721  
                            u1185 032A                              u1281 03C4                              u1441 0501  
                            u1601 076E                              u1521 0720                              u1290 03CD  
                            u1370 022E                              u1450 050D                              u1610 07C1  
                            u1530 072D                              u1291 03CC                              u1371 022D  
                            u1451 050C                              u1611 07C0                              u1531 072C  
                            u1460 01DF                              u1380 04BD                              u1620 07C7  
                            u1540 0733                              u1461 01DE                              u1365 0185  
                            u1381 04BC                              u1621 07C6                              u1541 0732  
                            u1390 04C7                              u1630 07D1                              u1550 073D  
                            u1470 06BB                              u1391 04C6                              u1631 07D0  
                            u1551 073C                              u1471 06BA                              u1560 074E  
                            u1480 06EF                              u1561 074D                              u1481 06EE  
                            u1570 0753                              u1490 0700                              u1707 0463  
                            u1571 0752                              u1491 06FF                              u1580 075E  
                            u1717 0472                              u1581 075D                              u1590 0763  
                            u1727 0481                              u1591 0762                              u1737 0258  
                            u1657 06C1                              u1747 0269                              u1667 06CC  
                            u1757 0175                              u1677 06F5                              u1687 0710  
                            u1697 0743                              _WPUB 0095                 ?_Lcd_Write_String 0070  
__end_of_I2C_Master_RepeatedStart 012B                              _main 0647                              _modo 0027  
                            btemp 007E                              start 0000                ??_Lcd_Write_String 0075  
                 __end_of_Lcd_Cmd 017E                 ___bmul@multiplier 0073                  ?_I2C_Master_Init 002F  
                ?_I2C_Master_Read 0070                  ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070  
                           ?_main 0070                   __end_of___awdiv 0647                   __end_of___awmod 0459  
                           _ANSEL 0188                   __end_of___lldiv 05E0                   ___awdiv@divisor 0070  
                 ___awdiv@counter 0075                             _PORTA 0005                             _PORTB 0006  
                           _PORTD 0008                             _TRISA 0085                             _TRISB 0086  
                           _TRISD 0088                             pclath 000A                             status 0003  
                           wtemp0 007E                       leer_x@valor 007C                  __end_of_Lcd_Init 04B6  
                __end_of_Lcd_Port 01BB                   __initialization 07EB                   ??_Escribir_dato 007E  
                    __end_of_main 07EB                            ??_main 0037                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070                ??_I2C_Master_Write 0072  
                ___awdiv@dividend 0072                            _ANSELH 0189                         ??_Lcd_Cmd 0071  
                          _SSPADD 0093                            _SSPCON 0014                            _SSPBUF 0013  
        _I2C_Master_RepeatedStart 0122                            ___bmul 014F                         ??___awdiv 0074  
                          _lecADC 002E                            _decena 002C                         ??___awmod 0074  
                       ??___lldiv 0078                  __end_of_enviar_x 02A5                            _conver 0020  
                          _leer_x 02DD                            _valADC 0024                  ___awdiv@quotient 0077  
                 ___awmod@divisor 0070                   ___awmod@counter 0075                            _unidad 002D  
                    ?_setupINTOSC 0070                   Lcd_Set_Cursor@a 0076                   Lcd_Set_Cursor@b 0074  
                 Lcd_Set_Cursor@y 0078                   Lcd_Set_Cursor@z 0077           __end_of__initialization 07FC  
               __end_of_Lcd_Clear 0142               ___bmul@multiplicand 0070                   descomponer@cent 002F  
                  __pcstackCOMMON 0070                    _Lcd_Set_Cursor 031E                    _OPTION_REGbits 0081  
                       ?_Lcd_Init 0070                         ?_Lcd_Port 0070                      enviar_x@val1 0075  
                    enviar_x@val2 0072                        __pbssBANK0 0020                        __pmaintext 0647  
                         ?___bmul 0070               convertir@conversion 0077                           ?_leer_x 0070  
          __end_of_Lcd_Set_Cursor 0364                        ??_Lcd_Init 0074                        ??_Lcd_Port 0070  
                         _SSPCON2 0091                           _SSPSTAT 0094                        __stringtab 0003  
                       ?_enviar_x 0072                    _Lcd_Write_Char 023B                           _Lcd_Cmd 0164  
                         ___awdiv 05E0                           ___awmod 0400                           ___lldiv 057A  
               __end_of_convertir 0199                   ?_Lcd_Set_Cursor 0074                           __ptext1 04B6  
                         __ptext2 01E0                           __ptext3 02A5                           __ptext4 057A  
                         __ptext5 02DD                           __ptext6 017E                           __ptext7 014F  
                         __ptext8 0122                           __ptext9 020D                  ___awmod@dividend 0072  
                         _minutos 0028                 __end_of_inttochar 0400            __end_of_Lcd_Write_Char 0270  
            end_of_initialization 07FC        ??_I2C_Master_RepeatedStart 0070                        ??_enviar_x 0073  
                 ___lldiv@divisor 0070                   ___lldiv@counter 007D                  I2C_Master_Init@c 002F  
                I2C_Master_Read@a 0070                     leer_x@address 007B                         Lcd_Port@a 0070  
               __end_of_portsetup 020D             __end_of_Escribir_dato 03B0                         _PORTBbits 0006  
                       _PORTDbits 0008                     ??_descomponer 007C                         _TRISCbits 0087  
                 ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0077                 Lcd_Write_String@i 0075  
                       _Lcd_Clear 0135                    __end_of___bmul 0164                  _Lcd_Write_String 01BB  
                  __end_of_leer_x 031E               start_initialization 07EB               __end_of_descomponer 057A  
               ??_I2C_Master_Init 0033                 ??_I2C_Master_Read 0072                 ??_I2C_Master_Wait 0070  
               ??_I2C_Master_Stop 0070                 Escribir_dato@dato 0034                 Escribir_dato@posx 0032  
               Escribir_dato@posy 0033                        ?_Lcd_Clear 0070                          ??___bmul 0071  
                        ??_leer_x 0079                   Lcd_Write_Char@a 0074                   Lcd_Write_Char@y 0073  
                       ___latbits 0002                    descomponer@dec 0031                     __pcstackBANK0 002F  
                  descomponer@num 007B                    descomponer@pos 0079                    descomponer@uni 0030  
                 setupINTOSC@IRCF 0070                          ?_Lcd_Cmd 0070                  _I2C_Master_Start 0110  
                _I2C_Master_Write 012B                  ??_Lcd_Set_Cursor 0075                      inttochar@num 0070  
                        ?___awdiv 0070                          ?___awmod 0070                          ?___lldiv 0070  
                       __pstrings 0003                         _convertir 017E                       _descomponer 0515  
                       _inttochar 03B0                          Lcd_Cmd@a 0073                       ??_Lcd_Clear 0074  
                     __stringbase 0008                     ??_setupINTOSC 0070                         _portsetup 01E0  
                      ?_convertir 0070                  ??_Lcd_Write_Char 0071                   convertir@decena 0076  
                        _Lcd_Init 0459                          _Lcd_Port 0199               I2C_Master_Read@temp 0074  
                 convertir@unidad 0075          __end_of_Lcd_Write_String 01E0                        ?_inttochar 0070  
       ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0009                        ?_portsetup 0070  
                 _I2C_Master_Init 02A5                   _I2C_Master_Read 020D                   _I2C_Master_Wait 0142  
                 _I2C_Master_Stop 0119                          _main$175 0039                          __ptext10 0270  
                        __ptext11 012B                          __ptext20 0515                          __ptext12 0119  
                        __ptext21 0400                          __ptext13 0110                          __ptext22 05E0  
                        __ptext14 0142                          __ptext23 023B                          __ptext15 01BB  
                        __ptext24 031E                          __ptext16 0459                          __ptext25 0164  
                        __ptext17 0135                          __ptext26 0199                          __ptext18 0364  
                        __ptext19 03B0               __end_of_setupINTOSC 0515                          _enviar_x 0270  
                        _segundos 002A                    convertir@valor 0078                       ??_convertir 0074  
        __end_of_I2C_Master_Start 0119          __end_of_I2C_Master_Write 0135                Lcd_Write_Char@temp 0072  
                ___lldiv@dividend 0074                       ??_inttochar 0070                         stringcode 0003  
                      _OSCCONbits 008F           __end_of_I2C_Master_Init 02DD           __end_of_I2C_Master_Read 023B  
         __end_of_I2C_Master_Wait 014F                     _Escribir_dato 0364           __end_of_I2C_Master_Stop 0122  
              Lcd_Set_Cursor@temp 0079                       ??_portsetup 007E                       _setupINTOSC 04B6  
                    ?_descomponer 0079                  ___lldiv@quotient 0079                 I2C_Master_Write@d 0070  
                        stringdir 0003                          stringtab 0003                       _SSPCON2bits 0091  
