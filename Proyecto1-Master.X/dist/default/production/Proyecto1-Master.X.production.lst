

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 08 12:31:07 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41     0000                     
    42                           ; Version 2.40
    43                           ; Generated 17/11/2021 GMT
    44                           ; 
    45                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0000                     	;# 
    78     0001                     	;# 
    79     0002                     	;# 
    80     0003                     	;# 
    81     0004                     	;# 
    82     0005                     	;# 
    83     0006                     	;# 
    84     0007                     	;# 
    85     0008                     	;# 
    86     0009                     	;# 
    87     000A                     	;# 
    88     000B                     	;# 
    89     000C                     	;# 
    90     000D                     	;# 
    91     000E                     	;# 
    92     000E                     	;# 
    93     000F                     	;# 
    94     0010                     	;# 
    95     0011                     	;# 
    96     0012                     	;# 
    97     0013                     	;# 
    98     0014                     	;# 
    99     0015                     	;# 
   100     0015                     	;# 
   101     0016                     	;# 
   102     0017                     	;# 
   103     0018                     	;# 
   104     0019                     	;# 
   105     001A                     	;# 
   106     001B                     	;# 
   107     001B                     	;# 
   108     001C                     	;# 
   109     001D                     	;# 
   110     001E                     	;# 
   111     001F                     	;# 
   112     0081                     	;# 
   113     0085                     	;# 
   114     0086                     	;# 
   115     0087                     	;# 
   116     0088                     	;# 
   117     0089                     	;# 
   118     008C                     	;# 
   119     008D                     	;# 
   120     008E                     	;# 
   121     008F                     	;# 
   122     0090                     	;# 
   123     0091                     	;# 
   124     0092                     	;# 
   125     0093                     	;# 
   126     0093                     	;# 
   127     0093                     	;# 
   128     0094                     	;# 
   129     0095                     	;# 
   130     0096                     	;# 
   131     0097                     	;# 
   132     0098                     	;# 
   133     0099                     	;# 
   134     009A                     	;# 
   135     009B                     	;# 
   136     009C                     	;# 
   137     009D                     	;# 
   138     009E                     	;# 
   139     009F                     	;# 
   140     0105                     	;# 
   141     0107                     	;# 
   142     0108                     	;# 
   143     0109                     	;# 
   144     010C                     	;# 
   145     010C                     	;# 
   146     010D                     	;# 
   147     010E                     	;# 
   148     010F                     	;# 
   149     0185                     	;# 
   150     0187                     	;# 
   151     0188                     	;# 
   152     0189                     	;# 
   153     018C                     	;# 
   154     018D                     	;# 
   155     0000                     	;# 
   156     0001                     	;# 
   157     0002                     	;# 
   158     0003                     	;# 
   159     0004                     	;# 
   160     0005                     	;# 
   161     0006                     	;# 
   162     0007                     	;# 
   163     0008                     	;# 
   164     0009                     	;# 
   165     000A                     	;# 
   166     000B                     	;# 
   167     000C                     	;# 
   168     000D                     	;# 
   169     000E                     	;# 
   170     000E                     	;# 
   171     000F                     	;# 
   172     0010                     	;# 
   173     0011                     	;# 
   174     0012                     	;# 
   175     0013                     	;# 
   176     0014                     	;# 
   177     0015                     	;# 
   178     0015                     	;# 
   179     0016                     	;# 
   180     0017                     	;# 
   181     0018                     	;# 
   182     0019                     	;# 
   183     001A                     	;# 
   184     001B                     	;# 
   185     001B                     	;# 
   186     001C                     	;# 
   187     001D                     	;# 
   188     001E                     	;# 
   189     001F                     	;# 
   190     0081                     	;# 
   191     0085                     	;# 
   192     0086                     	;# 
   193     0087                     	;# 
   194     0088                     	;# 
   195     0089                     	;# 
   196     008C                     	;# 
   197     008D                     	;# 
   198     008E                     	;# 
   199     008F                     	;# 
   200     0090                     	;# 
   201     0091                     	;# 
   202     0092                     	;# 
   203     0093                     	;# 
   204     0093                     	;# 
   205     0093                     	;# 
   206     0094                     	;# 
   207     0095                     	;# 
   208     0096                     	;# 
   209     0097                     	;# 
   210     0098                     	;# 
   211     0099                     	;# 
   212     009A                     	;# 
   213     009B                     	;# 
   214     009C                     	;# 
   215     009D                     	;# 
   216     009E                     	;# 
   217     009F                     	;# 
   218     0105                     	;# 
   219     0107                     	;# 
   220     0108                     	;# 
   221     0109                     	;# 
   222     010C                     	;# 
   223     010C                     	;# 
   224     010D                     	;# 
   225     010E                     	;# 
   226     010F                     	;# 
   227     0185                     	;# 
   228     0187                     	;# 
   229     0188                     	;# 
   230     0189                     	;# 
   231     018C                     	;# 
   232     018D                     	;# 
   233     0000                     	;# 
   234     0001                     	;# 
   235     0002                     	;# 
   236     0003                     	;# 
   237     0004                     	;# 
   238     0005                     	;# 
   239     0006                     	;# 
   240     0007                     	;# 
   241     0008                     	;# 
   242     0009                     	;# 
   243     000A                     	;# 
   244     000B                     	;# 
   245     000C                     	;# 
   246     000D                     	;# 
   247     000E                     	;# 
   248     000E                     	;# 
   249     000F                     	;# 
   250     0010                     	;# 
   251     0011                     	;# 
   252     0012                     	;# 
   253     0013                     	;# 
   254     0014                     	;# 
   255     0015                     	;# 
   256     0015                     	;# 
   257     0016                     	;# 
   258     0017                     	;# 
   259     0018                     	;# 
   260     0019                     	;# 
   261     001A                     	;# 
   262     001B                     	;# 
   263     001B                     	;# 
   264     001C                     	;# 
   265     001D                     	;# 
   266     001E                     	;# 
   267     001F                     	;# 
   268     0081                     	;# 
   269     0085                     	;# 
   270     0086                     	;# 
   271     0087                     	;# 
   272     0088                     	;# 
   273     0089                     	;# 
   274     008C                     	;# 
   275     008D                     	;# 
   276     008E                     	;# 
   277     008F                     	;# 
   278     0090                     	;# 
   279     0091                     	;# 
   280     0092                     	;# 
   281     0093                     	;# 
   282     0093                     	;# 
   283     0093                     	;# 
   284     0094                     	;# 
   285     0095                     	;# 
   286     0096                     	;# 
   287     0097                     	;# 
   288     0098                     	;# 
   289     0099                     	;# 
   290     009A                     	;# 
   291     009B                     	;# 
   292     009C                     	;# 
   293     009D                     	;# 
   294     009E                     	;# 
   295     009F                     	;# 
   296     0105                     	;# 
   297     0107                     	;# 
   298     0108                     	;# 
   299     0109                     	;# 
   300     010C                     	;# 
   301     010C                     	;# 
   302     010D                     	;# 
   303     010E                     	;# 
   304     010F                     	;# 
   305     0185                     	;# 
   306     0187                     	;# 
   307     0188                     	;# 
   308     0189                     	;# 
   309     018C                     	;# 
   310     018D                     	;# 
   311     0000                     	;# 
   312     0001                     	;# 
   313     0002                     	;# 
   314     0003                     	;# 
   315     0004                     	;# 
   316     0005                     	;# 
   317     0006                     	;# 
   318     0007                     	;# 
   319     0008                     	;# 
   320     0009                     	;# 
   321     000A                     	;# 
   322     000B                     	;# 
   323     000C                     	;# 
   324     000D                     	;# 
   325     000E                     	;# 
   326     000E                     	;# 
   327     000F                     	;# 
   328     0010                     	;# 
   329     0011                     	;# 
   330     0012                     	;# 
   331     0013                     	;# 
   332     0014                     	;# 
   333     0015                     	;# 
   334     0015                     	;# 
   335     0016                     	;# 
   336     0017                     	;# 
   337     0018                     	;# 
   338     0019                     	;# 
   339     001A                     	;# 
   340     001B                     	;# 
   341     001B                     	;# 
   342     001C                     	;# 
   343     001D                     	;# 
   344     001E                     	;# 
   345     001F                     	;# 
   346     0081                     	;# 
   347     0085                     	;# 
   348     0086                     	;# 
   349     0087                     	;# 
   350     0088                     	;# 
   351     0089                     	;# 
   352     008C                     	;# 
   353     008D                     	;# 
   354     008E                     	;# 
   355     008F                     	;# 
   356     0090                     	;# 
   357     0091                     	;# 
   358     0092                     	;# 
   359     0093                     	;# 
   360     0093                     	;# 
   361     0093                     	;# 
   362     0094                     	;# 
   363     0095                     	;# 
   364     0096                     	;# 
   365     0097                     	;# 
   366     0098                     	;# 
   367     0099                     	;# 
   368     009A                     	;# 
   369     009B                     	;# 
   370     009C                     	;# 
   371     009D                     	;# 
   372     009E                     	;# 
   373     009F                     	;# 
   374     0105                     	;# 
   375     0107                     	;# 
   376     0108                     	;# 
   377     0109                     	;# 
   378     010C                     	;# 
   379     010C                     	;# 
   380     010D                     	;# 
   381     010E                     	;# 
   382     010F                     	;# 
   383     0185                     	;# 
   384     0187                     	;# 
   385     0188                     	;# 
   386     0189                     	;# 
   387     018C                     	;# 
   388     018D                     	;# 
   389     0000                     	;# 
   390     0001                     	;# 
   391     0002                     	;# 
   392     0003                     	;# 
   393     0004                     	;# 
   394     0005                     	;# 
   395     0006                     	;# 
   396     0007                     	;# 
   397     0008                     	;# 
   398     0009                     	;# 
   399     000A                     	;# 
   400     000B                     	;# 
   401     000C                     	;# 
   402     000D                     	;# 
   403     000E                     	;# 
   404     000E                     	;# 
   405     000F                     	;# 
   406     0010                     	;# 
   407     0011                     	;# 
   408     0012                     	;# 
   409     0013                     	;# 
   410     0014                     	;# 
   411     0015                     	;# 
   412     0015                     	;# 
   413     0016                     	;# 
   414     0017                     	;# 
   415     0018                     	;# 
   416     0019                     	;# 
   417     001A                     	;# 
   418     001B                     	;# 
   419     001B                     	;# 
   420     001C                     	;# 
   421     001D                     	;# 
   422     001E                     	;# 
   423     001F                     	;# 
   424     0081                     	;# 
   425     0085                     	;# 
   426     0086                     	;# 
   427     0087                     	;# 
   428     0088                     	;# 
   429     0089                     	;# 
   430     008C                     	;# 
   431     008D                     	;# 
   432     008E                     	;# 
   433     008F                     	;# 
   434     0090                     	;# 
   435     0091                     	;# 
   436     0092                     	;# 
   437     0093                     	;# 
   438     0093                     	;# 
   439     0093                     	;# 
   440     0094                     	;# 
   441     0095                     	;# 
   442     0096                     	;# 
   443     0097                     	;# 
   444     0098                     	;# 
   445     0099                     	;# 
   446     009A                     	;# 
   447     009B                     	;# 
   448     009C                     	;# 
   449     009D                     	;# 
   450     009E                     	;# 
   451     009F                     	;# 
   452     0105                     	;# 
   453     0107                     	;# 
   454     0108                     	;# 
   455     0109                     	;# 
   456     010C                     	;# 
   457     010C                     	;# 
   458     010D                     	;# 
   459     010E                     	;# 
   460     010F                     	;# 
   461     0185                     	;# 
   462     0187                     	;# 
   463     0188                     	;# 
   464     0189                     	;# 
   465     018C                     	;# 
   466     018D                     	;# 
   467     0000                     	;# 
   468     0001                     	;# 
   469     0002                     	;# 
   470     0003                     	;# 
   471     0004                     	;# 
   472     0005                     	;# 
   473     0006                     	;# 
   474     0007                     	;# 
   475     0008                     	;# 
   476     0009                     	;# 
   477     000A                     	;# 
   478     000B                     	;# 
   479     000C                     	;# 
   480     000D                     	;# 
   481     000E                     	;# 
   482     000E                     	;# 
   483     000F                     	;# 
   484     0010                     	;# 
   485     0011                     	;# 
   486     0012                     	;# 
   487     0013                     	;# 
   488     0014                     	;# 
   489     0015                     	;# 
   490     0015                     	;# 
   491     0016                     	;# 
   492     0017                     	;# 
   493     0018                     	;# 
   494     0019                     	;# 
   495     001A                     	;# 
   496     001B                     	;# 
   497     001B                     	;# 
   498     001C                     	;# 
   499     001D                     	;# 
   500     001E                     	;# 
   501     001F                     	;# 
   502     0081                     	;# 
   503     0085                     	;# 
   504     0086                     	;# 
   505     0087                     	;# 
   506     0088                     	;# 
   507     0089                     	;# 
   508     008C                     	;# 
   509     008D                     	;# 
   510     008E                     	;# 
   511     008F                     	;# 
   512     0090                     	;# 
   513     0091                     	;# 
   514     0092                     	;# 
   515     0093                     	;# 
   516     0093                     	;# 
   517     0093                     	;# 
   518     0094                     	;# 
   519     0095                     	;# 
   520     0096                     	;# 
   521     0097                     	;# 
   522     0098                     	;# 
   523     0099                     	;# 
   524     009A                     	;# 
   525     009B                     	;# 
   526     009C                     	;# 
   527     009D                     	;# 
   528     009E                     	;# 
   529     009F                     	;# 
   530     0105                     	;# 
   531     0107                     	;# 
   532     0108                     	;# 
   533     0109                     	;# 
   534     010C                     	;# 
   535     010C                     	;# 
   536     010D                     	;# 
   537     010E                     	;# 
   538     010F                     	;# 
   539     0185                     	;# 
   540     0187                     	;# 
   541     0188                     	;# 
   542     0189                     	;# 
   543     018C                     	;# 
   544     018D                     	;# 
   545     0000                     	;# 
   546     0001                     	;# 
   547     0002                     	;# 
   548     0003                     	;# 
   549     0004                     	;# 
   550     0005                     	;# 
   551     0006                     	;# 
   552     0007                     	;# 
   553     0008                     	;# 
   554     0009                     	;# 
   555     000A                     	;# 
   556     000B                     	;# 
   557     000C                     	;# 
   558     000D                     	;# 
   559     000E                     	;# 
   560     000E                     	;# 
   561     000F                     	;# 
   562     0010                     	;# 
   563     0011                     	;# 
   564     0012                     	;# 
   565     0013                     	;# 
   566     0014                     	;# 
   567     0015                     	;# 
   568     0015                     	;# 
   569     0016                     	;# 
   570     0017                     	;# 
   571     0018                     	;# 
   572     0019                     	;# 
   573     001A                     	;# 
   574     001B                     	;# 
   575     001B                     	;# 
   576     001C                     	;# 
   577     001D                     	;# 
   578     001E                     	;# 
   579     001F                     	;# 
   580     0081                     	;# 
   581     0085                     	;# 
   582     0086                     	;# 
   583     0087                     	;# 
   584     0088                     	;# 
   585     0089                     	;# 
   586     008C                     	;# 
   587     008D                     	;# 
   588     008E                     	;# 
   589     008F                     	;# 
   590     0090                     	;# 
   591     0091                     	;# 
   592     0092                     	;# 
   593     0093                     	;# 
   594     0093                     	;# 
   595     0093                     	;# 
   596     0094                     	;# 
   597     0095                     	;# 
   598     0096                     	;# 
   599     0097                     	;# 
   600     0098                     	;# 
   601     0099                     	;# 
   602     009A                     	;# 
   603     009B                     	;# 
   604     009C                     	;# 
   605     009D                     	;# 
   606     009E                     	;# 
   607     009F                     	;# 
   608     0105                     	;# 
   609     0107                     	;# 
   610     0108                     	;# 
   611     0109                     	;# 
   612     010C                     	;# 
   613     010C                     	;# 
   614     010D                     	;# 
   615     010E                     	;# 
   616     010F                     	;# 
   617     0185                     	;# 
   618     0187                     	;# 
   619     0188                     	;# 
   620     0189                     	;# 
   621     018C                     	;# 
   622     018D                     	;# 
   623     0008                     _PORTDbits	set	8
   624     0013                     _SSPBUF	set	19
   625     0014                     _SSPCON	set	20
   626     0006                     _PORTB	set	6
   627     0008                     _PORTD	set	8
   628     0006                     _PORTBbits	set	6
   629     0043                     _RD3	set	67
   630     0047                     _RD7	set	71
   631     0046                     _RD6	set	70
   632     0045                     _RD5	set	69
   633     0044                     _RD4	set	68
   634     008F                     _OSCCONbits	set	143
   635     0091                     _SSPCON2bits	set	145
   636     0087                     _TRISCbits	set	135
   637     0094                     _SSPSTAT	set	148
   638     0093                     _SSPADD	set	147
   639     0091                     _SSPCON2	set	145
   640     0081                     _OPTION_REGbits	set	129
   641     0095                     _WPUB	set	149
   642     0086                     _TRISB	set	134
   643     0088                     _TRISD	set	136
   644     0189                     _ANSELH	set	393
   645     0188                     _ANSEL	set	392
   646                           
   647                           	psect	strings
   648     0003                     __pstrings:
   649     0003                     stringtab:
   650     0003                     __stringtab:
   651     0003                     stringcode:	
   652                           ;	String table - string pointers are 1 byte each
   653                           
   654     0003                     stringdir:
   655     0003  3000               	movlw	high stringdir
   656     0004  008A               	movwf	10
   657     0005  0804               	movf	4,w
   658     0006  0A84               	incf	4,f
   659     0007  0782               	addwf	2,f
   660     0008                     __stringbase:
   661     0008  3400               	retlw	0
   662     0009                     __end_of__stringtab:
   663     0009                     STR_2:
   664     0009  3454               	retlw	84	;'T'
   665     000A  343A               	retlw	58	;':'
   666     000B  3420               	retlw	32	;' '
   667     000C  3420               	retlw	32	;' '
   668     000D  3420               	retlw	32	;' '
   669     000E  3420               	retlw	32	;' '
   670     000F  3443               	retlw	67	;'C'
   671     0010  3400               	retlw	0
   672     0011                     STR_1:
   673     0011  3453               	retlw	83	;'S'
   674     0012  343A               	retlw	58	;':'
   675     0013  3420               	retlw	32	;' '
   676     0014  3420               	retlw	32	;' '
   677     0015  343A               	retlw	58	;':'
   678     0016  3400               	retlw	0
   679                           
   680                           	psect	cinit
   681     07F5                     start_initialization:	
   682                           ; #config settings
   683                           
   684     07F5                     __initialization:
   685                           
   686                           ; Clear objects allocated to BANK0
   687     07F5  1383               	bcf	3,7	;select IRP bank0
   688     07F6  3020               	movlw	low __pbssBANK0
   689     07F7  0084               	movwf	4
   690     07F8  3033               	movlw	low (__pbssBANK0+19)
   691     07F9  120A  118A  21E0   	fcall	clear_ram0
   692     07FC                     end_of_initialization:	
   693                           ;End of C runtime variable initialization code
   694                           
   695     07FC                     __end_of__initialization:
   696     07FC  0183               	clrf	3
   697     07FD  120A  118A  2E04   	ljmp	_main	;jump to C main() function
   698                           
   699                           	psect	bssBANK0
   700     0020                     __pbssBANK0:
   701     0020                     _conver:
   702     0020                     	ds	4
   703     0024                     _buffer:
   704     0024                     	ds	3
   705     0027                     _valADC:
   706     0027                     	ds	3
   707     002A                     _SERVO:
   708     002A                     	ds	1
   709     002B                     _modo:
   710     002B                     	ds	1
   711     002C                     _minutos:
   712     002C                     	ds	1
   713     002D                     _min:
   714     002D                     	ds	1
   715     002E                     _segundos:
   716     002E                     	ds	1
   717     002F                     _sec:
   718     002F                     	ds	1
   719     0030                     _tempint:
   720     0030                     	ds	1
   721     0031                     _decena:
   722     0031                     	ds	1
   723     0032                     _unidad:
   724     0032                     	ds	1
   725                           
   726                           	psect	clrtext
   727     01E0                     clear_ram0:	
   728                           ;	Called with FSR containing the base address, and
   729                           ;	W with the last address+1
   730                           
   731     01E0  0064               	clrwdt	;clear the watchdog before getting into this loop
   732     01E1                     clrloop0:
   733     01E1  0180               	clrf	0	;clear RAM location pointed to by FSR
   734     01E2  0A84               	incf	4,f	;increment pointer
   735     01E3  0604               	xorwf	4,w	;XOR with final address
   736     01E4  1903               	btfsc	3,2	;have we reached the end yet?
   737     01E5  3400               	retlw	0	;all done for this memory range, return
   738     01E6  0604               	xorwf	4,w	;XOR again to restore value
   739     01E7  29E1               	goto	clrloop0	;do the next byte
   740                           
   741                           	psect	cstackCOMMON
   742     0070                     __pcstackCOMMON:
   743     0070                     ?_setupINTOSC:
   744     0070                     ??_setupINTOSC:	
   745                           ; 1 bytes @ 0x0
   746                           
   747     0070                     ?_portsetup:	
   748                           ; 1 bytes @ 0x0
   749                           
   750     0070                     ?_Lcd_Init:	
   751                           ; 1 bytes @ 0x0
   752                           
   753     0070                     ?_Lcd_Clear:	
   754                           ; 1 bytes @ 0x0
   755                           
   756     0070                     ?_Lcd_Write_Char:	
   757                           ; 1 bytes @ 0x0
   758                           
   759     0070                     ?_Lcd_Write_String:	
   760                           ; 1 bytes @ 0x0
   761                           
   762     0070                     ?_leer_temperatura:	
   763                           ; 1 bytes @ 0x0
   764                           
   765     0070                     ?_leer_x:	
   766                           ; 1 bytes @ 0x0
   767                           
   768     0070                     ?_I2C_Master_Start:	
   769                           ; 1 bytes @ 0x0
   770                           
   771     0070                     ??_I2C_Master_Start:	
   772                           ; 1 bytes @ 0x0
   773                           
   774     0070                     ?_I2C_Master_Write:	
   775                           ; 1 bytes @ 0x0
   776                           
   777     0070                     ?_I2C_Master_Stop:	
   778                           ; 1 bytes @ 0x0
   779                           
   780     0070                     ??_I2C_Master_Stop:	
   781                           ; 1 bytes @ 0x0
   782                           
   783     0070                     ?_inttochar:	
   784                           ; 1 bytes @ 0x0
   785                           
   786     0070                     ??_inttochar:	
   787                           ; 1 bytes @ 0x0
   788                           
   789     0070                     ?_I2C_Master_RepeatedStart:	
   790                           ; 1 bytes @ 0x0
   791                           
   792     0070                     ??_I2C_Master_RepeatedStart:	
   793                           ; 1 bytes @ 0x0
   794                           
   795     0070                     ?_main:	
   796                           ; 1 bytes @ 0x0
   797                           
   798     0070                     ?_convertir:	
   799                           ; 1 bytes @ 0x0
   800                           
   801     0070                     ?_I2C_Master_Wait:	
   802                           ; 1 bytes @ 0x0
   803                           
   804     0070                     ??_I2C_Master_Wait:	
   805                           ; 1 bytes @ 0x0
   806                           
   807     0070                     ?_Lcd_Port:	
   808                           ; 1 bytes @ 0x0
   809                           
   810     0070                     ??_Lcd_Port:	
   811                           ; 1 bytes @ 0x0
   812                           
   813     0070                     ?_Lcd_Cmd:	
   814                           ; 1 bytes @ 0x0
   815                           
   816     0070                     ?___bmul:	
   817                           ; 1 bytes @ 0x0
   818                           
   819     0070                     ?___lbdiv:	
   820                           ; 1 bytes @ 0x0
   821                           
   822     0070                     ?___lbmod:	
   823                           ; 1 bytes @ 0x0
   824                           
   825     0070                     ?_I2C_Master_Read:	
   826                           ; 1 bytes @ 0x0
   827                           
   828     0070                     ?___lldiv:	
   829                           ; 2 bytes @ 0x0
   830                           
   831     0070                     Lcd_Port@a:	
   832                           ; 4 bytes @ 0x0
   833                           
   834     0070                     inttochar@num:	
   835                           ; 1 bytes @ 0x0
   836                           
   837     0070                     setupINTOSC@IRCF:	
   838                           ; 1 bytes @ 0x0
   839                           
   840     0070                     ___bmul@multiplicand:	
   841                           ; 1 bytes @ 0x0
   842                           
   843     0070                     ___lbdiv@divisor:	
   844                           ; 1 bytes @ 0x0
   845                           
   846     0070                     ___lbmod@divisor:	
   847                           ; 1 bytes @ 0x0
   848                           
   849     0070                     I2C_Master_Write@d:	
   850                           ; 1 bytes @ 0x0
   851                           
   852     0070                     I2C_Master_Read@a:	
   853                           ; 2 bytes @ 0x0
   854                           
   855     0070                     ___lldiv@divisor:	
   856                           ; 2 bytes @ 0x0
   857                           
   858                           
   859                           ; 4 bytes @ 0x0
   860     0070                     	ds	1
   861     0071                     ??_Lcd_Write_Char:
   862     0071                     ??_Lcd_Cmd:	
   863                           ; 1 bytes @ 0x1
   864                           
   865     0071                     ??___bmul:	
   866                           ; 1 bytes @ 0x1
   867                           
   868     0071                     ??___lbdiv:	
   869                           ; 1 bytes @ 0x1
   870                           
   871     0071                     ??___lbmod:	
   872                           ; 1 bytes @ 0x1
   873                           
   874                           
   875                           ; 1 bytes @ 0x1
   876     0071                     	ds	1
   877     0072                     ?_enviar_x:
   878     0072                     ??_I2C_Master_Write:	
   879                           ; 1 bytes @ 0x2
   880                           
   881     0072                     ??_I2C_Master_Read:	
   882                           ; 1 bytes @ 0x2
   883                           
   884     0072                     enviar_x@val2:	
   885                           ; 1 bytes @ 0x2
   886                           
   887     0072                     Lcd_Write_Char@temp:	
   888                           ; 1 bytes @ 0x2
   889                           
   890     0072                     ___bmul@product:	
   891                           ; 1 bytes @ 0x2
   892                           
   893     0072                     ___lbdiv@dividend:	
   894                           ; 1 bytes @ 0x2
   895                           
   896                           
   897                           ; 1 bytes @ 0x2
   898     0072                     	ds	1
   899     0073                     ??_enviar_x:
   900     0073                     Lcd_Cmd@a:	
   901                           ; 1 bytes @ 0x3
   902                           
   903     0073                     Lcd_Write_Char@y:	
   904                           ; 1 bytes @ 0x3
   905                           
   906     0073                     ___bmul@multiplier:	
   907                           ; 1 bytes @ 0x3
   908                           
   909     0073                     ___lbdiv@counter:	
   910                           ; 1 bytes @ 0x3
   911                           
   912     0073                     ___lbmod@dividend:	
   913                           ; 1 bytes @ 0x3
   914                           
   915                           
   916                           ; 1 bytes @ 0x3
   917     0073                     	ds	1
   918     0074                     ??_Lcd_Init:
   919     0074                     ??_Lcd_Clear:	
   920                           ; 1 bytes @ 0x4
   921                           
   922     0074                     ?_Lcd_Set_Cursor:	
   923                           ; 1 bytes @ 0x4
   924                           
   925     0074                     ??_convertir:	
   926                           ; 1 bytes @ 0x4
   927                           
   928     0074                     Lcd_Set_Cursor@b:	
   929                           ; 1 bytes @ 0x4
   930                           
   931     0074                     Lcd_Write_Char@a:	
   932                           ; 1 bytes @ 0x4
   933                           
   934     0074                     ___lbdiv@quotient:	
   935                           ; 1 bytes @ 0x4
   936                           
   937     0074                     ___lbmod@counter:	
   938                           ; 1 bytes @ 0x4
   939                           
   940     0074                     I2C_Master_Read@temp:	
   941                           ; 1 bytes @ 0x4
   942                           
   943     0074                     ___lldiv@dividend:	
   944                           ; 2 bytes @ 0x4
   945                           
   946                           
   947                           ; 4 bytes @ 0x4
   948     0074                     	ds	1
   949     0075                     ??_Lcd_Set_Cursor:
   950     0075                     ??_Lcd_Write_String:	
   951                           ; 1 bytes @ 0x5
   952                           
   953     0075                     convertir@unidad:	
   954                           ; 1 bytes @ 0x5
   955                           
   956     0075                     enviar_x@val1:	
   957                           ; 1 bytes @ 0x5
   958                           
   959     0075                     ___lbmod@rem:	
   960                           ; 1 bytes @ 0x5
   961                           
   962     0075                     Lcd_Write_String@i:	
   963                           ; 1 bytes @ 0x5
   964                           
   965                           
   966                           ; 2 bytes @ 0x5
   967     0075                     	ds	1
   968     0076                     ?_descomponer:
   969     0076                     convertir@decena:	
   970                           ; 1 bytes @ 0x6
   971                           
   972     0076                     Lcd_Set_Cursor@a:	
   973                           ; 1 bytes @ 0x6
   974                           
   975     0076                     descomponer@pos:	
   976                           ; 1 bytes @ 0x6
   977                           
   978                           
   979                           ; 2 bytes @ 0x6
   980     0076                     	ds	1
   981     0077                     convertir@conversion:
   982     0077                     Lcd_Set_Cursor@z:	
   983                           ; 1 bytes @ 0x7
   984                           
   985     0077                     Lcd_Write_String@a:	
   986                           ; 1 bytes @ 0x7
   987                           
   988                           
   989                           ; 1 bytes @ 0x7
   990     0077                     	ds	1
   991     0078                     ??___lldiv:
   992     0078                     convertir@valor:	
   993                           ; 1 bytes @ 0x8
   994                           
   995     0078                     Lcd_Set_Cursor@y:	
   996                           ; 1 bytes @ 0x8
   997                           
   998     0078                     descomponer@num:	
   999                           ; 1 bytes @ 0x8
  1000                           
  1001                           
  1002                           ; 1 bytes @ 0x8
  1003     0078                     	ds	1
  1004     0079                     ??_leer_x:
  1005     0079                     ??_descomponer:	
  1006                           ; 1 bytes @ 0x9
  1007                           
  1008     0079                     Lcd_Set_Cursor@temp:	
  1009                           ; 1 bytes @ 0x9
  1010                           
  1011     0079                     descomponer@cent:	
  1012                           ; 1 bytes @ 0x9
  1013                           
  1014     0079                     ___lldiv@quotient:	
  1015                           ; 1 bytes @ 0x9
  1016                           
  1017                           
  1018                           ; 4 bytes @ 0x9
  1019     0079                     	ds	1
  1020     007A                     descomponer@uni:
  1021                           
  1022                           ; 1 bytes @ 0xA
  1023     007A                     	ds	1
  1024     007B                     leer_x@address:
  1025     007B                     descomponer@dec:	
  1026                           ; 1 bytes @ 0xB
  1027                           
  1028                           
  1029                           ; 1 bytes @ 0xB
  1030     007B                     	ds	1
  1031     007C                     ?_Escribir_dato:
  1032     007C                     Escribir_dato@posx:	
  1033                           ; 1 bytes @ 0xC
  1034                           
  1035     007C                     leer_x@valor:	
  1036                           ; 1 bytes @ 0xC
  1037                           
  1038                           
  1039                           ; 1 bytes @ 0xC
  1040     007C                     	ds	1
  1041     007D                     Escribir_dato@posy:
  1042     007D                     ___lldiv@counter:	
  1043                           ; 1 bytes @ 0xD
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0xD
  1047     007D                     	ds	1
  1048     007E                     ??_Escribir_dato:
  1049                           
  1050                           	psect	cstackBANK0
  1051     0033                     __pcstackBANK0:	
  1052                           ; 1 bytes @ 0xE
  1053                           
  1054     0033                     ?_I2C_Master_Init:
  1055     0033                     Escribir_dato@dato:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058     0033                     I2C_Master_Init@c:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061                           
  1062                           ; 4 bytes @ 0x0
  1063     0033                     	ds	1
  1064     0034                     ??_leer_temperatura:
  1065                           
  1066                           ; 1 bytes @ 0x1
  1067     0034                     	ds	3
  1068     0037                     ??_I2C_Master_Init:
  1069                           
  1070                           ; 1 bytes @ 0x4
  1071     0037                     	ds	4
  1072     003B                     ??_portsetup:
  1073                           
  1074                           ; 1 bytes @ 0x8
  1075     003B                     	ds	3
  1076     003E                     ??_main:
  1077                           
  1078                           ; 1 bytes @ 0xB
  1079     003E                     	ds	3
  1080     0041                     _main$198:
  1081                           
  1082                           ; 1 bytes @ 0xE
  1083     0041                     	ds	1
  1084                           
  1085                           	psect	maintext
  1086     0604                     __pmaintext:	
  1087 ;;
  1088 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1089 ;;
  1090 ;; *************** function _main *****************
  1091 ;; Defined at:
  1092 ;;		line 70 in file "main.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;		None
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;		None
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : B00/0
  1103 ;;		On exit  : 300/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1106 ;;      Params:         0       0       0       0       0
  1107 ;;      Locals:         0       1       0       0       0
  1108 ;;      Temps:          0       3       0       0       0
  1109 ;;      Totals:         0       4       0       0       0
  1110 ;;Total ram usage:        4 bytes
  1111 ;; Hardware stack levels required when called: 5
  1112 ;; This function calls:
  1113 ;;		_Escribir_dato
  1114 ;;		_I2C_Master_Start
  1115 ;;		_I2C_Master_Stop
  1116 ;;		_I2C_Master_Write
  1117 ;;		_Lcd_Clear
  1118 ;;		_Lcd_Init
  1119 ;;		_Lcd_Set_Cursor
  1120 ;;		_Lcd_Write_Char
  1121 ;;		_Lcd_Write_String
  1122 ;;		_enviar_x
  1123 ;;		_leer_temperatura
  1124 ;;		_leer_x
  1125 ;;		_portsetup
  1126 ;;		_setupINTOSC
  1127 ;; This function is called by:
  1128 ;;		Startup code after reset
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132     0604                     _main:	
  1133                           ;psect for function _main
  1134                           
  1135                           
  1136                           ;main.c: 72:     setupINTOSC(7);
  1137                           
  1138                           ;incstack = 0
  1139                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1140     0604  3007               	movlw	7
  1141     0605  120A  118A  24BE  120A  118A  	fcall	_setupINTOSC
  1142                           
  1143                           ;main.c: 74:     portsetup();
  1144     060A  120A  118A  22DD  120A  118A  	fcall	_portsetup
  1145                           
  1146                           ;main.c: 77:     Lcd_Init();
  1147     060F  120A  118A  254B  120A  118A  	fcall	_Lcd_Init
  1148                           
  1149                           ;main.c: 78:     Lcd_Clear();
  1150     0614  120A  118A  21F1  120A  118A  	fcall	_Lcd_Clear
  1151                           
  1152                           ;main.c: 79:     Lcd_Set_Cursor(1,13);
  1153     0619  300D               	movlw	13
  1154     061A  00F4               	movwf	Lcd_Set_Cursor@b
  1155     061B  3001               	movlw	1
  1156     061C  120A  118A  2441  120A  118A  	fcall	_Lcd_Set_Cursor
  1157                           
  1158                           ;main.c: 80:     Lcd_Write_Char(':');
  1159     0621  303A               	movlw	58
  1160     0622  120A  118A  230A  120A  118A  	fcall	_Lcd_Write_Char
  1161                           
  1162                           ;main.c: 81:     Lcd_Set_Cursor(2,9);
  1163     0627  3009               	movlw	9
  1164     0628  00F4               	movwf	Lcd_Set_Cursor@b
  1165     0629  3002               	movlw	2
  1166     062A  120A  118A  2441  120A  118A  	fcall	_Lcd_Set_Cursor
  1167                           
  1168                           ;main.c: 82:     Lcd_Write_String("S:  :");
  1169     062F  3009               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1170     0630  120A  118A  2296  120A  118A  	fcall	_Lcd_Write_String
  1171                           
  1172                           ;main.c: 83:     Lcd_Set_Cursor(2,1);
  1173     0635  01F4               	clrf	Lcd_Set_Cursor@b
  1174     0636  0AF4               	incf	Lcd_Set_Cursor@b,f
  1175     0637  3002               	movlw	2
  1176     0638  120A  118A  2441  120A  118A  	fcall	_Lcd_Set_Cursor
  1177                           
  1178                           ;main.c: 84:     Lcd_Write_String("T:    C");
  1179     063D  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1180     063E  120A  118A  2296  120A  118A  	fcall	_Lcd_Write_String
  1181                           
  1182                           ;main.c: 87:     modo = 0;
  1183     0643  1283               	bcf	3,5	;RP0=0, select bank0
  1184     0644  1303               	bcf	3,6	;RP1=0, select bank0
  1185     0645  01AB               	clrf	_modo
  1186                           
  1187                           ;main.c: 88:     sec = 0;
  1188     0646  01AF               	clrf	_sec
  1189                           
  1190                           ;main.c: 89:     min = 0;
  1191     0647  01AD               	clrf	_min
  1192                           
  1193                           ;main.c: 91:     enviar_x(0, 0);
  1194     0648  01F2               	clrf	enviar_x@val2
  1195     0649  3000               	movlw	0
  1196     064A  120A  118A  236C  120A  118A  	fcall	_enviar_x
  1197     064F                     l1757:
  1198                           
  1199                           ;main.c: 95:         leer_temperatura();
  1200     064F  120A  118A  23D2  120A  118A  	fcall	_leer_temperatura
  1201                           
  1202                           ;main.c: 97:         enviar_x(0, 0);
  1203     0654  01F2               	clrf	enviar_x@val2
  1204     0655  3000               	movlw	0
  1205     0656  120A  118A  236C  120A  118A  	fcall	_enviar_x
  1206                           
  1207                           ;main.c: 99:         sec = leer_x(0x00);
  1208     065B  3000               	movlw	0
  1209     065C  120A  118A  247F  120A  118A  	fcall	_leer_x
  1210     0661  1283               	bcf	3,5	;RP0=0, select bank0
  1211     0662  00AF               	movwf	_sec
  1212                           
  1213                           ;main.c: 100:         Escribir_dato(sec, 14, 1);
  1214     0663  300E               	movlw	14
  1215     0664  00FC               	movwf	Escribir_dato@posx
  1216     0665  01FD               	clrf	Escribir_dato@posy
  1217     0666  0AFD               	incf	Escribir_dato@posy,f
  1218     0667  082F               	movf	_sec,w
  1219     0668  120A  118A  2504  120A  118A  	fcall	_Escribir_dato
  1220                           
  1221                           ;main.c: 102:         min = leer_x(0x01);
  1222     066D  3001               	movlw	1
  1223     066E  120A  118A  247F  120A  118A  	fcall	_leer_x
  1224     0673  1283               	bcf	3,5	;RP0=0, select bank0
  1225     0674  00AD               	movwf	_min
  1226                           
  1227                           ;main.c: 103:         Escribir_dato(min, 11, 1);
  1228     0675  300B               	movlw	11
  1229     0676  00FC               	movwf	Escribir_dato@posx
  1230     0677  01FD               	clrf	Escribir_dato@posy
  1231     0678  0AFD               	incf	Escribir_dato@posy,f
  1232     0679  082D               	movf	_min,w
  1233     067A  120A  118A  2504  120A  118A  	fcall	_Escribir_dato
  1234                           
  1235                           ;main.c: 106:         if (!PORTBbits.RB1){
  1236     067F  1886               	btfsc	6,1	;volatile
  1237     0680  2EB7               	goto	l1789
  1238                           
  1239                           ;main.c: 107:             if (SERVO != 0){
  1240     0681  082A               	movf	_SERVO,w
  1241     0682  1903               	btfsc	3,2
  1242     0683  2E96               	goto	l1783
  1243                           
  1244                           ;main.c: 108:                 SERVO = 0;
  1245     0684  01AA               	clrf	_SERVO
  1246                           
  1247                           ;main.c: 109:                 I2C_Master_Start();
  1248     0685  120A  118A  21CA  120A  118A  	fcall	_I2C_Master_Start
  1249                           
  1250                           ;main.c: 110:                 I2C_Master_Write(0xb0);
  1251     068A  30B0               	movlw	176
  1252     068B  00F0               	movwf	I2C_Master_Write@d
  1253     068C  3000               	movlw	0
  1254     068D  00F1               	movwf	I2C_Master_Write@d+1
  1255     068E  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Write
  1256                           
  1257                           ;main.c: 111:                 I2C_Master_Write(0);
  1258     0693  3000               	movlw	0
  1259     0694  00F0               	movwf	I2C_Master_Write@d
  1260     0695  2EAC               	goto	L1
  1261     0696                     l1783:	
  1262                           ;main.c: 113:             }
  1263                           
  1264                           ;main.c: 112:                 I2C_Master_Stop();
  1265                           
  1266     0696  082A               	movf	_SERVO,w
  1267     0697  1D03               	btfss	3,2
  1268     0698  2EB7               	goto	l1789
  1269                           
  1270                           ;main.c: 115:                 SERVO = 1;
  1271     0699  01AA               	clrf	_SERVO
  1272     069A  0AAA               	incf	_SERVO,f
  1273                           
  1274                           ;main.c: 116:                 I2C_Master_Start();
  1275     069B  120A  118A  21CA  120A  118A  	fcall	_I2C_Master_Start
  1276                           
  1277                           ;main.c: 117:                 I2C_Master_Write(0xb0);
  1278     06A0  30B0               	movlw	176
  1279     06A1  00F0               	movwf	I2C_Master_Write@d
  1280     06A2  3000               	movlw	0
  1281     06A3  00F1               	movwf	I2C_Master_Write@d+1
  1282     06A4  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Write
  1283                           
  1284                           ;main.c: 118:                 I2C_Master_Write(1);
  1285     06A9  3001               	movlw	1
  1286     06AA  00F0               	movwf	I2C_Master_Write@d
  1287     06AB  3000               	movlw	0
  1288     06AC                     L1:
  1289     06AC  00F1               	movwf	I2C_Master_Write@d+1
  1290     06AD  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Write
  1291                           
  1292                           ;main.c: 119:                 I2C_Master_Stop();
  1293     06B2  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Stop
  1294     06B7                     l1789:
  1295                           
  1296                           ;main.c: 124:         if(!PORTBbits.RB4){
  1297     06B7  1283               	bcf	3,5	;RP0=0, select bank0
  1298     06B8  1E06               	btfss	6,4	;volatile
  1299     06B9  2F15               	goto	l1839
  1300     06BA  2E4F               	goto	l1757
  1301     06BB                     l1793:
  1302                           
  1303                           ;main.c: 128:                 leer_temperatura();
  1304     06BB  120A  118A  23D2  120A  118A  	fcall	_leer_temperatura
  1305                           
  1306                           ;main.c: 130:                 Escribir_dato(sec, 14, 1);
  1307     06C0  300E               	movlw	14
  1308     06C1  00FC               	movwf	Escribir_dato@posx
  1309     06C2  01FD               	clrf	Escribir_dato@posy
  1310     06C3  0AFD               	incf	Escribir_dato@posy,f
  1311     06C4  082F               	movf	_sec,w
  1312     06C5  120A  118A  2504  120A  118A  	fcall	_Escribir_dato
  1313                           
  1314                           ;main.c: 131:                 Escribir_dato(min, 11, 1);
  1315     06CA  300B               	movlw	11
  1316     06CB  00FC               	movwf	Escribir_dato@posx
  1317     06CC  01FD               	clrf	Escribir_dato@posy
  1318     06CD  0AFD               	incf	Escribir_dato@posy,f
  1319     06CE  082D               	movf	_min,w
  1320     06CF  120A  118A  2504  120A  118A  	fcall	_Escribir_dato
  1321                           
  1322                           ;main.c: 133:                 if(PORTBbits.RB7 == 0){
  1323     06D4  1B86               	btfsc	6,7	;volatile
  1324     06D5  2EDF               	goto	l1803
  1325                           
  1326                           ;main.c: 135:                     if (modo < 1){
  1327     06D6  082B               	movf	_modo,w
  1328     06D7  1D03               	btfss	3,2
  1329     06D8  2EDE               	goto	l1801
  1330                           
  1331                           ;main.c: 136:                         modo += 1;
  1332     06D9  3001               	movlw	1
  1333     06DA  00BE               	movwf	??_main
  1334     06DB  083E               	movf	??_main,w
  1335     06DC  07AB               	addwf	_modo,f
  1336                           
  1337                           ;main.c: 137:                     }
  1338     06DD  2EDF               	goto	l1803
  1339     06DE                     l1801:
  1340                           
  1341                           ;main.c: 139:                         modo = 0;
  1342     06DE  01AB               	clrf	_modo
  1343     06DF                     l1803:
  1344                           
  1345                           ;main.c: 143:                 if(PORTBbits.RB6 == 0){
  1346     06DF  1B06               	btfsc	6,6	;volatile
  1347     06E0  2EFC               	goto	l1821
  1348                           
  1349                           ;main.c: 145:                     if (modo == 0){
  1350     06E1  082B               	movf	_modo,w
  1351     06E2  1D03               	btfss	3,2
  1352     06E3  2EEF               	goto	l1813
  1353                           
  1354                           ;main.c: 146:                         if (sec<59){
  1355     06E4  303B               	movlw	59
  1356     06E5  022F               	subwf	_sec,w
  1357     06E6  1803               	skipnc
  1358     06E7  2EED               	goto	l1811
  1359                           
  1360                           ;main.c: 147:                             sec ++;
  1361     06E8  3001               	movlw	1
  1362     06E9  00BE               	movwf	??_main
  1363     06EA  083E               	movf	??_main,w
  1364     06EB  07AF               	addwf	_sec,f
  1365                           
  1366                           ;main.c: 148:                         }
  1367     06EC  2EFC               	goto	l1821
  1368     06ED                     l1811:
  1369                           
  1370                           ;main.c: 150:                             sec = 0;
  1371     06ED  01AF               	clrf	_sec
  1372     06EE  2EFC               	goto	l1821
  1373     06EF                     l1813:
  1374     06EF  032B               	decf	_modo,w
  1375     06F0  1D03               	btfss	3,2
  1376     06F1  2EFC               	goto	l1821
  1377                           
  1378                           ;main.c: 154:                         if (min<59){
  1379     06F2  303B               	movlw	59
  1380     06F3  022D               	subwf	_min,w
  1381     06F4  1803               	skipnc
  1382     06F5  2EFB               	goto	l1819
  1383                           
  1384                           ;main.c: 155:                             min++;
  1385     06F6  3001               	movlw	1
  1386     06F7  00BE               	movwf	??_main
  1387     06F8  083E               	movf	??_main,w
  1388     06F9  07AD               	addwf	_min,f
  1389                           
  1390                           ;main.c: 156:                         }
  1391     06FA  2EFC               	goto	l1821
  1392     06FB                     l1819:
  1393                           
  1394                           ;main.c: 158:                             min = 0;
  1395     06FB  01AD               	clrf	_min
  1396     06FC                     l1821:
  1397                           
  1398                           ;main.c: 165:                 if(PORTBbits.RB5 == 0){
  1399     06FC  1A86               	btfsc	6,5	;volatile
  1400     06FD  2F15               	goto	l1839
  1401                           
  1402                           ;main.c: 168:                     if (modo == 0){
  1403     06FE  082B               	movf	_modo,w
  1404     06FF  1D03               	btfss	3,2
  1405     0700  2F0A               	goto	l1831
  1406                           
  1407                           ;main.c: 169:                         if (sec > 0){
  1408     0701  082F               	movf	_sec,w
  1409     0702  1903               	btfsc	3,2
  1410     0703  2F07               	goto	l1829
  1411                           
  1412                           ;main.c: 170:                             sec--;
  1413     0704  3001               	movlw	1
  1414     0705  02AF               	subwf	_sec,f
  1415                           
  1416                           ;main.c: 171:                         }
  1417     0706  2F15               	goto	l1839
  1418     0707                     l1829:
  1419                           
  1420                           ;main.c: 173:                             sec = 59;
  1421     0707  303B               	movlw	59
  1422     0708  00AF               	movwf	_sec
  1423     0709  2F15               	goto	l1839
  1424     070A                     l1831:
  1425     070A  032B               	decf	_modo,w
  1426     070B  1D03               	btfss	3,2
  1427     070C  2F15               	goto	l1839
  1428                           
  1429                           ;main.c: 177:                         if (min > 0){
  1430     070D  082D               	movf	_min,w
  1431     070E  1903               	btfsc	3,2
  1432     070F  2F13               	goto	l1837
  1433                           
  1434                           ;main.c: 178:                             min--;
  1435     0710  3001               	movlw	1
  1436     0711  02AD               	subwf	_min,f
  1437                           
  1438                           ;main.c: 179:                         }
  1439     0712  2F15               	goto	l1839
  1440     0713                     l1837:
  1441                           
  1442                           ;main.c: 181:                             min = 59;
  1443     0713  303B               	movlw	59
  1444     0714  00AD               	movwf	_min
  1445     0715                     l1839:
  1446                           
  1447                           ;main.c: 126:             while(PORTBbits.RB3){
  1448     0715  1986               	btfsc	6,3	;volatile
  1449     0716  2EBB               	goto	l1793
  1450                           
  1451                           ;main.c: 188:             enviar_x(0,0);
  1452     0717  01F2               	clrf	enviar_x@val2
  1453     0718  3000               	movlw	0
  1454     0719  120A  118A  236C  120A  118A  	fcall	_enviar_x
  1455                           
  1456                           ;main.c: 190:             Escribir_dato(sec, 14, 2);
  1457     071E  300E               	movlw	14
  1458     071F  00FC               	movwf	Escribir_dato@posx
  1459     0720  3002               	movlw	2
  1460     0721  00FD               	movwf	Escribir_dato@posy
  1461     0722  1283               	bcf	3,5	;RP0=0, select bank0
  1462     0723  082F               	movf	_sec,w
  1463     0724  120A  118A  2504  120A  118A  	fcall	_Escribir_dato
  1464                           
  1465                           ;main.c: 191:             Escribir_dato(min, 11, 2);
  1466     0729  300B               	movlw	11
  1467     072A  00FC               	movwf	Escribir_dato@posx
  1468     072B  3002               	movlw	2
  1469     072C  00FD               	movwf	Escribir_dato@posy
  1470     072D  082D               	movf	_min,w
  1471     072E  120A  118A  2504  120A  118A  	fcall	_Escribir_dato
  1472                           
  1473                           ;main.c: 194:             I2C_Master_Start();
  1474     0733  120A  118A  21CA  120A  118A  	fcall	_I2C_Master_Start
  1475                           
  1476                           ;main.c: 195:             I2C_Master_Write(0xb0);
  1477     0738  30B0               	movlw	176
  1478     0739  00F0               	movwf	I2C_Master_Write@d
  1479     073A  3000               	movlw	0
  1480     073B  00F1               	movwf	I2C_Master_Write@d+1
  1481     073C  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Write
  1482                           
  1483                           ;main.c: 196:             I2C_Master_Write(0);
  1484     0741  3000               	movlw	0
  1485     0742  00F0               	movwf	I2C_Master_Write@d
  1486     0743  00F1               	movwf	I2C_Master_Write@d+1
  1487     0744  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Write
  1488                           
  1489                           ;main.c: 197:             I2C_Master_Stop();
  1490     0749  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Stop
  1491                           
  1492                           ;main.c: 198:             SERVO = 0;
  1493     074E  1283               	bcf	3,5	;RP0=0, select bank0
  1494     074F  01AA               	clrf	_SERVO
  1495                           
  1496                           ;main.c: 200:             _delay((unsigned long)((500)*(8000000/4000.0)));
  1497     0750  3006               	movlw	6
  1498     0751  1283               	bcf	3,5	;RP0=0, select bank0
  1499     0752  1303               	bcf	3,6	;RP1=0, select bank0
  1500     0753  00C0               	movwf	??_main+2
  1501     0754  3013               	movlw	19
  1502     0755  00BF               	movwf	??_main+1
  1503     0756  30AD               	movlw	173
  1504     0757  00BE               	movwf	??_main
  1505     0758                     u1457:
  1506     0758  0BBE               	decfsz	??_main,f
  1507     0759  2F58               	goto	u1457
  1508     075A  0BBF               	decfsz	??_main+1,f
  1509     075B  2F58               	goto	u1457
  1510     075C  0BC0               	decfsz	??_main+2,f
  1511     075D  2F58               	goto	u1457
  1512                           
  1513                           ;main.c: 202:             I2C_Master_Start();
  1514     075E  120A  118A  21CA  120A  118A  	fcall	_I2C_Master_Start
  1515                           
  1516                           ;main.c: 203:             I2C_Master_Write(0xb0);
  1517     0763  30B0               	movlw	176
  1518     0764  00F0               	movwf	I2C_Master_Write@d
  1519     0765  3000               	movlw	0
  1520     0766  00F1               	movwf	I2C_Master_Write@d+1
  1521     0767  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Write
  1522                           
  1523                           ;main.c: 204:             I2C_Master_Write(0x02);
  1524     076C  3002               	movlw	2
  1525     076D  00F0               	movwf	I2C_Master_Write@d
  1526     076E  3000               	movlw	0
  1527     076F  00F1               	movwf	I2C_Master_Write@d+1
  1528     0770  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Write
  1529                           
  1530                           ;main.c: 205:             I2C_Master_Stop();
  1531     0775  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Stop
  1532                           
  1533                           ;main.c: 208:             while(PORTBbits.RB3 & !((sec == segundos) & (min == minutos)) 
      +                          ){
  1534     077A  2FAF               	goto	l1859
  1535     077B                     l1855:
  1536                           
  1537                           ;main.c: 210:                 segundos = leer_x(0x00);
  1538     077B  3000               	movlw	0
  1539     077C  120A  118A  247F  120A  118A  	fcall	_leer_x
  1540     0781  1283               	bcf	3,5	;RP0=0, select bank0
  1541     0782  00AE               	movwf	_segundos
  1542                           
  1543                           ;main.c: 211:                 minutos = leer_x(0x01);
  1544     0783  3001               	movlw	1
  1545     0784  120A  118A  247F  120A  118A  	fcall	_leer_x
  1546     0789  1283               	bcf	3,5	;RP0=0, select bank0
  1547     078A  00AC               	movwf	_minutos
  1548                           
  1549                           ;main.c: 212:                 Escribir_dato(segundos, 14, 1);
  1550     078B  300E               	movlw	14
  1551     078C  00FC               	movwf	Escribir_dato@posx
  1552     078D  01FD               	clrf	Escribir_dato@posy
  1553     078E  0AFD               	incf	Escribir_dato@posy,f
  1554     078F  082E               	movf	_segundos,w
  1555     0790  120A  118A  2504  120A  118A  	fcall	_Escribir_dato
  1556                           
  1557                           ;main.c: 213:                 Escribir_dato(minutos, 11, 1);
  1558     0795  300B               	movlw	11
  1559     0796  00FC               	movwf	Escribir_dato@posx
  1560     0797  01FD               	clrf	Escribir_dato@posy
  1561     0798  0AFD               	incf	Escribir_dato@posy,f
  1562     0799  082C               	movf	_minutos,w
  1563     079A  120A  118A  2504  120A  118A  	fcall	_Escribir_dato
  1564                           
  1565                           ;main.c: 215:                 leer_temperatura();
  1566     079F  120A  118A  23D2  120A  118A  	fcall	_leer_temperatura
  1567                           
  1568                           ;main.c: 216:                 _delay((unsigned long)((10)*(8000000/4000.0)));
  1569     07A4  301A               	movlw	26
  1570     07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1571     07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1572     07A7  00BF               	movwf	??_main+1
  1573     07A8  30F7               	movlw	247
  1574     07A9  00BE               	movwf	??_main
  1575     07AA                     u1467:
  1576     07AA  0BBE               	decfsz	??_main,f
  1577     07AB  2FAA               	goto	u1467
  1578     07AC  0BBF               	decfsz	??_main+1,f
  1579     07AD  2FAA               	goto	u1467
  1580     07AE  2FAF               	nop2
  1581     07AF                     l1859:
  1582                           
  1583                           ;main.c: 208:             while(PORTBbits.RB3 & !((sec == segundos) & (min == minutos)) 
      +                          ){
  1584     07AF  1283               	bcf	3,5	;RP0=0, select bank0
  1585     07B0  1303               	bcf	3,6	;RP1=0, select bank0
  1586     07B1  01C1               	clrf	_main$198
  1587     07B2  0AC1               	incf	_main$198,f
  1588     07B3  082F               	movf	_sec,w
  1589     07B4  062E               	xorwf	_segundos,w
  1590     07B5  1D03               	skipz
  1591     07B6  2FBC               	goto	l1867
  1592     07B7  082D               	movf	_min,w
  1593     07B8  062C               	xorwf	_minutos,w
  1594     07B9  1D03               	skipz
  1595     07BA  2FBC               	goto	l1867
  1596     07BB  01C1               	clrf	_main$198
  1597     07BC                     l1867:
  1598     07BC  0C06               	rrf	6,w	;volatile
  1599     07BD  00BE               	movwf	??_main
  1600     07BE  0CBE               	rrf	??_main,f
  1601     07BF  0C3E               	rrf	??_main,w
  1602     07C0  3901               	andlw	1
  1603     07C1  0541               	andwf	_main$198,w
  1604     07C2  1D03               	btfss	3,2
  1605     07C3  2F7B               	goto	l1855
  1606                           
  1607                           ;main.c: 220:             I2C_Master_Start();
  1608     07C4  120A  118A  21CA  120A  118A  	fcall	_I2C_Master_Start
  1609                           
  1610                           ;main.c: 221:             I2C_Master_Write(0xb0);
  1611     07C9  30B0               	movlw	176
  1612     07CA  00F0               	movwf	I2C_Master_Write@d
  1613     07CB  3000               	movlw	0
  1614     07CC  00F1               	movwf	I2C_Master_Write@d+1
  1615     07CD  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Write
  1616                           
  1617                           ;main.c: 222:             I2C_Master_Write(0x03);
  1618     07D2  3003               	movlw	3
  1619     07D3  00F0               	movwf	I2C_Master_Write@d
  1620     07D4  3000               	movlw	0
  1621     07D5  00F1               	movwf	I2C_Master_Write@d+1
  1622     07D6  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Write
  1623                           
  1624                           ;main.c: 223:             I2C_Master_Stop();
  1625     07DB  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Stop
  1626                           
  1627                           ;main.c: 226:             Escribir_dato(0, 14, 2);
  1628     07E0  300E               	movlw	14
  1629     07E1  00FC               	movwf	Escribir_dato@posx
  1630     07E2  3002               	movlw	2
  1631     07E3  00FD               	movwf	Escribir_dato@posy
  1632     07E4  3000               	movlw	0
  1633     07E5  120A  118A  2504  120A  118A  	fcall	_Escribir_dato
  1634                           
  1635                           ;main.c: 227:             Escribir_dato(0, 11, 2);
  1636     07EA  300B               	movlw	11
  1637     07EB  00FC               	movwf	Escribir_dato@posx
  1638     07EC  3002               	movlw	2
  1639     07ED  00FD               	movwf	Escribir_dato@posy
  1640     07EE  3000               	movlw	0
  1641     07EF  120A  118A  2504  120A  118A  	fcall	_Escribir_dato
  1642     07F4  2E4F               	goto	l1757
  1643     07F5                     __end_of_main:
  1644                           
  1645                           	psect	text1
  1646     04BE                     __ptext1:	
  1647 ;; *************** function _setupINTOSC *****************
  1648 ;; Defined at:
  1649 ;;		line 10 in file "oscilador.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  IRCF            1    wreg     unsigned char 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  IRCF            1    0[COMMON] unsigned char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      void 
  1656 ;; Registers used:
  1657 ;;		wreg, status,2, status,0
  1658 ;; Tracked objects:
  1659 ;;		On entry : B00/0
  1660 ;;		On exit  : B00/100
  1661 ;;		Unchanged: 800/0
  1662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1663 ;;      Params:         0       0       0       0       0
  1664 ;;      Locals:         1       0       0       0       0
  1665 ;;      Temps:          0       0       0       0       0
  1666 ;;      Totals:         1       0       0       0       0
  1667 ;;Total ram usage:        1 bytes
  1668 ;; Hardware stack levels used: 1
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_main
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676     04BE                     _setupINTOSC:	
  1677                           ;psect for function _setupINTOSC
  1678                           
  1679                           
  1680                           ;incstack = 0
  1681                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  1682                           ;setupINTOSC@IRCF stored from wreg
  1683     04BE  00F0               	movwf	setupINTOSC@IRCF
  1684                           
  1685                           ;oscilador.c: 11:     if (IRCF == 7){
  1686     04BF  3007               	movlw	7
  1687     04C0  0670               	xorwf	setupINTOSC@IRCF,w
  1688     04C1  1D03               	btfss	3,2
  1689     04C2  2CC6               	goto	l275
  1690                           
  1691                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  1692     04C3  3070               	movlw	112
  1693     04C4  1683               	bsf	3,5	;RP0=1, select bank1
  1694     04C5  048F               	iorwf	15,f	;volatile
  1695     04C6                     l275:	
  1696                           ;oscilador.c: 13:     }
  1697                           
  1698                           
  1699                           ;oscilador.c: 14:     if (IRCF == 6){
  1700     04C6  3006               	movlw	6
  1701     04C7  0670               	xorwf	setupINTOSC@IRCF,w
  1702     04C8  1D03               	btfss	3,2
  1703     04C9  2CCF               	goto	l276
  1704                           
  1705                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  1706     04CA  1683               	bsf	3,5	;RP0=1, select bank1
  1707     04CB  080F               	movf	15,w	;volatile
  1708     04CC  398F               	andlw	-113
  1709     04CD  3860               	iorlw	96
  1710     04CE  008F               	movwf	15	;volatile
  1711     04CF                     l276:	
  1712                           ;oscilador.c: 16:     }
  1713                           
  1714                           
  1715                           ;oscilador.c: 17:     if (IRCF == 5){
  1716     04CF  3005               	movlw	5
  1717     04D0  0670               	xorwf	setupINTOSC@IRCF,w
  1718     04D1  1D03               	btfss	3,2
  1719     04D2  2CD8               	goto	l277
  1720                           
  1721                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  1722     04D3  1683               	bsf	3,5	;RP0=1, select bank1
  1723     04D4  080F               	movf	15,w	;volatile
  1724     04D5  398F               	andlw	-113
  1725     04D6  3850               	iorlw	80
  1726     04D7  008F               	movwf	15	;volatile
  1727     04D8                     l277:	
  1728                           ;oscilador.c: 19:     }
  1729                           
  1730                           
  1731                           ;oscilador.c: 20:     if (IRCF == 4){
  1732     04D8  3004               	movlw	4
  1733     04D9  0670               	xorwf	setupINTOSC@IRCF,w
  1734     04DA  1D03               	btfss	3,2
  1735     04DB  2CE1               	goto	l278
  1736                           
  1737                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  1738     04DC  1683               	bsf	3,5	;RP0=1, select bank1
  1739     04DD  080F               	movf	15,w	;volatile
  1740     04DE  398F               	andlw	-113
  1741     04DF  3840               	iorlw	64
  1742     04E0  008F               	movwf	15	;volatile
  1743     04E1                     l278:	
  1744                           ;oscilador.c: 22:     }
  1745                           
  1746                           
  1747                           ;oscilador.c: 23:     if (IRCF == 3){
  1748     04E1  3003               	movlw	3
  1749     04E2  0670               	xorwf	setupINTOSC@IRCF,w
  1750     04E3  1D03               	btfss	3,2
  1751     04E4  2CEA               	goto	l279
  1752                           
  1753                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  1754     04E5  1683               	bsf	3,5	;RP0=1, select bank1
  1755     04E6  080F               	movf	15,w	;volatile
  1756     04E7  398F               	andlw	-113
  1757     04E8  3830               	iorlw	48
  1758     04E9  008F               	movwf	15	;volatile
  1759     04EA                     l279:	
  1760                           ;oscilador.c: 25:     }
  1761                           
  1762                           
  1763                           ;oscilador.c: 26:     if (IRCF == 2){
  1764     04EA  3002               	movlw	2
  1765     04EB  0670               	xorwf	setupINTOSC@IRCF,w
  1766     04EC  1D03               	btfss	3,2
  1767     04ED  2CF3               	goto	l280
  1768                           
  1769                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  1770     04EE  1683               	bsf	3,5	;RP0=1, select bank1
  1771     04EF  080F               	movf	15,w	;volatile
  1772     04F0  398F               	andlw	-113
  1773     04F1  3820               	iorlw	32
  1774     04F2  008F               	movwf	15	;volatile
  1775     04F3                     l280:	
  1776                           ;oscilador.c: 28:     }
  1777                           
  1778                           
  1779                           ;oscilador.c: 29:     if (IRCF == 1){
  1780     04F3  0370               	decf	setupINTOSC@IRCF,w
  1781     04F4  1D03               	btfss	3,2
  1782     04F5  2CFB               	goto	l281
  1783                           
  1784                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  1785     04F6  1683               	bsf	3,5	;RP0=1, select bank1
  1786     04F7  080F               	movf	15,w	;volatile
  1787     04F8  398F               	andlw	-113
  1788     04F9  3810               	iorlw	16
  1789     04FA  008F               	movwf	15	;volatile
  1790     04FB                     l281:	
  1791                           ;oscilador.c: 31:     }
  1792                           
  1793                           
  1794                           ;oscilador.c: 32:     if (IRCF == 0){
  1795     04FB  0870               	movf	setupINTOSC@IRCF,w
  1796     04FC  1D03               	btfss	3,2
  1797     04FD  2D01               	goto	l1693
  1798                           
  1799                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  1800     04FE  308F               	movlw	-113
  1801     04FF  1683               	bsf	3,5	;RP0=1, select bank1
  1802     0500  058F               	andwf	15,f	;volatile
  1803     0501                     l1693:
  1804                           
  1805                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  1806     0501  1683               	bsf	3,5	;RP0=1, select bank1
  1807     0502  140F               	bsf	15,0	;volatile
  1808     0503  0008               	return
  1809     0504                     __end_of_setupINTOSC:
  1810                           
  1811                           	psect	text2
  1812     02DD                     __ptext2:	
  1813 ;; *************** function _portsetup *****************
  1814 ;; Defined at:
  1815 ;;		line 232 in file "main.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;		None
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;		None
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      void 
  1822 ;; Registers used:
  1823 ;;		wreg, status,2, status,0, pclath, cstack
  1824 ;; Tracked objects:
  1825 ;;		On entry : B00/100
  1826 ;;		On exit  : 300/100
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1829 ;;      Params:         0       0       0       0       0
  1830 ;;      Locals:         0       0       0       0       0
  1831 ;;      Temps:          0       3       0       0       0
  1832 ;;      Totals:         0       3       0       0       0
  1833 ;;Total ram usage:        3 bytes
  1834 ;; Hardware stack levels used: 1
  1835 ;; Hardware stack levels required when called: 2
  1836 ;; This function calls:
  1837 ;;		_I2C_Master_Init
  1838 ;; This function is called by:
  1839 ;;		_main
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843     02DD                     _portsetup:	
  1844                           ;psect for function _portsetup
  1845                           
  1846                           
  1847                           ;main.c: 233:     ANSEL = 0;
  1848                           
  1849                           ;incstack = 0
  1850                           ; Regs used in _portsetup: [wreg+status,2+status,0+pclath+cstack]
  1851     02DD  1703               	bsf	3,6	;RP1=1, select bank3
  1852     02DE  0188               	clrf	8	;volatile
  1853                           
  1854                           ;main.c: 234:     ANSELH = 0;
  1855     02DF  0189               	clrf	9	;volatile
  1856                           
  1857                           ;main.c: 235:     TRISD = 0;
  1858     02E0  1303               	bcf	3,6	;RP1=0, select bank1
  1859     02E1  0188               	clrf	8	;volatile
  1860                           
  1861                           ;main.c: 236:     PORTD = 0;
  1862     02E2  1283               	bcf	3,5	;RP0=0, select bank0
  1863     02E3  0188               	clrf	8	;volatile
  1864                           
  1865                           ;main.c: 239:     TRISB = 0b11111110;
  1866     02E4  30FE               	movlw	254
  1867     02E5  1683               	bsf	3,5	;RP0=1, select bank1
  1868     02E6  0086               	movwf	6	;volatile
  1869                           
  1870                           ;main.c: 240:     PORTB = 0b11111110;
  1871     02E7  30FE               	movlw	254
  1872     02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1873     02E9  0086               	movwf	6	;volatile
  1874                           
  1875                           ;main.c: 241:     WPUB = 0b11111110;
  1876     02EA  30FE               	movlw	254
  1877     02EB  1683               	bsf	3,5	;RP0=1, select bank1
  1878     02EC  0095               	movwf	21	;volatile
  1879                           
  1880                           ;main.c: 242:     OPTION_REGbits.nRBPU = 0;
  1881     02ED  1381               	bcf	1,7	;volatile
  1882                           
  1883                           ;main.c: 243:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1884     02EE  300B               	movlw	11
  1885     02EF  1283               	bcf	3,5	;RP0=0, select bank0
  1886     02F0  1303               	bcf	3,6	;RP1=0, select bank0
  1887     02F1  00BD               	movwf	??_portsetup+2
  1888     02F2  3026               	movlw	38
  1889     02F3  00BC               	movwf	??_portsetup+1
  1890     02F4  305D               	movlw	93
  1891     02F5  00BB               	movwf	??_portsetup
  1892     02F6                     u1477:
  1893     02F6  0BBB               	decfsz	??_portsetup,f
  1894     02F7  2AF6               	goto	u1477
  1895     02F8  0BBC               	decfsz	??_portsetup+1,f
  1896     02F9  2AF6               	goto	u1477
  1897     02FA  0BBD               	decfsz	??_portsetup+2,f
  1898     02FB  2AF6               	goto	u1477
  1899                           
  1900                           ;main.c: 244:     I2C_Master_Init(100000);
  1901     02FC  3000               	movlw	0
  1902     02FD  1283               	bcf	3,5	;RP0=0, select bank0
  1903     02FE  1303               	bcf	3,6	;RP1=0, select bank0
  1904     02FF  00B6               	movwf	I2C_Master_Init@c+3
  1905     0300  3001               	movlw	1
  1906     0301  00B5               	movwf	I2C_Master_Init@c+2
  1907     0302  3086               	movlw	134
  1908     0303  00B4               	movwf	I2C_Master_Init@c+1
  1909     0304  30A0               	movlw	160
  1910     0305  00B3               	movwf	I2C_Master_Init@c
  1911     0306  120A  118A  233B   	fcall	_I2C_Master_Init
  1912     0309  0008               	return
  1913     030A                     __end_of_portsetup:
  1914                           
  1915                           	psect	text3
  1916     033B                     __ptext3:	
  1917 ;; *************** function _I2C_Master_Init *****************
  1918 ;; Defined at:
  1919 ;;		line 16 in file "I2C.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  c               4    0[BANK0 ] const unsigned long 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;		None
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, status,2, status,0, pclath, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 300/0
  1930 ;;		On exit  : 300/100
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1933 ;;      Params:         0       4       0       0       0
  1934 ;;      Locals:         0       0       0       0       0
  1935 ;;      Temps:          0       4       0       0       0
  1936 ;;      Totals:         0       8       0       0       0
  1937 ;;Total ram usage:        8 bytes
  1938 ;; Hardware stack levels used: 1
  1939 ;; Hardware stack levels required when called: 1
  1940 ;; This function calls:
  1941 ;;		___lldiv
  1942 ;; This function is called by:
  1943 ;;		_portsetup
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947     033B                     _I2C_Master_Init:	
  1948                           ;psect for function _I2C_Master_Init
  1949                           
  1950                           
  1951                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1952                           
  1953                           ;incstack = 0
  1954                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1955     033B  3028               	movlw	40
  1956     033C  0094               	movwf	20	;volatile
  1957                           
  1958                           ;I2C.c: 19:     SSPCON2 = 0;
  1959     033D  1683               	bsf	3,5	;RP0=1, select bank1
  1960     033E  0191               	clrf	17	;volatile
  1961                           
  1962                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1963     033F  1283               	bcf	3,5	;RP0=0, select bank0
  1964     0340  0833               	movf	I2C_Master_Init@c,w
  1965     0341  00B7               	movwf	??_I2C_Master_Init
  1966     0342  0834               	movf	I2C_Master_Init@c+1,w
  1967     0343  00B8               	movwf	??_I2C_Master_Init+1
  1968     0344  0835               	movf	I2C_Master_Init@c+2,w
  1969     0345  00B9               	movwf	??_I2C_Master_Init+2
  1970     0346  0836               	movf	I2C_Master_Init@c+3,w
  1971     0347  00BA               	movwf	??_I2C_Master_Init+3
  1972     0348  3002               	movlw	2
  1973     0349                     u1135:
  1974     0349  1003               	clrc
  1975     034A  0DB7               	rlf	??_I2C_Master_Init,f
  1976     034B  0DB8               	rlf	??_I2C_Master_Init+1,f
  1977     034C  0DB9               	rlf	??_I2C_Master_Init+2,f
  1978     034D  0DBA               	rlf	??_I2C_Master_Init+3,f
  1979     034E  3EFF               	addlw	-1
  1980     034F  1D03               	skipz
  1981     0350  2B49               	goto	u1135
  1982     0351  083A               	movf	??_I2C_Master_Init+3,w
  1983     0352  00F3               	movwf	___lldiv@divisor+3
  1984     0353  0839               	movf	??_I2C_Master_Init+2,w
  1985     0354  00F2               	movwf	___lldiv@divisor+2
  1986     0355  0838               	movf	??_I2C_Master_Init+1,w
  1987     0356  00F1               	movwf	___lldiv@divisor+1
  1988     0357  0837               	movf	??_I2C_Master_Init,w
  1989     0358  00F0               	movwf	___lldiv@divisor
  1990     0359  3000               	movlw	0
  1991     035A  00F7               	movwf	___lldiv@dividend+3
  1992     035B  307A               	movlw	122
  1993     035C  00F6               	movwf	___lldiv@dividend+2
  1994     035D  3012               	movlw	18
  1995     035E  00F5               	movwf	___lldiv@dividend+1
  1996     035F  3000               	movlw	0
  1997     0360  00F4               	movwf	___lldiv@dividend
  1998     0361  120A  118A  25A6   	fcall	___lldiv
  1999     0364  0870               	movf	?___lldiv,w
  2000     0365  3EFF               	addlw	255
  2001     0366  1683               	bsf	3,5	;RP0=1, select bank1
  2002     0367  0093               	movwf	19	;volatile
  2003                           
  2004                           ;I2C.c: 21:     SSPSTAT = 0;
  2005     0368  0194               	clrf	20	;volatile
  2006                           
  2007                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2008     0369  1587               	bsf	7,3	;volatile
  2009                           
  2010                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2011     036A  1607               	bsf	7,4	;volatile
  2012     036B  0008               	return
  2013     036C                     __end_of_I2C_Master_Init:
  2014                           
  2015                           	psect	text4
  2016     05A6                     __ptext4:	
  2017 ;; *************** function ___lldiv *****************
  2018 ;; Defined at:
  2019 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  divisor         4    0[COMMON] unsigned long 
  2022 ;;  dividend        4    4[COMMON] unsigned long 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  quotient        4    9[COMMON] unsigned long 
  2025 ;;  counter         1   13[COMMON] unsigned char 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  4    0[COMMON] unsigned long 
  2028 ;; Registers used:
  2029 ;;		wreg, status,2, status,0
  2030 ;; Tracked objects:
  2031 ;;		On entry : 300/0
  2032 ;;		On exit  : 300/0
  2033 ;;		Unchanged: 300/0
  2034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2035 ;;      Params:         8       0       0       0       0
  2036 ;;      Locals:         5       0       0       0       0
  2037 ;;      Temps:          1       0       0       0       0
  2038 ;;      Totals:        14       0       0       0       0
  2039 ;;Total ram usage:       14 bytes
  2040 ;; Hardware stack levels used: 1
  2041 ;; This function calls:
  2042 ;;		Nothing
  2043 ;; This function is called by:
  2044 ;;		_I2C_Master_Init
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048     05A6                     ___lldiv:	
  2049                           ;psect for function ___lldiv
  2050                           
  2051                           
  2052                           ;incstack = 0
  2053                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2054     05A6  3000               	movlw	0
  2055     05A7  00FC               	movwf	___lldiv@quotient+3
  2056     05A8  3000               	movlw	0
  2057     05A9  00FB               	movwf	___lldiv@quotient+2
  2058     05AA  3000               	movlw	0
  2059     05AB  00FA               	movwf	___lldiv@quotient+1
  2060     05AC  3000               	movlw	0
  2061     05AD  00F9               	movwf	___lldiv@quotient
  2062     05AE  0873               	movf	___lldiv@divisor+3,w
  2063     05AF  0472               	iorwf	___lldiv@divisor+2,w
  2064     05B0  0471               	iorwf	___lldiv@divisor+1,w
  2065     05B1  0470               	iorwf	___lldiv@divisor,w
  2066     05B2  1903               	skipnz
  2067     05B3  2DFB               	goto	l1615
  2068     05B4  01FD               	clrf	___lldiv@counter
  2069     05B5  0AFD               	incf	___lldiv@counter,f
  2070     05B6                     l1601:
  2071     05B6  1BF3               	btfsc	___lldiv@divisor+3,7
  2072     05B7  2DC6               	goto	l1603
  2073     05B8  3001               	movlw	1
  2074     05B9  00F8               	movwf	??___lldiv
  2075     05BA                     u1075:
  2076     05BA  1003               	clrc
  2077     05BB  0DF0               	rlf	___lldiv@divisor,f
  2078     05BC  0DF1               	rlf	___lldiv@divisor+1,f
  2079     05BD  0DF2               	rlf	___lldiv@divisor+2,f
  2080     05BE  0DF3               	rlf	___lldiv@divisor+3,f
  2081     05BF  0BF8               	decfsz	??___lldiv,f
  2082     05C0  2DBA               	goto	u1075
  2083     05C1  3001               	movlw	1
  2084     05C2  00F8               	movwf	??___lldiv
  2085     05C3  0878               	movf	??___lldiv,w
  2086     05C4  07FD               	addwf	___lldiv@counter,f
  2087     05C5  2DB6               	goto	l1601
  2088     05C6                     l1603:
  2089     05C6  3001               	movlw	1
  2090     05C7  00F8               	movwf	??___lldiv
  2091     05C8                     u1095:
  2092     05C8  1003               	clrc
  2093     05C9  0DF9               	rlf	___lldiv@quotient,f
  2094     05CA  0DFA               	rlf	___lldiv@quotient+1,f
  2095     05CB  0DFB               	rlf	___lldiv@quotient+2,f
  2096     05CC  0DFC               	rlf	___lldiv@quotient+3,f
  2097     05CD  0BF8               	decfsz	??___lldiv,f
  2098     05CE  2DC8               	goto	u1095
  2099     05CF  0873               	movf	___lldiv@divisor+3,w
  2100     05D0  0277               	subwf	___lldiv@dividend+3,w
  2101     05D1  1D03               	skipz
  2102     05D2  2DDD               	goto	u1105
  2103     05D3  0872               	movf	___lldiv@divisor+2,w
  2104     05D4  0276               	subwf	___lldiv@dividend+2,w
  2105     05D5  1D03               	skipz
  2106     05D6  2DDD               	goto	u1105
  2107     05D7  0871               	movf	___lldiv@divisor+1,w
  2108     05D8  0275               	subwf	___lldiv@dividend+1,w
  2109     05D9  1D03               	skipz
  2110     05DA  2DDD               	goto	u1105
  2111     05DB  0870               	movf	___lldiv@divisor,w
  2112     05DC  0274               	subwf	___lldiv@dividend,w
  2113     05DD                     u1105:
  2114     05DD  1C03               	skipc
  2115     05DE  2DEE               	goto	l1611
  2116     05DF  0870               	movf	___lldiv@divisor,w
  2117     05E0  02F4               	subwf	___lldiv@dividend,f
  2118     05E1  0871               	movf	___lldiv@divisor+1,w
  2119     05E2  1C03               	skipc
  2120     05E3  0F71               	incfsz	___lldiv@divisor+1,w
  2121     05E4  02F5               	subwf	___lldiv@dividend+1,f
  2122     05E5  0872               	movf	___lldiv@divisor+2,w
  2123     05E6  1C03               	skipc
  2124     05E7  0F72               	incfsz	___lldiv@divisor+2,w
  2125     05E8  02F6               	subwf	___lldiv@dividend+2,f
  2126     05E9  0873               	movf	___lldiv@divisor+3,w
  2127     05EA  1C03               	skipc
  2128     05EB  0F73               	incfsz	___lldiv@divisor+3,w
  2129     05EC  02F7               	subwf	___lldiv@dividend+3,f
  2130     05ED  1479               	bsf	___lldiv@quotient,0
  2131     05EE                     l1611:
  2132     05EE  3001               	movlw	1
  2133     05EF                     u1115:
  2134     05EF  1003               	clrc
  2135     05F0  0CF3               	rrf	___lldiv@divisor+3,f
  2136     05F1  0CF2               	rrf	___lldiv@divisor+2,f
  2137     05F2  0CF1               	rrf	___lldiv@divisor+1,f
  2138     05F3  0CF0               	rrf	___lldiv@divisor,f
  2139     05F4  3EFF               	addlw	-1
  2140     05F5  1D03               	skipz
  2141     05F6  2DEF               	goto	u1115
  2142     05F7  3001               	movlw	1
  2143     05F8  02FD               	subwf	___lldiv@counter,f
  2144     05F9  1D03               	btfss	3,2
  2145     05FA  2DC6               	goto	l1603
  2146     05FB                     l1615:
  2147     05FB  087C               	movf	___lldiv@quotient+3,w
  2148     05FC  00F3               	movwf	?___lldiv+3
  2149     05FD  087B               	movf	___lldiv@quotient+2,w
  2150     05FE  00F2               	movwf	?___lldiv+2
  2151     05FF  087A               	movf	___lldiv@quotient+1,w
  2152     0600  00F1               	movwf	?___lldiv+1
  2153     0601  0879               	movf	___lldiv@quotient,w
  2154     0602  00F0               	movwf	?___lldiv
  2155     0603  0008               	return
  2156     0604                     __end_of___lldiv:
  2157                           
  2158                           	psect	text5
  2159     047F                     __ptext5:	
  2160 ;; *************** function _leer_x *****************
  2161 ;; Defined at:
  2162 ;;		line 24 in file "DS3231.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  address         1    wreg     unsigned char 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  address         1   11[COMMON] unsigned char 
  2167 ;;  valor           1   12[COMMON] unsigned char 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      unsigned char 
  2170 ;; Registers used:
  2171 ;;		wreg, status,2, status,0, pclath, cstack
  2172 ;; Tracked objects:
  2173 ;;		On entry : 200/100
  2174 ;;		On exit  : 300/100
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2177 ;;      Params:         0       0       0       0       0
  2178 ;;      Locals:         2       0       0       0       0
  2179 ;;      Temps:          2       0       0       0       0
  2180 ;;      Totals:         4       0       0       0       0
  2181 ;;Total ram usage:        4 bytes
  2182 ;; Hardware stack levels used: 1
  2183 ;; Hardware stack levels required when called: 2
  2184 ;; This function calls:
  2185 ;;		_I2C_Master_Read
  2186 ;;		_I2C_Master_RepeatedStart
  2187 ;;		_I2C_Master_Start
  2188 ;;		_I2C_Master_Stop
  2189 ;;		_I2C_Master_Write
  2190 ;;		_convertir
  2191 ;; This function is called by:
  2192 ;;		_main
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196     047F                     _leer_x:	
  2197                           ;psect for function _leer_x
  2198                           
  2199                           
  2200                           ;incstack = 0
  2201                           ; Regs used in _leer_x: [wreg+status,2+status,0+pclath+cstack]
  2202                           ;leer_x@address stored from wreg
  2203     047F  00FB               	movwf	leer_x@address
  2204                           
  2205                           ;DS3231.c: 25:     uint8_t valor;;DS3231.c: 26:     I2C_Master_Start();
  2206     0480  120A  118A  21CA  120A  118A  	fcall	_I2C_Master_Start
  2207                           
  2208                           ;DS3231.c: 27:     I2C_Master_Write(0xD0);
  2209     0485  30D0               	movlw	208
  2210     0486  00F0               	movwf	I2C_Master_Write@d
  2211     0487  3000               	movlw	0
  2212     0488  00F1               	movwf	I2C_Master_Write@d+1
  2213     0489  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Write
  2214                           
  2215                           ;DS3231.c: 28:     I2C_Master_Write(address);
  2216     048E  087B               	movf	leer_x@address,w
  2217     048F  00F9               	movwf	??_leer_x
  2218     0490  01FA               	clrf	??_leer_x+1
  2219     0491  0879               	movf	??_leer_x,w
  2220     0492  00F0               	movwf	I2C_Master_Write@d
  2221     0493  087A               	movf	??_leer_x+1,w
  2222     0494  00F1               	movwf	I2C_Master_Write@d+1
  2223     0495  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Write
  2224                           
  2225                           ;DS3231.c: 29:     I2C_Master_RepeatedStart();
  2226     049A  120A  118A  21D4  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2227                           
  2228                           ;DS3231.c: 30:     I2C_Master_Write(0xD1);
  2229     049F  30D1               	movlw	209
  2230     04A0  00F0               	movwf	I2C_Master_Write@d
  2231     04A1  3000               	movlw	0
  2232     04A2  00F1               	movwf	I2C_Master_Write@d+1
  2233     04A3  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Write
  2234                           
  2235                           ;DS3231.c: 31:     valor = I2C_Master_Read(0);
  2236     04A8  3000               	movlw	0
  2237     04A9  00F0               	movwf	I2C_Master_Read@a
  2238     04AA  00F1               	movwf	I2C_Master_Read@a+1
  2239     04AB  120A  118A  22B8  120A  118A  	fcall	_I2C_Master_Read
  2240     04B0  0870               	movf	?_I2C_Master_Read,w
  2241     04B1  00FC               	movwf	leer_x@valor
  2242                           
  2243                           ;DS3231.c: 32:     I2C_Master_Stop();
  2244     04B2  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Stop
  2245                           
  2246                           ;DS3231.c: 33:     valor = convertir(valor);
  2247     04B7  087C               	movf	leer_x@valor,w
  2248     04B8  120A  118A  223D   	fcall	_convertir
  2249     04BB  00FC               	movwf	leer_x@valor
  2250                           
  2251                           ;DS3231.c: 35:     return valor;
  2252     04BC  087C               	movf	leer_x@valor,w
  2253     04BD  0008               	return
  2254     04BE                     __end_of_leer_x:
  2255                           
  2256                           	psect	text6
  2257     023D                     __ptext6:	
  2258 ;; *************** function _convertir *****************
  2259 ;; Defined at:
  2260 ;;		line 5 in file "DS3231.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  valor           1    wreg     unsigned char 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  valor           1    8[COMMON] unsigned char 
  2265 ;;  conversion      1    7[COMMON] unsigned char 
  2266 ;;  decena          1    6[COMMON] unsigned char 
  2267 ;;  unidad          1    5[COMMON] unsigned char 
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  1    wreg      unsigned char 
  2270 ;; Registers used:
  2271 ;;		wreg, status,2, status,0, pclath, cstack
  2272 ;; Tracked objects:
  2273 ;;		On entry : 300/100
  2274 ;;		On exit  : 300/100
  2275 ;;		Unchanged: 300/0
  2276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2277 ;;      Params:         0       0       0       0       0
  2278 ;;      Locals:         4       0       0       0       0
  2279 ;;      Temps:          1       0       0       0       0
  2280 ;;      Totals:         5       0       0       0       0
  2281 ;;Total ram usage:        5 bytes
  2282 ;; Hardware stack levels used: 1
  2283 ;; Hardware stack levels required when called: 1
  2284 ;; This function calls:
  2285 ;;		___bmul
  2286 ;; This function is called by:
  2287 ;;		_leer_x
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291     023D                     _convertir:	
  2292                           ;psect for function _convertir
  2293                           
  2294                           
  2295                           ;incstack = 0
  2296                           ; Regs used in _convertir: [wreg+status,2+status,0+pclath+cstack]
  2297                           ;convertir@valor stored from wreg
  2298     023D  00F8               	movwf	convertir@valor
  2299                           
  2300                           ;DS3231.c: 6:     uint8_t unidad;;DS3231.c: 7:     uint8_t decena;;DS3231.c: 8:     uint
      +                          8_t conversion;;DS3231.c: 9:     unidad = valor & 0x0F;
  2301     023E  0878               	movf	convertir@valor,w
  2302     023F  390F               	andlw	15
  2303     0240  00F5               	movwf	convertir@unidad
  2304                           
  2305                           ;DS3231.c: 10:     decena = ((valor & 0xF0) >> 4);
  2306     0241  0878               	movf	convertir@valor,w
  2307     0242  00F4               	movwf	??_convertir
  2308     0243  3004               	movlw	4
  2309     0244                     u1155:
  2310     0244  1003               	clrc
  2311     0245  0CF4               	rrf	??_convertir,f
  2312     0246  3EFF               	addlw	-1
  2313     0247  1D03               	skipz
  2314     0248  2A44               	goto	u1155
  2315     0249  0874               	movf	??_convertir,w
  2316     024A  390F               	andlw	15
  2317     024B  00F6               	movwf	convertir@decena
  2318                           
  2319                           ;DS3231.c: 11:     conversion = unidad+(decena*10);
  2320     024C  300A               	movlw	10
  2321     024D  00F0               	movwf	___bmul@multiplicand
  2322     024E  0876               	movf	convertir@decena,w
  2323     024F  120A  118A  21FC   	fcall	___bmul
  2324     0252  0775               	addwf	convertir@unidad,w
  2325     0253  00F7               	movwf	convertir@conversion
  2326                           
  2327                           ;DS3231.c: 12:     return conversion;
  2328     0254  0877               	movf	convertir@conversion,w
  2329     0255  0008               	return
  2330     0256                     __end_of_convertir:
  2331                           
  2332                           	psect	text7
  2333     01FC                     __ptext7:	
  2334 ;; *************** function ___bmul *****************
  2335 ;; Defined at:
  2336 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;  multiplier      1    wreg     unsigned char 
  2339 ;;  multiplicand    1    0[COMMON] unsigned char 
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  multiplier      1    3[COMMON] unsigned char 
  2342 ;;  product         1    2[COMMON] unsigned char 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      unsigned char 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2, status,0
  2347 ;; Tracked objects:
  2348 ;;		On entry : 300/100
  2349 ;;		On exit  : 300/100
  2350 ;;		Unchanged: 300/0
  2351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2352 ;;      Params:         1       0       0       0       0
  2353 ;;      Locals:         2       0       0       0       0
  2354 ;;      Temps:          1       0       0       0       0
  2355 ;;      Totals:         4       0       0       0       0
  2356 ;;Total ram usage:        4 bytes
  2357 ;; Hardware stack levels used: 1
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		_convertir
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365     01FC                     ___bmul:	
  2366                           ;psect for function ___bmul
  2367                           
  2368                           
  2369                           ;incstack = 0
  2370                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2371                           ;___bmul@multiplier stored from wreg
  2372     01FC  00F3               	movwf	___bmul@multiplier
  2373     01FD  01F2               	clrf	___bmul@product
  2374     01FE                     l1583:
  2375     01FE  1C73               	btfss	___bmul@multiplier,0
  2376     01FF  2A04               	goto	l1587
  2377     0200  0870               	movf	___bmul@multiplicand,w
  2378     0201  00F1               	movwf	??___bmul
  2379     0202  0871               	movf	??___bmul,w
  2380     0203  07F2               	addwf	___bmul@product,f
  2381     0204                     l1587:
  2382     0204  1003               	clrc
  2383     0205  0DF0               	rlf	___bmul@multiplicand,f
  2384     0206  1003               	clrc
  2385     0207  0CF3               	rrf	___bmul@multiplier,f
  2386     0208  0873               	movf	___bmul@multiplier,w
  2387     0209  1D03               	btfss	3,2
  2388     020A  29FE               	goto	l1583
  2389     020B  0872               	movf	___bmul@product,w
  2390     020C  0008               	return
  2391     020D                     __end_of___bmul:
  2392                           
  2393                           	psect	text8
  2394     01D4                     __ptext8:	
  2395 ;; *************** function _I2C_Master_RepeatedStart *****************
  2396 ;; Defined at:
  2397 ;;		line 47 in file "I2C.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;		None
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0, pclath, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 300/0
  2408 ;;		On exit  : 300/100
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2411 ;;      Params:         0       0       0       0       0
  2412 ;;      Locals:         0       0       0       0       0
  2413 ;;      Temps:          0       0       0       0       0
  2414 ;;      Totals:         0       0       0       0       0
  2415 ;;Total ram usage:        0 bytes
  2416 ;; Hardware stack levels used: 1
  2417 ;; Hardware stack levels required when called: 1
  2418 ;; This function calls:
  2419 ;;		_I2C_Master_Wait
  2420 ;; This function is called by:
  2421 ;;		_leer_x
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425     01D4                     _I2C_Master_RepeatedStart:	
  2426                           ;psect for function _I2C_Master_RepeatedStart
  2427                           
  2428                           
  2429                           ;I2C.c: 49:     I2C_Master_Wait();
  2430                           
  2431                           ;incstack = 0
  2432                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2433     01D4  120A  118A  21E8   	fcall	_I2C_Master_Wait
  2434                           
  2435                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2436     01D7  1491               	bsf	17,1	;volatile
  2437     01D8  0008               	return
  2438     01D9                     __end_of_I2C_Master_RepeatedStart:
  2439                           
  2440                           	psect	text9
  2441     03D2                     __ptext9:	
  2442 ;; *************** function _leer_temperatura *****************
  2443 ;; Defined at:
  2444 ;;		line 256 in file "main.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;		None
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;		None
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, status,2, status,0, pclath, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 200/100
  2455 ;;		On exit  : 300/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2458 ;;      Params:         0       0       0       0       0
  2459 ;;      Locals:         0       0       0       0       0
  2460 ;;      Temps:          0       2       0       0       0
  2461 ;;      Totals:         0       2       0       0       0
  2462 ;;Total ram usage:        2 bytes
  2463 ;; Hardware stack levels used: 1
  2464 ;; Hardware stack levels required when called: 4
  2465 ;; This function calls:
  2466 ;;		_Escribir_dato
  2467 ;;		_I2C_Master_Read
  2468 ;;		_I2C_Master_Start
  2469 ;;		_I2C_Master_Stop
  2470 ;;		_I2C_Master_Write
  2471 ;; This function is called by:
  2472 ;;		_main
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476     03D2                     _leer_temperatura:	
  2477                           ;psect for function _leer_temperatura
  2478                           
  2479                           
  2480                           ;main.c: 257:     I2C_Master_Start();
  2481                           
  2482                           ;incstack = 0
  2483                           ; Regs used in _leer_temperatura: [wreg+status,2+status,0+pclath+cstack]
  2484     03D2  120A  118A  21CA  120A  118A  	fcall	_I2C_Master_Start
  2485                           
  2486                           ;main.c: 258:     I2C_Master_Write(0xa1);
  2487     03D7  30A1               	movlw	161
  2488     03D8  00F0               	movwf	I2C_Master_Write@d
  2489     03D9  3000               	movlw	0
  2490     03DA  00F1               	movwf	I2C_Master_Write@d+1
  2491     03DB  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Write
  2492                           
  2493                           ;main.c: 259:     tempint = I2C_Master_Read(0);
  2494     03E0  3000               	movlw	0
  2495     03E1  00F0               	movwf	I2C_Master_Read@a
  2496     03E2  00F1               	movwf	I2C_Master_Read@a+1
  2497     03E3  120A  118A  22B8  120A  118A  	fcall	_I2C_Master_Read
  2498     03E8  0870               	movf	?_I2C_Master_Read,w
  2499     03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2500     03EA  00B0               	movwf	_tempint
  2501                           
  2502                           ;main.c: 261:     I2C_Master_Stop();
  2503     03EB  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Stop
  2504                           
  2505                           ;main.c: 262:     _delay((unsigned long)((30)*(8000000/4000.0)));
  2506     03F0  304E               	movlw	78
  2507     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2508     03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2509     03F3  00B5               	movwf	??_leer_temperatura+1
  2510     03F4  30EA               	movlw	234
  2511     03F5  00B4               	movwf	??_leer_temperatura
  2512     03F6                     u1487:
  2513     03F6  0BB4               	decfsz	??_leer_temperatura,f
  2514     03F7  2BF6               	goto	u1487
  2515     03F8  0BB5               	decfsz	??_leer_temperatura+1,f
  2516     03F9  2BF6               	goto	u1487
  2517     03FA  0000               	nop
  2518                           
  2519                           ;main.c: 263:     Escribir_dato(tempint, 4, 2);
  2520     03FB  3004               	movlw	4
  2521     03FC  00FC               	movwf	Escribir_dato@posx
  2522     03FD  3002               	movlw	2
  2523     03FE  00FD               	movwf	Escribir_dato@posy
  2524     03FF  1283               	bcf	3,5	;RP0=0, select bank0
  2525     0400  1303               	bcf	3,6	;RP1=0, select bank0
  2526     0401  0830               	movf	_tempint,w
  2527     0402  120A  118A  2504   	fcall	_Escribir_dato
  2528     0405  0008               	return
  2529     0406                     __end_of_leer_temperatura:
  2530                           
  2531                           	psect	text10
  2532     02B8                     __ptext10:	
  2533 ;; *************** function _I2C_Master_Read *****************
  2534 ;; Defined at:
  2535 ;;		line 74 in file "I2C.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;  a               2    0[COMMON] unsigned short 
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;  temp            2    4[COMMON] unsigned short 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  2    0[COMMON] unsigned short 
  2542 ;; Registers used:
  2543 ;;		wreg, status,2, status,0, pclath, cstack
  2544 ;; Tracked objects:
  2545 ;;		On entry : 300/0
  2546 ;;		On exit  : 300/100
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2549 ;;      Params:         2       0       0       0       0
  2550 ;;      Locals:         2       0       0       0       0
  2551 ;;      Temps:          2       0       0       0       0
  2552 ;;      Totals:         6       0       0       0       0
  2553 ;;Total ram usage:        6 bytes
  2554 ;; Hardware stack levels used: 1
  2555 ;; Hardware stack levels required when called: 1
  2556 ;; This function calls:
  2557 ;;		_I2C_Master_Wait
  2558 ;; This function is called by:
  2559 ;;		_leer_temperatura
  2560 ;;		_leer_x
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564     02B8                     _I2C_Master_Read:	
  2565                           ;psect for function _I2C_Master_Read
  2566                           
  2567                           
  2568                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2569                           
  2570                           ;incstack = 0
  2571                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2572     02B8  120A  118A  21E8  120A  118A  	fcall	_I2C_Master_Wait
  2573                           
  2574                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2575     02BD  1591               	bsf	17,3	;volatile
  2576                           
  2577                           ;I2C.c: 79:     I2C_Master_Wait();
  2578     02BE  120A  118A  21E8  120A  118A  	fcall	_I2C_Master_Wait
  2579                           
  2580                           ;I2C.c: 80:     temp = SSPBUF;
  2581     02C3  1283               	bcf	3,5	;RP0=0, select bank0
  2582     02C4  0813               	movf	19,w	;volatile
  2583     02C5  00F2               	movwf	??_I2C_Master_Read
  2584     02C6  01F3               	clrf	??_I2C_Master_Read+1
  2585     02C7  0872               	movf	??_I2C_Master_Read,w
  2586     02C8  00F4               	movwf	I2C_Master_Read@temp
  2587     02C9  0873               	movf	??_I2C_Master_Read+1,w
  2588     02CA  00F5               	movwf	I2C_Master_Read@temp+1
  2589                           
  2590                           ;I2C.c: 81:     I2C_Master_Wait();
  2591     02CB  120A  118A  21E8  120A  118A  	fcall	_I2C_Master_Wait
  2592                           
  2593                           ;I2C.c: 82:     if(a == 1){
  2594     02D0  0370               	decf	I2C_Master_Read@a,w
  2595     02D1  0471               	iorwf	I2C_Master_Read@a+1,w
  2596     02D2  1D03               	btfss	3,2
  2597     02D3  2AD6               	goto	l189
  2598                           
  2599                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2600     02D4  1291               	bcf	17,5	;volatile
  2601                           
  2602                           ;I2C.c: 84:     }else{
  2603     02D5  2AD7               	goto	l190
  2604     02D6                     l189:
  2605                           
  2606                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2607     02D6  1691               	bsf	17,5	;volatile
  2608     02D7                     l190:	
  2609                           ;I2C.c: 86:     }
  2610                           
  2611                           
  2612                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2613     02D7  1611               	bsf	17,4	;volatile
  2614                           
  2615                           ;I2C.c: 88:     return temp;
  2616     02D8  0875               	movf	I2C_Master_Read@temp+1,w
  2617     02D9  00F1               	movwf	?_I2C_Master_Read+1
  2618     02DA  0874               	movf	I2C_Master_Read@temp,w
  2619     02DB  00F0               	movwf	?_I2C_Master_Read
  2620     02DC  0008               	return
  2621     02DD                     __end_of_I2C_Master_Read:
  2622                           
  2623                           	psect	text11
  2624     0504                     __ptext11:	
  2625 ;; *************** function _Escribir_dato *****************
  2626 ;; Defined at:
  2627 ;;		line 247 in file "main.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  dato            1    wreg     unsigned char 
  2630 ;;  posx            1   12[COMMON] unsigned char 
  2631 ;;  posy            1   13[COMMON] unsigned char 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  dato            1    0[BANK0 ] unsigned char 
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2, status,0, pclath, cstack
  2638 ;; Tracked objects:
  2639 ;;		On entry : 200/0
  2640 ;;		On exit  : 300/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2643 ;;      Params:         2       0       0       0       0
  2644 ;;      Locals:         0       1       0       0       0
  2645 ;;      Temps:          0       0       0       0       0
  2646 ;;      Totals:         2       1       0       0       0
  2647 ;;Total ram usage:        3 bytes
  2648 ;; Hardware stack levels used: 1
  2649 ;; Hardware stack levels required when called: 3
  2650 ;; This function calls:
  2651 ;;		_Lcd_Set_Cursor
  2652 ;;		_Lcd_Write_Char
  2653 ;;		_descomponer
  2654 ;;		_inttochar
  2655 ;; This function is called by:
  2656 ;;		_main
  2657 ;;		_leer_temperatura
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661     0504                     _Escribir_dato:	
  2662                           ;psect for function _Escribir_dato
  2663                           
  2664                           
  2665                           ;incstack = 0
  2666                           ; Regs used in _Escribir_dato: [wreg+status,2+status,0+pclath+cstack]
  2667                           ;Escribir_dato@dato stored from wreg
  2668     0504  1283               	bcf	3,5	;RP0=0, select bank0
  2669     0505  00B3               	movwf	Escribir_dato@dato
  2670                           
  2671                           ;main.c: 248:     Lcd_Set_Cursor(posy, posx+1);
  2672     0506  087C               	movf	Escribir_dato@posx,w
  2673     0507  3E01               	addlw	1
  2674     0508  00F4               	movwf	Lcd_Set_Cursor@b
  2675     0509  087D               	movf	Escribir_dato@posy,w
  2676     050A  120A  118A  2441  120A  118A  	fcall	_Lcd_Set_Cursor
  2677                           
  2678                           ;main.c: 249:     unidad = inttochar(descomponer(0, dato));
  2679     050F  3000               	movlw	0
  2680     0510  00F6               	movwf	descomponer@pos
  2681     0511  00F7               	movwf	descomponer@pos+1
  2682     0512  1283               	bcf	3,5	;RP0=0, select bank0
  2683     0513  1303               	bcf	3,6	;RP1=0, select bank0
  2684     0514  0833               	movf	Escribir_dato@dato,w
  2685     0515  00F8               	movwf	descomponer@num
  2686     0516  120A  118A  239F  120A  118A  	fcall	_descomponer
  2687     051B  120A  118A  2406  120A  118A  	fcall	_inttochar
  2688     0520  1283               	bcf	3,5	;RP0=0, select bank0
  2689     0521  1303               	bcf	3,6	;RP1=0, select bank0
  2690     0522  00B2               	movwf	_unidad
  2691                           
  2692                           ;main.c: 250:     Lcd_Write_Char(unidad);
  2693     0523  0832               	movf	_unidad,w
  2694     0524  120A  118A  230A  120A  118A  	fcall	_Lcd_Write_Char
  2695                           
  2696                           ;main.c: 251:     Lcd_Set_Cursor(posy, posx);
  2697     0529  087C               	movf	Escribir_dato@posx,w
  2698     052A  00F4               	movwf	Lcd_Set_Cursor@b
  2699     052B  087D               	movf	Escribir_dato@posy,w
  2700     052C  120A  118A  2441  120A  118A  	fcall	_Lcd_Set_Cursor
  2701                           
  2702                           ;main.c: 252:     decena = inttochar(descomponer(1, dato));
  2703     0531  3001               	movlw	1
  2704     0532  00F6               	movwf	descomponer@pos
  2705     0533  3000               	movlw	0
  2706     0534  00F7               	movwf	descomponer@pos+1
  2707     0535  1283               	bcf	3,5	;RP0=0, select bank0
  2708     0536  1303               	bcf	3,6	;RP1=0, select bank0
  2709     0537  0833               	movf	Escribir_dato@dato,w
  2710     0538  00F8               	movwf	descomponer@num
  2711     0539  120A  118A  239F  120A  118A  	fcall	_descomponer
  2712     053E  120A  118A  2406  120A  118A  	fcall	_inttochar
  2713     0543  1283               	bcf	3,5	;RP0=0, select bank0
  2714     0544  1303               	bcf	3,6	;RP1=0, select bank0
  2715     0545  00B1               	movwf	_decena
  2716                           
  2717                           ;main.c: 253:     Lcd_Write_Char(decena);
  2718     0546  0831               	movf	_decena,w
  2719     0547  120A  118A  230A   	fcall	_Lcd_Write_Char
  2720     054A  0008               	return
  2721     054B                     __end_of_Escribir_dato:
  2722                           
  2723                           	psect	text12
  2724     0406                     __ptext12:	
  2725 ;; *************** function _inttochar *****************
  2726 ;; Defined at:
  2727 ;;		line 12 in file "conversiones.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  num             1    wreg     unsigned char 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  num             1    0[COMMON] unsigned char 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      unsigned char 
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2741 ;;      Params:         0       0       0       0       0
  2742 ;;      Locals:         1       0       0       0       0
  2743 ;;      Temps:          0       0       0       0       0
  2744 ;;      Totals:         1       0       0       0       0
  2745 ;;Total ram usage:        1 bytes
  2746 ;; Hardware stack levels used: 1
  2747 ;; This function calls:
  2748 ;;		Nothing
  2749 ;; This function is called by:
  2750 ;;		_Escribir_dato
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754     0406                     _inttochar:	
  2755                           ;psect for function _inttochar
  2756                           
  2757                           
  2758                           ;incstack = 0
  2759                           ; Regs used in _inttochar: [wreg+status,2+status,0]
  2760                           ;inttochar@num stored from wreg
  2761     0406  00F0               	movwf	inttochar@num
  2762                           
  2763                           ;conversiones.c: 13:     if(num == 0){
  2764     0407  0870               	movf	inttochar@num,w
  2765     0408  1D03               	btfss	3,2
  2766     0409  2C0C               	goto	l1507
  2767                           
  2768                           ;conversiones.c: 14:         return '0';
  2769     040A  3030               	movlw	48
  2770     040B  0008               	return
  2771     040C                     l1507:
  2772     040C  0370               	decf	inttochar@num,w
  2773     040D  1D03               	btfss	3,2
  2774     040E  2C11               	goto	l1515
  2775                           
  2776                           ;conversiones.c: 17:         return '1';
  2777     040F  3031               	movlw	49
  2778     0410  0008               	return
  2779     0411                     l1515:
  2780     0411  3002               	movlw	2
  2781     0412  0670               	xorwf	inttochar@num,w
  2782     0413  1D03               	btfss	3,2
  2783     0414  2C17               	goto	l1523
  2784                           
  2785                           ;conversiones.c: 20:         return '2';
  2786     0415  3032               	movlw	50
  2787     0416  0008               	return
  2788     0417                     l1523:
  2789     0417  3003               	movlw	3
  2790     0418  0670               	xorwf	inttochar@num,w
  2791     0419  1D03               	btfss	3,2
  2792     041A  2C1D               	goto	l1531
  2793                           
  2794                           ;conversiones.c: 23:         return '3';
  2795     041B  3033               	movlw	51
  2796     041C  0008               	return
  2797     041D                     l1531:
  2798     041D  3004               	movlw	4
  2799     041E  0670               	xorwf	inttochar@num,w
  2800     041F  1D03               	btfss	3,2
  2801     0420  2C23               	goto	l1539
  2802                           
  2803                           ;conversiones.c: 26:         return '4';
  2804     0421  3034               	movlw	52
  2805     0422  0008               	return
  2806     0423                     l1539:
  2807     0423  3005               	movlw	5
  2808     0424  0670               	xorwf	inttochar@num,w
  2809     0425  1D03               	btfss	3,2
  2810     0426  2C29               	goto	l1547
  2811                           
  2812                           ;conversiones.c: 29:         return '5';
  2813     0427  3035               	movlw	53
  2814     0428  0008               	return
  2815     0429                     l1547:
  2816     0429  3006               	movlw	6
  2817     042A  0670               	xorwf	inttochar@num,w
  2818     042B  1D03               	btfss	3,2
  2819     042C  2C2F               	goto	l1555
  2820                           
  2821                           ;conversiones.c: 32:         return '6';
  2822     042D  3036               	movlw	54
  2823     042E  0008               	return
  2824     042F                     l1555:
  2825     042F  3007               	movlw	7
  2826     0430  0670               	xorwf	inttochar@num,w
  2827     0431  1D03               	btfss	3,2
  2828     0432  2C35               	goto	l1563
  2829                           
  2830                           ;conversiones.c: 35:         return '7';
  2831     0433  3037               	movlw	55
  2832     0434  0008               	return
  2833     0435                     l1563:
  2834     0435  3008               	movlw	8
  2835     0436  0670               	xorwf	inttochar@num,w
  2836     0437  1D03               	btfss	3,2
  2837     0438  2C3B               	goto	l1571
  2838                           
  2839                           ;conversiones.c: 38:         return '8';
  2840     0439  3038               	movlw	56
  2841     043A  0008               	return
  2842     043B                     l1571:
  2843     043B  3009               	movlw	9
  2844     043C  0670               	xorwf	inttochar@num,w
  2845     043D  1D03               	btfss	3,2
  2846     043E  0008               	return
  2847                           
  2848                           ;conversiones.c: 41:         return '9';
  2849     043F  3039               	movlw	57
  2850     0440  0008               	return
  2851     0441                     __end_of_inttochar:
  2852                           
  2853                           	psect	text13
  2854     039F                     __ptext13:	
  2855 ;; *************** function _descomponer *****************
  2856 ;; Defined at:
  2857 ;;		line 45 in file "conversiones.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  pos             2    6[COMMON] int 
  2860 ;;  num             1    8[COMMON] unsigned char 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  dec             1   11[COMMON] unsigned char 
  2863 ;;  uni             1   10[COMMON] unsigned char 
  2864 ;;  cent            1    9[COMMON] unsigned char 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1    wreg      unsigned char 
  2867 ;; Registers used:
  2868 ;;		wreg, status,2, status,0, pclath, cstack
  2869 ;; Tracked objects:
  2870 ;;		On entry : 300/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2874 ;;      Params:         3       0       0       0       0
  2875 ;;      Locals:         3       0       0       0       0
  2876 ;;      Temps:          0       0       0       0       0
  2877 ;;      Totals:         6       0       0       0       0
  2878 ;;Total ram usage:        6 bytes
  2879 ;; Hardware stack levels used: 1
  2880 ;; Hardware stack levels required when called: 1
  2881 ;; This function calls:
  2882 ;;		___lbdiv
  2883 ;;		___lbmod
  2884 ;; This function is called by:
  2885 ;;		_Escribir_dato
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889     039F                     _descomponer:	
  2890                           ;psect for function _descomponer
  2891                           
  2892                           
  2893                           ;conversiones.c: 46:     uint8_t cent;;conversiones.c: 47:     uint8_t dec;;conversiones
      +                          .c: 48:     uint8_t uni;;conversiones.c: 49:     cent = (num/100);
  2894                           
  2895                           ;incstack = 0
  2896                           ; Regs used in _descomponer: [wreg+status,2+status,0+pclath+cstack]
  2897     039F  3064               	movlw	100
  2898     03A0  00F0               	movwf	___lbdiv@divisor
  2899     03A1  0878               	movf	descomponer@num,w
  2900     03A2  120A  118A  2275  120A  118A  	fcall	___lbdiv
  2901     03A7  00F9               	movwf	descomponer@cent
  2902                           
  2903                           ;conversiones.c: 50:     dec = (num%100);
  2904     03A8  3064               	movlw	100
  2905     03A9  00F0               	movwf	___lbmod@divisor
  2906     03AA  0878               	movf	descomponer@num,w
  2907     03AB  120A  118A  2256  120A  118A  	fcall	___lbmod
  2908     03B0  00FB               	movwf	descomponer@dec
  2909                           
  2910                           ;conversiones.c: 51:     uni = (dec%10);
  2911     03B1  300A               	movlw	10
  2912     03B2  00F0               	movwf	___lbmod@divisor
  2913     03B3  087B               	movf	descomponer@dec,w
  2914     03B4  120A  118A  2256  120A  118A  	fcall	___lbmod
  2915     03B9  00FA               	movwf	descomponer@uni
  2916                           
  2917                           ;conversiones.c: 52:     if(pos == 2){
  2918     03BA  3002               	movlw	2
  2919     03BB  0676               	xorwf	descomponer@pos,w
  2920     03BC  0477               	iorwf	descomponer@pos+1,w
  2921     03BD  1D03               	btfss	3,2
  2922     03BE  2BC1               	goto	l1485
  2923                           
  2924                           ;conversiones.c: 53:         return cent;
  2925     03BF  0879               	movf	descomponer@cent,w
  2926     03C0  0008               	return
  2927     03C1                     l1485:
  2928     03C1  0376               	decf	descomponer@pos,w
  2929     03C2  0477               	iorwf	descomponer@pos+1,w
  2930     03C3  1D03               	btfss	3,2
  2931     03C4  2BCC               	goto	l1493
  2932                           
  2933                           ;conversiones.c: 56:         return (dec/10);
  2934     03C5  300A               	movlw	10
  2935     03C6  00F0               	movwf	___lbdiv@divisor
  2936     03C7  087B               	movf	descomponer@dec,w
  2937     03C8  120A  118A  2275   	fcall	___lbdiv
  2938     03CB  0008               	return
  2939     03CC                     l1493:
  2940     03CC  0876               	movf	descomponer@pos,w
  2941     03CD  0477               	iorwf	descomponer@pos+1,w
  2942     03CE  1D03               	btfss	3,2
  2943     03CF  0008               	return
  2944                           
  2945                           ;conversiones.c: 59:         return uni;
  2946     03D0  087A               	movf	descomponer@uni,w
  2947     03D1  0008               	return
  2948     03D2                     __end_of_descomponer:
  2949                           
  2950                           	psect	text14
  2951     0256                     __ptext14:	
  2952 ;; *************** function ___lbmod *****************
  2953 ;; Defined at:
  2954 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  dividend        1    wreg     unsigned char 
  2957 ;;  divisor         1    0[COMMON] unsigned char 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  dividend        1    3[COMMON] unsigned char 
  2960 ;;  rem             1    5[COMMON] unsigned char 
  2961 ;;  counter         1    4[COMMON] unsigned char 
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      unsigned char 
  2964 ;; Registers used:
  2965 ;;		wreg, status,2, status,0
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2971 ;;      Params:         1       0       0       0       0
  2972 ;;      Locals:         3       0       0       0       0
  2973 ;;      Temps:          2       0       0       0       0
  2974 ;;      Totals:         6       0       0       0       0
  2975 ;;Total ram usage:        6 bytes
  2976 ;; Hardware stack levels used: 1
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_descomponer
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984     0256                     ___lbmod:	
  2985                           ;psect for function ___lbmod
  2986                           
  2987                           
  2988                           ;incstack = 0
  2989                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  2990                           ;___lbmod@dividend stored from wreg
  2991     0256  00F3               	movwf	___lbmod@dividend
  2992     0257  3008               	movlw	8
  2993     0258  00F4               	movwf	___lbmod@counter
  2994     0259  01F5               	clrf	___lbmod@rem
  2995     025A                     l1423:
  2996     025A  0873               	movf	___lbmod@dividend,w
  2997     025B  00F1               	movwf	??___lbmod
  2998     025C  3007               	movlw	7
  2999     025D                     u815:
  3000     025D  1003               	clrc
  3001     025E  0CF1               	rrf	??___lbmod,f
  3002     025F  3EFF               	addlw	-1
  3003     0260  1D03               	skipz
  3004     0261  2A5D               	goto	u815
  3005     0262  0875               	movf	___lbmod@rem,w
  3006     0263  00F2               	movwf	??___lbmod+1
  3007     0264  0772               	addwf	??___lbmod+1,w
  3008     0265  0471               	iorwf	??___lbmod,w
  3009     0266  00F5               	movwf	___lbmod@rem
  3010     0267  1003               	clrc
  3011     0268  0DF3               	rlf	___lbmod@dividend,f
  3012     0269  0870               	movf	___lbmod@divisor,w
  3013     026A  0275               	subwf	___lbmod@rem,w
  3014     026B  1C03               	skipc
  3015     026C  2A6F               	goto	l579
  3016     026D  0870               	movf	___lbmod@divisor,w
  3017     026E  02F5               	subwf	___lbmod@rem,f
  3018     026F                     l579:
  3019     026F  3001               	movlw	1
  3020     0270  02F4               	subwf	___lbmod@counter,f
  3021     0271  1D03               	btfss	3,2
  3022     0272  2A5A               	goto	l1423
  3023     0273  0875               	movf	___lbmod@rem,w
  3024     0274  0008               	return
  3025     0275                     __end_of___lbmod:
  3026                           
  3027                           	psect	text15
  3028     0275                     __ptext15:	
  3029 ;; *************** function ___lbdiv *****************
  3030 ;; Defined at:
  3031 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  dividend        1    wreg     unsigned char 
  3034 ;;  divisor         1    0[COMMON] unsigned char 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  dividend        1    2[COMMON] unsigned char 
  3037 ;;  quotient        1    4[COMMON] unsigned char 
  3038 ;;  counter         1    3[COMMON] unsigned char 
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      unsigned char 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2, status,0
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3048 ;;      Params:         1       0       0       0       0
  3049 ;;      Locals:         3       0       0       0       0
  3050 ;;      Temps:          1       0       0       0       0
  3051 ;;      Totals:         5       0       0       0       0
  3052 ;;Total ram usage:        5 bytes
  3053 ;; Hardware stack levels used: 1
  3054 ;; This function calls:
  3055 ;;		Nothing
  3056 ;; This function is called by:
  3057 ;;		_descomponer
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061     0275                     ___lbdiv:	
  3062                           ;psect for function ___lbdiv
  3063                           
  3064                           
  3065                           ;incstack = 0
  3066                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  3067                           ;___lbdiv@dividend stored from wreg
  3068     0275  00F2               	movwf	___lbdiv@dividend
  3069     0276  01F4               	clrf	___lbdiv@quotient
  3070     0277  0870               	movf	___lbdiv@divisor,w
  3071     0278  1903               	btfsc	3,2
  3072     0279  2A94               	goto	l1415
  3073     027A  01F3               	clrf	___lbdiv@counter
  3074     027B  0AF3               	incf	___lbdiv@counter,f
  3075     027C                     l1403:
  3076     027C  1BF0               	btfsc	___lbdiv@divisor,7
  3077     027D  2A85               	goto	l1405
  3078     027E  1003               	clrc
  3079     027F  0DF0               	rlf	___lbdiv@divisor,f
  3080     0280  3001               	movlw	1
  3081     0281  00F1               	movwf	??___lbdiv
  3082     0282  0871               	movf	??___lbdiv,w
  3083     0283  07F3               	addwf	___lbdiv@counter,f
  3084     0284  2A7C               	goto	l1403
  3085     0285                     l1405:
  3086     0285  1003               	clrc
  3087     0286  0DF4               	rlf	___lbdiv@quotient,f
  3088     0287  0870               	movf	___lbdiv@divisor,w
  3089     0288  0272               	subwf	___lbdiv@dividend,w
  3090     0289  1C03               	skipc
  3091     028A  2A8F               	goto	L2
  3092     028B  0870               	movf	___lbdiv@divisor,w
  3093     028C  02F2               	subwf	___lbdiv@dividend,f
  3094     028D  1474               	bsf	___lbdiv@quotient,0
  3095     028E  1003               	clrc
  3096     028F                     L2:
  3097     028F  0CF0               	rrf	___lbdiv@divisor,f
  3098     0290  3001               	movlw	1
  3099     0291  02F3               	subwf	___lbdiv@counter,f
  3100     0292  1D03               	btfss	3,2
  3101     0293  2A85               	goto	l1405
  3102     0294                     l1415:
  3103     0294  0874               	movf	___lbdiv@quotient,w
  3104     0295  0008               	return
  3105     0296                     __end_of___lbdiv:
  3106                           
  3107                           	psect	text16
  3108     0441                     __ptext16:	
  3109 ;; *************** function _Lcd_Set_Cursor *****************
  3110 ;; Defined at:
  3111 ;;		line 48 in file "LCD.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;  a               1    wreg     unsigned char 
  3114 ;;  b               1    4[COMMON] unsigned char 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;  a               1    6[COMMON] unsigned char 
  3117 ;;  temp            1    9[COMMON] unsigned char 
  3118 ;;  y               1    8[COMMON] unsigned char 
  3119 ;;  z               1    7[COMMON] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0, pclath, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3129 ;;      Params:         1       0       0       0       0
  3130 ;;      Locals:         4       0       0       0       0
  3131 ;;      Temps:          1       0       0       0       0
  3132 ;;      Totals:         6       0       0       0       0
  3133 ;;Total ram usage:        6 bytes
  3134 ;; Hardware stack levels used: 1
  3135 ;; Hardware stack levels required when called: 2
  3136 ;; This function calls:
  3137 ;;		_Lcd_Cmd
  3138 ;; This function is called by:
  3139 ;;		_main
  3140 ;;		_Escribir_dato
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144     0441                     _Lcd_Set_Cursor:	
  3145                           ;psect for function _Lcd_Set_Cursor
  3146                           
  3147                           
  3148                           ;incstack = 0
  3149                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3150                           ;Lcd_Set_Cursor@a stored from wreg
  3151     0441  00F6               	movwf	Lcd_Set_Cursor@a
  3152                           
  3153                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  3154     0442  0376               	decf	Lcd_Set_Cursor@a,w
  3155     0443  1D03               	btfss	3,2
  3156     0444  2C60               	goto	l1445
  3157                           
  3158                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  3159     0445  0874               	movf	Lcd_Set_Cursor@b,w
  3160     0446  3E7F               	addlw	127
  3161     0447  00F9               	movwf	Lcd_Set_Cursor@temp
  3162                           
  3163                           ;LCD.c: 52:         z = temp >> 4;
  3164     0448  0879               	movf	Lcd_Set_Cursor@temp,w
  3165     0449  00F5               	movwf	??_Lcd_Set_Cursor
  3166     044A  3004               	movlw	4
  3167     044B                     u855:
  3168     044B  1003               	clrc
  3169     044C  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3170     044D  3EFF               	addlw	-1
  3171     044E  1D03               	skipz
  3172     044F  2C4B               	goto	u855
  3173     0450  0875               	movf	??_Lcd_Set_Cursor,w
  3174     0451  00F7               	movwf	Lcd_Set_Cursor@z
  3175                           
  3176                           ;LCD.c: 53:         y = temp & 0x0F;
  3177     0452  0879               	movf	Lcd_Set_Cursor@temp,w
  3178     0453  390F               	andlw	15
  3179     0454  00F8               	movwf	Lcd_Set_Cursor@y
  3180                           
  3181                           ;LCD.c: 54:         Lcd_Cmd(z);
  3182     0455  0877               	movf	Lcd_Set_Cursor@z,w
  3183     0456  120A  118A  2225  120A  118A  	fcall	_Lcd_Cmd
  3184                           
  3185                           ;LCD.c: 55:         Lcd_Cmd(y);
  3186     045B  0878               	movf	Lcd_Set_Cursor@y,w
  3187     045C  120A  118A  2225   	fcall	_Lcd_Cmd
  3188                           
  3189                           ;LCD.c: 56:     } else if (a == 2) {
  3190     045F  0008               	return
  3191     0460                     l1445:
  3192     0460  3002               	movlw	2
  3193     0461  0676               	xorwf	Lcd_Set_Cursor@a,w
  3194     0462  1D03               	btfss	3,2
  3195     0463  0008               	return
  3196                           
  3197                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  3198     0464  0874               	movf	Lcd_Set_Cursor@b,w
  3199     0465  3EBF               	addlw	191
  3200     0466  00F9               	movwf	Lcd_Set_Cursor@temp
  3201                           
  3202                           ;LCD.c: 58:         z = temp >> 4;
  3203     0467  0879               	movf	Lcd_Set_Cursor@temp,w
  3204     0468  00F5               	movwf	??_Lcd_Set_Cursor
  3205     0469  3004               	movlw	4
  3206     046A                     u875:
  3207     046A  1003               	clrc
  3208     046B  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3209     046C  3EFF               	addlw	-1
  3210     046D  1D03               	skipz
  3211     046E  2C6A               	goto	u875
  3212     046F  0875               	movf	??_Lcd_Set_Cursor,w
  3213     0470  00F7               	movwf	Lcd_Set_Cursor@z
  3214                           
  3215                           ;LCD.c: 59:         y = temp & 0x0F;
  3216     0471  0879               	movf	Lcd_Set_Cursor@temp,w
  3217     0472  390F               	andlw	15
  3218     0473  00F8               	movwf	Lcd_Set_Cursor@y
  3219                           
  3220                           ;LCD.c: 60:         Lcd_Cmd(z);
  3221     0474  0877               	movf	Lcd_Set_Cursor@z,w
  3222     0475  120A  118A  2225  120A  118A  	fcall	_Lcd_Cmd
  3223                           
  3224                           ;LCD.c: 61:         Lcd_Cmd(y);
  3225     047A  0878               	movf	Lcd_Set_Cursor@y,w
  3226     047B  120A  118A  2225   	fcall	_Lcd_Cmd
  3227     047E  0008               	return
  3228     047F                     __end_of_Lcd_Set_Cursor:
  3229                           
  3230                           	psect	text17
  3231     036C                     __ptext17:	
  3232 ;; *************** function _enviar_x *****************
  3233 ;; Defined at:
  3234 ;;		line 38 in file "DS3231.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  val1            1    wreg     unsigned char 
  3237 ;;  val2            1    2[COMMON] unsigned char 
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;  val1            1    5[COMMON] unsigned char 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      void 
  3242 ;; Registers used:
  3243 ;;		wreg, status,2, status,0, pclath, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 300/0
  3246 ;;		On exit  : 300/100
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3249 ;;      Params:         1       0       0       0       0
  3250 ;;      Locals:         1       0       0       0       0
  3251 ;;      Temps:          2       0       0       0       0
  3252 ;;      Totals:         4       0       0       0       0
  3253 ;;Total ram usage:        4 bytes
  3254 ;; Hardware stack levels used: 1
  3255 ;; Hardware stack levels required when called: 2
  3256 ;; This function calls:
  3257 ;;		_I2C_Master_Start
  3258 ;;		_I2C_Master_Stop
  3259 ;;		_I2C_Master_Write
  3260 ;; This function is called by:
  3261 ;;		_main
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265     036C                     _enviar_x:	
  3266                           ;psect for function _enviar_x
  3267                           
  3268                           
  3269                           ;incstack = 0
  3270                           ; Regs used in _enviar_x: [wreg+status,2+status,0+pclath+cstack]
  3271                           ;enviar_x@val1 stored from wreg
  3272     036C  00F5               	movwf	enviar_x@val1
  3273                           
  3274                           ;DS3231.c: 39:     I2C_Master_Start();
  3275     036D  120A  118A  21CA  120A  118A  	fcall	_I2C_Master_Start
  3276                           
  3277                           ;DS3231.c: 40:     I2C_Master_Write(0xD0);
  3278     0372  30D0               	movlw	208
  3279     0373  00F0               	movwf	I2C_Master_Write@d
  3280     0374  3000               	movlw	0
  3281     0375  00F1               	movwf	I2C_Master_Write@d+1
  3282     0376  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Write
  3283                           
  3284                           ;DS3231.c: 41:     I2C_Master_Write(0);
  3285     037B  3000               	movlw	0
  3286     037C  00F0               	movwf	I2C_Master_Write@d
  3287     037D  00F1               	movwf	I2C_Master_Write@d+1
  3288     037E  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Write
  3289                           
  3290                           ;DS3231.c: 42:     I2C_Master_Write(val1);
  3291     0383  0875               	movf	enviar_x@val1,w
  3292     0384  00F3               	movwf	??_enviar_x
  3293     0385  01F4               	clrf	??_enviar_x+1
  3294     0386  0873               	movf	??_enviar_x,w
  3295     0387  00F0               	movwf	I2C_Master_Write@d
  3296     0388  0874               	movf	??_enviar_x+1,w
  3297     0389  00F1               	movwf	I2C_Master_Write@d+1
  3298     038A  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Write
  3299                           
  3300                           ;DS3231.c: 43:     I2C_Master_Write(val2);
  3301     038F  0872               	movf	enviar_x@val2,w
  3302     0390  00F3               	movwf	??_enviar_x
  3303     0391  01F4               	clrf	??_enviar_x+1
  3304     0392  0873               	movf	??_enviar_x,w
  3305     0393  00F0               	movwf	I2C_Master_Write@d
  3306     0394  0874               	movf	??_enviar_x+1,w
  3307     0395  00F1               	movwf	I2C_Master_Write@d+1
  3308     0396  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Write
  3309                           
  3310                           ;DS3231.c: 44:     I2C_Master_Stop();
  3311     039B  120A  118A  21CF   	fcall	_I2C_Master_Stop
  3312     039E  0008               	return
  3313     039F                     __end_of_enviar_x:
  3314                           
  3315                           	psect	text18
  3316     01D9                     __ptext18:	
  3317 ;; *************** function _I2C_Master_Write *****************
  3318 ;; Defined at:
  3319 ;;		line 65 in file "I2C.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;  d               2    0[COMMON] unsigned int 
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;		None
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      void 
  3326 ;; Registers used:
  3327 ;;		wreg, status,2, status,0, pclath, cstack
  3328 ;; Tracked objects:
  3329 ;;		On entry : 200/100
  3330 ;;		On exit  : 300/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3333 ;;      Params:         2       0       0       0       0
  3334 ;;      Locals:         0       0       0       0       0
  3335 ;;      Temps:          0       0       0       0       0
  3336 ;;      Totals:         2       0       0       0       0
  3337 ;;Total ram usage:        2 bytes
  3338 ;; Hardware stack levels used: 1
  3339 ;; Hardware stack levels required when called: 1
  3340 ;; This function calls:
  3341 ;;		_I2C_Master_Wait
  3342 ;; This function is called by:
  3343 ;;		_main
  3344 ;;		_leer_temperatura
  3345 ;;		_leer_x
  3346 ;;		_enviar_x
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350     01D9                     _I2C_Master_Write:	
  3351                           ;psect for function _I2C_Master_Write
  3352                           
  3353                           
  3354                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3355                           
  3356                           ;incstack = 0
  3357                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3358     01D9  120A  118A  21E8   	fcall	_I2C_Master_Wait
  3359                           
  3360                           ;I2C.c: 68:     SSPBUF = d;
  3361     01DC  0870               	movf	I2C_Master_Write@d,w
  3362     01DD  1283               	bcf	3,5	;RP0=0, select bank0
  3363     01DE  0093               	movwf	19	;volatile
  3364     01DF  0008               	return
  3365     01E0                     __end_of_I2C_Master_Write:
  3366                           
  3367                           	psect	text19
  3368     01CF                     __ptext19:	
  3369 ;; *************** function _I2C_Master_Stop *****************
  3370 ;; Defined at:
  3371 ;;		line 55 in file "I2C.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;		None
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;		None
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  1    wreg      void 
  3378 ;; Registers used:
  3379 ;;		wreg, status,2, status,0, pclath, cstack
  3380 ;; Tracked objects:
  3381 ;;		On entry : 200/0
  3382 ;;		On exit  : 300/100
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3385 ;;      Params:         0       0       0       0       0
  3386 ;;      Locals:         0       0       0       0       0
  3387 ;;      Temps:          0       0       0       0       0
  3388 ;;      Totals:         0       0       0       0       0
  3389 ;;Total ram usage:        0 bytes
  3390 ;; Hardware stack levels used: 1
  3391 ;; Hardware stack levels required when called: 1
  3392 ;; This function calls:
  3393 ;;		_I2C_Master_Wait
  3394 ;; This function is called by:
  3395 ;;		_main
  3396 ;;		_leer_temperatura
  3397 ;;		_leer_x
  3398 ;;		_enviar_x
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402     01CF                     _I2C_Master_Stop:	
  3403                           ;psect for function _I2C_Master_Stop
  3404                           
  3405                           
  3406                           ;I2C.c: 57:     I2C_Master_Wait();
  3407                           
  3408                           ;incstack = 0
  3409                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3410     01CF  120A  118A  21E8   	fcall	_I2C_Master_Wait
  3411                           
  3412                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3413     01D2  1511               	bsf	17,2	;volatile
  3414     01D3  0008               	return
  3415     01D4                     __end_of_I2C_Master_Stop:
  3416                           
  3417                           	psect	text20
  3418     01CA                     __ptext20:	
  3419 ;; *************** function _I2C_Master_Start *****************
  3420 ;; Defined at:
  3421 ;;		line 39 in file "I2C.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;		None
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;		None
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      void 
  3428 ;; Registers used:
  3429 ;;		wreg, status,2, status,0, pclath, cstack
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 300/100
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3435 ;;      Params:         0       0       0       0       0
  3436 ;;      Locals:         0       0       0       0       0
  3437 ;;      Temps:          0       0       0       0       0
  3438 ;;      Totals:         0       0       0       0       0
  3439 ;;Total ram usage:        0 bytes
  3440 ;; Hardware stack levels used: 1
  3441 ;; Hardware stack levels required when called: 1
  3442 ;; This function calls:
  3443 ;;		_I2C_Master_Wait
  3444 ;; This function is called by:
  3445 ;;		_main
  3446 ;;		_leer_temperatura
  3447 ;;		_leer_x
  3448 ;;		_enviar_x
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452     01CA                     _I2C_Master_Start:	
  3453                           ;psect for function _I2C_Master_Start
  3454                           
  3455                           
  3456                           ;I2C.c: 41:     I2C_Master_Wait();
  3457                           
  3458                           ;incstack = 0
  3459                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3460     01CA  120A  118A  21E8   	fcall	_I2C_Master_Wait
  3461                           
  3462                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3463     01CD  1411               	bsf	17,0	;volatile
  3464     01CE  0008               	return
  3465     01CF                     __end_of_I2C_Master_Start:
  3466                           
  3467                           	psect	text21
  3468     01E8                     __ptext21:	
  3469 ;; *************** function _I2C_Master_Wait *****************
  3470 ;; Defined at:
  3471 ;;		line 32 in file "I2C.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;		None
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;		None
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  1    wreg      void 
  3478 ;; Registers used:
  3479 ;;		wreg, status,2
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 300/100
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3485 ;;      Params:         0       0       0       0       0
  3486 ;;      Locals:         0       0       0       0       0
  3487 ;;      Temps:          0       0       0       0       0
  3488 ;;      Totals:         0       0       0       0       0
  3489 ;;Total ram usage:        0 bytes
  3490 ;; Hardware stack levels used: 1
  3491 ;; This function calls:
  3492 ;;		Nothing
  3493 ;; This function is called by:
  3494 ;;		_I2C_Master_Start
  3495 ;;		_I2C_Master_RepeatedStart
  3496 ;;		_I2C_Master_Stop
  3497 ;;		_I2C_Master_Write
  3498 ;;		_I2C_Master_Read
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502     01E8                     _I2C_Master_Wait:	
  3503                           ;psect for function _I2C_Master_Wait
  3504                           
  3505     01E8                     l171:	
  3506                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3507                           
  3508                           ;incstack = 0
  3509                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3510                           
  3511     01E8  1683               	bsf	3,5	;RP0=1, select bank1
  3512     01E9  1303               	bcf	3,6	;RP1=0, select bank1
  3513     01EA  1914               	btfsc	20,2	;volatile
  3514     01EB  29E8               	goto	l171
  3515     01EC  0811               	movf	17,w	;volatile
  3516     01ED  391F               	andlw	31
  3517     01EE  1903               	btfsc	3,2
  3518     01EF  0008               	return
  3519     01F0  29E8               	goto	l171
  3520     01F1                     __end_of_I2C_Master_Wait:
  3521                           
  3522                           	psect	text22
  3523     0296                     __ptext22:	
  3524 ;; *************** function _Lcd_Write_String *****************
  3525 ;; Defined at:
  3526 ;;		line 98 in file "LCD.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  a               1    wreg     PTR unsigned char 
  3529 ;;		 -> STR_2(8), STR_1(6), 
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  a               1    7[COMMON] PTR unsigned char 
  3532 ;;		 -> STR_2(8), STR_1(6), 
  3533 ;;  i               2    5[COMMON] int 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  1    wreg      void 
  3536 ;; Registers used:
  3537 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3543 ;;      Params:         0       0       0       0       0
  3544 ;;      Locals:         3       0       0       0       0
  3545 ;;      Temps:          0       0       0       0       0
  3546 ;;      Totals:         3       0       0       0       0
  3547 ;;Total ram usage:        3 bytes
  3548 ;; Hardware stack levels used: 1
  3549 ;; Hardware stack levels required when called: 2
  3550 ;; This function calls:
  3551 ;;		_Lcd_Write_Char
  3552 ;; This function is called by:
  3553 ;;		_main
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557     0296                     _Lcd_Write_String:	
  3558                           ;psect for function _Lcd_Write_String
  3559                           
  3560                           
  3561                           ;incstack = 0
  3562                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3563                           ;Lcd_Write_String@a stored from wreg
  3564     0296  00F7               	movwf	Lcd_Write_String@a
  3565                           
  3566                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  3567     0297  01F5               	clrf	Lcd_Write_String@i
  3568     0298  01F6               	clrf	Lcd_Write_String@i+1
  3569     0299                     l1727:
  3570     0299  0875               	movf	Lcd_Write_String@i,w
  3571     029A  0777               	addwf	Lcd_Write_String@a,w
  3572     029B  0084               	movwf	4
  3573     029C  120A  118A  2003  120A  118A  	fcall	stringdir
  3574     02A1  3A00               	xorlw	0
  3575     02A2  1903               	btfsc	3,2
  3576     02A3  0008               	return
  3577                           
  3578                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  3579     02A4  0875               	movf	Lcd_Write_String@i,w
  3580     02A5  0777               	addwf	Lcd_Write_String@a,w
  3581     02A6  0084               	movwf	4
  3582     02A7  120A  118A  2003  120A  118A  	fcall	stringdir
  3583     02AC  120A  118A  230A  120A  118A  	fcall	_Lcd_Write_Char
  3584     02B1  3001               	movlw	1
  3585     02B2  07F5               	addwf	Lcd_Write_String@i,f
  3586     02B3  1803               	skipnc
  3587     02B4  0AF6               	incf	Lcd_Write_String@i+1,f
  3588     02B5  3000               	movlw	0
  3589     02B6  07F6               	addwf	Lcd_Write_String@i+1,f
  3590     02B7  2A99               	goto	l1727
  3591     02B8                     __end_of_Lcd_Write_String:
  3592                           
  3593                           	psect	text23
  3594     030A                     __ptext23:	
  3595 ;; *************** function _Lcd_Write_Char *****************
  3596 ;; Defined at:
  3597 ;;		line 83 in file "LCD.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  a               1    wreg     unsigned char 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  a               1    4[COMMON] unsigned char 
  3602 ;;  y               1    3[COMMON] unsigned char 
  3603 ;;  temp            1    2[COMMON] unsigned char 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		wreg, status,2, status,0, pclath, cstack
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 300/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3613 ;;      Params:         0       0       0       0       0
  3614 ;;      Locals:         3       0       0       0       0
  3615 ;;      Temps:          1       0       0       0       0
  3616 ;;      Totals:         4       0       0       0       0
  3617 ;;Total ram usage:        4 bytes
  3618 ;; Hardware stack levels used: 1
  3619 ;; Hardware stack levels required when called: 1
  3620 ;; This function calls:
  3621 ;;		_Lcd_Port
  3622 ;; This function is called by:
  3623 ;;		_main
  3624 ;;		_Escribir_dato
  3625 ;;		_Lcd_Write_String
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629     030A                     _Lcd_Write_Char:	
  3630                           ;psect for function _Lcd_Write_Char
  3631                           
  3632                           
  3633                           ;incstack = 0
  3634                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3635                           ;Lcd_Write_Char@a stored from wreg
  3636     030A  00F4               	movwf	Lcd_Write_Char@a
  3637                           
  3638                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  3639     030B  0874               	movf	Lcd_Write_Char@a,w
  3640     030C  390F               	andlw	15
  3641     030D  00F2               	movwf	Lcd_Write_Char@temp
  3642                           
  3643                           ;LCD.c: 86:     y = a & 0xF0;
  3644     030E  0874               	movf	Lcd_Write_Char@a,w
  3645     030F  39F0               	andlw	240
  3646     0310  00F3               	movwf	Lcd_Write_Char@y
  3647                           
  3648                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  3649     0311  1283               	bcf	3,5	;RP0=0, select bank0
  3650     0312  1303               	bcf	3,6	;RP1=0, select bank0
  3651     0313  1508               	bsf	8,2	;volatile
  3652                           
  3653                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  3654     0314  0873               	movf	Lcd_Write_Char@y,w
  3655     0315  00F1               	movwf	??_Lcd_Write_Char
  3656     0316  3004               	movlw	4
  3657     0317                     u885:
  3658     0317  1003               	clrc
  3659     0318  0CF1               	rrf	??_Lcd_Write_Char,f
  3660     0319  3EFF               	addlw	-1
  3661     031A  1D03               	skipz
  3662     031B  2B17               	goto	u885
  3663     031C  0871               	movf	??_Lcd_Write_Char,w
  3664     031D  120A  118A  220D  120A  118A  	fcall	_Lcd_Port
  3665                           
  3666                           ;LCD.c: 89:     RD3 = 1;
  3667     0322  1588               	bsf	8,3	;volatile
  3668                           
  3669                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3670     0323  301A               	movlw	26
  3671     0324  00F1               	movwf	??_Lcd_Write_Char
  3672     0325                     u1497:
  3673     0325  0BF1               	decfsz	??_Lcd_Write_Char,f
  3674     0326  2B25               	goto	u1497
  3675     0327  0000               	nop
  3676                           
  3677                           ;LCD.c: 91:     RD3 = 0;
  3678     0328  1283               	bcf	3,5	;RP0=0, select bank0
  3679     0329  1303               	bcf	3,6	;RP1=0, select bank0
  3680     032A  1188               	bcf	8,3	;volatile
  3681                           
  3682                           ;LCD.c: 92:     Lcd_Port(temp);
  3683     032B  0872               	movf	Lcd_Write_Char@temp,w
  3684     032C  120A  118A  220D  120A  118A  	fcall	_Lcd_Port
  3685                           
  3686                           ;LCD.c: 93:     RD3 = 1;
  3687     0331  1588               	bsf	8,3	;volatile
  3688                           
  3689                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3690     0332  301A               	movlw	26
  3691     0333  00F1               	movwf	??_Lcd_Write_Char
  3692     0334                     u1507:
  3693     0334  0BF1               	decfsz	??_Lcd_Write_Char,f
  3694     0335  2B34               	goto	u1507
  3695     0336  0000               	nop
  3696                           
  3697                           ;LCD.c: 95:     RD3 = 0;
  3698     0337  1283               	bcf	3,5	;RP0=0, select bank0
  3699     0338  1303               	bcf	3,6	;RP1=0, select bank0
  3700     0339  1188               	bcf	8,3	;volatile
  3701     033A  0008               	return
  3702     033B                     __end_of_Lcd_Write_Char:
  3703                           
  3704                           	psect	text24
  3705     054B                     __ptext24:	
  3706 ;; *************** function _Lcd_Init *****************
  3707 ;; Defined at:
  3708 ;;		line 65 in file "LCD.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;		None
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;		None
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  1    wreg      void 
  3715 ;; Registers used:
  3716 ;;		wreg, status,2, status,0, pclath, cstack
  3717 ;; Tracked objects:
  3718 ;;		On entry : 300/100
  3719 ;;		On exit  : 300/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3722 ;;      Params:         0       0       0       0       0
  3723 ;;      Locals:         0       0       0       0       0
  3724 ;;      Temps:          2       0       0       0       0
  3725 ;;      Totals:         2       0       0       0       0
  3726 ;;Total ram usage:        2 bytes
  3727 ;; Hardware stack levels used: 1
  3728 ;; Hardware stack levels required when called: 2
  3729 ;; This function calls:
  3730 ;;		_Lcd_Cmd
  3731 ;;		_Lcd_Port
  3732 ;; This function is called by:
  3733 ;;		_main
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737     054B                     _Lcd_Init:	
  3738                           ;psect for function _Lcd_Init
  3739                           
  3740                           
  3741                           ;LCD.c: 66:     Lcd_Port(0x00);
  3742                           
  3743                           ;incstack = 0
  3744                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3745     054B  3000               	movlw	0
  3746     054C  120A  118A  220D  120A  118A  	fcall	_Lcd_Port
  3747                           
  3748                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3749     0551  3034               	movlw	52
  3750     0552  00F5               	movwf	??_Lcd_Init+1
  3751     0553  30F1               	movlw	241
  3752     0554  00F4               	movwf	??_Lcd_Init
  3753     0555                     u1517:
  3754     0555  0BF4               	decfsz	??_Lcd_Init,f
  3755     0556  2D55               	goto	u1517
  3756     0557  0BF5               	decfsz	??_Lcd_Init+1,f
  3757     0558  2D55               	goto	u1517
  3758     0559  2D5A               	nop2
  3759                           
  3760                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  3761     055A  3003               	movlw	3
  3762     055B  120A  118A  2225  120A  118A  	fcall	_Lcd_Cmd
  3763                           
  3764                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3765     0560  300D               	movlw	13
  3766     0561  00F5               	movwf	??_Lcd_Init+1
  3767     0562  30FB               	movlw	251
  3768     0563  00F4               	movwf	??_Lcd_Init
  3769     0564                     u1527:
  3770     0564  0BF4               	decfsz	??_Lcd_Init,f
  3771     0565  2D64               	goto	u1527
  3772     0566  0BF5               	decfsz	??_Lcd_Init+1,f
  3773     0567  2D64               	goto	u1527
  3774     0568  2D69               	nop2
  3775                           
  3776                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  3777     0569  3003               	movlw	3
  3778     056A  120A  118A  2225  120A  118A  	fcall	_Lcd_Cmd
  3779                           
  3780                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3781     056F  301D               	movlw	29
  3782     0570  00F5               	movwf	??_Lcd_Init+1
  3783     0571  3091               	movlw	145
  3784     0572  00F4               	movwf	??_Lcd_Init
  3785     0573                     u1537:
  3786     0573  0BF4               	decfsz	??_Lcd_Init,f
  3787     0574  2D73               	goto	u1537
  3788     0575  0BF5               	decfsz	??_Lcd_Init+1,f
  3789     0576  2D73               	goto	u1537
  3790                           
  3791                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  3792     0577  3003               	movlw	3
  3793     0578  120A  118A  2225  120A  118A  	fcall	_Lcd_Cmd
  3794                           
  3795                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  3796     057D  3002               	movlw	2
  3797     057E  120A  118A  2225  120A  118A  	fcall	_Lcd_Cmd
  3798                           
  3799                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  3800     0583  3002               	movlw	2
  3801     0584  120A  118A  2225  120A  118A  	fcall	_Lcd_Cmd
  3802                           
  3803                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  3804     0589  3008               	movlw	8
  3805     058A  120A  118A  2225  120A  118A  	fcall	_Lcd_Cmd
  3806                           
  3807                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  3808     058F  3000               	movlw	0
  3809     0590  120A  118A  2225  120A  118A  	fcall	_Lcd_Cmd
  3810                           
  3811                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  3812     0595  300C               	movlw	12
  3813     0596  120A  118A  2225  120A  118A  	fcall	_Lcd_Cmd
  3814                           
  3815                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  3816     059B  3000               	movlw	0
  3817     059C  120A  118A  2225  120A  118A  	fcall	_Lcd_Cmd
  3818                           
  3819                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  3820     05A1  3006               	movlw	6
  3821     05A2  120A  118A  2225   	fcall	_Lcd_Cmd
  3822     05A5  0008               	return
  3823     05A6                     __end_of_Lcd_Init:
  3824                           
  3825                           	psect	text25
  3826     01F1                     __ptext25:	
  3827 ;; *************** function _Lcd_Clear *****************
  3828 ;; Defined at:
  3829 ;;		line 43 in file "LCD.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;		None
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  1    wreg      void 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0, pclath, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 300/0
  3840 ;;		On exit  : 300/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3843 ;;      Params:         0       0       0       0       0
  3844 ;;      Locals:         0       0       0       0       0
  3845 ;;      Temps:          0       0       0       0       0
  3846 ;;      Totals:         0       0       0       0       0
  3847 ;;Total ram usage:        0 bytes
  3848 ;; Hardware stack levels used: 1
  3849 ;; Hardware stack levels required when called: 2
  3850 ;; This function calls:
  3851 ;;		_Lcd_Cmd
  3852 ;; This function is called by:
  3853 ;;		_main
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857     01F1                     _Lcd_Clear:	
  3858                           ;psect for function _Lcd_Clear
  3859                           
  3860                           
  3861                           ;LCD.c: 44:     Lcd_Cmd(0);
  3862                           
  3863                           ;incstack = 0
  3864                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3865     01F1  3000               	movlw	0
  3866     01F2  120A  118A  2225  120A  118A  	fcall	_Lcd_Cmd
  3867                           
  3868                           ;LCD.c: 45:     Lcd_Cmd(1);
  3869     01F7  3001               	movlw	1
  3870     01F8  120A  118A  2225   	fcall	_Lcd_Cmd
  3871     01FB  0008               	return
  3872     01FC                     __end_of_Lcd_Clear:
  3873                           
  3874                           	psect	text26
  3875     0225                     __ptext26:	
  3876 ;; *************** function _Lcd_Cmd *****************
  3877 ;; Defined at:
  3878 ;;		line 35 in file "LCD.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  a               1    wreg     unsigned char 
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;  a               1    3[COMMON] unsigned char 
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      void 
  3885 ;; Registers used:
  3886 ;;		wreg, status,2, status,0, pclath, cstack
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 300/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3892 ;;      Params:         0       0       0       0       0
  3893 ;;      Locals:         1       0       0       0       0
  3894 ;;      Temps:          2       0       0       0       0
  3895 ;;      Totals:         3       0       0       0       0
  3896 ;;Total ram usage:        3 bytes
  3897 ;; Hardware stack levels used: 1
  3898 ;; Hardware stack levels required when called: 1
  3899 ;; This function calls:
  3900 ;;		_Lcd_Port
  3901 ;; This function is called by:
  3902 ;;		_Lcd_Clear
  3903 ;;		_Lcd_Set_Cursor
  3904 ;;		_Lcd_Init
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908     0225                     _Lcd_Cmd:	
  3909                           ;psect for function _Lcd_Cmd
  3910                           
  3911                           
  3912                           ;incstack = 0
  3913                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3914                           ;Lcd_Cmd@a stored from wreg
  3915     0225  00F3               	movwf	Lcd_Cmd@a
  3916                           
  3917                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  3918     0226  1283               	bcf	3,5	;RP0=0, select bank0
  3919     0227  1303               	bcf	3,6	;RP1=0, select bank0
  3920     0228  1108               	bcf	8,2	;volatile
  3921                           
  3922                           ;LCD.c: 37:     Lcd_Port(a);
  3923     0229  0873               	movf	Lcd_Cmd@a,w
  3924     022A  120A  118A  220D  120A  118A  	fcall	_Lcd_Port
  3925                           
  3926                           ;LCD.c: 38:     RD3 = 1;
  3927     022F  1588               	bsf	8,3	;volatile
  3928                           
  3929                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3930     0230  300B               	movlw	11
  3931     0231  00F2               	movwf	??_Lcd_Cmd+1
  3932     0232  3062               	movlw	98
  3933     0233  00F1               	movwf	??_Lcd_Cmd
  3934     0234                     u1547:
  3935     0234  0BF1               	decfsz	??_Lcd_Cmd,f
  3936     0235  2A34               	goto	u1547
  3937     0236  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3938     0237  2A34               	goto	u1547
  3939     0238  0000               	nop
  3940                           
  3941                           ;LCD.c: 40:     RD3 = 0;
  3942     0239  1283               	bcf	3,5	;RP0=0, select bank0
  3943     023A  1303               	bcf	3,6	;RP1=0, select bank0
  3944     023B  1188               	bcf	8,3	;volatile
  3945     023C  0008               	return
  3946     023D                     __end_of_Lcd_Cmd:
  3947                           
  3948                           	psect	text27
  3949     020D                     __ptext27:	
  3950 ;; *************** function _Lcd_Port *****************
  3951 ;; Defined at:
  3952 ;;		line 13 in file "LCD.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;  a               1    wreg     unsigned char 
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;  a               1    0[COMMON] unsigned char 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  1    wreg      void 
  3959 ;; Registers used:
  3960 ;;		wreg
  3961 ;; Tracked objects:
  3962 ;;		On entry : 200/0
  3963 ;;		On exit  : 300/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3966 ;;      Params:         0       0       0       0       0
  3967 ;;      Locals:         1       0       0       0       0
  3968 ;;      Temps:          0       0       0       0       0
  3969 ;;      Totals:         1       0       0       0       0
  3970 ;;Total ram usage:        1 bytes
  3971 ;; Hardware stack levels used: 1
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_Lcd_Cmd
  3976 ;;		_Lcd_Init
  3977 ;;		_Lcd_Write_Char
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981     020D                     _Lcd_Port:	
  3982                           ;psect for function _Lcd_Port
  3983                           
  3984                           
  3985                           ;incstack = 0
  3986                           ; Regs used in _Lcd_Port: [wreg]
  3987                           ;Lcd_Port@a stored from wreg
  3988     020D  00F0               	movwf	Lcd_Port@a
  3989                           
  3990                           ;LCD.c: 14:     if (a & 1)
  3991     020E  1C70               	btfss	Lcd_Port@a,0
  3992     020F  2A13               	goto	l208
  3993                           
  3994                           ;LCD.c: 15:         RD4 = 1;
  3995     0210  1283               	bcf	3,5	;RP0=0, select bank0
  3996     0211  1608               	bsf	8,4	;volatile
  3997     0212  2A15               	goto	l209
  3998     0213                     l208:	
  3999                           ;LCD.c: 16:     else
  4000                           
  4001                           
  4002                           ;LCD.c: 17:         RD4 = 0;
  4003     0213  1283               	bcf	3,5	;RP0=0, select bank0
  4004     0214  1208               	bcf	8,4	;volatile
  4005     0215                     l209:
  4006                           
  4007                           ;LCD.c: 19:     if (a & 2)
  4008     0215  1CF0               	btfss	Lcd_Port@a,1
  4009     0216  2A19               	goto	l210
  4010                           
  4011                           ;LCD.c: 20:         RD5 = 1;
  4012     0217  1688               	bsf	8,5	;volatile
  4013     0218  2A1A               	goto	l211
  4014     0219                     l210:	
  4015                           ;LCD.c: 21:     else
  4016                           
  4017                           
  4018                           ;LCD.c: 22:         RD5 = 0;
  4019     0219  1288               	bcf	8,5	;volatile
  4020     021A                     l211:
  4021                           
  4022                           ;LCD.c: 24:     if (a & 4)
  4023     021A  1D70               	btfss	Lcd_Port@a,2
  4024     021B  2A1E               	goto	l212
  4025                           
  4026                           ;LCD.c: 25:         RD6 = 1;
  4027     021C  1708               	bsf	8,6	;volatile
  4028     021D  2A1F               	goto	l213
  4029     021E                     l212:	
  4030                           ;LCD.c: 26:     else
  4031                           
  4032                           
  4033                           ;LCD.c: 27:         RD6 = 0;
  4034     021E  1308               	bcf	8,6	;volatile
  4035     021F                     l213:
  4036                           
  4037                           ;LCD.c: 29:     if (a & 8)
  4038     021F  1DF0               	btfss	Lcd_Port@a,3
  4039     0220  2A23               	goto	l214
  4040                           
  4041                           ;LCD.c: 30:         RD7 = 1;
  4042     0221  1788               	bsf	8,7	;volatile
  4043     0222  0008               	return
  4044     0223                     l214:	
  4045                           ;LCD.c: 31:     else
  4046                           
  4047                           
  4048                           ;LCD.c: 32:         RD7 = 0;
  4049     0223  1388               	bcf	8,7	;volatile
  4050     0224  0008               	return
  4051     0225                     __end_of_Lcd_Port:
  4052     007E                     btemp	set	126	;btemp
  4053     007E                     wtemp0	set	126
  4054                           
  4055                           	psect	idloc
  4056                           
  4057                           ;Config register IDLOC0 @ 0x2000
  4058                           ;	unspecified, using default values
  4059     2000                     	org	8192
  4060     2000  3FFF               	dw	16383
  4061                           
  4062                           ;Config register IDLOC1 @ 0x2001
  4063                           ;	unspecified, using default values
  4064     2001                     	org	8193
  4065     2001  3FFF               	dw	16383
  4066                           
  4067                           ;Config register IDLOC2 @ 0x2002
  4068                           ;	unspecified, using default values
  4069     2002                     	org	8194
  4070     2002  3FFF               	dw	16383
  4071                           
  4072                           ;Config register IDLOC3 @ 0x2003
  4073                           ;	unspecified, using default values
  4074     2003                     	org	8195
  4075     2003  3FFF               	dw	16383
  4076                           
  4077                           	psect	config
  4078                           
  4079                           ;Config register CONFIG1 @ 0x2007
  4080                           ;	Oscillator Selection bits
  4081                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4082                           ;	Watchdog Timer Enable bit
  4083                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4084                           ;	Power-up Timer Enable bit
  4085                           ;	PWRTE = OFF, PWRT disabled
  4086                           ;	RE3/MCLR pin function select bit
  4087                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4088                           ;	Code Protection bit
  4089                           ;	CP = OFF, Program memory code protection is disabled
  4090                           ;	Data Code Protection bit
  4091                           ;	CPD = OFF, Data memory code protection is disabled
  4092                           ;	Brown Out Reset Selection bits
  4093                           ;	BOREN = OFF, BOR disabled
  4094                           ;	Internal External Switchover bit
  4095                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4096                           ;	Fail-Safe Clock Monitor Enabled bit
  4097                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4098                           ;	Low Voltage Programming Enable bit
  4099                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4100                           ;	In-Circuit Debugger Mode bit
  4101                           ;	DEBUG = 0x1, unprogramme  4102     2007                     	org	8199
  4103     2007  20D4               	dw	8404
  4104                           
  4105                           ;Config register CONFIG2 @ 0x2008
  4106                           ;	Brown-out Reset Selection bit
  4107                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4108                           ;	Flash Program Memory Self Write Enable bits
  4109                           ;	WRT = OFF, Write protection off
  4110     2008                     	org	8200
  4111     2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     15      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_Escribir_dato
    _I2C_Master_Init->___lldiv
    _leer_x->_convertir
    _convertir->___bmul
    _leer_temperatura->_Escribir_dato
    _Escribir_dato->_descomponer
    _descomponer->___lbmod
    _Lcd_Set_Cursor->_Lcd_Cmd
    _enviar_x->_I2C_Master_Write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_portsetup
    _portsetup->_I2C_Master_Init
    _leer_temperatura->_Escribir_dato

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   17203
                                             11 BANK0      4     4      0
                      _Escribir_dato
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _enviar_x
                   _leer_temperatura
                             _leer_x
                          _portsetup
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _portsetup                                            3     3      0     412
                                              8 BANK0      3     3      0
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _leer_x                                               4     4      0    1936
                                              9 COMMON     4     4      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _convertir
 ---------------------------------------------------------------------------------
 (2) _convertir                                            5     5      0     281
                                              4 COMMON     5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _leer_temperatura                                     2     2      0    5805
                                              1 BANK0      2     2      0
                      _Escribir_dato
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _Escribir_dato                                        3     1      2    4218
                                             12 COMMON     2     0      2
                                              0 BANK0      1     1      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                        _descomponer
                          _inttochar
 ---------------------------------------------------------------------------------
 (3) _inttochar                                            1     1      0     220
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _descomponer                                          6     3      3    1256
                                              6 COMMON     6     3      3
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              6     5      1     374
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              5     4      1     377
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       6     5      1     760
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _enviar_x                                             4     3      1    1662
                                              2 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1390
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     334
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_dato
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _descomponer
       ___lbdiv
       ___lbmod
     _inttochar
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_Char
   _Lcd_Write_String
     _Lcd_Write_Char
   _enviar_x
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _leer_temperatura
     _Escribir_dato
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _leer_x
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _convertir
       ___bmul
   _portsetup
     _I2C_Master_Init
       ___lldiv
   _setupINTOSC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      30       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      22       5       42.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      30      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 08 12:31:07 2023

                               pc 0002                    ___bmul@product 0072                    ?_Escribir_dato 007C  
                              fsr 0004                               l210 0219                               l211 021A  
                             l212 021E                               l213 021F                               l214 0223  
                             l208 0213                               l209 0215                               l171 01E8  
                             l190 02D7                               l280 04F3                               l281 04FB  
                             l275 04C6                               l276 04CF                               l189 02D6  
                             l277 04D8                               l278 04E1                               l279 04EA  
                             l579 026F                               _RD3 0043                               _RD4 0044  
                             _RD5 0045                               _RD6 0046                               _RD7 0047  
                             u815 025D                               u855 044B                               u875 046A  
                             u885 0317                               _min 002D                               _sec 002F  
                             fsr0 0004                               indf 0000                              l1403 027C  
                            l1405 0285                              l1415 0294                              l1423 025A  
                            l1601 05B6                              l1531 041D                              l1523 0417  
                            l1515 0411                              l1507 040C                              l1611 05EE  
                            l1603 05C6                              l1445 0460                              l1615 05FB  
                            l1801 06DE                              l1571 043B                              l1563 0435  
                            l1555 042F                              l1547 0429                              l1539 0423  
                            l1811 06ED                              l1803 06DF                              l1493 03CC  
                            l1485 03C1                              l1813 06EF                              l1821 06FC  
                            l1727 0299                              l1583 01FE                              l1831 070A  
                            l1587 0204                              l1819 06FB                              l1693 0501  
                            l1837 0713                              l1829 0707                              l1757 064F  
                            l1855 077B                              l1839 0715                              l1783 0696  
                            l1793 06BB                              l1867 07BC                              l1859 07AF  
                            l1789 06B7                              STR_1 0011                              STR_2 0009  
                            u1105 05DD                              u1115 05EF                              u1135 0349  
                            u1155 0244                              u1075 05BA                              u1095 05C8  
                            u1507 0334                              u1517 0555                              u1527 0564  
                            u1537 0573                              u1457 0758                              u1547 0234  
                            u1467 07AA                              u1477 02F6                              u1487 03F6  
                            u1497 0325                              _WPUB 0095                 ?_Lcd_Write_String 0070  
__end_of_I2C_Master_RepeatedStart 01D9                              _main 0604                              _modo 002B  
                            btemp 007E                              start 0000                ??_Lcd_Write_String 0075  
                 __end_of_Lcd_Cmd 023D                 ___bmul@multiplier 0073                  ?_I2C_Master_Init 0033  
                ?_I2C_Master_Read 0070                  ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070  
                           ?_main 0070                   __end_of___lbdiv 0296                   __end_of___lbmod 0275  
                           _ANSEL 0188                   __end_of___lldiv 0604                             _SERVO 002A  
                           _PORTB 0006                             _PORTD 0008                             _TRISB 0086  
                           _TRISD 0088                             pclath 000A                             status 0003  
                           wtemp0 007E                   ___lbdiv@divisor 0070                       leer_x@valor 007C  
                 ___lbdiv@counter 0073                  _leer_temperatura 03D2                  __end_of_Lcd_Init 05A6  
                __end_of_Lcd_Port 0225                   __initialization 07F5                   ??_Escribir_dato 007E  
                    __end_of_main 07F5                            ??_main 003E                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070                ??_I2C_Master_Write 0072  
                          _ANSELH 0189                         ??_Lcd_Cmd 0071                            _SSPADD 0093  
                          _SSPCON 0014                            _SSPBUF 0013          _I2C_Master_RepeatedStart 01D4  
                          ___bmul 01FC                            _decena 0031                         ??___lbdiv 0071  
                       ??___lbmod 0071                         ??___lldiv 0078                  __end_of_enviar_x 039F  
                          _buffer 0024                            _conver 0020                            _leer_x 047F  
                          _valADC 0027                            _unidad 0032                      ?_setupINTOSC 0070  
                ___lbdiv@dividend 0072                   Lcd_Set_Cursor@a 0076                   Lcd_Set_Cursor@b 0074  
                 Lcd_Set_Cursor@y 0078                   Lcd_Set_Cursor@z 0077                   ___lbmod@divisor 0070  
         __end_of__initialization 07FC                   ___lbmod@counter 0074                 __end_of_Lcd_Clear 01FC  
             ___bmul@multiplicand 0070                   descomponer@cent 0079                    __pcstackCOMMON 0070  
                ___lbdiv@quotient 0074                    _Lcd_Set_Cursor 0441                    _OPTION_REGbits 0081  
                       ?_Lcd_Init 0070                         ?_Lcd_Port 0070                      enviar_x@val1 0075  
                    enviar_x@val2 0072                        __pbssBANK0 0020                        __pmaintext 0604  
                         ?___bmul 0070               convertir@conversion 0077                           ?_leer_x 0070  
          __end_of_Lcd_Set_Cursor 047F          __end_of_leer_temperatura 0406                        ??_Lcd_Init 0074  
                      ??_Lcd_Port 0070                           _SSPCON2 0091                           _SSPSTAT 0094  
                      __stringtab 0003                         ?_enviar_x 0072                    _Lcd_Write_Char 030A  
                         _Lcd_Cmd 0225                           ___lbdiv 0275                           ___lbmod 0256  
                         ___lldiv 05A6                 __end_of_convertir 0256                   ?_Lcd_Set_Cursor 0074  
                         __ptext1 04BE                           __ptext2 02DD                           __ptext3 033B  
                         __ptext4 05A6                           __ptext5 047F                           __ptext6 023D  
                         __ptext7 01FC                           __ptext8 01D4                           __ptext9 03D2  
                         _minutos 002C                           _tempint 0030                           clrloop0 01E1  
               __end_of_inttochar 0441            __end_of_Lcd_Write_Char 033B              end_of_initialization 07FC  
      ??_I2C_Master_RepeatedStart 0070                        ??_enviar_x 0073                   ___lldiv@divisor 0070  
                 ___lldiv@counter 007D                  I2C_Master_Init@c 0033                  I2C_Master_Read@a 0070  
                   leer_x@address 007B                         Lcd_Port@a 0070                 __end_of_portsetup 030A  
           __end_of_Escribir_dato 054B                         _PORTBbits 0006                         _PORTDbits 0008  
                   ??_descomponer 0079                  ___lbmod@dividend 0073                         _TRISCbits 0087  
                 ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0077                 Lcd_Write_String@i 0075  
                     ___lbmod@rem 0075                         _Lcd_Clear 01F1                    __end_of___bmul 020D  
                _Lcd_Write_String 0296                    __end_of_leer_x 04BE               start_initialization 07F5  
             __end_of_descomponer 03D2                 ??_I2C_Master_Init 0037                 ??_I2C_Master_Read 0072  
               ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070                 Escribir_dato@dato 0033  
               Escribir_dato@posx 007C                 Escribir_dato@posy 007D                        ?_Lcd_Clear 0070  
                        ??___bmul 0071                          ??_leer_x 0079                   Lcd_Write_Char@a 0074  
                 Lcd_Write_Char@y 0073                         ___latbits 0002                    descomponer@dec 007B  
                   __pcstackBANK0 0033                 ?_leer_temperatura 0070                    descomponer@num 0078  
                  descomponer@pos 0076                    descomponer@uni 007A                ??_leer_temperatura 0034  
                 setupINTOSC@IRCF 0070                          ?_Lcd_Cmd 0070                  _I2C_Master_Start 01CA  
                _I2C_Master_Write 01D9                  ??_Lcd_Set_Cursor 0075                      inttochar@num 0070  
                        ?___lbdiv 0070                          ?___lbmod 0070                          ?___lldiv 0070  
                       __pstrings 0003                         _convertir 023D                       _descomponer 039F  
                       _inttochar 0406                         clear_ram0 01E0                          Lcd_Cmd@a 0073  
                     ??_Lcd_Clear 0074                       __stringbase 0008                     ??_setupINTOSC 0070  
                       _portsetup 02DD                        ?_convertir 0070                  ??_Lcd_Write_Char 0071  
                 convertir@decena 0076                          _Lcd_Init 054B                          _Lcd_Port 020D  
             I2C_Master_Read@temp 0074                   convertir@unidad 0075          __end_of_Lcd_Write_String 02B8  
                      ?_inttochar 0070         ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0009  
                      ?_portsetup 0070                   _I2C_Master_Init 033B                   _I2C_Master_Read 02B8  
                 _I2C_Master_Wait 01E8                   _I2C_Master_Stop 01CF                          _main$198 0041  
                        __ptext10 02B8                          __ptext11 0504                          __ptext20 01CA  
                        __ptext12 0406                          __ptext21 01E8                          __ptext13 039F  
                        __ptext22 0296                          __ptext14 0256                          __ptext23 030A  
                        __ptext15 0275                          __ptext24 054B                          __ptext16 0441  
                        __ptext25 01F1                          __ptext17 036C                          __ptext26 0225  
                        __ptext18 01D9                          __ptext27 020D                          __ptext19 01CF  
             __end_of_setupINTOSC 0504                          _enviar_x 036C                          _segundos 002E  
                  convertir@valor 0078                       ??_convertir 0074          __end_of_I2C_Master_Start 01CF  
        __end_of_I2C_Master_Write 01E0                Lcd_Write_Char@temp 0072                  ___lldiv@dividend 0074  
                     ??_inttochar 0070                         stringcode 0003                        _OSCCONbits 008F  
         __end_of_I2C_Master_Init 036C           __end_of_I2C_Master_Read 02DD           __end_of_I2C_Master_Wait 01F1  
                   _Escribir_dato 0504           __end_of_I2C_Master_Stop 01D4                Lcd_Set_Cursor@temp 0079  
                     ??_portsetup 003B                       _setupINTOSC 04BE                      ?_descomponer 0076  
                ___lldiv@quotient 0079                 I2C_Master_Write@d 0070                          stringdir 0003  
                        stringtab 0003                       _SSPCON2bits 0091  
