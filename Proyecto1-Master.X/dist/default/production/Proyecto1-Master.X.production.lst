

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 17 12:52:46 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41     0000                     
    42                           ; Version 2.40
    43                           ; Generated 17/11/2021 GMT
    44                           ; 
    45                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0000                     	;# 
    78     0001                     	;# 
    79     0002                     	;# 
    80     0003                     	;# 
    81     0004                     	;# 
    82     0005                     	;# 
    83     0006                     	;# 
    84     0007                     	;# 
    85     0008                     	;# 
    86     0009                     	;# 
    87     000A                     	;# 
    88     000B                     	;# 
    89     000C                     	;# 
    90     000D                     	;# 
    91     000E                     	;# 
    92     000E                     	;# 
    93     000F                     	;# 
    94     0010                     	;# 
    95     0011                     	;# 
    96     0012                     	;# 
    97     0013                     	;# 
    98     0014                     	;# 
    99     0015                     	;# 
   100     0015                     	;# 
   101     0016                     	;# 
   102     0017                     	;# 
   103     0018                     	;# 
   104     0019                     	;# 
   105     001A                     	;# 
   106     001B                     	;# 
   107     001B                     	;# 
   108     001C                     	;# 
   109     001D                     	;# 
   110     001E                     	;# 
   111     001F                     	;# 
   112     0081                     	;# 
   113     0085                     	;# 
   114     0086                     	;# 
   115     0087                     	;# 
   116     0088                     	;# 
   117     0089                     	;# 
   118     008C                     	;# 
   119     008D                     	;# 
   120     008E                     	;# 
   121     008F                     	;# 
   122     0090                     	;# 
   123     0091                     	;# 
   124     0092                     	;# 
   125     0093                     	;# 
   126     0093                     	;# 
   127     0093                     	;# 
   128     0094                     	;# 
   129     0095                     	;# 
   130     0096                     	;# 
   131     0097                     	;# 
   132     0098                     	;# 
   133     0099                     	;# 
   134     009A                     	;# 
   135     009B                     	;# 
   136     009C                     	;# 
   137     009D                     	;# 
   138     009E                     	;# 
   139     009F                     	;# 
   140     0105                     	;# 
   141     0107                     	;# 
   142     0108                     	;# 
   143     0109                     	;# 
   144     010C                     	;# 
   145     010C                     	;# 
   146     010D                     	;# 
   147     010E                     	;# 
   148     010F                     	;# 
   149     0185                     	;# 
   150     0187                     	;# 
   151     0188                     	;# 
   152     0189                     	;# 
   153     018C                     	;# 
   154     018D                     	;# 
   155     0000                     	;# 
   156     0001                     	;# 
   157     0002                     	;# 
   158     0003                     	;# 
   159     0004                     	;# 
   160     0005                     	;# 
   161     0006                     	;# 
   162     0007                     	;# 
   163     0008                     	;# 
   164     0009                     	;# 
   165     000A                     	;# 
   166     000B                     	;# 
   167     000C                     	;# 
   168     000D                     	;# 
   169     000E                     	;# 
   170     000E                     	;# 
   171     000F                     	;# 
   172     0010                     	;# 
   173     0011                     	;# 
   174     0012                     	;# 
   175     0013                     	;# 
   176     0014                     	;# 
   177     0015                     	;# 
   178     0015                     	;# 
   179     0016                     	;# 
   180     0017                     	;# 
   181     0018                     	;# 
   182     0019                     	;# 
   183     001A                     	;# 
   184     001B                     	;# 
   185     001B                     	;# 
   186     001C                     	;# 
   187     001D                     	;# 
   188     001E                     	;# 
   189     001F                     	;# 
   190     0081                     	;# 
   191     0085                     	;# 
   192     0086                     	;# 
   193     0087                     	;# 
   194     0088                     	;# 
   195     0089                     	;# 
   196     008C                     	;# 
   197     008D                     	;# 
   198     008E                     	;# 
   199     008F                     	;# 
   200     0090                     	;# 
   201     0091                     	;# 
   202     0092                     	;# 
   203     0093                     	;# 
   204     0093                     	;# 
   205     0093                     	;# 
   206     0094                     	;# 
   207     0095                     	;# 
   208     0096                     	;# 
   209     0097                     	;# 
   210     0098                     	;# 
   211     0099                     	;# 
   212     009A                     	;# 
   213     009B                     	;# 
   214     009C                     	;# 
   215     009D                     	;# 
   216     009E                     	;# 
   217     009F                     	;# 
   218     0105                     	;# 
   219     0107                     	;# 
   220     0108                     	;# 
   221     0109                     	;# 
   222     010C                     	;# 
   223     010C                     	;# 
   224     010D                     	;# 
   225     010E                     	;# 
   226     010F                     	;# 
   227     0185                     	;# 
   228     0187                     	;# 
   229     0188                     	;# 
   230     0189                     	;# 
   231     018C                     	;# 
   232     018D                     	;# 
   233     0000                     	;# 
   234     0001                     	;# 
   235     0002                     	;# 
   236     0003                     	;# 
   237     0004                     	;# 
   238     0005                     	;# 
   239     0006                     	;# 
   240     0007                     	;# 
   241     0008                     	;# 
   242     0009                     	;# 
   243     000A                     	;# 
   244     000B                     	;# 
   245     000C                     	;# 
   246     000D                     	;# 
   247     000E                     	;# 
   248     000E                     	;# 
   249     000F                     	;# 
   250     0010                     	;# 
   251     0011                     	;# 
   252     0012                     	;# 
   253     0013                     	;# 
   254     0014                     	;# 
   255     0015                     	;# 
   256     0015                     	;# 
   257     0016                     	;# 
   258     0017                     	;# 
   259     0018                     	;# 
   260     0019                     	;# 
   261     001A                     	;# 
   262     001B                     	;# 
   263     001B                     	;# 
   264     001C                     	;# 
   265     001D                     	;# 
   266     001E                     	;# 
   267     001F                     	;# 
   268     0081                     	;# 
   269     0085                     	;# 
   270     0086                     	;# 
   271     0087                     	;# 
   272     0088                     	;# 
   273     0089                     	;# 
   274     008C                     	;# 
   275     008D                     	;# 
   276     008E                     	;# 
   277     008F                     	;# 
   278     0090                     	;# 
   279     0091                     	;# 
   280     0092                     	;# 
   281     0093                     	;# 
   282     0093                     	;# 
   283     0093                     	;# 
   284     0094                     	;# 
   285     0095                     	;# 
   286     0096                     	;# 
   287     0097                     	;# 
   288     0098                     	;# 
   289     0099                     	;# 
   290     009A                     	;# 
   291     009B                     	;# 
   292     009C                     	;# 
   293     009D                     	;# 
   294     009E                     	;# 
   295     009F                     	;# 
   296     0105                     	;# 
   297     0107                     	;# 
   298     0108                     	;# 
   299     0109                     	;# 
   300     010C                     	;# 
   301     010C                     	;# 
   302     010D                     	;# 
   303     010E                     	;# 
   304     010F                     	;# 
   305     0185                     	;# 
   306     0187                     	;# 
   307     0188                     	;# 
   308     0189                     	;# 
   309     018C                     	;# 
   310     018D                     	;# 
   311     0000                     	;# 
   312     0001                     	;# 
   313     0002                     	;# 
   314     0003                     	;# 
   315     0004                     	;# 
   316     0005                     	;# 
   317     0006                     	;# 
   318     0007                     	;# 
   319     0008                     	;# 
   320     0009                     	;# 
   321     000A                     	;# 
   322     000B                     	;# 
   323     000C                     	;# 
   324     000D                     	;# 
   325     000E                     	;# 
   326     000E                     	;# 
   327     000F                     	;# 
   328     0010                     	;# 
   329     0011                     	;# 
   330     0012                     	;# 
   331     0013                     	;# 
   332     0014                     	;# 
   333     0015                     	;# 
   334     0015                     	;# 
   335     0016                     	;# 
   336     0017                     	;# 
   337     0018                     	;# 
   338     0019                     	;# 
   339     001A                     	;# 
   340     001B                     	;# 
   341     001B                     	;# 
   342     001C                     	;# 
   343     001D                     	;# 
   344     001E                     	;# 
   345     001F                     	;# 
   346     0081                     	;# 
   347     0085                     	;# 
   348     0086                     	;# 
   349     0087                     	;# 
   350     0088                     	;# 
   351     0089                     	;# 
   352     008C                     	;# 
   353     008D                     	;# 
   354     008E                     	;# 
   355     008F                     	;# 
   356     0090                     	;# 
   357     0091                     	;# 
   358     0092                     	;# 
   359     0093                     	;# 
   360     0093                     	;# 
   361     0093                     	;# 
   362     0094                     	;# 
   363     0095                     	;# 
   364     0096                     	;# 
   365     0097                     	;# 
   366     0098                     	;# 
   367     0099                     	;# 
   368     009A                     	;# 
   369     009B                     	;# 
   370     009C                     	;# 
   371     009D                     	;# 
   372     009E                     	;# 
   373     009F                     	;# 
   374     0105                     	;# 
   375     0107                     	;# 
   376     0108                     	;# 
   377     0109                     	;# 
   378     010C                     	;# 
   379     010C                     	;# 
   380     010D                     	;# 
   381     010E                     	;# 
   382     010F                     	;# 
   383     0185                     	;# 
   384     0187                     	;# 
   385     0188                     	;# 
   386     0189                     	;# 
   387     018C                     	;# 
   388     018D                     	;# 
   389     0000                     	;# 
   390     0001                     	;# 
   391     0002                     	;# 
   392     0003                     	;# 
   393     0004                     	;# 
   394     0005                     	;# 
   395     0006                     	;# 
   396     0007                     	;# 
   397     0008                     	;# 
   398     0009                     	;# 
   399     000A                     	;# 
   400     000B                     	;# 
   401     000C                     	;# 
   402     000D                     	;# 
   403     000E                     	;# 
   404     000E                     	;# 
   405     000F                     	;# 
   406     0010                     	;# 
   407     0011                     	;# 
   408     0012                     	;# 
   409     0013                     	;# 
   410     0014                     	;# 
   411     0015                     	;# 
   412     0015                     	;# 
   413     0016                     	;# 
   414     0017                     	;# 
   415     0018                     	;# 
   416     0019                     	;# 
   417     001A                     	;# 
   418     001B                     	;# 
   419     001B                     	;# 
   420     001C                     	;# 
   421     001D                     	;# 
   422     001E                     	;# 
   423     001F                     	;# 
   424     0081                     	;# 
   425     0085                     	;# 
   426     0086                     	;# 
   427     0087                     	;# 
   428     0088                     	;# 
   429     0089                     	;# 
   430     008C                     	;# 
   431     008D                     	;# 
   432     008E                     	;# 
   433     008F                     	;# 
   434     0090                     	;# 
   435     0091                     	;# 
   436     0092                     	;# 
   437     0093                     	;# 
   438     0093                     	;# 
   439     0093                     	;# 
   440     0094                     	;# 
   441     0095                     	;# 
   442     0096                     	;# 
   443     0097                     	;# 
   444     0098                     	;# 
   445     0099                     	;# 
   446     009A                     	;# 
   447     009B                     	;# 
   448     009C                     	;# 
   449     009D                     	;# 
   450     009E                     	;# 
   451     009F                     	;# 
   452     0105                     	;# 
   453     0107                     	;# 
   454     0108                     	;# 
   455     0109                     	;# 
   456     010C                     	;# 
   457     010C                     	;# 
   458     010D                     	;# 
   459     010E                     	;# 
   460     010F                     	;# 
   461     0185                     	;# 
   462     0187                     	;# 
   463     0188                     	;# 
   464     0189                     	;# 
   465     018C                     	;# 
   466     018D                     	;# 
   467     0000                     	;# 
   468     0001                     	;# 
   469     0002                     	;# 
   470     0003                     	;# 
   471     0004                     	;# 
   472     0005                     	;# 
   473     0006                     	;# 
   474     0007                     	;# 
   475     0008                     	;# 
   476     0009                     	;# 
   477     000A                     	;# 
   478     000B                     	;# 
   479     000C                     	;# 
   480     000D                     	;# 
   481     000E                     	;# 
   482     000E                     	;# 
   483     000F                     	;# 
   484     0010                     	;# 
   485     0011                     	;# 
   486     0012                     	;# 
   487     0013                     	;# 
   488     0014                     	;# 
   489     0015                     	;# 
   490     0015                     	;# 
   491     0016                     	;# 
   492     0017                     	;# 
   493     0018                     	;# 
   494     0019                     	;# 
   495     001A                     	;# 
   496     001B                     	;# 
   497     001B                     	;# 
   498     001C                     	;# 
   499     001D                     	;# 
   500     001E                     	;# 
   501     001F                     	;# 
   502     0081                     	;# 
   503     0085                     	;# 
   504     0086                     	;# 
   505     0087                     	;# 
   506     0088                     	;# 
   507     0089                     	;# 
   508     008C                     	;# 
   509     008D                     	;# 
   510     008E                     	;# 
   511     008F                     	;# 
   512     0090                     	;# 
   513     0091                     	;# 
   514     0092                     	;# 
   515     0093                     	;# 
   516     0093                     	;# 
   517     0093                     	;# 
   518     0094                     	;# 
   519     0095                     	;# 
   520     0096                     	;# 
   521     0097                     	;# 
   522     0098                     	;# 
   523     0099                     	;# 
   524     009A                     	;# 
   525     009B                     	;# 
   526     009C                     	;# 
   527     009D                     	;# 
   528     009E                     	;# 
   529     009F                     	;# 
   530     0105                     	;# 
   531     0107                     	;# 
   532     0108                     	;# 
   533     0109                     	;# 
   534     010C                     	;# 
   535     010C                     	;# 
   536     010D                     	;# 
   537     010E                     	;# 
   538     010F                     	;# 
   539     0185                     	;# 
   540     0187                     	;# 
   541     0188                     	;# 
   542     0189                     	;# 
   543     018C                     	;# 
   544     018D                     	;# 
   545     0000                     	;# 
   546     0001                     	;# 
   547     0002                     	;# 
   548     0003                     	;# 
   549     0004                     	;# 
   550     0005                     	;# 
   551     0006                     	;# 
   552     0007                     	;# 
   553     0008                     	;# 
   554     0009                     	;# 
   555     000A                     	;# 
   556     000B                     	;# 
   557     000C                     	;# 
   558     000D                     	;# 
   559     000E                     	;# 
   560     000E                     	;# 
   561     000F                     	;# 
   562     0010                     	;# 
   563     0011                     	;# 
   564     0012                     	;# 
   565     0013                     	;# 
   566     0014                     	;# 
   567     0015                     	;# 
   568     0015                     	;# 
   569     0016                     	;# 
   570     0017                     	;# 
   571     0018                     	;# 
   572     0019                     	;# 
   573     001A                     	;# 
   574     001B                     	;# 
   575     001B                     	;# 
   576     001C                     	;# 
   577     001D                     	;# 
   578     001E                     	;# 
   579     001F                     	;# 
   580     0081                     	;# 
   581     0085                     	;# 
   582     0086                     	;# 
   583     0087                     	;# 
   584     0088                     	;# 
   585     0089                     	;# 
   586     008C                     	;# 
   587     008D                     	;# 
   588     008E                     	;# 
   589     008F                     	;# 
   590     0090                     	;# 
   591     0091                     	;# 
   592     0092                     	;# 
   593     0093                     	;# 
   594     0093                     	;# 
   595     0093                     	;# 
   596     0094                     	;# 
   597     0095                     	;# 
   598     0096                     	;# 
   599     0097                     	;# 
   600     0098                     	;# 
   601     0099                     	;# 
   602     009A                     	;# 
   603     009B                     	;# 
   604     009C                     	;# 
   605     009D                     	;# 
   606     009E                     	;# 
   607     009F                     	;# 
   608     0105                     	;# 
   609     0107                     	;# 
   610     0108                     	;# 
   611     0109                     	;# 
   612     010C                     	;# 
   613     010C                     	;# 
   614     010D                     	;# 
   615     010E                     	;# 
   616     010F                     	;# 
   617     0185                     	;# 
   618     0187                     	;# 
   619     0188                     	;# 
   620     0189                     	;# 
   621     018C                     	;# 
   622     018D                     	;# 
   623     0008                     _PORTDbits	set	8
   624     0013                     _SSPBUF	set	19
   625     0014                     _SSPCON	set	20
   626     0006                     _PORTB	set	6
   627     0008                     _PORTD	set	8
   628     0006                     _PORTBbits	set	6
   629     0005                     _PORTA	set	5
   630     0043                     _RD3	set	67
   631     0047                     _RD7	set	71
   632     0046                     _RD6	set	70
   633     0045                     _RD5	set	69
   634     0044                     _RD4	set	68
   635     008F                     _OSCCONbits	set	143
   636     0091                     _SSPCON2bits	set	145
   637     0087                     _TRISCbits	set	135
   638     0094                     _SSPSTAT	set	148
   639     0093                     _SSPADD	set	147
   640     0091                     _SSPCON2	set	145
   641     0081                     _OPTION_REGbits	set	129
   642     0095                     _WPUB	set	149
   643     0086                     _TRISB	set	134
   644     0088                     _TRISD	set	136
   645     0085                     _TRISA	set	133
   646     0189                     _ANSELH	set	393
   647     0188                     _ANSEL	set	392
   648                           
   649                           	psect	strings
   650     0003                     __pstrings:
   651     0003                     stringtab:
   652     0003                     __stringtab:
   653     0003                     stringcode:	
   654                           ;	String table - string pointers are 1 byte each
   655                           
   656     0003                     stringdir:
   657     0003  3000               	movlw	high stringdir
   658     0004  008A               	movwf	10
   659     0005  0804               	movf	4,w
   660     0006  0A84               	incf	4,f
   661     0007  0782               	addwf	2,f
   662     0008                     __stringbase:
   663     0008  3400               	retlw	0
   664     0009                     __end_of__stringtab:
   665     0009                     STR_2:
   666     0009  3420               	retlw	32	;' '
   667     000A  3420               	retlw	32	;' '
   668     000B  3420               	retlw	32	;' '
   669     000C  3420               	retlw	32	;' '
   670     000D  3456               	retlw	86	;'V'
   671     000E  3400               	retlw	0
   672     000F                     STR_1:
   673     000F  3453               	retlw	83	;'S'
   674     0010  3431               	retlw	49	;'1'
   675     0011  343A               	retlw	58	;':'
   676     0012  3420               	retlw	32	;' '
   677     0013  3400               	retlw	0
   678     0014                     STR_3:
   679     0014  343A               	retlw	58	;':'
   680     0015  3420               	retlw	32	;' '
   681     0016  3420               	retlw	32	;' '
   682     0017  343A               	retlw	58	;':'
   683     0018  3400               	retlw	0
   684                           
   685                           	psect	cinit
   686     07F3                     start_initialization:	
   687                           ; #config settings
   688                           
   689     07F3                     __initialization:
   690                           
   691                           ; Clear objects allocated to BANK0
   692     07F3  1383               	bcf	3,7	;select IRP bank0
   693     07F4  3020               	movlw	low __pbssBANK0
   694     07F5  0084               	movwf	4
   695     07F6  3037               	movlw	low (__pbssBANK0+23)
   696     07F7  120A  118A  2140  120A  118A  	fcall	clear_ram0
   697     07FC                     end_of_initialization:	
   698                           ;End of C runtime variable initialization code
   699                           
   700     07FC                     __end_of__initialization:
   701     07FC  0183               	clrf	3
   702     07FD  120A  118A  2EB2   	ljmp	_main	;jump to C main() function
   703                           
   704                           	psect	bssBANK0
   705     0020                     __pbssBANK0:
   706     0020                     _conver:
   707     0020                     	ds	4
   708     0024                     _valADC:
   709     0024                     	ds	3
   710     0027                     _modo:
   711     0027                     	ds	1
   712     0028                     _year1:
   713     0028                     	ds	1
   714     0029                     _year:
   715     0029                     	ds	1
   716     002A                     _mes1:
   717     002A                     	ds	1
   718     002B                     _mes:
   719     002B                     	ds	1
   720     002C                     _fecha1:
   721     002C                     	ds	1
   722     002D                     _fecha:
   723     002D                     	ds	1
   724     002E                     _hora:
   725     002E                     	ds	1
   726     002F                     _hor:
   727     002F                     	ds	1
   728     0030                     _minuto:
   729     0030                     	ds	1
   730     0031                     _min:
   731     0031                     	ds	1
   732     0032                     _segundo:
   733     0032                     	ds	1
   734     0033                     _sec:
   735     0033                     	ds	1
   736     0034                     _decena:
   737     0034                     	ds	1
   738     0035                     _unidad:
   739     0035                     	ds	1
   740     0036                     _lecADC:
   741     0036                     	ds	1
   742                           
   743                           	psect	clrtext
   744     0140                     clear_ram0:	
   745                           ;	Called with FSR containing the base address, and
   746                           ;	W with the last address+1
   747                           
   748     0140  0064               	clrwdt	;clear the watchdog before getting into this loop
   749     0141                     clrloop0:
   750     0141  0180               	clrf	0	;clear RAM location pointed to by FSR
   751     0142  0A84               	incf	4,f	;increment pointer
   752     0143  0604               	xorwf	4,w	;XOR with final address
   753     0144  1903               	btfsc	3,2	;have we reached the end yet?
   754     0145  3400               	retlw	0	;all done for this memory range, return
   755     0146  0604               	xorwf	4,w	;XOR again to restore value
   756     0147  2941               	goto	clrloop0	;do the next byte
   757                           
   758                           	psect	cstackCOMMON
   759     0070                     __pcstackCOMMON:
   760     0070                     ?_setupINTOSC:
   761     0070                     ??_setupINTOSC:	
   762                           ; 1 bytes @ 0x0
   763                           
   764     0070                     ?_portsetup:	
   765                           ; 1 bytes @ 0x0
   766                           
   767     0070                     ?_Lcd_Init:	
   768                           ; 1 bytes @ 0x0
   769                           
   770     0070                     ?_Lcd_Clear:	
   771                           ; 1 bytes @ 0x0
   772                           
   773     0070                     ?_Lcd_Write_String:	
   774                           ; 1 bytes @ 0x0
   775                           
   776     0070                     ?_leer_x:	
   777                           ; 1 bytes @ 0x0
   778                           
   779     0070                     ?_desconvertir:	
   780                           ; 1 bytes @ 0x0
   781                           
   782     0070                     ?_inttochar:	
   783                           ; 1 bytes @ 0x0
   784                           
   785     0070                     ??_inttochar:	
   786                           ; 1 bytes @ 0x0
   787                           
   788     0070                     ?_Lcd_Write_Char:	
   789                           ; 1 bytes @ 0x0
   790                           
   791     0070                     ?_I2C_Master_Start:	
   792                           ; 1 bytes @ 0x0
   793                           
   794     0070                     ??_I2C_Master_Start:	
   795                           ; 1 bytes @ 0x0
   796                           
   797     0070                     ?_I2C_Master_Write:	
   798                           ; 1 bytes @ 0x0
   799                           
   800     0070                     ?_I2C_Master_RepeatedStart:	
   801                           ; 1 bytes @ 0x0
   802                           
   803     0070                     ??_I2C_Master_RepeatedStart:	
   804                           ; 1 bytes @ 0x0
   805                           
   806     0070                     ?_I2C_Master_Stop:	
   807                           ; 1 bytes @ 0x0
   808                           
   809     0070                     ??_I2C_Master_Stop:	
   810                           ; 1 bytes @ 0x0
   811                           
   812     0070                     ?_main:	
   813                           ; 1 bytes @ 0x0
   814                           
   815     0070                     ?_convertir:	
   816                           ; 1 bytes @ 0x0
   817                           
   818     0070                     ?_I2C_Master_Wait:	
   819                           ; 1 bytes @ 0x0
   820                           
   821     0070                     ??_I2C_Master_Wait:	
   822                           ; 1 bytes @ 0x0
   823                           
   824     0070                     ?_Lcd_Port:	
   825                           ; 1 bytes @ 0x0
   826                           
   827     0070                     ??_Lcd_Port:	
   828                           ; 1 bytes @ 0x0
   829                           
   830     0070                     ?_Lcd_Cmd:	
   831                           ; 1 bytes @ 0x0
   832                           
   833     0070                     ?___bmul:	
   834                           ; 1 bytes @ 0x0
   835                           
   836     0070                     ?_I2C_Master_Read:	
   837                           ; 1 bytes @ 0x0
   838                           
   839     0070                     ?___awdiv:	
   840                           ; 2 bytes @ 0x0
   841                           
   842     0070                     ?___awmod:	
   843                           ; 2 bytes @ 0x0
   844                           
   845     0070                     ?___lldiv:	
   846                           ; 2 bytes @ 0x0
   847                           
   848     0070                     Lcd_Port@a:	
   849                           ; 4 bytes @ 0x0
   850                           
   851     0070                     inttochar@num:	
   852                           ; 1 bytes @ 0x0
   853                           
   854     0070                     setupINTOSC@IRCF:	
   855                           ; 1 bytes @ 0x0
   856                           
   857     0070                     ___bmul@multiplicand:	
   858                           ; 1 bytes @ 0x0
   859                           
   860     0070                     I2C_Master_Write@d:	
   861                           ; 1 bytes @ 0x0
   862                           
   863     0070                     I2C_Master_Read@a:	
   864                           ; 2 bytes @ 0x0
   865                           
   866     0070                     ___awdiv@divisor:	
   867                           ; 2 bytes @ 0x0
   868                           
   869     0070                     ___awmod@divisor:	
   870                           ; 2 bytes @ 0x0
   871                           
   872     0070                     ___lldiv@divisor:	
   873                           ; 2 bytes @ 0x0
   874                           
   875                           
   876                           ; 4 bytes @ 0x0
   877     0070                     	ds	1
   878     0071                     ??_Lcd_Write_Char:
   879     0071                     ??_Lcd_Cmd:	
   880                           ; 1 bytes @ 0x1
   881                           
   882     0071                     ??___bmul:	
   883                           ; 1 bytes @ 0x1
   884                           
   885                           
   886                           ; 1 bytes @ 0x1
   887     0071                     	ds	1
   888     0072                     ?_enviar_x:
   889     0072                     ??_I2C_Master_Write:	
   890                           ; 1 bytes @ 0x2
   891                           
   892     0072                     ??_I2C_Master_Read:	
   893                           ; 1 bytes @ 0x2
   894                           
   895     0072                     enviar_x@val2:	
   896                           ; 1 bytes @ 0x2
   897                           
   898     0072                     Lcd_Write_Char@temp:	
   899                           ; 1 bytes @ 0x2
   900                           
   901     0072                     ___bmul@product:	
   902                           ; 1 bytes @ 0x2
   903                           
   904     0072                     ___awdiv@dividend:	
   905                           ; 1 bytes @ 0x2
   906                           
   907     0072                     ___awmod@dividend:	
   908                           ; 2 bytes @ 0x2
   909                           
   910                           
   911                           ; 2 bytes @ 0x2
   912     0072                     	ds	1
   913     0073                     ??_enviar_x:
   914     0073                     Lcd_Cmd@a:	
   915                           ; 1 bytes @ 0x3
   916                           
   917     0073                     Lcd_Write_Char@y:	
   918                           ; 1 bytes @ 0x3
   919                           
   920     0073                     ___bmul@multiplier:	
   921                           ; 1 bytes @ 0x3
   922                           
   923                           
   924                           ; 1 bytes @ 0x3
   925     0073                     	ds	1
   926     0074                     ??_Lcd_Init:
   927     0074                     ??_Lcd_Clear:	
   928                           ; 1 bytes @ 0x4
   929                           
   930     0074                     ?_Lcd_Set_Cursor:	
   931                           ; 1 bytes @ 0x4
   932                           
   933     0074                     ??_convertir:	
   934                           ; 1 bytes @ 0x4
   935                           
   936     0074                     ??___awdiv:	
   937                           ; 1 bytes @ 0x4
   938                           
   939     0074                     ??___awmod:	
   940                           ; 1 bytes @ 0x4
   941                           
   942     0074                     Lcd_Set_Cursor@b:	
   943                           ; 1 bytes @ 0x4
   944                           
   945     0074                     Lcd_Write_Char@a:	
   946                           ; 1 bytes @ 0x4
   947                           
   948     0074                     I2C_Master_Read@temp:	
   949                           ; 1 bytes @ 0x4
   950                           
   951     0074                     ___lldiv@dividend:	
   952                           ; 2 bytes @ 0x4
   953                           
   954                           
   955                           ; 4 bytes @ 0x4
   956     0074                     	ds	1
   957     0075                     ??_Lcd_Set_Cursor:
   958     0075                     ??_Lcd_Write_String:	
   959                           ; 1 bytes @ 0x5
   960                           
   961     0075                     convertir@unidad:	
   962                           ; 1 bytes @ 0x5
   963                           
   964     0075                     enviar_x@val1:	
   965                           ; 1 bytes @ 0x5
   966                           
   967     0075                     ___awdiv@counter:	
   968                           ; 1 bytes @ 0x5
   969                           
   970     0075                     ___awmod@counter:	
   971                           ; 1 bytes @ 0x5
   972                           
   973     0075                     Lcd_Write_String@i:	
   974                           ; 1 bytes @ 0x5
   975                           
   976                           
   977                           ; 2 bytes @ 0x5
   978     0075                     	ds	1
   979     0076                     convertir@decena:
   980     0076                     Lcd_Set_Cursor@a:	
   981                           ; 1 bytes @ 0x6
   982                           
   983     0076                     ___awdiv@sign:	
   984                           ; 1 bytes @ 0x6
   985                           
   986     0076                     ___awmod@sign:	
   987                           ; 1 bytes @ 0x6
   988                           
   989                           
   990                           ; 1 bytes @ 0x6
   991     0076                     	ds	1
   992     0077                     convertir@conversion:
   993     0077                     Lcd_Set_Cursor@z:	
   994                           ; 1 bytes @ 0x7
   995                           
   996     0077                     Lcd_Write_String@a:	
   997                           ; 1 bytes @ 0x7
   998                           
   999     0077                     ___awdiv@quotient:	
  1000                           ; 1 bytes @ 0x7
  1001                           
  1002                           
  1003                           ; 2 bytes @ 0x7
  1004     0077                     	ds	1
  1005     0078                     ??___lldiv:
  1006     0078                     convertir@valor:	
  1007                           ; 1 bytes @ 0x8
  1008                           
  1009     0078                     Lcd_Set_Cursor@y:	
  1010                           ; 1 bytes @ 0x8
  1011                           
  1012                           
  1013                           ; 1 bytes @ 0x8
  1014     0078                     	ds	1
  1015     0079                     ??_leer_x:
  1016     0079                     ??_desconvertir:	
  1017                           ; 1 bytes @ 0x9
  1018                           
  1019     0079                     ?_descomponer:	
  1020                           ; 1 bytes @ 0x9
  1021                           
  1022     0079                     Lcd_Set_Cursor@temp:	
  1023                           ; 1 bytes @ 0x9
  1024                           
  1025     0079                     descomponer@pos:	
  1026                           ; 1 bytes @ 0x9
  1027                           
  1028     0079                     ___lldiv@quotient:	
  1029                           ; 2 bytes @ 0x9
  1030                           
  1031                           
  1032                           ; 4 bytes @ 0x9
  1033     0079                     	ds	2
  1034     007B                     desconvertir@unidad:
  1035     007B                     leer_x@address:	
  1036                           ; 1 bytes @ 0xB
  1037                           
  1038     007B                     descomponer@num:	
  1039                           ; 1 bytes @ 0xB
  1040                           
  1041                           
  1042                           ; 1 bytes @ 0xB
  1043     007B                     	ds	1
  1044     007C                     ??_descomponer:
  1045     007C                     desconvertir@valor:	
  1046                           ; 1 bytes @ 0xC
  1047                           
  1048     007C                     leer_x@valor:	
  1049                           ; 1 bytes @ 0xC
  1050                           
  1051                           
  1052                           ; 1 bytes @ 0xC
  1053     007C                     	ds	1
  1054     007D                     desconvertir@decena:
  1055     007D                     ___lldiv@counter:	
  1056                           ; 1 bytes @ 0xD
  1057                           
  1058                           
  1059                           ; 1 bytes @ 0xD
  1060     007D                     	ds	1
  1061     007E                     ??_portsetup:
  1062     007E                     ??_Escribir_dato:	
  1063                           ; 1 bytes @ 0xE
  1064                           
  1065                           
  1066                           	psect	cstackBANK0
  1067     0037                     __pcstackBANK0:	
  1068                           ; 1 bytes @ 0xE
  1069                           
  1070     0037                     ?_I2C_Master_Init:
  1071     0037                     descomponer@cent:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074     0037                     I2C_Master_Init@c:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077                           
  1078                           ; 4 bytes @ 0x0
  1079     0037                     	ds	1
  1080     0038                     descomponer@uni:
  1081                           
  1082                           ; 1 bytes @ 0x1
  1083     0038                     	ds	1
  1084     0039                     descomponer@dec:
  1085                           
  1086                           ; 1 bytes @ 0x2
  1087     0039                     	ds	1
  1088     003A                     ?_Escribir_dato:
  1089     003A                     Escribir_dato@posx:	
  1090                           ; 1 bytes @ 0x3
  1091                           
  1092                           
  1093                           ; 1 bytes @ 0x3
  1094     003A                     	ds	1
  1095     003B                     ??_I2C_Master_Init:
  1096     003B                     Escribir_dato@posy:	
  1097                           ; 1 bytes @ 0x4
  1098                           
  1099                           
  1100                           ; 1 bytes @ 0x4
  1101     003B                     	ds	1
  1102     003C                     Escribir_dato@dato:
  1103                           
  1104                           ; 1 bytes @ 0x5
  1105     003C                     	ds	3
  1106     003F                     ??_main:
  1107                           
  1108                           ; 1 bytes @ 0x8
  1109     003F                     	ds	2
  1110                           
  1111                           	psect	maintext
  1112     06B2                     __pmaintext:	
  1113 ;;
  1114 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1115 ;;
  1116 ;; *************** function _main *****************
  1117 ;; Defined at:
  1118 ;;		line 66 in file "main.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : B00/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1132 ;;      Params:         0       0       0       0       0
  1133 ;;      Locals:         0       0       0       0       0
  1134 ;;      Temps:          0       2       0       0       0
  1135 ;;      Totals:         0       2       0       0       0
  1136 ;;Total ram usage:        2 bytes
  1137 ;; Hardware stack levels required when called: 4
  1138 ;; This function calls:
  1139 ;;		_Escribir_dato
  1140 ;;		_Lcd_Clear
  1141 ;;		_Lcd_Init
  1142 ;;		_Lcd_Set_Cursor
  1143 ;;		_Lcd_Write_String
  1144 ;;		_desconvertir
  1145 ;;		_enviar_x
  1146 ;;		_leer_x
  1147 ;;		_portsetup
  1148 ;;		_setupINTOSC
  1149 ;; This function is called by:
  1150 ;;		Startup code after reset
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154     06B2                     _main:	
  1155                           ;psect for function _main
  1156                           
  1157     06B2                     l1781:	
  1158                           ;incstack = 0
  1159                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1160                           
  1161                           
  1162                           ;main.c: 67:     setupINTOSC(7);
  1163     06B2  3007               	movlw	7
  1164     06B3  120A  118A  2521  120A  118A  	fcall	_setupINTOSC
  1165                           
  1166                           ;main.c: 68:     portsetup();
  1167     06B8  120A  118A  2218  120A  118A  	fcall	_portsetup
  1168                           
  1169                           ;main.c: 70:     Lcd_Init();
  1170     06BD  120A  118A  24C4  120A  118A  	fcall	_Lcd_Init
  1171                           
  1172                           ;main.c: 71:     Lcd_Clear();
  1173     06C2  120A  118A  216D  120A  118A  	fcall	_Lcd_Clear
  1174                           
  1175                           ;main.c: 72:     Lcd_Set_Cursor(1,2);
  1176     06C7  3002               	movlw	2
  1177     06C8  00F4               	movwf	Lcd_Set_Cursor@b
  1178     06C9  3001               	movlw	1
  1179     06CA  120A  118A  2389  120A  118A  	fcall	_Lcd_Set_Cursor
  1180     06CF                     l1783:
  1181                           
  1182                           ;main.c: 73:     Lcd_Write_String("S1: ");
  1183     06CF  3007               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1184     06D0  120A  118A  21F3  120A  118A  	fcall	_Lcd_Write_String
  1185     06D5                     l1785:
  1186                           
  1187                           ;main.c: 74:     Lcd_Set_Cursor(2,1);
  1188     06D5  01F4               	clrf	Lcd_Set_Cursor@b
  1189     06D6  0AF4               	incf	Lcd_Set_Cursor@b,f
  1190     06D7  3002               	movlw	2
  1191     06D8  120A  118A  2389  120A  118A  	fcall	_Lcd_Set_Cursor
  1192                           
  1193                           ;main.c: 75:     Lcd_Write_String("    V");
  1194     06DD  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1195     06DE  120A  118A  21F3  120A  118A  	fcall	_Lcd_Write_String
  1196     06E3                     l1787:
  1197                           
  1198                           ;main.c: 76:     Lcd_Set_Cursor(1,10);
  1199     06E3  300A               	movlw	10
  1200     06E4  00F4               	movwf	Lcd_Set_Cursor@b
  1201     06E5  3001               	movlw	1
  1202     06E6  120A  118A  2389  120A  118A  	fcall	_Lcd_Set_Cursor
  1203     06EB                     l1789:
  1204                           
  1205                           ;main.c: 77:     Lcd_Write_String(":  :");
  1206     06EB  300C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1207     06EC  120A  118A  21F3  120A  118A  	fcall	_Lcd_Write_String
  1208     06F1                     l1791:
  1209                           
  1210                           ;main.c: 79:     modo = 0;
  1211     06F1  1283               	bcf	3,5	;RP0=0, select bank0
  1212     06F2  1303               	bcf	3,6	;RP1=0, select bank0
  1213     06F3  01A7               	clrf	_modo
  1214     06F4                     l1793:
  1215                           
  1216                           ;main.c: 81:     enviar_x(0, 0);
  1217     06F4  01F2               	clrf	enviar_x@val2
  1218     06F5  3000               	movlw	0
  1219     06F6  120A  118A  22DB  120A  118A  	fcall	_enviar_x
  1220     06FB                     l1795:
  1221                           
  1222                           ;main.c: 84:         PORTA = modo;
  1223     06FB  1283               	bcf	3,5	;RP0=0, select bank0
  1224     06FC  1303               	bcf	3,6	;RP1=0, select bank0
  1225     06FD  0827               	movf	_modo,w
  1226     06FE  0085               	movwf	5	;volatile
  1227     06FF                     l1797:
  1228                           
  1229                           ;main.c: 88:         sec = leer_x(0x00);
  1230     06FF  3000               	movlw	0
  1231     0700  120A  118A  2348  120A  118A  	fcall	_leer_x
  1232     0705  1283               	bcf	3,5	;RP0=0, select bank0
  1233     0706  1303               	bcf	3,6	;RP1=0, select bank0
  1234     0707  00B3               	movwf	_sec
  1235     0708                     l1799:
  1236                           
  1237                           ;main.c: 89:         Escribir_dato(sec, 14, 1);
  1238     0708  300E               	movlw	14
  1239     0709  00BA               	movwf	Escribir_dato@posx
  1240     070A  01BB               	clrf	Escribir_dato@posy
  1241     070B  0ABB               	incf	Escribir_dato@posy,f
  1242     070C  0833               	movf	_sec,w
  1243     070D  120A  118A  23CF  120A  118A  	fcall	_Escribir_dato
  1244     0712                     l1801:
  1245                           
  1246                           ;main.c: 91:         min = leer_x(0x01);
  1247     0712  3001               	movlw	1
  1248     0713  120A  118A  2348  120A  118A  	fcall	_leer_x
  1249     0718  1283               	bcf	3,5	;RP0=0, select bank0
  1250     0719  1303               	bcf	3,6	;RP1=0, select bank0
  1251     071A  00B1               	movwf	_min
  1252     071B                     l1803:
  1253                           
  1254                           ;main.c: 92:         Escribir_dato(min, 11, 1);
  1255     071B  300B               	movlw	11
  1256     071C  00BA               	movwf	Escribir_dato@posx
  1257     071D  01BB               	clrf	Escribir_dato@posy
  1258     071E  0ABB               	incf	Escribir_dato@posy,f
  1259     071F  0831               	movf	_min,w
  1260     0720  120A  118A  23CF  120A  118A  	fcall	_Escribir_dato
  1261     0725                     l1805:
  1262                           
  1263                           ;main.c: 94:         if(!PORTBbits.RB4){
  1264     0725  1283               	bcf	3,5	;RP0=0, select bank0
  1265     0726  1303               	bcf	3,6	;RP1=0, select bank0
  1266     0727  1A06               	btfsc	6,4	;volatile
  1267     0728  2F2A               	goto	u1451
  1268     0729  2F2B               	goto	u1450
  1269     072A                     u1451:
  1270     072A  2EFB               	goto	l1795
  1271     072B                     u1450:
  1272     072B                     l1807:
  1273                           
  1274                           ;main.c: 95:             _delay((unsigned long)((20)*(8000000/4000.0)));
  1275     072B  3034               	movlw	52
  1276     072C  1283               	bcf	3,5	;RP0=0, select bank0
  1277     072D  1303               	bcf	3,6	;RP1=0, select bank0
  1278     072E  00C0               	movwf	??_main+1
  1279     072F  30F1               	movlw	241
  1280     0730  00BF               	movwf	??_main
  1281     0731                     u1597:
  1282     0731  0BBF               	decfsz	??_main,f
  1283     0732  2F31               	goto	u1597
  1284     0733  0BC0               	decfsz	??_main+1,f
  1285     0734  2F31               	goto	u1597
  1286                           
  1287                           ;main.c: 96:             while(PORTBbits.RB3){
  1288     0735  2FE9               	goto	l1869
  1289     0736                     l96:
  1290                           
  1291                           ;main.c: 98:                 if(PORTBbits.RB7 == 0){
  1292     0736  1B86               	btfsc	6,7	;volatile
  1293     0737  2F39               	goto	u1461
  1294     0738  2F3A               	goto	u1460
  1295     0739                     u1461:
  1296     0739  2F51               	goto	l1817
  1297     073A                     u1460:
  1298     073A                     l1809:
  1299                           
  1300                           ;main.c: 99:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1301     073A  3034               	movlw	52
  1302     073B  1283               	bcf	3,5	;RP0=0, select bank0
  1303     073C  1303               	bcf	3,6	;RP1=0, select bank0
  1304     073D  00C0               	movwf	??_main+1
  1305     073E  30F1               	movlw	241
  1306     073F  00BF               	movwf	??_main
  1307     0740                     u1607:
  1308     0740  0BBF               	decfsz	??_main,f
  1309     0741  2F40               	goto	u1607
  1310     0742  0BC0               	decfsz	??_main+1,f
  1311     0743  2F40               	goto	u1607
  1312     0744                     l1811:
  1313                           
  1314                           ;main.c: 100:                     if (modo < 1){
  1315     0744  1283               	bcf	3,5	;RP0=0, select bank0
  1316     0745  1303               	bcf	3,6	;RP1=0, select bank0
  1317     0746  0827               	movf	_modo,w
  1318     0747  1D03               	btfss	3,2
  1319     0748  2F4A               	goto	u1471
  1320     0749  2F4B               	goto	u1470
  1321     074A                     u1471:
  1322     074A  2F50               	goto	l1815
  1323     074B                     u1470:
  1324     074B                     l1813:
  1325                           
  1326                           ;main.c: 101:                         modo += 1;
  1327     074B  3001               	movlw	1
  1328     074C  00BF               	movwf	??_main
  1329     074D  083F               	movf	??_main,w
  1330     074E  07A7               	addwf	_modo,f
  1331                           
  1332                           ;main.c: 102:                     }
  1333     074F  2F51               	goto	l1817
  1334     0750                     l1815:
  1335                           
  1336                           ;main.c: 104:                         modo = 0;
  1337     0750  01A7               	clrf	_modo
  1338     0751                     l1817:
  1339                           
  1340                           ;main.c: 108:                 if(PORTBbits.RB6 == 0){
  1341     0751  1B06               	btfsc	6,6	;volatile
  1342     0752  2F54               	goto	u1481
  1343     0753  2F55               	goto	u1480
  1344     0754                     u1481:
  1345     0754  2F9E               	goto	l1843
  1346     0755                     u1480:
  1347     0755                     l1819:
  1348                           
  1349                           ;main.c: 109:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1350     0755  3034               	movlw	52
  1351     0756  1283               	bcf	3,5	;RP0=0, select bank0
  1352     0757  1303               	bcf	3,6	;RP1=0, select bank0
  1353     0758  00C0               	movwf	??_main+1
  1354     0759  30F1               	movlw	241
  1355     075A  00BF               	movwf	??_main
  1356     075B                     u1617:
  1357     075B  0BBF               	decfsz	??_main,f
  1358     075C  2F5B               	goto	u1617
  1359     075D  0BC0               	decfsz	??_main+1,f
  1360     075E  2F5B               	goto	u1617
  1361     075F                     l1821:
  1362                           
  1363                           ;main.c: 110:                     if (modo == 0){
  1364     075F  1283               	bcf	3,5	;RP0=0, select bank0
  1365     0760  1303               	bcf	3,6	;RP1=0, select bank0
  1366     0761  0827               	movf	_modo,w
  1367     0762  1D03               	btfss	3,2
  1368     0763  2F65               	goto	u1491
  1369     0764  2F66               	goto	u1490
  1370     0765                     u1491:
  1371     0765  2F73               	goto	l1829
  1372     0766                     u1490:
  1373     0766                     l1823:
  1374                           
  1375                           ;main.c: 111:                         if (sec<59){
  1376     0766  303B               	movlw	59
  1377     0767  0233               	subwf	_sec,w
  1378     0768  1803               	skipnc
  1379     0769  2F6B               	goto	u1501
  1380     076A  2F6C               	goto	u1500
  1381     076B                     u1501:
  1382     076B  2F71               	goto	l1827
  1383     076C                     u1500:
  1384     076C                     l1825:
  1385                           
  1386                           ;main.c: 112:                             sec ++;
  1387     076C  3001               	movlw	1
  1388     076D  00BF               	movwf	??_main
  1389     076E  083F               	movf	??_main,w
  1390     076F  07B3               	addwf	_sec,f
  1391                           
  1392                           ;main.c: 113:                         }
  1393     0770  2F84               	goto	l1837
  1394     0771                     l1827:
  1395                           
  1396                           ;main.c: 115:                             sec = 0;
  1397     0771  01B3               	clrf	_sec
  1398     0772  2F84               	goto	l1837
  1399     0773                     l1829:
  1400     0773  0327               	decf	_modo,w
  1401     0774  1D03               	btfss	3,2
  1402     0775  2F77               	goto	u1511
  1403     0776  2F78               	goto	u1510
  1404     0777                     u1511:
  1405     0777  2F84               	goto	l1837
  1406     0778                     u1510:
  1407     0778                     l1831:
  1408                           
  1409                           ;main.c: 119:                         if (min<59){
  1410     0778  303B               	movlw	59
  1411     0779  0231               	subwf	_min,w
  1412     077A  1803               	skipnc
  1413     077B  2F7D               	goto	u1521
  1414     077C  2F7E               	goto	u1520
  1415     077D                     u1521:
  1416     077D  2F83               	goto	l1835
  1417     077E                     u1520:
  1418     077E                     l1833:
  1419                           
  1420                           ;main.c: 120:                             min++;
  1421     077E  3001               	movlw	1
  1422     077F  00BF               	movwf	??_main
  1423     0780  083F               	movf	??_main,w
  1424     0781  07B1               	addwf	_min,f
  1425                           
  1426                           ;main.c: 121:                         }
  1427     0782  2F84               	goto	l1837
  1428     0783                     l1835:
  1429                           
  1430                           ;main.c: 123:                             min = 0;
  1431     0783  01B1               	clrf	_min
  1432     0784                     l1837:
  1433                           
  1434                           ;main.c: 126:                     sec = desconvertir(sec);
  1435     0784  0833               	movf	_sec,w
  1436     0785  120A  118A  2273  120A  118A  	fcall	_desconvertir
  1437     078A  1283               	bcf	3,5	;RP0=0, select bank0
  1438     078B  1303               	bcf	3,6	;RP1=0, select bank0
  1439     078C  00B3               	movwf	_sec
  1440     078D                     l1839:
  1441                           
  1442                           ;main.c: 127:                     min = desconvertir(min);
  1443     078D  0831               	movf	_min,w
  1444     078E  120A  118A  2273  120A  118A  	fcall	_desconvertir
  1445     0793  1283               	bcf	3,5	;RP0=0, select bank0
  1446     0794  1303               	bcf	3,6	;RP1=0, select bank0
  1447     0795  00B1               	movwf	_min
  1448     0796                     l1841:
  1449                           
  1450                           ;main.c: 128:                     enviar_x(sec, min);
  1451     0796  0831               	movf	_min,w
  1452     0797  00F2               	movwf	enviar_x@val2
  1453     0798  0833               	movf	_sec,w
  1454     0799  120A  118A  22DB  120A  118A  	fcall	_enviar_x
  1455     079E                     l1843:
  1456                           
  1457                           ;main.c: 132:                 if(PORTBbits.RB5 == 0){
  1458     079E  1283               	bcf	3,5	;RP0=0, select bank0
  1459     079F  1303               	bcf	3,6	;RP1=0, select bank0
  1460     07A0  1A86               	btfsc	6,5	;volatile
  1461     07A1  2FA3               	goto	u1531
  1462     07A2  2FA4               	goto	u1530
  1463     07A3                     u1531:
  1464     07A3  2FE9               	goto	l1869
  1465     07A4                     u1530:
  1466     07A4                     l1845:
  1467                           
  1468                           ;main.c: 133:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1469     07A4  3034               	movlw	52
  1470     07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1471     07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1472     07A7  00C0               	movwf	??_main+1
  1473     07A8  30F1               	movlw	241
  1474     07A9  00BF               	movwf	??_main
  1475     07AA                     u1627:
  1476     07AA  0BBF               	decfsz	??_main,f
  1477     07AB  2FAA               	goto	u1627
  1478     07AC  0BC0               	decfsz	??_main+1,f
  1479     07AD  2FAA               	goto	u1627
  1480     07AE                     l1847:
  1481                           
  1482                           ;main.c: 135:                     if (modo == 0){
  1483     07AE  1283               	bcf	3,5	;RP0=0, select bank0
  1484     07AF  1303               	bcf	3,6	;RP1=0, select bank0
  1485     07B0  0827               	movf	_modo,w
  1486     07B1  1D03               	btfss	3,2
  1487     07B2  2FB4               	goto	u1541
  1488     07B3  2FB5               	goto	u1540
  1489     07B4                     u1541:
  1490     07B4  2FC0               	goto	l1855
  1491     07B5                     u1540:
  1492     07B5                     l1849:
  1493                           
  1494                           ;main.c: 136:                         if (sec > 0){
  1495     07B5  0833               	movf	_sec,w
  1496     07B6  1903               	btfsc	3,2
  1497     07B7  2FB9               	goto	u1551
  1498     07B8  2FBA               	goto	u1550
  1499     07B9                     u1551:
  1500     07B9  2FBD               	goto	l1853
  1501     07BA                     u1550:
  1502     07BA                     l1851:
  1503                           
  1504                           ;main.c: 137:                             sec--;
  1505     07BA  3001               	movlw	1
  1506     07BB  02B3               	subwf	_sec,f
  1507                           
  1508                           ;main.c: 138:                         }
  1509     07BC  2FCF               	goto	l1863
  1510     07BD                     l1853:
  1511                           
  1512                           ;main.c: 140:                             sec = 59;
  1513     07BD  303B               	movlw	59
  1514     07BE  00B3               	movwf	_sec
  1515     07BF  2FCF               	goto	l1863
  1516     07C0                     l1855:
  1517     07C0  0327               	decf	_modo,w
  1518     07C1  1D03               	btfss	3,2
  1519     07C2  2FC4               	goto	u1561
  1520     07C3  2FC5               	goto	u1560
  1521     07C4                     u1561:
  1522     07C4  2FCF               	goto	l1863
  1523     07C5                     u1560:
  1524     07C5                     l1857:
  1525                           
  1526                           ;main.c: 144:                         if (min > 0){
  1527     07C5  0831               	movf	_min,w
  1528     07C6  1903               	btfsc	3,2
  1529     07C7  2FC9               	goto	u1571
  1530     07C8  2FCA               	goto	u1570
  1531     07C9                     u1571:
  1532     07C9  2FCD               	goto	l1861
  1533     07CA                     u1570:
  1534     07CA                     l1859:
  1535                           
  1536                           ;main.c: 145:                             min--;
  1537     07CA  3001               	movlw	1
  1538     07CB  02B1               	subwf	_min,f
  1539                           
  1540                           ;main.c: 146:                         }
  1541     07CC  2FCF               	goto	l1863
  1542     07CD                     l1861:
  1543                           
  1544                           ;main.c: 148:                             min = 59;
  1545     07CD  303B               	movlw	59
  1546     07CE  00B1               	movwf	_min
  1547     07CF                     l1863:
  1548                           
  1549                           ;main.c: 151:                     sec = desconvertir(sec);
  1550     07CF  0833               	movf	_sec,w
  1551     07D0  120A  118A  2273  120A  118A  	fcall	_desconvertir
  1552     07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1553     07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1554     07D7  00B3               	movwf	_sec
  1555     07D8                     l1865:
  1556                           
  1557                           ;main.c: 152:                     min = desconvertir(min);
  1558     07D8  0831               	movf	_min,w
  1559     07D9  120A  118A  2273  120A  118A  	fcall	_desconvertir
  1560     07DE  1283               	bcf	3,5	;RP0=0, select bank0
  1561     07DF  1303               	bcf	3,6	;RP1=0, select bank0
  1562     07E0  00B1               	movwf	_min
  1563     07E1                     l1867:
  1564                           
  1565                           ;main.c: 153:                     enviar_x(sec, min);
  1566     07E1  0831               	movf	_min,w
  1567     07E2  00F2               	movwf	enviar_x@val2
  1568     07E3  0833               	movf	_sec,w
  1569     07E4  120A  118A  22DB  120A  118A  	fcall	_enviar_x
  1570     07E9                     l1869:
  1571                           
  1572                           ;main.c: 96:             while(PORTBbits.RB3){
  1573     07E9  1283               	bcf	3,5	;RP0=0, select bank0
  1574     07EA  1303               	bcf	3,6	;RP1=0, select bank0
  1575     07EB  1986               	btfsc	6,3	;volatile
  1576     07EC  2FEE               	goto	u1581
  1577     07ED  2FEF               	goto	u1580
  1578     07EE                     u1581:
  1579     07EE  2F36               	goto	l96
  1580     07EF                     u1580:
  1581     07EF  2EFB               	goto	l1795
  1582     07F0  120A  118A  2800   	ljmp	start
  1583     07F3                     __end_of_main:
  1584                           
  1585                           	psect	text1
  1586     0521                     __ptext1:	
  1587 ;; *************** function _setupINTOSC *****************
  1588 ;; Defined at:
  1589 ;;		line 10 in file "oscilador.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  IRCF            1    wreg     unsigned char 
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;  IRCF            1    0[COMMON] unsigned char 
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, status,2, status,0
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1603 ;;      Params:         0       0       0       0       0
  1604 ;;      Locals:         1       0       0       0       0
  1605 ;;      Temps:          0       0       0       0       0
  1606 ;;      Totals:         1       0       0       0       0
  1607 ;;Total ram usage:        1 bytes
  1608 ;; Hardware stack levels used: 1
  1609 ;; This function calls:
  1610 ;;		Nothing
  1611 ;; This function is called by:
  1612 ;;		_main
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616     0521                     _setupINTOSC:	
  1617                           ;psect for function _setupINTOSC
  1618                           
  1619                           
  1620                           ;incstack = 0
  1621                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  1622                           ;setupINTOSC@IRCF stored from wreg
  1623     0521  00F0               	movwf	setupINTOSC@IRCF
  1624     0522                     l1711:
  1625                           
  1626                           ;oscilador.c: 11:     if (IRCF == 7){
  1627     0522  3007               	movlw	7
  1628     0523  0670               	xorwf	setupINTOSC@IRCF,w
  1629     0524  1D03               	btfss	3,2
  1630     0525  2D27               	goto	u1351
  1631     0526  2D28               	goto	u1350
  1632     0527                     u1351:
  1633     0527  2D2C               	goto	l271
  1634     0528                     u1350:
  1635     0528                     l1713:
  1636                           
  1637                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  1638     0528  3070               	movlw	112
  1639     0529  1683               	bsf	3,5	;RP0=1, select bank1
  1640     052A  1303               	bcf	3,6	;RP1=0, select bank1
  1641     052B  048F               	iorwf	15,f	;volatile
  1642     052C                     l271:	
  1643                           ;oscilador.c: 13:     }
  1644                           
  1645                           
  1646                           ;oscilador.c: 14:     if (IRCF == 6){
  1647     052C  3006               	movlw	6
  1648     052D  0670               	xorwf	setupINTOSC@IRCF,w
  1649     052E  1D03               	btfss	3,2
  1650     052F  2D31               	goto	u1361
  1651     0530  2D32               	goto	u1360
  1652     0531                     u1361:
  1653     0531  2D38               	goto	l272
  1654     0532                     u1360:
  1655     0532                     l1715:
  1656                           
  1657                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  1658     0532  1683               	bsf	3,5	;RP0=1, select bank1
  1659     0533  1303               	bcf	3,6	;RP1=0, select bank1
  1660     0534  080F               	movf	15,w	;volatile
  1661     0535  398F               	andlw	-113
  1662     0536  3860               	iorlw	96
  1663     0537  008F               	movwf	15	;volatile
  1664     0538                     l272:	
  1665                           ;oscilador.c: 16:     }
  1666                           
  1667                           
  1668                           ;oscilador.c: 17:     if (IRCF == 5){
  1669     0538  3005               	movlw	5
  1670     0539  0670               	xorwf	setupINTOSC@IRCF,w
  1671     053A  1D03               	btfss	3,2
  1672     053B  2D3D               	goto	u1371
  1673     053C  2D3E               	goto	u1370
  1674     053D                     u1371:
  1675     053D  2D44               	goto	l273
  1676     053E                     u1370:
  1677     053E                     l1717:
  1678                           
  1679                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  1680     053E  1683               	bsf	3,5	;RP0=1, select bank1
  1681     053F  1303               	bcf	3,6	;RP1=0, select bank1
  1682     0540  080F               	movf	15,w	;volatile
  1683     0541  398F               	andlw	-113
  1684     0542  3850               	iorlw	80
  1685     0543  008F               	movwf	15	;volatile
  1686     0544                     l273:	
  1687                           ;oscilador.c: 19:     }
  1688                           
  1689                           
  1690                           ;oscilador.c: 20:     if (IRCF == 4){
  1691     0544  3004               	movlw	4
  1692     0545  0670               	xorwf	setupINTOSC@IRCF,w
  1693     0546  1D03               	btfss	3,2
  1694     0547  2D49               	goto	u1381
  1695     0548  2D4A               	goto	u1380
  1696     0549                     u1381:
  1697     0549  2D50               	goto	l274
  1698     054A                     u1380:
  1699     054A                     l1719:
  1700                           
  1701                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  1702     054A  1683               	bsf	3,5	;RP0=1, select bank1
  1703     054B  1303               	bcf	3,6	;RP1=0, select bank1
  1704     054C  080F               	movf	15,w	;volatile
  1705     054D  398F               	andlw	-113
  1706     054E  3840               	iorlw	64
  1707     054F  008F               	movwf	15	;volatile
  1708     0550                     l274:	
  1709                           ;oscilador.c: 22:     }
  1710                           
  1711                           
  1712                           ;oscilador.c: 23:     if (IRCF == 3){
  1713     0550  3003               	movlw	3
  1714     0551  0670               	xorwf	setupINTOSC@IRCF,w
  1715     0552  1D03               	btfss	3,2
  1716     0553  2D55               	goto	u1391
  1717     0554  2D56               	goto	u1390
  1718     0555                     u1391:
  1719     0555  2D5C               	goto	l275
  1720     0556                     u1390:
  1721     0556                     l1721:
  1722                           
  1723                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  1724     0556  1683               	bsf	3,5	;RP0=1, select bank1
  1725     0557  1303               	bcf	3,6	;RP1=0, select bank1
  1726     0558  080F               	movf	15,w	;volatile
  1727     0559  398F               	andlw	-113
  1728     055A  3830               	iorlw	48
  1729     055B  008F               	movwf	15	;volatile
  1730     055C                     l275:	
  1731                           ;oscilador.c: 25:     }
  1732                           
  1733                           
  1734                           ;oscilador.c: 26:     if (IRCF == 2){
  1735     055C  3002               	movlw	2
  1736     055D  0670               	xorwf	setupINTOSC@IRCF,w
  1737     055E  1D03               	btfss	3,2
  1738     055F  2D61               	goto	u1401
  1739     0560  2D62               	goto	u1400
  1740     0561                     u1401:
  1741     0561  2D68               	goto	l276
  1742     0562                     u1400:
  1743     0562                     l1723:
  1744                           
  1745                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  1746     0562  1683               	bsf	3,5	;RP0=1, select bank1
  1747     0563  1303               	bcf	3,6	;RP1=0, select bank1
  1748     0564  080F               	movf	15,w	;volatile
  1749     0565  398F               	andlw	-113
  1750     0566  3820               	iorlw	32
  1751     0567  008F               	movwf	15	;volatile
  1752     0568                     l276:	
  1753                           ;oscilador.c: 28:     }
  1754                           
  1755                           
  1756                           ;oscilador.c: 29:     if (IRCF == 1){
  1757     0568  0370               	decf	setupINTOSC@IRCF,w
  1758     0569  1D03               	btfss	3,2
  1759     056A  2D6C               	goto	u1411
  1760     056B  2D6D               	goto	u1410
  1761     056C                     u1411:
  1762     056C  2D73               	goto	l277
  1763     056D                     u1410:
  1764     056D                     l1725:
  1765                           
  1766                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  1767     056D  1683               	bsf	3,5	;RP0=1, select bank1
  1768     056E  1303               	bcf	3,6	;RP1=0, select bank1
  1769     056F  080F               	movf	15,w	;volatile
  1770     0570  398F               	andlw	-113
  1771     0571  3810               	iorlw	16
  1772     0572  008F               	movwf	15	;volatile
  1773     0573                     l277:	
  1774                           ;oscilador.c: 31:     }
  1775                           
  1776                           
  1777                           ;oscilador.c: 32:     if (IRCF == 0){
  1778     0573  0870               	movf	setupINTOSC@IRCF,w
  1779     0574  1D03               	btfss	3,2
  1780     0575  2D77               	goto	u1421
  1781     0576  2D78               	goto	u1420
  1782     0577                     u1421:
  1783     0577  2D7C               	goto	l1729
  1784     0578                     u1420:
  1785     0578                     l1727:
  1786                           
  1787                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  1788     0578  308F               	movlw	-113
  1789     0579  1683               	bsf	3,5	;RP0=1, select bank1
  1790     057A  1303               	bcf	3,6	;RP1=0, select bank1
  1791     057B  058F               	andwf	15,f	;volatile
  1792     057C                     l1729:
  1793                           
  1794                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  1795     057C  1683               	bsf	3,5	;RP0=1, select bank1
  1796     057D  1303               	bcf	3,6	;RP1=0, select bank1
  1797     057E  140F               	bsf	15,0	;volatile
  1798     057F                     l279:
  1799     057F  0008               	return
  1800     0580                     __end_of_setupINTOSC:
  1801                           
  1802                           	psect	text2
  1803     0218                     __ptext2:	
  1804 ;; *************** function _portsetup *****************
  1805 ;; Defined at:
  1806 ;;		line 159 in file "main.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;		None
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		wreg, status,2, status,0, pclath, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1820 ;;      Params:         0       0       0       0       0
  1821 ;;      Locals:         0       0       0       0       0
  1822 ;;      Temps:          0       0       0       0       0
  1823 ;;      Totals:         0       0       0       0       0
  1824 ;;Total ram usage:        0 bytes
  1825 ;; Hardware stack levels used: 1
  1826 ;; Hardware stack levels required when called: 2
  1827 ;; This function calls:
  1828 ;;		_I2C_Master_Init
  1829 ;; This function is called by:
  1830 ;;		_main
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834     0218                     _portsetup:	
  1835                           ;psect for function _portsetup
  1836                           
  1837     0218                     l1731:	
  1838                           ;incstack = 0
  1839                           ; Regs used in _portsetup: [wreg+status,2+status,0+pclath+cstack]
  1840                           
  1841                           
  1842                           ;main.c: 160:     ANSEL = 0;
  1843     0218  1683               	bsf	3,5	;RP0=1, select bank3
  1844     0219  1703               	bsf	3,6	;RP1=1, select bank3
  1845     021A  0188               	clrf	8	;volatile
  1846                           
  1847                           ;main.c: 161:     ANSELH = 0;
  1848     021B  0189               	clrf	9	;volatile
  1849                           
  1850                           ;main.c: 162:     TRISA = 0;
  1851     021C  1683               	bsf	3,5	;RP0=1, select bank1
  1852     021D  1303               	bcf	3,6	;RP1=0, select bank1
  1853     021E  0185               	clrf	5	;volatile
  1854                           
  1855                           ;main.c: 163:     PORTA = 0;
  1856     021F  1283               	bcf	3,5	;RP0=0, select bank0
  1857     0220  1303               	bcf	3,6	;RP1=0, select bank0
  1858     0221  0185               	clrf	5	;volatile
  1859                           
  1860                           ;main.c: 164:     TRISD = 0;
  1861     0222  1683               	bsf	3,5	;RP0=1, select bank1
  1862     0223  1303               	bcf	3,6	;RP1=0, select bank1
  1863     0224  0188               	clrf	8	;volatile
  1864                           
  1865                           ;main.c: 165:     PORTD = 0;
  1866     0225  1283               	bcf	3,5	;RP0=0, select bank0
  1867     0226  1303               	bcf	3,6	;RP1=0, select bank0
  1868     0227  0188               	clrf	8	;volatile
  1869     0228                     l1733:
  1870                           
  1871                           ;main.c: 168:     TRISB = 0b11110000;
  1872     0228  30F0               	movlw	240
  1873     0229  1683               	bsf	3,5	;RP0=1, select bank1
  1874     022A  1303               	bcf	3,6	;RP1=0, select bank1
  1875     022B  0086               	movwf	6	;volatile
  1876     022C                     l1735:
  1877                           
  1878                           ;main.c: 169:     PORTB = 0b11110000;
  1879     022C  30F0               	movlw	240
  1880     022D  1283               	bcf	3,5	;RP0=0, select bank0
  1881     022E  1303               	bcf	3,6	;RP1=0, select bank0
  1882     022F  0086               	movwf	6	;volatile
  1883     0230                     l1737:
  1884                           
  1885                           ;main.c: 170:     WPUB = 0b11110000;
  1886     0230  30F0               	movlw	240
  1887     0231  1683               	bsf	3,5	;RP0=1, select bank1
  1888     0232  1303               	bcf	3,6	;RP1=0, select bank1
  1889     0233  0095               	movwf	21	;volatile
  1890     0234                     l1739:
  1891                           
  1892                           ;main.c: 171:     OPTION_REGbits.nRBPU = 0;
  1893     0234  1381               	bcf	1,7	;volatile
  1894     0235                     l1741:
  1895                           
  1896                           ;main.c: 173:     I2C_Master_Init(100000);
  1897     0235  3000               	movlw	0
  1898     0236  1283               	bcf	3,5	;RP0=0, select bank0
  1899     0237  1303               	bcf	3,6	;RP1=0, select bank0
  1900     0238  00BA               	movwf	I2C_Master_Init@c+3
  1901     0239  3001               	movlw	1
  1902     023A  00B9               	movwf	I2C_Master_Init@c+2
  1903     023B  3086               	movlw	134
  1904     023C  00B8               	movwf	I2C_Master_Init@c+1
  1905     023D  30A0               	movlw	160
  1906     023E  00B7               	movwf	I2C_Master_Init@c
  1907     023F  120A  118A  2310  120A  118A  	fcall	_I2C_Master_Init
  1908     0244                     l122:
  1909     0244  0008               	return
  1910     0245                     __end_of_portsetup:
  1911                           
  1912                           	psect	text3
  1913     0310                     __ptext3:	
  1914 ;; *************** function _I2C_Master_Init *****************
  1915 ;; Defined at:
  1916 ;;		line 16 in file "I2C.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  c               4    0[BANK0 ] const unsigned long 
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;		None
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2, status,0, pclath, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1930 ;;      Params:         0       4       0       0       0
  1931 ;;      Locals:         0       0       0       0       0
  1932 ;;      Temps:          0       4       0       0       0
  1933 ;;      Totals:         0       8       0       0       0
  1934 ;;Total ram usage:        8 bytes
  1935 ;; Hardware stack levels used: 1
  1936 ;; Hardware stack levels required when called: 1
  1937 ;; This function calls:
  1938 ;;		___lldiv
  1939 ;; This function is called by:
  1940 ;;		_portsetup
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944     0310                     _I2C_Master_Init:	
  1945                           ;psect for function _I2C_Master_Init
  1946                           
  1947     0310                     l1535:	
  1948                           ;incstack = 0
  1949                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1950                           
  1951                           
  1952                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1953     0310  3028               	movlw	40
  1954     0311  1283               	bcf	3,5	;RP0=0, select bank0
  1955     0312  1303               	bcf	3,6	;RP1=0, select bank0
  1956     0313  0094               	movwf	20	;volatile
  1957     0314                     l1537:
  1958                           
  1959                           ;I2C.c: 19:     SSPCON2 = 0;
  1960     0314  1683               	bsf	3,5	;RP0=1, select bank1
  1961     0315  1303               	bcf	3,6	;RP1=0, select bank1
  1962     0316  0191               	clrf	17	;volatile
  1963     0317                     l1539:
  1964                           
  1965                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1966     0317  1283               	bcf	3,5	;RP0=0, select bank0
  1967     0318  1303               	bcf	3,6	;RP1=0, select bank0
  1968     0319  0837               	movf	I2C_Master_Init@c,w
  1969     031A  00BB               	movwf	??_I2C_Master_Init
  1970     031B  0838               	movf	I2C_Master_Init@c+1,w
  1971     031C  00BC               	movwf	??_I2C_Master_Init+1
  1972     031D  0839               	movf	I2C_Master_Init@c+2,w
  1973     031E  00BD               	movwf	??_I2C_Master_Init+2
  1974     031F  083A               	movf	I2C_Master_Init@c+3,w
  1975     0320  00BE               	movwf	??_I2C_Master_Init+3
  1976     0321  3002               	movlw	2
  1977     0322                     u1185:
  1978     0322  1003               	clrc
  1979     0323  0DBB               	rlf	??_I2C_Master_Init,f
  1980     0324  0DBC               	rlf	??_I2C_Master_Init+1,f
  1981     0325  0DBD               	rlf	??_I2C_Master_Init+2,f
  1982     0326  0DBE               	rlf	??_I2C_Master_Init+3,f
  1983     0327                     u1180:
  1984     0327  3EFF               	addlw	-1
  1985     0328  1D03               	skipz
  1986     0329  2B22               	goto	u1185
  1987     032A  083E               	movf	??_I2C_Master_Init+3,w
  1988     032B  00F3               	movwf	___lldiv@divisor+3
  1989     032C  083D               	movf	??_I2C_Master_Init+2,w
  1990     032D  00F2               	movwf	___lldiv@divisor+2
  1991     032E  083C               	movf	??_I2C_Master_Init+1,w
  1992     032F  00F1               	movwf	___lldiv@divisor+1
  1993     0330  083B               	movf	??_I2C_Master_Init,w
  1994     0331  00F0               	movwf	___lldiv@divisor
  1995     0332  3000               	movlw	0
  1996     0333  00F7               	movwf	___lldiv@dividend+3
  1997     0334  307A               	movlw	122
  1998     0335  00F6               	movwf	___lldiv@dividend+2
  1999     0336  3012               	movlw	18
  2000     0337  00F5               	movwf	___lldiv@dividend+1
  2001     0338  3000               	movlw	0
  2002     0339  00F4               	movwf	___lldiv@dividend
  2003     033A  120A  118A  25E5  120A  118A  	fcall	___lldiv
  2004     033F  0870               	movf	?___lldiv,w
  2005     0340  3EFF               	addlw	255
  2006     0341  1683               	bsf	3,5	;RP0=1, select bank1
  2007     0342  1303               	bcf	3,6	;RP1=0, select bank1
  2008     0343  0093               	movwf	19	;volatile
  2009     0344                     l1541:
  2010                           
  2011                           ;I2C.c: 21:     SSPSTAT = 0;
  2012     0344  0194               	clrf	20	;volatile
  2013     0345                     l1543:
  2014                           
  2015                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2016     0345  1587               	bsf	7,3	;volatile
  2017     0346                     l1545:
  2018                           
  2019                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2020     0346  1607               	bsf	7,4	;volatile
  2021     0347                     l164:
  2022     0347  0008               	return
  2023     0348                     __end_of_I2C_Master_Init:
  2024                           
  2025                           	psect	text4
  2026     05E5                     __ptext4:	
  2027 ;; *************** function ___lldiv *****************
  2028 ;; Defined at:
  2029 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  divisor         4    0[COMMON] unsigned long 
  2032 ;;  dividend        4    4[COMMON] unsigned long 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  quotient        4    9[COMMON] unsigned long 
  2035 ;;  counter         1   13[COMMON] unsigned char 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  4    0[COMMON] unsigned long 
  2038 ;; Registers used:
  2039 ;;		wreg, status,2, status,0
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2045 ;;      Params:         8       0       0       0       0
  2046 ;;      Locals:         5       0       0       0       0
  2047 ;;      Temps:          1       0       0       0       0
  2048 ;;      Totals:        14       0       0       0       0
  2049 ;;Total ram usage:       14 bytes
  2050 ;; Hardware stack levels used: 1
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_I2C_Master_Init
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058     05E5                     ___lldiv:	
  2059                           ;psect for function ___lldiv
  2060                           
  2061     05E5                     l1409:	
  2062                           ;incstack = 0
  2063                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2064                           
  2065     05E5  3000               	movlw	0
  2066     05E6  00FC               	movwf	___lldiv@quotient+3
  2067     05E7  3000               	movlw	0
  2068     05E8  00FB               	movwf	___lldiv@quotient+2
  2069     05E9  3000               	movlw	0
  2070     05EA  00FA               	movwf	___lldiv@quotient+1
  2071     05EB  3000               	movlw	0
  2072     05EC  00F9               	movwf	___lldiv@quotient
  2073     05ED  0873               	movf	___lldiv@divisor+3,w
  2074     05EE  0472               	iorwf	___lldiv@divisor+2,w
  2075     05EF  0471               	iorwf	___lldiv@divisor+1,w
  2076     05F0  0470               	iorwf	___lldiv@divisor,w
  2077     05F1  1903               	skipnz
  2078     05F2  2DF4               	goto	u881
  2079     05F3  2DF5               	goto	u880
  2080     05F4                     u881:
  2081     05F4  2E42               	goto	l1429
  2082     05F5                     u880:
  2083     05F5                     l1411:
  2084     05F5  01FD               	clrf	___lldiv@counter
  2085     05F6  0AFD               	incf	___lldiv@counter,f
  2086     05F7  2E05               	goto	l1415
  2087     05F8                     l1413:
  2088     05F8  3001               	movlw	1
  2089     05F9  00F8               	movwf	??___lldiv
  2090     05FA                     u895:
  2091     05FA  1003               	clrc
  2092     05FB  0DF0               	rlf	___lldiv@divisor,f
  2093     05FC  0DF1               	rlf	___lldiv@divisor+1,f
  2094     05FD  0DF2               	rlf	___lldiv@divisor+2,f
  2095     05FE  0DF3               	rlf	___lldiv@divisor+3,f
  2096     05FF  0BF8               	decfsz	??___lldiv,f
  2097     0600  2DFA               	goto	u895
  2098     0601  3001               	movlw	1
  2099     0602  00F8               	movwf	??___lldiv
  2100     0603  0878               	movf	??___lldiv,w
  2101     0604  07FD               	addwf	___lldiv@counter,f
  2102     0605                     l1415:
  2103     0605  1FF3               	btfss	___lldiv@divisor+3,7
  2104     0606  2E08               	goto	u901
  2105     0607  2E09               	goto	u900
  2106     0608                     u901:
  2107     0608  2DF8               	goto	l1413
  2108     0609                     u900:
  2109     0609                     l1417:
  2110     0609  3001               	movlw	1
  2111     060A  00F8               	movwf	??___lldiv
  2112     060B                     u915:
  2113     060B  1003               	clrc
  2114     060C  0DF9               	rlf	___lldiv@quotient,f
  2115     060D  0DFA               	rlf	___lldiv@quotient+1,f
  2116     060E  0DFB               	rlf	___lldiv@quotient+2,f
  2117     060F  0DFC               	rlf	___lldiv@quotient+3,f
  2118     0610  0BF8               	decfsz	??___lldiv,f
  2119     0611  2E0B               	goto	u915
  2120     0612                     l1419:
  2121     0612  0873               	movf	___lldiv@divisor+3,w
  2122     0613  0277               	subwf	___lldiv@dividend+3,w
  2123     0614  1D03               	skipz
  2124     0615  2E20               	goto	u925
  2125     0616  0872               	movf	___lldiv@divisor+2,w
  2126     0617  0276               	subwf	___lldiv@dividend+2,w
  2127     0618  1D03               	skipz
  2128     0619  2E20               	goto	u925
  2129     061A  0871               	movf	___lldiv@divisor+1,w
  2130     061B  0275               	subwf	___lldiv@dividend+1,w
  2131     061C  1D03               	skipz
  2132     061D  2E20               	goto	u925
  2133     061E  0870               	movf	___lldiv@divisor,w
  2134     061F  0274               	subwf	___lldiv@dividend,w
  2135     0620                     u925:
  2136     0620  1C03               	skipc
  2137     0621  2E23               	goto	u921
  2138     0622  2E24               	goto	u920
  2139     0623                     u921:
  2140     0623  2E33               	goto	l1425
  2141     0624                     u920:
  2142     0624                     l1421:
  2143     0624  0870               	movf	___lldiv@divisor,w
  2144     0625  02F4               	subwf	___lldiv@dividend,f
  2145     0626  0871               	movf	___lldiv@divisor+1,w
  2146     0627  1C03               	skipc
  2147     0628  0F71               	incfsz	___lldiv@divisor+1,w
  2148     0629  02F5               	subwf	___lldiv@dividend+1,f
  2149     062A  0872               	movf	___lldiv@divisor+2,w
  2150     062B  1C03               	skipc
  2151     062C  0F72               	incfsz	___lldiv@divisor+2,w
  2152     062D  02F6               	subwf	___lldiv@dividend+2,f
  2153     062E  0873               	movf	___lldiv@divisor+3,w
  2154     062F  1C03               	skipc
  2155     0630  0F73               	incfsz	___lldiv@divisor+3,w
  2156     0631  02F7               	subwf	___lldiv@dividend+3,f
  2157     0632                     l1423:
  2158     0632  1479               	bsf	___lldiv@quotient,0
  2159     0633                     l1425:
  2160     0633  3001               	movlw	1
  2161     0634                     u935:
  2162     0634  1003               	clrc
  2163     0635  0CF3               	rrf	___lldiv@divisor+3,f
  2164     0636  0CF2               	rrf	___lldiv@divisor+2,f
  2165     0637  0CF1               	rrf	___lldiv@divisor+1,f
  2166     0638  0CF0               	rrf	___lldiv@divisor,f
  2167     0639  3EFF               	addlw	-1
  2168     063A  1D03               	skipz
  2169     063B  2E34               	goto	u935
  2170     063C                     l1427:
  2171     063C  3001               	movlw	1
  2172     063D  02FD               	subwf	___lldiv@counter,f
  2173     063E  1D03               	btfss	3,2
  2174     063F  2E41               	goto	u941
  2175     0640  2E42               	goto	u940
  2176     0641                     u941:
  2177     0641  2E09               	goto	l1417
  2178     0642                     u940:
  2179     0642                     l1429:
  2180     0642  087C               	movf	___lldiv@quotient+3,w
  2181     0643  00F3               	movwf	?___lldiv+3
  2182     0644  087B               	movf	___lldiv@quotient+2,w
  2183     0645  00F2               	movwf	?___lldiv+2
  2184     0646  087A               	movf	___lldiv@quotient+1,w
  2185     0647  00F1               	movwf	?___lldiv+1
  2186     0648  0879               	movf	___lldiv@quotient,w
  2187     0649  00F0               	movwf	?___lldiv
  2188     064A                     l401:
  2189     064A  0008               	return
  2190     064B                     __end_of___lldiv:
  2191                           
  2192                           	psect	text5
  2193     0348                     __ptext5:	
  2194 ;; *************** function _leer_x *****************
  2195 ;; Defined at:
  2196 ;;		line 24 in file "DS3231.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  address         1    wreg     unsigned char 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  address         1   11[COMMON] unsigned char 
  2201 ;;  valor           1   12[COMMON] unsigned char 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      unsigned char 
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0, pclath, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2211 ;;      Params:         0       0       0       0       0
  2212 ;;      Locals:         2       0       0       0       0
  2213 ;;      Temps:          2       0       0       0       0
  2214 ;;      Totals:         4       0       0       0       0
  2215 ;;Total ram usage:        4 bytes
  2216 ;; Hardware stack levels used: 1
  2217 ;; Hardware stack levels required when called: 2
  2218 ;; This function calls:
  2219 ;;		_I2C_Master_Read
  2220 ;;		_I2C_Master_RepeatedStart
  2221 ;;		_I2C_Master_Start
  2222 ;;		_I2C_Master_Stop
  2223 ;;		_I2C_Master_Write
  2224 ;;		_convertir
  2225 ;; This function is called by:
  2226 ;;		_main
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230     0348                     _leer_x:	
  2231                           ;psect for function _leer_x
  2232                           
  2233                           
  2234                           ;incstack = 0
  2235                           ; Regs used in _leer_x: [wreg+status,2+status,0+pclath+cstack]
  2236                           ;leer_x@address stored from wreg
  2237     0348  00FB               	movwf	leer_x@address
  2238     0349                     l1765:
  2239                           
  2240                           ;DS3231.c: 25:     uint8_t valor;;DS3231.c: 26:     I2C_Master_Start();
  2241     0349  120A  118A  2148  120A  118A  	fcall	_I2C_Master_Start
  2242                           
  2243                           ;DS3231.c: 27:     I2C_Master_Write(0xD0);
  2244     034E  30D0               	movlw	208
  2245     034F  00F0               	movwf	I2C_Master_Write@d
  2246     0350  3000               	movlw	0
  2247     0351  00F1               	movwf	I2C_Master_Write@d+1
  2248     0352  120A  118A  2163  120A  118A  	fcall	_I2C_Master_Write
  2249                           
  2250                           ;DS3231.c: 28:     I2C_Master_Write(address);
  2251     0357  087B               	movf	leer_x@address,w
  2252     0358  00F9               	movwf	??_leer_x
  2253     0359  01FA               	clrf	??_leer_x+1
  2254     035A  0879               	movf	??_leer_x,w
  2255     035B  00F0               	movwf	I2C_Master_Write@d
  2256     035C  087A               	movf	??_leer_x+1,w
  2257     035D  00F1               	movwf	I2C_Master_Write@d+1
  2258     035E  120A  118A  2163  120A  118A  	fcall	_I2C_Master_Write
  2259                           
  2260                           ;DS3231.c: 29:     I2C_Master_RepeatedStart();
  2261     0363  120A  118A  215A  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2262                           
  2263                           ;DS3231.c: 30:     I2C_Master_Write(0xD1);
  2264     0368  30D1               	movlw	209
  2265     0369  00F0               	movwf	I2C_Master_Write@d
  2266     036A  3000               	movlw	0
  2267     036B  00F1               	movwf	I2C_Master_Write@d+1
  2268     036C  120A  118A  2163  120A  118A  	fcall	_I2C_Master_Write
  2269                           
  2270                           ;DS3231.c: 31:     valor = I2C_Master_Read(0);
  2271     0371  3000               	movlw	0
  2272     0372  00F0               	movwf	I2C_Master_Read@a
  2273     0373  00F1               	movwf	I2C_Master_Read@a+1
  2274     0374  120A  118A  2245  120A  118A  	fcall	_I2C_Master_Read
  2275     0379  0870               	movf	?_I2C_Master_Read,w
  2276     037A  00FC               	movwf	leer_x@valor
  2277                           
  2278                           ;DS3231.c: 32:     I2C_Master_Stop();
  2279     037B  120A  118A  2151  120A  118A  	fcall	_I2C_Master_Stop
  2280                           
  2281                           ;DS3231.c: 33:     valor = convertir(valor);
  2282     0380  087C               	movf	leer_x@valor,w
  2283     0381  120A  118A  21B6  120A  118A  	fcall	_convertir
  2284     0386  00FC               	movwf	leer_x@valor
  2285     0387                     l1767:
  2286                           
  2287                           ;DS3231.c: 35:     return valor;
  2288     0387  087C               	movf	leer_x@valor,w
  2289     0388                     l144:
  2290     0388  0008               	return
  2291     0389                     __end_of_leer_x:
  2292                           
  2293                           	psect	text6
  2294     01B6                     __ptext6:	
  2295 ;; *************** function _convertir *****************
  2296 ;; Defined at:
  2297 ;;		line 5 in file "DS3231.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;  valor           1    wreg     unsigned char 
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;  valor           1    8[COMMON] unsigned char 
  2302 ;;  conversion      1    7[COMMON] unsigned char 
  2303 ;;  decena          1    6[COMMON] unsigned char 
  2304 ;;  unidad          1    5[COMMON] unsigned char 
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  1    wreg      unsigned char 
  2307 ;; Registers used:
  2308 ;;		wreg, status,2, status,0, pclath, cstack
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2314 ;;      Params:         0       0       0       0       0
  2315 ;;      Locals:         4       0       0       0       0
  2316 ;;      Temps:          1       0       0       0       0
  2317 ;;      Totals:         5       0       0       0       0
  2318 ;;Total ram usage:        5 bytes
  2319 ;; Hardware stack levels used: 1
  2320 ;; Hardware stack levels required when called: 1
  2321 ;; This function calls:
  2322 ;;		___bmul
  2323 ;; This function is called by:
  2324 ;;		_leer_x
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328     01B6                     _convertir:	
  2329                           ;psect for function _convertir
  2330                           
  2331                           
  2332                           ;incstack = 0
  2333                           ; Regs used in _convertir: [wreg+status,2+status,0+pclath+cstack]
  2334                           ;convertir@valor stored from wreg
  2335     01B6  00F8               	movwf	convertir@valor
  2336     01B7                     l1669:
  2337                           
  2338                           ;DS3231.c: 6:     uint8_t unidad;;DS3231.c: 7:     uint8_t decena;;DS3231.c: 8:     uint
      +                          8_t conversion;;DS3231.c: 9:     unidad = valor & 0x0F;
  2339     01B7  0878               	movf	convertir@valor,w
  2340     01B8  390F               	andlw	15
  2341     01B9  00F5               	movwf	convertir@unidad
  2342     01BA                     l1671:
  2343                           
  2344                           ;DS3231.c: 10:     decena = ((valor & 0xF0) >> 4);
  2345     01BA  0878               	movf	convertir@valor,w
  2346     01BB  00F4               	movwf	??_convertir
  2347     01BC  3004               	movlw	4
  2348     01BD                     u1335:
  2349     01BD  1003               	clrc
  2350     01BE  0CF4               	rrf	??_convertir,f
  2351     01BF  3EFF               	addlw	-1
  2352     01C0  1D03               	skipz
  2353     01C1  29BD               	goto	u1335
  2354     01C2  0874               	movf	??_convertir,w
  2355     01C3  390F               	andlw	15
  2356     01C4  00F6               	movwf	convertir@decena
  2357     01C5                     l1673:
  2358                           
  2359                           ;DS3231.c: 11:     conversion = unidad+(decena*10);
  2360     01C5  300A               	movlw	10
  2361     01C6  00F0               	movwf	___bmul@multiplicand
  2362     01C7  0876               	movf	convertir@decena,w
  2363     01C8  120A  118A  2187  120A  118A  	fcall	___bmul
  2364     01CD  0775               	addwf	convertir@unidad,w
  2365     01CE  00F7               	movwf	convertir@conversion
  2366     01CF                     l1675:
  2367                           
  2368                           ;DS3231.c: 12:     return conversion;
  2369     01CF  0877               	movf	convertir@conversion,w
  2370     01D0                     l138:
  2371     01D0  0008               	return
  2372     01D1                     __end_of_convertir:
  2373                           
  2374                           	psect	text7
  2375     0187                     __ptext7:	
  2376 ;; *************** function ___bmul *****************
  2377 ;; Defined at:
  2378 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;  multiplier      1    wreg     unsigned char 
  2381 ;;  multiplicand    1    0[COMMON] unsigned char 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  multiplier      1    3[COMMON] unsigned char 
  2384 ;;  product         1    2[COMMON] unsigned char 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      unsigned char 
  2387 ;; Registers used:
  2388 ;;		wreg, status,2, status,0
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2394 ;;      Params:         1       0       0       0       0
  2395 ;;      Locals:         2       0       0       0       0
  2396 ;;      Temps:          1       0       0       0       0
  2397 ;;      Totals:         4       0       0       0       0
  2398 ;;Total ram usage:        4 bytes
  2399 ;; Hardware stack levels used: 1
  2400 ;; This function calls:
  2401 ;;		Nothing
  2402 ;; This function is called by:
  2403 ;;		_convertir
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407     0187                     ___bmul:	
  2408                           ;psect for function ___bmul
  2409                           
  2410                           
  2411                           ;incstack = 0
  2412                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2413                           ;___bmul@multiplier stored from wreg
  2414     0187  00F3               	movwf	___bmul@multiplier
  2415     0188                     l1395:
  2416     0188  01F2               	clrf	___bmul@product
  2417     0189                     l1397:
  2418     0189  1C73               	btfss	___bmul@multiplier,0
  2419     018A  298C               	goto	u861
  2420     018B  298D               	goto	u860
  2421     018C                     u861:
  2422     018C  2991               	goto	l1401
  2423     018D                     u860:
  2424     018D                     l1399:
  2425     018D  0870               	movf	___bmul@multiplicand,w
  2426     018E  00F1               	movwf	??___bmul
  2427     018F  0871               	movf	??___bmul,w
  2428     0190  07F2               	addwf	___bmul@product,f
  2429     0191                     l1401:
  2430     0191  1003               	clrc
  2431     0192  0DF0               	rlf	___bmul@multiplicand,f
  2432     0193                     l1403:
  2433     0193  1003               	clrc
  2434     0194  0CF3               	rrf	___bmul@multiplier,f
  2435     0195  0873               	movf	___bmul@multiplier,w
  2436     0196  1D03               	btfss	3,2
  2437     0197  2999               	goto	u871
  2438     0198  299A               	goto	u870
  2439     0199                     u871:
  2440     0199  2989               	goto	l1397
  2441     019A                     u870:
  2442     019A                     l1405:
  2443     019A  0872               	movf	___bmul@product,w
  2444     019B                     l391:
  2445     019B  0008               	return
  2446     019C                     __end_of___bmul:
  2447                           
  2448                           	psect	text8
  2449     015A                     __ptext8:	
  2450 ;; *************** function _I2C_Master_RepeatedStart *****************
  2451 ;; Defined at:
  2452 ;;		line 47 in file "I2C.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;		None
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;		None
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg, status,2, status,0, pclath, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2466 ;;      Params:         0       0       0       0       0
  2467 ;;      Locals:         0       0       0       0       0
  2468 ;;      Temps:          0       0       0       0       0
  2469 ;;      Totals:         0       0       0       0       0
  2470 ;;Total ram usage:        0 bytes
  2471 ;; Hardware stack levels used: 1
  2472 ;; Hardware stack levels required when called: 1
  2473 ;; This function calls:
  2474 ;;		_I2C_Master_Wait
  2475 ;; This function is called by:
  2476 ;;		_leer_x
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480     015A                     _I2C_Master_RepeatedStart:	
  2481                           ;psect for function _I2C_Master_RepeatedStart
  2482                           
  2483     015A                     l1687:	
  2484                           ;incstack = 0
  2485                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2486                           
  2487                           
  2488                           ;I2C.c: 49:     I2C_Master_Wait();
  2489     015A  120A  118A  217A  120A  118A  	fcall	_I2C_Master_Wait
  2490     015F                     l1689:
  2491                           
  2492                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2493     015F  1683               	bsf	3,5	;RP0=1, select bank1
  2494     0160  1303               	bcf	3,6	;RP1=0, select bank1
  2495     0161  1491               	bsf	17,1	;volatile
  2496     0162                     l176:
  2497     0162  0008               	return
  2498     0163                     __end_of_I2C_Master_RepeatedStart:
  2499                           
  2500                           	psect	text9
  2501     0245                     __ptext9:	
  2502 ;; *************** function _I2C_Master_Read *****************
  2503 ;; Defined at:
  2504 ;;		line 74 in file "I2C.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  a               2    0[COMMON] unsigned short 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  temp            2    4[COMMON] unsigned short 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  2    0[COMMON] unsigned short 
  2511 ;; Registers used:
  2512 ;;		wreg, status,2, status,0, pclath, cstack
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2518 ;;      Params:         2       0       0       0       0
  2519 ;;      Locals:         2       0       0       0       0
  2520 ;;      Temps:          2       0       0       0       0
  2521 ;;      Totals:         6       0       0       0       0
  2522 ;;Total ram usage:        6 bytes
  2523 ;; Hardware stack levels used: 1
  2524 ;; Hardware stack levels required when called: 1
  2525 ;; This function calls:
  2526 ;;		_I2C_Master_Wait
  2527 ;; This function is called by:
  2528 ;;		_leer_x
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532     0245                     _I2C_Master_Read:	
  2533                           ;psect for function _I2C_Master_Read
  2534                           
  2535     0245                     l1691:	
  2536                           ;incstack = 0
  2537                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2538                           
  2539                           
  2540                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2541     0245  120A  118A  217A  120A  118A  	fcall	_I2C_Master_Wait
  2542     024A                     l1693:
  2543                           
  2544                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2545     024A  1683               	bsf	3,5	;RP0=1, select bank1
  2546     024B  1303               	bcf	3,6	;RP1=0, select bank1
  2547     024C  1591               	bsf	17,3	;volatile
  2548                           
  2549                           ;I2C.c: 79:     I2C_Master_Wait();
  2550     024D  120A  118A  217A  120A  118A  	fcall	_I2C_Master_Wait
  2551     0252                     l1695:
  2552                           
  2553                           ;I2C.c: 80:     temp = SSPBUF;
  2554     0252  1283               	bcf	3,5	;RP0=0, select bank0
  2555     0253  1303               	bcf	3,6	;RP1=0, select bank0
  2556     0254  0813               	movf	19,w	;volatile
  2557     0255  00F2               	movwf	??_I2C_Master_Read
  2558     0256  01F3               	clrf	??_I2C_Master_Read+1
  2559     0257  0872               	movf	??_I2C_Master_Read,w
  2560     0258  00F4               	movwf	I2C_Master_Read@temp
  2561     0259  0873               	movf	??_I2C_Master_Read+1,w
  2562     025A  00F5               	movwf	I2C_Master_Read@temp+1
  2563     025B                     l1697:
  2564                           
  2565                           ;I2C.c: 81:     I2C_Master_Wait();
  2566     025B  120A  118A  217A  120A  118A  	fcall	_I2C_Master_Wait
  2567     0260                     l1699:
  2568                           
  2569                           ;I2C.c: 82:     if(a == 1){
  2570     0260  0370               	decf	I2C_Master_Read@a,w
  2571     0261  0471               	iorwf	I2C_Master_Read@a+1,w
  2572     0262  1D03               	btfss	3,2
  2573     0263  2A65               	goto	u1341
  2574     0264  2A66               	goto	u1340
  2575     0265                     u1341:
  2576     0265  2A6A               	goto	l185
  2577     0266                     u1340:
  2578     0266                     l1701:
  2579                           
  2580                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2581     0266  1683               	bsf	3,5	;RP0=1, select bank1
  2582     0267  1303               	bcf	3,6	;RP1=0, select bank1
  2583     0268  1291               	bcf	17,5	;volatile
  2584                           
  2585                           ;I2C.c: 84:     }else{
  2586     0269  2A6D               	goto	l186
  2587     026A                     l185:
  2588                           
  2589                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2590     026A  1683               	bsf	3,5	;RP0=1, select bank1
  2591     026B  1303               	bcf	3,6	;RP1=0, select bank1
  2592     026C  1691               	bsf	17,5	;volatile
  2593     026D                     l186:	
  2594                           ;I2C.c: 86:     }
  2595                           
  2596                           
  2597                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2598     026D  1611               	bsf	17,4	;volatile
  2599     026E                     l1703:
  2600                           
  2601                           ;I2C.c: 88:     return temp;
  2602     026E  0875               	movf	I2C_Master_Read@temp+1,w
  2603     026F  00F1               	movwf	?_I2C_Master_Read+1
  2604     0270  0874               	movf	I2C_Master_Read@temp,w
  2605     0271  00F0               	movwf	?_I2C_Master_Read
  2606     0272                     l187:
  2607     0272  0008               	return
  2608     0273                     __end_of_I2C_Master_Read:
  2609                           
  2610                           	psect	text10
  2611     02DB                     __ptext10:	
  2612 ;; *************** function _enviar_x *****************
  2613 ;; Defined at:
  2614 ;;		line 38 in file "DS3231.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  val1            1    wreg     unsigned char 
  2617 ;;  val2            1    2[COMMON] unsigned char 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  val1            1    5[COMMON] unsigned char 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0, pclath, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2629 ;;      Params:         1       0       0       0       0
  2630 ;;      Locals:         1       0       0       0       0
  2631 ;;      Temps:          2       0       0       0       0
  2632 ;;      Totals:         4       0       0       0       0
  2633 ;;Total ram usage:        4 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 2
  2636 ;; This function calls:
  2637 ;;		_I2C_Master_Start
  2638 ;;		_I2C_Master_Stop
  2639 ;;		_I2C_Master_Write
  2640 ;; This function is called by:
  2641 ;;		_main
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645     02DB                     _enviar_x:	
  2646                           ;psect for function _enviar_x
  2647                           
  2648                           
  2649                           ;incstack = 0
  2650                           ; Regs used in _enviar_x: [wreg+status,2+status,0+pclath+cstack]
  2651                           ;enviar_x@val1 stored from wreg
  2652     02DB  00F5               	movwf	enviar_x@val1
  2653     02DC                     l1763:
  2654                           
  2655                           ;DS3231.c: 39:     I2C_Master_Start();
  2656     02DC  120A  118A  2148  120A  118A  	fcall	_I2C_Master_Start
  2657                           
  2658                           ;DS3231.c: 40:     I2C_Master_Write(0xD0);
  2659     02E1  30D0               	movlw	208
  2660     02E2  00F0               	movwf	I2C_Master_Write@d
  2661     02E3  3000               	movlw	0
  2662     02E4  00F1               	movwf	I2C_Master_Write@d+1
  2663     02E5  120A  118A  2163  120A  118A  	fcall	_I2C_Master_Write
  2664                           
  2665                           ;DS3231.c: 41:     I2C_Master_Write(0);
  2666     02EA  3000               	movlw	0
  2667     02EB  00F0               	movwf	I2C_Master_Write@d
  2668     02EC  00F1               	movwf	I2C_Master_Write@d+1
  2669     02ED  120A  118A  2163  120A  118A  	fcall	_I2C_Master_Write
  2670                           
  2671                           ;DS3231.c: 42:     I2C_Master_Write(val1);
  2672     02F2  0875               	movf	enviar_x@val1,w
  2673     02F3  00F3               	movwf	??_enviar_x
  2674     02F4  01F4               	clrf	??_enviar_x+1
  2675     02F5  0873               	movf	??_enviar_x,w
  2676     02F6  00F0               	movwf	I2C_Master_Write@d
  2677     02F7  0874               	movf	??_enviar_x+1,w
  2678     02F8  00F1               	movwf	I2C_Master_Write@d+1
  2679     02F9  120A  118A  2163  120A  118A  	fcall	_I2C_Master_Write
  2680                           
  2681                           ;DS3231.c: 43:     I2C_Master_Write(val2);
  2682     02FE  0872               	movf	enviar_x@val2,w
  2683     02FF  00F3               	movwf	??_enviar_x
  2684     0300  01F4               	clrf	??_enviar_x+1
  2685     0301  0873               	movf	??_enviar_x,w
  2686     0302  00F0               	movwf	I2C_Master_Write@d
  2687     0303  0874               	movf	??_enviar_x+1,w
  2688     0304  00F1               	movwf	I2C_Master_Write@d+1
  2689     0305  120A  118A  2163  120A  118A  	fcall	_I2C_Master_Write
  2690                           
  2691                           ;DS3231.c: 44:     I2C_Master_Stop();
  2692     030A  120A  118A  2151  120A  118A  	fcall	_I2C_Master_Stop
  2693     030F                     l147:
  2694     030F  0008               	return
  2695     0310                     __end_of_enviar_x:
  2696                           
  2697                           	psect	text11
  2698     0163                     __ptext11:	
  2699 ;; *************** function _I2C_Master_Write *****************
  2700 ;; Defined at:
  2701 ;;		line 65 in file "I2C.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  d               2    0[COMMON] unsigned int 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0, pclath, cstack
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2715 ;;      Params:         2       0       0       0       0
  2716 ;;      Locals:         0       0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0
  2718 ;;      Totals:         2       0       0       0       0
  2719 ;;Total ram usage:        2 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; Hardware stack levels required when called: 1
  2722 ;; This function calls:
  2723 ;;		_I2C_Master_Wait
  2724 ;; This function is called by:
  2725 ;;		_leer_x
  2726 ;;		_enviar_x
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730     0163                     _I2C_Master_Write:	
  2731                           ;psect for function _I2C_Master_Write
  2732                           
  2733     0163                     l1683:	
  2734                           ;incstack = 0
  2735                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2736                           
  2737                           
  2738                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2739     0163  120A  118A  217A  120A  118A  	fcall	_I2C_Master_Wait
  2740     0168                     l1685:
  2741                           
  2742                           ;I2C.c: 68:     SSPBUF = d;
  2743     0168  0870               	movf	I2C_Master_Write@d,w
  2744     0169  1283               	bcf	3,5	;RP0=0, select bank0
  2745     016A  1303               	bcf	3,6	;RP1=0, select bank0
  2746     016B  0093               	movwf	19	;volatile
  2747     016C                     l182:
  2748     016C  0008               	return
  2749     016D                     __end_of_I2C_Master_Write:
  2750                           
  2751                           	psect	text12
  2752     0151                     __ptext12:	
  2753 ;; *************** function _I2C_Master_Stop *****************
  2754 ;; Defined at:
  2755 ;;		line 55 in file "I2C.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0, pclath, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2769 ;;      Params:         0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0
  2772 ;;      Totals:         0       0       0       0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; Hardware stack levels required when called: 1
  2776 ;; This function calls:
  2777 ;;		_I2C_Master_Wait
  2778 ;; This function is called by:
  2779 ;;		_leer_x
  2780 ;;		_enviar_x
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784     0151                     _I2C_Master_Stop:	
  2785                           ;psect for function _I2C_Master_Stop
  2786                           
  2787     0151                     l1707:	
  2788                           ;incstack = 0
  2789                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2790                           
  2791                           
  2792                           ;I2C.c: 57:     I2C_Master_Wait();
  2793     0151  120A  118A  217A  120A  118A  	fcall	_I2C_Master_Wait
  2794     0156                     l1709:
  2795                           
  2796                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2797     0156  1683               	bsf	3,5	;RP0=1, select bank1
  2798     0157  1303               	bcf	3,6	;RP1=0, select bank1
  2799     0158  1511               	bsf	17,2	;volatile
  2800     0159                     l179:
  2801     0159  0008               	return
  2802     015A                     __end_of_I2C_Master_Stop:
  2803                           
  2804                           	psect	text13
  2805     0148                     __ptext13:	
  2806 ;; *************** function _I2C_Master_Start *****************
  2807 ;; Defined at:
  2808 ;;		line 39 in file "I2C.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;		None
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;		None
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  1    wreg      void 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2, status,0, pclath, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2822 ;;      Params:         0       0       0       0       0
  2823 ;;      Locals:         0       0       0       0       0
  2824 ;;      Temps:          0       0       0       0       0
  2825 ;;      Totals:         0       0       0       0       0
  2826 ;;Total ram usage:        0 bytes
  2827 ;; Hardware stack levels used: 1
  2828 ;; Hardware stack levels required when called: 1
  2829 ;; This function calls:
  2830 ;;		_I2C_Master_Wait
  2831 ;; This function is called by:
  2832 ;;		_leer_x
  2833 ;;		_enviar_x
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837     0148                     _I2C_Master_Start:	
  2838                           ;psect for function _I2C_Master_Start
  2839                           
  2840     0148                     l1679:	
  2841                           ;incstack = 0
  2842                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2843                           
  2844                           
  2845                           ;I2C.c: 41:     I2C_Master_Wait();
  2846     0148  120A  118A  217A  120A  118A  	fcall	_I2C_Master_Wait
  2847     014D                     l1681:
  2848                           
  2849                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2850     014D  1683               	bsf	3,5	;RP0=1, select bank1
  2851     014E  1303               	bcf	3,6	;RP1=0, select bank1
  2852     014F  1411               	bsf	17,0	;volatile
  2853     0150                     l173:
  2854     0150  0008               	return
  2855     0151                     __end_of_I2C_Master_Start:
  2856                           
  2857                           	psect	text14
  2858     017A                     __ptext14:	
  2859 ;; *************** function _I2C_Master_Wait *****************
  2860 ;; Defined at:
  2861 ;;		line 32 in file "I2C.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2875 ;;      Params:         0       0       0       0       0
  2876 ;;      Locals:         0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0
  2878 ;;      Totals:         0       0       0       0       0
  2879 ;;Total ram usage:        0 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_I2C_Master_Start
  2885 ;;		_I2C_Master_RepeatedStart
  2886 ;;		_I2C_Master_Stop
  2887 ;;		_I2C_Master_Write
  2888 ;;		_I2C_Master_Read
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892     017A                     _I2C_Master_Wait:	
  2893                           ;psect for function _I2C_Master_Wait
  2894                           
  2895     017A                     l1381:	
  2896                           ;incstack = 0
  2897                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2898                           
  2899     017A                     l167:	
  2900                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2901                           
  2902     017A  1683               	bsf	3,5	;RP0=1, select bank1
  2903     017B  1303               	bcf	3,6	;RP1=0, select bank1
  2904     017C  1914               	btfsc	20,2	;volatile
  2905     017D  297F               	goto	u841
  2906     017E  2980               	goto	u840
  2907     017F                     u841:
  2908     017F  297A               	goto	l167
  2909     0180                     u840:
  2910     0180                     l1383:
  2911     0180  0811               	movf	17,w	;volatile
  2912     0181  391F               	andlw	31
  2913     0182  1D03               	btfss	3,2
  2914     0183  2985               	goto	u851
  2915     0184  2986               	goto	u850
  2916     0185                     u851:
  2917     0185  297A               	goto	l167
  2918     0186                     u850:
  2919     0186                     l170:
  2920     0186  0008               	return
  2921     0187                     __end_of_I2C_Master_Wait:
  2922                           
  2923                           	psect	text15
  2924     0273                     __ptext15:	
  2925 ;; *************** function _desconvertir *****************
  2926 ;; Defined at:
  2927 ;;		line 15 in file "DS3231.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  valor           1    wreg     unsigned char 
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  valor           1   12[COMMON] unsigned char 
  2932 ;;  decena          1   13[COMMON] unsigned char 
  2933 ;;  unidad          1   11[COMMON] unsigned char 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  1    wreg      unsigned char 
  2936 ;; Registers used:
  2937 ;;		wreg, status,2, status,0, pclath, cstack
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2943 ;;      Params:         0       0       0       0       0
  2944 ;;      Locals:         3       0       0       0       0
  2945 ;;      Temps:          2       0       0       0       0
  2946 ;;      Totals:         5       0       0       0       0
  2947 ;;Total ram usage:        5 bytes
  2948 ;; Hardware stack levels used: 1
  2949 ;; Hardware stack levels required when called: 1
  2950 ;; This function calls:
  2951 ;;		___awdiv
  2952 ;;		___awmod
  2953 ;; This function is called by:
  2954 ;;		_main
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958     0273                     _desconvertir:	
  2959                           ;psect for function _desconvertir
  2960                           
  2961                           
  2962                           ;incstack = 0
  2963                           ; Regs used in _desconvertir: [wreg+status,2+status,0+pclath+cstack]
  2964                           ;desconvertir@valor stored from wreg
  2965     0273  00FC               	movwf	desconvertir@valor
  2966     0274                     l1773:
  2967                           
  2968                           ;DS3231.c: 16:     uint8_t decena;;DS3231.c: 17:     uint8_t unidad;;DS3231.c: 18:     d
      +                          ecena = (valor/10);
  2969     0274  300A               	movlw	10
  2970     0275  00F0               	movwf	___awdiv@divisor
  2971     0276  3000               	movlw	0
  2972     0277  00F1               	movwf	___awdiv@divisor+1
  2973     0278  087C               	movf	desconvertir@valor,w
  2974     0279  00F9               	movwf	??_desconvertir
  2975     027A  01FA               	clrf	??_desconvertir+1
  2976     027B  0879               	movf	??_desconvertir,w
  2977     027C  00F2               	movwf	___awdiv@dividend
  2978     027D  087A               	movf	??_desconvertir+1,w
  2979     027E  00F3               	movwf	___awdiv@dividend+1
  2980     027F  120A  118A  264B  120A  118A  	fcall	___awdiv
  2981     0284  0870               	movf	?___awdiv,w
  2982     0285  00FD               	movwf	desconvertir@decena
  2983     0286                     l1775:
  2984                           
  2985                           ;DS3231.c: 19:     decena = (decena << 4);
  2986     0286  087D               	movf	desconvertir@decena,w
  2987     0287  00F9               	movwf	??_desconvertir
  2988     0288  3003               	movlw	3
  2989     0289                     u1445:
  2990     0289  1003               	clrc
  2991     028A  0DF9               	rlf	??_desconvertir,f
  2992     028B  3EFF               	addlw	-1
  2993     028C  1D03               	skipz
  2994     028D  2A89               	goto	u1445
  2995     028E  1003               	clrc
  2996     028F  0D79               	rlf	??_desconvertir,w
  2997     0290  00FD               	movwf	desconvertir@decena
  2998     0291                     l1777:
  2999                           
  3000                           ;DS3231.c: 20:     unidad = (valor%10);
  3001     0291  300A               	movlw	10
  3002     0292  00F0               	movwf	___awmod@divisor
  3003     0293  3000               	movlw	0
  3004     0294  00F1               	movwf	___awmod@divisor+1
  3005     0295  087C               	movf	desconvertir@valor,w
  3006     0296  00F9               	movwf	??_desconvertir
  3007     0297  01FA               	clrf	??_desconvertir+1
  3008     0298  0879               	movf	??_desconvertir,w
  3009     0299  00F2               	movwf	___awmod@dividend
  3010     029A  087A               	movf	??_desconvertir+1,w
  3011     029B  00F3               	movwf	___awmod@dividend+1
  3012     029C  120A  118A  246B  120A  118A  	fcall	___awmod
  3013     02A1  0870               	movf	?___awmod,w
  3014     02A2  00FB               	movwf	desconvertir@unidad
  3015                           
  3016                           ;DS3231.c: 21:     return (decena + unidad);
  3017     02A3  087B               	movf	desconvertir@unidad,w
  3018     02A4  077D               	addwf	desconvertir@decena,w
  3019     02A5                     l141:
  3020     02A5  0008               	return
  3021     02A6                     __end_of_desconvertir:
  3022                           
  3023                           	psect	text16
  3024     01F3                     __ptext16:	
  3025 ;; *************** function _Lcd_Write_String *****************
  3026 ;; Defined at:
  3027 ;;		line 98 in file "LCD.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;  a               1    wreg     PTR unsigned char 
  3030 ;;		 -> STR_3(5), STR_2(6), STR_1(5), 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  a               1    7[COMMON] PTR unsigned char 
  3033 ;;		 -> STR_3(5), STR_2(6), STR_1(5), 
  3034 ;;  i               2    5[COMMON] int 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3044 ;;      Params:         0       0       0       0       0
  3045 ;;      Locals:         3       0       0       0       0
  3046 ;;      Temps:          0       0       0       0       0
  3047 ;;      Totals:         3       0       0       0       0
  3048 ;;Total ram usage:        3 bytes
  3049 ;; Hardware stack levels used: 1
  3050 ;; Hardware stack levels required when called: 2
  3051 ;; This function calls:
  3052 ;;		_Lcd_Write_Char
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058     01F3                     _Lcd_Write_String:	
  3059                           ;psect for function _Lcd_Write_String
  3060                           
  3061                           
  3062                           ;incstack = 0
  3063                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3064                           ;Lcd_Write_String@a stored from wreg
  3065     01F3  00F7               	movwf	Lcd_Write_String@a
  3066     01F4                     l1755:
  3067                           
  3068                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  3069     01F4  01F5               	clrf	Lcd_Write_String@i
  3070     01F5  01F6               	clrf	Lcd_Write_String@i+1
  3071     01F6  2A0A               	goto	l1761
  3072     01F7                     l1757:
  3073                           
  3074                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  3075     01F7  0875               	movf	Lcd_Write_String@i,w
  3076     01F8  0777               	addwf	Lcd_Write_String@a,w
  3077     01F9  0084               	movwf	4
  3078     01FA  120A  118A  2003  120A  118A  	fcall	stringdir
  3079     01FF  120A  118A  22A6  120A  118A  	fcall	_Lcd_Write_Char
  3080     0204                     l1759:
  3081     0204  3001               	movlw	1
  3082     0205  07F5               	addwf	Lcd_Write_String@i,f
  3083     0206  1803               	skipnc
  3084     0207  0AF6               	incf	Lcd_Write_String@i+1,f
  3085     0208  3000               	movlw	0
  3086     0209  07F6               	addwf	Lcd_Write_String@i+1,f
  3087     020A                     l1761:
  3088     020A  0875               	movf	Lcd_Write_String@i,w
  3089     020B  0777               	addwf	Lcd_Write_String@a,w
  3090     020C  0084               	movwf	4
  3091     020D  120A  118A  2003  120A  118A  	fcall	stringdir
  3092     0212  3A00               	xorlw	0
  3093     0213  1D03               	skipz
  3094     0214  2A16               	goto	u1431
  3095     0215  2A17               	goto	u1430
  3096     0216                     u1431:
  3097     0216  29F7               	goto	l1757
  3098     0217                     u1430:
  3099     0217                     l236:
  3100     0217  0008               	return
  3101     0218                     __end_of_Lcd_Write_String:
  3102                           
  3103                           	psect	text17
  3104     04C4                     __ptext17:	
  3105 ;; *************** function _Lcd_Init *****************
  3106 ;; Defined at:
  3107 ;;		line 65 in file "LCD.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg, status,2, status,0, pclath, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3121 ;;      Params:         0       0       0       0       0
  3122 ;;      Locals:         0       0       0       0       0
  3123 ;;      Temps:          2       0       0       0       0
  3124 ;;      Totals:         2       0       0       0       0
  3125 ;;Total ram usage:        2 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; Hardware stack levels required when called: 2
  3128 ;; This function calls:
  3129 ;;		_Lcd_Cmd
  3130 ;;		_Lcd_Port
  3131 ;; This function is called by:
  3132 ;;		_main
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136     04C4                     _Lcd_Init:	
  3137                           ;psect for function _Lcd_Init
  3138                           
  3139     04C4                     l1743:	
  3140                           ;incstack = 0
  3141                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3142                           
  3143                           
  3144                           ;LCD.c: 66:     Lcd_Port(0x00);
  3145     04C4  3000               	movlw	0
  3146     04C5  120A  118A  21D1  120A  118A  	fcall	_Lcd_Port
  3147     04CA                     l1745:
  3148                           
  3149                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3150     04CA  3034               	movlw	52
  3151     04CB  00F5               	movwf	??_Lcd_Init+1
  3152     04CC  30F1               	movlw	241
  3153     04CD  00F4               	movwf	??_Lcd_Init
  3154     04CE                     u1637:
  3155     04CE  0BF4               	decfsz	??_Lcd_Init,f
  3156     04CF  2CCE               	goto	u1637
  3157     04D0  0BF5               	decfsz	??_Lcd_Init+1,f
  3158     04D1  2CCE               	goto	u1637
  3159     04D2  2CD3               	nop2
  3160     04D3                     l1747:
  3161                           
  3162                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  3163     04D3  3003               	movlw	3
  3164     04D4  120A  118A  219C  120A  118A  	fcall	_Lcd_Cmd
  3165                           
  3166                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3167     04D9  300D               	movlw	13
  3168     04DA  00F5               	movwf	??_Lcd_Init+1
  3169     04DB  30FB               	movlw	251
  3170     04DC  00F4               	movwf	??_Lcd_Init
  3171     04DD                     u1647:
  3172     04DD  0BF4               	decfsz	??_Lcd_Init,f
  3173     04DE  2CDD               	goto	u1647
  3174     04DF  0BF5               	decfsz	??_Lcd_Init+1,f
  3175     04E0  2CDD               	goto	u1647
  3176     04E1  2CE2               	nop2
  3177     04E2                     l1749:
  3178                           
  3179                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  3180     04E2  3003               	movlw	3
  3181     04E3  120A  118A  219C  120A  118A  	fcall	_Lcd_Cmd
  3182     04E8                     l1751:
  3183                           
  3184                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3185     04E8  301D               	movlw	29
  3186     04E9  00F5               	movwf	??_Lcd_Init+1
  3187     04EA  3091               	movlw	145
  3188     04EB  00F4               	movwf	??_Lcd_Init
  3189     04EC                     u1657:
  3190     04EC  0BF4               	decfsz	??_Lcd_Init,f
  3191     04ED  2CEC               	goto	u1657
  3192     04EE  0BF5               	decfsz	??_Lcd_Init+1,f
  3193     04EF  2CEC               	goto	u1657
  3194                           
  3195                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  3196     04F0  3003               	movlw	3
  3197     04F1  120A  118A  219C  120A  118A  	fcall	_Lcd_Cmd
  3198                           
  3199                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  3200     04F6  3002               	movlw	2
  3201     04F7  120A  118A  219C  120A  118A  	fcall	_Lcd_Cmd
  3202                           
  3203                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  3204     04FC  3002               	movlw	2
  3205     04FD  120A  118A  219C  120A  118A  	fcall	_Lcd_Cmd
  3206                           
  3207                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  3208     0502  3008               	movlw	8
  3209     0503  120A  118A  219C  120A  118A  	fcall	_Lcd_Cmd
  3210                           
  3211                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  3212     0508  3000               	movlw	0
  3213     0509  120A  118A  219C  120A  118A  	fcall	_Lcd_Cmd
  3214                           
  3215                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  3216     050E  300C               	movlw	12
  3217     050F  120A  118A  219C  120A  118A  	fcall	_Lcd_Cmd
  3218                           
  3219                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  3220     0514  3000               	movlw	0
  3221     0515  120A  118A  219C  120A  118A  	fcall	_Lcd_Cmd
  3222                           
  3223                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  3224     051A  3006               	movlw	6
  3225     051B  120A  118A  219C  120A  118A  	fcall	_Lcd_Cmd
  3226     0520                     l227:
  3227     0520  0008               	return
  3228     0521                     __end_of_Lcd_Init:
  3229                           
  3230                           	psect	text18
  3231     016D                     __ptext18:	
  3232 ;; *************** function _Lcd_Clear *****************
  3233 ;; Defined at:
  3234 ;;		line 43 in file "LCD.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;		None
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;		None
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1    wreg      void 
  3241 ;; Registers used:
  3242 ;;		wreg, status,2, status,0, pclath, cstack
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3248 ;;      Params:         0       0       0       0       0
  3249 ;;      Locals:         0       0       0       0       0
  3250 ;;      Temps:          0       0       0       0       0
  3251 ;;      Totals:         0       0       0       0       0
  3252 ;;Total ram usage:        0 bytes
  3253 ;; Hardware stack levels used: 1
  3254 ;; Hardware stack levels required when called: 2
  3255 ;; This function calls:
  3256 ;;		_Lcd_Cmd
  3257 ;; This function is called by:
  3258 ;;		_main
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262     016D                     _Lcd_Clear:	
  3263                           ;psect for function _Lcd_Clear
  3264                           
  3265     016D                     l1753:	
  3266                           ;incstack = 0
  3267                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3268                           
  3269                           
  3270                           ;LCD.c: 44:     Lcd_Cmd(0);
  3271     016D  3000               	movlw	0
  3272     016E  120A  118A  219C  120A  118A  	fcall	_Lcd_Cmd
  3273                           
  3274                           ;LCD.c: 45:     Lcd_Cmd(1);
  3275     0173  3001               	movlw	1
  3276     0174  120A  118A  219C  120A  118A  	fcall	_Lcd_Cmd
  3277     0179                     l218:
  3278     0179  0008               	return
  3279     017A                     __end_of_Lcd_Clear:
  3280                           
  3281                           	psect	text19
  3282     03CF                     __ptext19:	
  3283 ;; *************** function _Escribir_dato *****************
  3284 ;; Defined at:
  3285 ;;		line 177 in file "main.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;  dato            1    wreg     unsigned char 
  3288 ;;  posx            1    3[BANK0 ] unsigned char 
  3289 ;;  posy            1    4[BANK0 ] unsigned char 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  dato            1    5[BANK0 ] unsigned char 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, status,0, pclath, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3301 ;;      Params:         0       2       0       0       0
  3302 ;;      Locals:         0       1       0       0       0
  3303 ;;      Temps:          0       0       0       0       0
  3304 ;;      Totals:         0       3       0       0       0
  3305 ;;Total ram usage:        3 bytes
  3306 ;; Hardware stack levels used: 1
  3307 ;; Hardware stack levels required when called: 3
  3308 ;; This function calls:
  3309 ;;		_Lcd_Set_Cursor
  3310 ;;		_Lcd_Write_Char
  3311 ;;		_descomponer
  3312 ;;		_inttochar
  3313 ;; This function is called by:
  3314 ;;		_main
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318     03CF                     _Escribir_dato:	
  3319                           ;psect for function _Escribir_dato
  3320                           
  3321                           
  3322                           ;incstack = 0
  3323                           ; Regs used in _Escribir_dato: [wreg+status,2+status,0+pclath+cstack]
  3324                           ;Escribir_dato@dato stored from wreg
  3325     03CF  1283               	bcf	3,5	;RP0=0, select bank0
  3326     03D0  1303               	bcf	3,6	;RP1=0, select bank0
  3327     03D1  00BC               	movwf	Escribir_dato@dato
  3328     03D2                     l1771:
  3329                           
  3330                           ;main.c: 178:     Lcd_Set_Cursor(posy, posx+1);
  3331     03D2  083A               	movf	Escribir_dato@posx,w
  3332     03D3  3E01               	addlw	1
  3333     03D4  00F4               	movwf	Lcd_Set_Cursor@b
  3334     03D5  083B               	movf	Escribir_dato@posy,w
  3335     03D6  120A  118A  2389  120A  118A  	fcall	_Lcd_Set_Cursor
  3336                           
  3337                           ;main.c: 179:     unidad = inttochar(descomponer(0, dato));
  3338     03DB  3000               	movlw	0
  3339     03DC  00F9               	movwf	descomponer@pos
  3340     03DD  00FA               	movwf	descomponer@pos+1
  3341     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  3342     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  3343     03E0  083C               	movf	Escribir_dato@dato,w
  3344     03E1  00FB               	movwf	descomponer@num
  3345     03E2  120A  118A  2580  120A  118A  	fcall	_descomponer
  3346     03E7  120A  118A  241B  120A  118A  	fcall	_inttochar
  3347     03EC  1283               	bcf	3,5	;RP0=0, select bank0
  3348     03ED  1303               	bcf	3,6	;RP1=0, select bank0
  3349     03EE  00B5               	movwf	_unidad
  3350                           
  3351                           ;main.c: 180:     Lcd_Write_Char(unidad);
  3352     03EF  0835               	movf	_unidad,w
  3353     03F0  120A  118A  22A6  120A  118A  	fcall	_Lcd_Write_Char
  3354                           
  3355                           ;main.c: 181:     Lcd_Set_Cursor(posy, posx);
  3356     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  3357     03F6  1303               	bcf	3,6	;RP1=0, select bank0
  3358     03F7  083A               	movf	Escribir_dato@posx,w
  3359     03F8  00F4               	movwf	Lcd_Set_Cursor@b
  3360     03F9  083B               	movf	Escribir_dato@posy,w
  3361     03FA  120A  118A  2389  120A  118A  	fcall	_Lcd_Set_Cursor
  3362                           
  3363                           ;main.c: 182:     decena = inttochar(descomponer(1, dato));
  3364     03FF  3001               	movlw	1
  3365     0400  00F9               	movwf	descomponer@pos
  3366     0401  3000               	movlw	0
  3367     0402  00FA               	movwf	descomponer@pos+1
  3368     0403  1283               	bcf	3,5	;RP0=0, select bank0
  3369     0404  1303               	bcf	3,6	;RP1=0, select bank0
  3370     0405  083C               	movf	Escribir_dato@dato,w
  3371     0406  00FB               	movwf	descomponer@num
  3372     0407  120A  118A  2580  120A  118A  	fcall	_descomponer
  3373     040C  120A  118A  241B  120A  118A  	fcall	_inttochar
  3374     0411  1283               	bcf	3,5	;RP0=0, select bank0
  3375     0412  1303               	bcf	3,6	;RP1=0, select bank0
  3376     0413  00B4               	movwf	_decena
  3377                           
  3378                           ;main.c: 183:     Lcd_Write_Char(decena);
  3379     0414  0834               	movf	_decena,w
  3380     0415  120A  118A  22A6  120A  118A  	fcall	_Lcd_Write_Char
  3381     041A                     l125:
  3382     041A  0008               	return
  3383     041B                     __end_of_Escribir_dato:
  3384                           
  3385                           	psect	text20
  3386     041B                     __ptext20:	
  3387 ;; *************** function _inttochar *****************
  3388 ;; Defined at:
  3389 ;;		line 12 in file "conversiones.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  num             1    wreg     unsigned char 
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;  num             1    0[COMMON] unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      unsigned char 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3403 ;;      Params:         0       0       0       0       0
  3404 ;;      Locals:         1       0       0       0       0
  3405 ;;      Temps:          0       0       0       0       0
  3406 ;;      Totals:         1       0       0       0       0
  3407 ;;Total ram usage:        1 bytes
  3408 ;; Hardware stack levels used: 1
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_Escribir_dato
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416     041B                     _inttochar:	
  3417                           ;psect for function _inttochar
  3418                           
  3419                           
  3420                           ;incstack = 0
  3421                           ; Regs used in _inttochar: [wreg+status,2+status,0]
  3422                           ;inttochar@num stored from wreg
  3423     041B  00F0               	movwf	inttochar@num
  3424     041C                     l1571:
  3425                           
  3426                           ;conversiones.c: 13:     if(num == 0){
  3427     041C  0870               	movf	inttochar@num,w
  3428     041D  1D03               	btfss	3,2
  3429     041E  2C20               	goto	u1221
  3430     041F  2C21               	goto	u1220
  3431     0420                     u1221:
  3432     0420  2C23               	goto	l1579
  3433     0421                     u1220:
  3434     0421                     l1573:
  3435                           
  3436                           ;conversiones.c: 14:         return '0';
  3437     0421  3030               	movlw	48
  3438     0422  2C6A               	goto	l240
  3439     0423                     l1579:
  3440     0423  0370               	decf	inttochar@num,w
  3441     0424  1D03               	btfss	3,2
  3442     0425  2C27               	goto	u1231
  3443     0426  2C28               	goto	u1230
  3444     0427                     u1231:
  3445     0427  2C2A               	goto	l1587
  3446     0428                     u1230:
  3447     0428                     l1581:
  3448                           
  3449                           ;conversiones.c: 17:         return '1';
  3450     0428  3031               	movlw	49
  3451     0429  2C6A               	goto	l240
  3452     042A                     l1587:
  3453     042A  3002               	movlw	2
  3454     042B  0670               	xorwf	inttochar@num,w
  3455     042C  1D03               	btfss	3,2
  3456     042D  2C2F               	goto	u1241
  3457     042E  2C30               	goto	u1240
  3458     042F                     u1241:
  3459     042F  2C32               	goto	l1595
  3460     0430                     u1240:
  3461     0430                     l1589:
  3462                           
  3463                           ;conversiones.c: 20:         return '2';
  3464     0430  3032               	movlw	50
  3465     0431  2C6A               	goto	l240
  3466     0432                     l1595:
  3467     0432  3003               	movlw	3
  3468     0433  0670               	xorwf	inttochar@num,w
  3469     0434  1D03               	btfss	3,2
  3470     0435  2C37               	goto	u1251
  3471     0436  2C38               	goto	u1250
  3472     0437                     u1251:
  3473     0437  2C3A               	goto	l1603
  3474     0438                     u1250:
  3475     0438                     l1597:
  3476                           
  3477                           ;conversiones.c: 23:         return '3';
  3478     0438  3033               	movlw	51
  3479     0439  2C6A               	goto	l240
  3480     043A                     l1603:
  3481     043A  3004               	movlw	4
  3482     043B  0670               	xorwf	inttochar@num,w
  3483     043C  1D03               	btfss	3,2
  3484     043D  2C3F               	goto	u1261
  3485     043E  2C40               	goto	u1260
  3486     043F                     u1261:
  3487     043F  2C42               	goto	l1611
  3488     0440                     u1260:
  3489     0440                     l1605:
  3490                           
  3491                           ;conversiones.c: 26:         return '4';
  3492     0440  3034               	movlw	52
  3493     0441  2C6A               	goto	l240
  3494     0442                     l1611:
  3495     0442  3005               	movlw	5
  3496     0443  0670               	xorwf	inttochar@num,w
  3497     0444  1D03               	btfss	3,2
  3498     0445  2C47               	goto	u1271
  3499     0446  2C48               	goto	u1270
  3500     0447                     u1271:
  3501     0447  2C4A               	goto	l1619
  3502     0448                     u1270:
  3503     0448                     l1613:
  3504                           
  3505                           ;conversiones.c: 29:         return '5';
  3506     0448  3035               	movlw	53
  3507     0449  2C6A               	goto	l240
  3508     044A                     l1619:
  3509     044A  3006               	movlw	6
  3510     044B  0670               	xorwf	inttochar@num,w
  3511     044C  1D03               	btfss	3,2
  3512     044D  2C4F               	goto	u1281
  3513     044E  2C50               	goto	u1280
  3514     044F                     u1281:
  3515     044F  2C52               	goto	l1627
  3516     0450                     u1280:
  3517     0450                     l1621:
  3518                           
  3519                           ;conversiones.c: 32:         return '6';
  3520     0450  3036               	movlw	54
  3521     0451  2C6A               	goto	l240
  3522     0452                     l1627:
  3523     0452  3007               	movlw	7
  3524     0453  0670               	xorwf	inttochar@num,w
  3525     0454  1D03               	btfss	3,2
  3526     0455  2C57               	goto	u1291
  3527     0456  2C58               	goto	u1290
  3528     0457                     u1291:
  3529     0457  2C5A               	goto	l1635
  3530     0458                     u1290:
  3531     0458                     l1629:
  3532                           
  3533                           ;conversiones.c: 35:         return '7';
  3534     0458  3037               	movlw	55
  3535     0459  2C6A               	goto	l240
  3536     045A                     l1635:
  3537     045A  3008               	movlw	8
  3538     045B  0670               	xorwf	inttochar@num,w
  3539     045C  1D03               	btfss	3,2
  3540     045D  2C5F               	goto	u1301
  3541     045E  2C60               	goto	u1300
  3542     045F                     u1301:
  3543     045F  2C62               	goto	l1643
  3544     0460                     u1300:
  3545     0460                     l1637:
  3546                           
  3547                           ;conversiones.c: 38:         return '8';
  3548     0460  3038               	movlw	56
  3549     0461  2C6A               	goto	l240
  3550     0462                     l1643:
  3551     0462  3009               	movlw	9
  3552     0463  0670               	xorwf	inttochar@num,w
  3553     0464  1D03               	btfss	3,2
  3554     0465  2C67               	goto	u1311
  3555     0466  2C68               	goto	u1310
  3556     0467                     u1311:
  3557     0467  2C6A               	goto	l253
  3558     0468                     u1310:
  3559     0468                     l1645:
  3560                           
  3561                           ;conversiones.c: 41:         return '9';
  3562     0468  3039               	movlw	57
  3563     0469  2C6A               	goto	l240
  3564     046A                     l253:
  3565     046A                     l240:
  3566     046A  0008               	return
  3567     046B                     __end_of_inttochar:
  3568                           
  3569                           	psect	text21
  3570     0580                     __ptext21:	
  3571 ;; *************** function _descomponer *****************
  3572 ;; Defined at:
  3573 ;;		line 45 in file "conversiones.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;  pos             2    9[COMMON] int 
  3576 ;;  num             1   11[COMMON] unsigned char 
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;  dec             1    2[BANK0 ] unsigned char 
  3579 ;;  uni             1    1[BANK0 ] unsigned char 
  3580 ;;  cent            1    0[BANK0 ] unsigned char 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      unsigned char 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, status,0, pclath, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3590 ;;      Params:         3       0       0       0       0
  3591 ;;      Locals:         0       3       0       0       0
  3592 ;;      Temps:          2       0       0       0       0
  3593 ;;      Totals:         5       3       0       0       0
  3594 ;;Total ram usage:        8 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 1
  3597 ;; This function calls:
  3598 ;;		___awdiv
  3599 ;;		___awmod
  3600 ;; This function is called by:
  3601 ;;		_Escribir_dato
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605     0580                     _descomponer:	
  3606                           ;psect for function _descomponer
  3607                           
  3608     0580                     l1547:	
  3609                           ;incstack = 0
  3610                           ; Regs used in _descomponer: [wreg+status,2+status,0+pclath+cstack]
  3611                           
  3612                           
  3613                           ;conversiones.c: 46:     uint8_t cent;;conversiones.c: 47:     uint8_t dec;;conversiones
      +                          .c: 48:     uint8_t uni;;conversiones.c: 49:     cent = (num/100);
  3614     0580  3064               	movlw	100
  3615     0581  00F0               	movwf	___awdiv@divisor
  3616     0582  3000               	movlw	0
  3617     0583  00F1               	movwf	___awdiv@divisor+1
  3618     0584  087B               	movf	descomponer@num,w
  3619     0585  00FC               	movwf	??_descomponer
  3620     0586  01FD               	clrf	??_descomponer+1
  3621     0587  087C               	movf	??_descomponer,w
  3622     0588  00F2               	movwf	___awdiv@dividend
  3623     0589  087D               	movf	??_descomponer+1,w
  3624     058A  00F3               	movwf	___awdiv@dividend+1
  3625     058B  120A  118A  264B  120A  118A  	fcall	___awdiv
  3626     0590  0870               	movf	?___awdiv,w
  3627     0591  1283               	bcf	3,5	;RP0=0, select bank0
  3628     0592  1303               	bcf	3,6	;RP1=0, select bank0
  3629     0593  00B7               	movwf	descomponer@cent
  3630                           
  3631                           ;conversiones.c: 50:     dec = (num%100);
  3632     0594  3064               	movlw	100
  3633     0595  00F0               	movwf	___awmod@divisor
  3634     0596  3000               	movlw	0
  3635     0597  00F1               	movwf	___awmod@divisor+1
  3636     0598  087B               	movf	descomponer@num,w
  3637     0599  00FC               	movwf	??_descomponer
  3638     059A  01FD               	clrf	??_descomponer+1
  3639     059B  087C               	movf	??_descomponer,w
  3640     059C  00F2               	movwf	___awmod@dividend
  3641     059D  087D               	movf	??_descomponer+1,w
  3642     059E  00F3               	movwf	___awmod@dividend+1
  3643     059F  120A  118A  246B  120A  118A  	fcall	___awmod
  3644     05A4  0870               	movf	?___awmod,w
  3645     05A5  1283               	bcf	3,5	;RP0=0, select bank0
  3646     05A6  1303               	bcf	3,6	;RP1=0, select bank0
  3647     05A7  00B9               	movwf	descomponer@dec
  3648                           
  3649                           ;conversiones.c: 51:     uni = (dec%10);
  3650     05A8  300A               	movlw	10
  3651     05A9  00F0               	movwf	___awmod@divisor
  3652     05AA  3000               	movlw	0
  3653     05AB  00F1               	movwf	___awmod@divisor+1
  3654     05AC  0839               	movf	descomponer@dec,w
  3655     05AD  00FC               	movwf	??_descomponer
  3656     05AE  01FD               	clrf	??_descomponer+1
  3657     05AF  087C               	movf	??_descomponer,w
  3658     05B0  00F2               	movwf	___awmod@dividend
  3659     05B1  087D               	movf	??_descomponer+1,w
  3660     05B2  00F3               	movwf	___awmod@dividend+1
  3661     05B3  120A  118A  246B  120A  118A  	fcall	___awmod
  3662     05B8  0870               	movf	?___awmod,w
  3663     05B9  1283               	bcf	3,5	;RP0=0, select bank0
  3664     05BA  1303               	bcf	3,6	;RP1=0, select bank0
  3665     05BB  00B8               	movwf	descomponer@uni
  3666     05BC                     l1549:
  3667                           
  3668                           ;conversiones.c: 52:     if(pos == 2){
  3669     05BC  3002               	movlw	2
  3670     05BD  0679               	xorwf	descomponer@pos,w
  3671     05BE  047A               	iorwf	descomponer@pos+1,w
  3672     05BF  1D03               	btfss	3,2
  3673     05C0  2DC2               	goto	u1191
  3674     05C1  2DC3               	goto	u1190
  3675     05C2                     u1191:
  3676     05C2  2DC5               	goto	l1557
  3677     05C3                     u1190:
  3678     05C3                     l1551:
  3679                           
  3680                           ;conversiones.c: 53:         return cent;
  3681     05C3  0837               	movf	descomponer@cent,w
  3682     05C4  2DE4               	goto	l262
  3683     05C5                     l1557:
  3684     05C5  0379               	decf	descomponer@pos,w
  3685     05C6  047A               	iorwf	descomponer@pos+1,w
  3686     05C7  1D03               	btfss	3,2
  3687     05C8  2DCA               	goto	u1201
  3688     05C9  2DCB               	goto	u1200
  3689     05CA                     u1201:
  3690     05CA  2DDD               	goto	l1565
  3691     05CB                     u1200:
  3692     05CB                     l1559:
  3693                           
  3694                           ;conversiones.c: 56:         return (dec/10);
  3695     05CB  300A               	movlw	10
  3696     05CC  00F0               	movwf	___awdiv@divisor
  3697     05CD  3000               	movlw	0
  3698     05CE  00F1               	movwf	___awdiv@divisor+1
  3699     05CF  0839               	movf	descomponer@dec,w
  3700     05D0  00FC               	movwf	??_descomponer
  3701     05D1  01FD               	clrf	??_descomponer+1
  3702     05D2  087C               	movf	??_descomponer,w
  3703     05D3  00F2               	movwf	___awdiv@dividend
  3704     05D4  087D               	movf	??_descomponer+1,w
  3705     05D5  00F3               	movwf	___awdiv@dividend+1
  3706     05D6  120A  118A  264B  120A  118A  	fcall	___awdiv
  3707     05DB  0870               	movf	?___awdiv,w
  3708     05DC  2DE4               	goto	l262
  3709     05DD                     l1565:
  3710     05DD  0879               	movf	descomponer@pos,w
  3711     05DE  047A               	iorwf	descomponer@pos+1,w
  3712     05DF  1D03               	btfss	3,2
  3713     05E0  2DE2               	goto	u1211
  3714     05E1  2DE3               	goto	u1210
  3715     05E2                     u1211:
  3716     05E2  2DE4               	goto	l262
  3717     05E3                     u1210:
  3718     05E3                     l1567:
  3719                           
  3720                           ;conversiones.c: 59:         return uni;
  3721     05E3  0838               	movf	descomponer@uni,w
  3722     05E4                     l262:
  3723     05E4  0008               	return
  3724     05E5                     __end_of_descomponer:
  3725                           
  3726                           	psect	text22
  3727     046B                     __ptext22:	
  3728 ;; *************** function ___awmod *****************
  3729 ;; Defined at:
  3730 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  divisor         2    0[COMMON] int 
  3733 ;;  dividend        2    2[COMMON] int 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  sign            1    6[COMMON] unsigned char 
  3736 ;;  counter         1    5[COMMON] unsigned char 
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  2    0[COMMON] int 
  3739 ;; Registers used:
  3740 ;;		wreg, status,2, status,0
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3746 ;;      Params:         4       0       0       0       0
  3747 ;;      Locals:         2       0       0       0       0
  3748 ;;      Temps:          1       0       0       0       0
  3749 ;;      Totals:         7       0       0       0       0
  3750 ;;Total ram usage:        7 bytes
  3751 ;; Hardware stack levels used: 1
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_desconvertir
  3756 ;;		_descomponer
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760     046B                     ___awmod:	
  3761                           ;psect for function ___awmod
  3762                           
  3763     046B                     l1477:	
  3764                           ;incstack = 0
  3765                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3766                           
  3767     046B  01F6               	clrf	___awmod@sign
  3768     046C                     l1479:
  3769     046C  1FF3               	btfss	___awmod@dividend+1,7
  3770     046D  2C6F               	goto	u1051
  3771     046E  2C70               	goto	u1050
  3772     046F                     u1051:
  3773     046F  2C77               	goto	l1485
  3774     0470                     u1050:
  3775     0470                     l1481:
  3776     0470  09F2               	comf	___awmod@dividend,f
  3777     0471  09F3               	comf	___awmod@dividend+1,f
  3778     0472  0AF2               	incf	___awmod@dividend,f
  3779     0473  1903               	skipnz
  3780     0474  0AF3               	incf	___awmod@dividend+1,f
  3781     0475                     l1483:
  3782     0475  01F6               	clrf	___awmod@sign
  3783     0476  0AF6               	incf	___awmod@sign,f
  3784     0477                     l1485:
  3785     0477  1FF1               	btfss	___awmod@divisor+1,7
  3786     0478  2C7A               	goto	u1061
  3787     0479  2C7B               	goto	u1060
  3788     047A                     u1061:
  3789     047A  2C80               	goto	l1489
  3790     047B                     u1060:
  3791     047B                     l1487:
  3792     047B  09F0               	comf	___awmod@divisor,f
  3793     047C  09F1               	comf	___awmod@divisor+1,f
  3794     047D  0AF0               	incf	___awmod@divisor,f
  3795     047E  1903               	skipnz
  3796     047F  0AF1               	incf	___awmod@divisor+1,f
  3797     0480                     l1489:
  3798     0480  0870               	movf	___awmod@divisor,w
  3799     0481  0471               	iorwf	___awmod@divisor+1,w
  3800     0482  1903               	btfsc	3,2
  3801     0483  2C85               	goto	u1071
  3802     0484  2C86               	goto	u1070
  3803     0485                     u1071:
  3804     0485  2CB5               	goto	l1507
  3805     0486                     u1070:
  3806     0486                     l1491:
  3807     0486  01F5               	clrf	___awmod@counter
  3808     0487  0AF5               	incf	___awmod@counter,f
  3809     0488  2C94               	goto	l1497
  3810     0489                     l1493:
  3811     0489  3001               	movlw	1
  3812     048A                     u1085:
  3813     048A  1003               	clrc
  3814     048B  0DF0               	rlf	___awmod@divisor,f
  3815     048C  0DF1               	rlf	___awmod@divisor+1,f
  3816     048D  3EFF               	addlw	-1
  3817     048E  1D03               	skipz
  3818     048F  2C8A               	goto	u1085
  3819     0490                     l1495:
  3820     0490  3001               	movlw	1
  3821     0491  00F4               	movwf	??___awmod
  3822     0492  0874               	movf	??___awmod,w
  3823     0493  07F5               	addwf	___awmod@counter,f
  3824     0494                     l1497:
  3825     0494  1FF1               	btfss	___awmod@divisor+1,7
  3826     0495  2C97               	goto	u1091
  3827     0496  2C98               	goto	u1090
  3828     0497                     u1091:
  3829     0497  2C89               	goto	l1493
  3830     0498                     u1090:
  3831     0498                     l1499:
  3832     0498  0871               	movf	___awmod@divisor+1,w
  3833     0499  0273               	subwf	___awmod@dividend+1,w
  3834     049A  1D03               	skipz
  3835     049B  2C9E               	goto	u1105
  3836     049C  0870               	movf	___awmod@divisor,w
  3837     049D  0272               	subwf	___awmod@dividend,w
  3838     049E                     u1105:
  3839     049E  1C03               	skipc
  3840     049F  2CA1               	goto	u1101
  3841     04A0  2CA2               	goto	u1100
  3842     04A1                     u1101:
  3843     04A1  2CA8               	goto	l1503
  3844     04A2                     u1100:
  3845     04A2                     l1501:
  3846     04A2  0870               	movf	___awmod@divisor,w
  3847     04A3  02F2               	subwf	___awmod@dividend,f
  3848     04A4  0871               	movf	___awmod@divisor+1,w
  3849     04A5  1C03               	skipc
  3850     04A6  03F3               	decf	___awmod@dividend+1,f
  3851     04A7  02F3               	subwf	___awmod@dividend+1,f
  3852     04A8                     l1503:
  3853     04A8  3001               	movlw	1
  3854     04A9                     u1115:
  3855     04A9  1003               	clrc
  3856     04AA  0CF1               	rrf	___awmod@divisor+1,f
  3857     04AB  0CF0               	rrf	___awmod@divisor,f
  3858     04AC  3EFF               	addlw	-1
  3859     04AD  1D03               	skipz
  3860     04AE  2CA9               	goto	u1115
  3861     04AF                     l1505:
  3862     04AF  3001               	movlw	1
  3863     04B0  02F5               	subwf	___awmod@counter,f
  3864     04B1  1D03               	btfss	3,2
  3865     04B2  2CB4               	goto	u1121
  3866     04B3  2CB5               	goto	u1120
  3867     04B4                     u1121:
  3868     04B4  2C98               	goto	l1499
  3869     04B5                     u1120:
  3870     04B5                     l1507:
  3871     04B5  0876               	movf	___awmod@sign,w
  3872     04B6  1903               	btfsc	3,2
  3873     04B7  2CB9               	goto	u1131
  3874     04B8  2CBA               	goto	u1130
  3875     04B9                     u1131:
  3876     04B9  2CBF               	goto	l1511
  3877     04BA                     u1130:
  3878     04BA                     l1509:
  3879     04BA  09F2               	comf	___awmod@dividend,f
  3880     04BB  09F3               	comf	___awmod@dividend+1,f
  3881     04BC  0AF2               	incf	___awmod@dividend,f
  3882     04BD  1903               	skipnz
  3883     04BE  0AF3               	incf	___awmod@dividend+1,f
  3884     04BF                     l1511:
  3885     04BF  0873               	movf	___awmod@dividend+1,w
  3886     04C0  00F1               	movwf	?___awmod+1
  3887     04C1  0872               	movf	___awmod@dividend,w
  3888     04C2  00F0               	movwf	?___awmod
  3889     04C3                     l531:
  3890     04C3  0008               	return
  3891     04C4                     __end_of___awmod:
  3892                           
  3893                           	psect	text23
  3894     064B                     __ptext23:	
  3895 ;; *************** function ___awdiv *****************
  3896 ;; Defined at:
  3897 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  divisor         2    0[COMMON] int 
  3900 ;;  dividend        2    2[COMMON] int 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  quotient        2    7[COMMON] int 
  3903 ;;  sign            1    6[COMMON] unsigned char 
  3904 ;;  counter         1    5[COMMON] unsigned char 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  2    0[COMMON] int 
  3907 ;; Registers used:
  3908 ;;		wreg, status,2, status,0
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3914 ;;      Params:         4       0       0       0       0
  3915 ;;      Locals:         4       0       0       0       0
  3916 ;;      Temps:          1       0       0       0       0
  3917 ;;      Totals:         9       0       0       0       0
  3918 ;;Total ram usage:        9 bytes
  3919 ;; Hardware stack levels used: 1
  3920 ;; This function calls:
  3921 ;;		Nothing
  3922 ;; This function is called by:
  3923 ;;		_desconvertir
  3924 ;;		_descomponer
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928     064B                     ___awdiv:	
  3929                           ;psect for function ___awdiv
  3930                           
  3931     064B                     l1433:	
  3932                           ;incstack = 0
  3933                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3934                           
  3935     064B  01F6               	clrf	___awdiv@sign
  3936     064C                     l1435:
  3937     064C  1FF1               	btfss	___awdiv@divisor+1,7
  3938     064D  2E4F               	goto	u951
  3939     064E  2E50               	goto	u950
  3940     064F                     u951:
  3941     064F  2E57               	goto	l1441
  3942     0650                     u950:
  3943     0650                     l1437:
  3944     0650  09F0               	comf	___awdiv@divisor,f
  3945     0651  09F1               	comf	___awdiv@divisor+1,f
  3946     0652  0AF0               	incf	___awdiv@divisor,f
  3947     0653  1903               	skipnz
  3948     0654  0AF1               	incf	___awdiv@divisor+1,f
  3949     0655                     l1439:
  3950     0655  01F6               	clrf	___awdiv@sign
  3951     0656  0AF6               	incf	___awdiv@sign,f
  3952     0657                     l1441:
  3953     0657  1FF3               	btfss	___awdiv@dividend+1,7
  3954     0658  2E5A               	goto	u961
  3955     0659  2E5B               	goto	u960
  3956     065A                     u961:
  3957     065A  2E64               	goto	l1447
  3958     065B                     u960:
  3959     065B                     l1443:
  3960     065B  09F2               	comf	___awdiv@dividend,f
  3961     065C  09F3               	comf	___awdiv@dividend+1,f
  3962     065D  0AF2               	incf	___awdiv@dividend,f
  3963     065E  1903               	skipnz
  3964     065F  0AF3               	incf	___awdiv@dividend+1,f
  3965     0660                     l1445:
  3966     0660  3001               	movlw	1
  3967     0661  00F4               	movwf	??___awdiv
  3968     0662  0874               	movf	??___awdiv,w
  3969     0663  06F6               	xorwf	___awdiv@sign,f
  3970     0664                     l1447:
  3971     0664  01F7               	clrf	___awdiv@quotient
  3972     0665  01F8               	clrf	___awdiv@quotient+1
  3973     0666                     l1449:
  3974     0666  0870               	movf	___awdiv@divisor,w
  3975     0667  0471               	iorwf	___awdiv@divisor+1,w
  3976     0668  1903               	btfsc	3,2
  3977     0669  2E6B               	goto	u971
  3978     066A  2E6C               	goto	u970
  3979     066B                     u971:
  3980     066B  2EA3               	goto	l1469
  3981     066C                     u970:
  3982     066C                     l1451:
  3983     066C  01F5               	clrf	___awdiv@counter
  3984     066D  0AF5               	incf	___awdiv@counter,f
  3985     066E  2E7A               	goto	l1457
  3986     066F                     l1453:
  3987     066F  3001               	movlw	1
  3988     0670                     u985:
  3989     0670  1003               	clrc
  3990     0671  0DF0               	rlf	___awdiv@divisor,f
  3991     0672  0DF1               	rlf	___awdiv@divisor+1,f
  3992     0673  3EFF               	addlw	-1
  3993     0674  1D03               	skipz
  3994     0675  2E70               	goto	u985
  3995     0676                     l1455:
  3996     0676  3001               	movlw	1
  3997     0677  00F4               	movwf	??___awdiv
  3998     0678  0874               	movf	??___awdiv,w
  3999     0679  07F5               	addwf	___awdiv@counter,f
  4000     067A                     l1457:
  4001     067A  1FF1               	btfss	___awdiv@divisor+1,7
  4002     067B  2E7D               	goto	u991
  4003     067C  2E7E               	goto	u990
  4004     067D                     u991:
  4005     067D  2E6F               	goto	l1453
  4006     067E                     u990:
  4007     067E                     l1459:
  4008     067E  3001               	movlw	1
  4009     067F                     u1005:
  4010     067F  1003               	clrc
  4011     0680  0DF7               	rlf	___awdiv@quotient,f
  4012     0681  0DF8               	rlf	___awdiv@quotient+1,f
  4013     0682  3EFF               	addlw	-1
  4014     0683  1D03               	skipz
  4015     0684  2E7F               	goto	u1005
  4016     0685  0871               	movf	___awdiv@divisor+1,w
  4017     0686  0273               	subwf	___awdiv@dividend+1,w
  4018     0687  1D03               	skipz
  4019     0688  2E8B               	goto	u1015
  4020     0689  0870               	movf	___awdiv@divisor,w
  4021     068A  0272               	subwf	___awdiv@dividend,w
  4022     068B                     u1015:
  4023     068B  1C03               	skipc
  4024     068C  2E8E               	goto	u1011
  4025     068D  2E8F               	goto	u1010
  4026     068E                     u1011:
  4027     068E  2E96               	goto	l1465
  4028     068F                     u1010:
  4029     068F                     l1461:
  4030     068F  0870               	movf	___awdiv@divisor,w
  4031     0690  02F2               	subwf	___awdiv@dividend,f
  4032     0691  0871               	movf	___awdiv@divisor+1,w
  4033     0692  1C03               	skipc
  4034     0693  03F3               	decf	___awdiv@dividend+1,f
  4035     0694  02F3               	subwf	___awdiv@dividend+1,f
  4036     0695                     l1463:
  4037     0695  1477               	bsf	___awdiv@quotient,0
  4038     0696                     l1465:
  4039     0696  3001               	movlw	1
  4040     0697                     u1025:
  4041     0697  1003               	clrc
  4042     0698  0CF1               	rrf	___awdiv@divisor+1,f
  4043     0699  0CF0               	rrf	___awdiv@divisor,f
  4044     069A  3EFF               	addlw	-1
  4045     069B  1D03               	skipz
  4046     069C  2E97               	goto	u1025
  4047     069D                     l1467:
  4048     069D  3001               	movlw	1
  4049     069E  02F5               	subwf	___awdiv@counter,f
  4050     069F  1D03               	btfss	3,2
  4051     06A0  2EA2               	goto	u1031
  4052     06A1  2EA3               	goto	u1030
  4053     06A2                     u1031:
  4054     06A2  2E7E               	goto	l1459
  4055     06A3                     u1030:
  4056     06A3                     l1469:
  4057     06A3  0876               	movf	___awdiv@sign,w
  4058     06A4  1903               	btfsc	3,2
  4059     06A5  2EA7               	goto	u1041
  4060     06A6  2EA8               	goto	u1040
  4061     06A7                     u1041:
  4062     06A7  2EAD               	goto	l1473
  4063     06A8                     u1040:
  4064     06A8                     l1471:
  4065     06A8  09F7               	comf	___awdiv@quotient,f
  4066     06A9  09F8               	comf	___awdiv@quotient+1,f
  4067     06AA  0AF7               	incf	___awdiv@quotient,f
  4068     06AB  1903               	skipnz
  4069     06AC  0AF8               	incf	___awdiv@quotient+1,f
  4070     06AD                     l1473:
  4071     06AD  0878               	movf	___awdiv@quotient+1,w
  4072     06AE  00F1               	movwf	?___awdiv+1
  4073     06AF  0877               	movf	___awdiv@quotient,w
  4074     06B0  00F0               	movwf	?___awdiv
  4075     06B1                     l518:
  4076     06B1  0008               	return
  4077     06B2                     __end_of___awdiv:
  4078                           
  4079                           	psect	text24
  4080     02A6                     __ptext24:	
  4081 ;; *************** function _Lcd_Write_Char *****************
  4082 ;; Defined at:
  4083 ;;		line 83 in file "LCD.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  a               1    wreg     unsigned char 
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;  a               1    4[COMMON] unsigned char 
  4088 ;;  y               1    3[COMMON] unsigned char 
  4089 ;;  temp            1    2[COMMON] unsigned char 
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1    wreg      void 
  4092 ;; Registers used:
  4093 ;;		wreg, status,2, status,0, pclath, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4099 ;;      Params:         0       0       0       0       0
  4100 ;;      Locals:         3       0       0       0       0
  4101 ;;      Temps:          1       0       0       0       0
  4102 ;;      Totals:         4       0       0       0       0
  4103 ;;Total ram usage:        4 bytes
  4104 ;; Hardware stack levels used: 1
  4105 ;; Hardware stack levels required when called: 1
  4106 ;; This function calls:
  4107 ;;		_Lcd_Port
  4108 ;; This function is called by:
  4109 ;;		_Escribir_dato
  4110 ;;		_Lcd_Write_String
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114     02A6                     _Lcd_Write_Char:	
  4115                           ;psect for function _Lcd_Write_Char
  4116                           
  4117                           
  4118                           ;incstack = 0
  4119                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4120                           ;Lcd_Write_Char@a stored from wreg
  4121     02A6  00F4               	movwf	Lcd_Write_Char@a
  4122     02A7                     l1649:
  4123                           
  4124                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  4125     02A7  0874               	movf	Lcd_Write_Char@a,w
  4126     02A8  390F               	andlw	15
  4127     02A9  00F2               	movwf	Lcd_Write_Char@temp
  4128                           
  4129                           ;LCD.c: 86:     y = a & 0xF0;
  4130     02AA  0874               	movf	Lcd_Write_Char@a,w
  4131     02AB  39F0               	andlw	240
  4132     02AC  00F3               	movwf	Lcd_Write_Char@y
  4133     02AD                     l1651:
  4134                           
  4135                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  4136     02AD  1283               	bcf	3,5	;RP0=0, select bank0
  4137     02AE  1303               	bcf	3,6	;RP1=0, select bank0
  4138     02AF  1508               	bsf	8,2	;volatile
  4139     02B0                     l1653:
  4140                           
  4141                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  4142     02B0  0873               	movf	Lcd_Write_Char@y,w
  4143     02B1  00F1               	movwf	??_Lcd_Write_Char
  4144     02B2  3004               	movlw	4
  4145     02B3                     u1325:
  4146     02B3  1003               	clrc
  4147     02B4  0CF1               	rrf	??_Lcd_Write_Char,f
  4148     02B5  3EFF               	addlw	-1
  4149     02B6  1D03               	skipz
  4150     02B7  2AB3               	goto	u1325
  4151     02B8  0871               	movf	??_Lcd_Write_Char,w
  4152     02B9  120A  118A  21D1  120A  118A  	fcall	_Lcd_Port
  4153     02BE                     l1655:
  4154                           
  4155                           ;LCD.c: 89:     RD3 = 1;
  4156     02BE  1283               	bcf	3,5	;RP0=0, select bank0
  4157     02BF  1303               	bcf	3,6	;RP1=0, select bank0
  4158     02C0  1588               	bsf	8,3	;volatile
  4159     02C1                     l1657:
  4160                           
  4161                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4162     02C1  301A               	movlw	26
  4163     02C2  00F1               	movwf	??_Lcd_Write_Char
  4164     02C3                     u1667:
  4165     02C3  0BF1               	decfsz	??_Lcd_Write_Char,f
  4166     02C4  2AC3               	goto	u1667
  4167     02C5  0000               	nop
  4168     02C6                     l1659:
  4169                           
  4170                           ;LCD.c: 91:     RD3 = 0;
  4171     02C6  1283               	bcf	3,5	;RP0=0, select bank0
  4172     02C7  1303               	bcf	3,6	;RP1=0, select bank0
  4173     02C8  1188               	bcf	8,3	;volatile
  4174     02C9                     l1661:
  4175                           
  4176                           ;LCD.c: 92:     Lcd_Port(temp);
  4177     02C9  0872               	movf	Lcd_Write_Char@temp,w
  4178     02CA  120A  118A  21D1  120A  118A  	fcall	_Lcd_Port
  4179     02CF                     l1663:
  4180                           
  4181                           ;LCD.c: 93:     RD3 = 1;
  4182     02CF  1283               	bcf	3,5	;RP0=0, select bank0
  4183     02D0  1303               	bcf	3,6	;RP1=0, select bank0
  4184     02D1  1588               	bsf	8,3	;volatile
  4185     02D2                     l1665:
  4186                           
  4187                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4188     02D2  301A               	movlw	26
  4189     02D3  00F1               	movwf	??_Lcd_Write_Char
  4190     02D4                     u1677:
  4191     02D4  0BF1               	decfsz	??_Lcd_Write_Char,f
  4192     02D5  2AD4               	goto	u1677
  4193     02D6  0000               	nop
  4194     02D7                     l1667:
  4195                           
  4196                           ;LCD.c: 95:     RD3 = 0;
  4197     02D7  1283               	bcf	3,5	;RP0=0, select bank0
  4198     02D8  1303               	bcf	3,6	;RP1=0, select bank0
  4199     02D9  1188               	bcf	8,3	;volatile
  4200     02DA                     l230:
  4201     02DA  0008               	return
  4202     02DB                     __end_of_Lcd_Write_Char:
  4203                           
  4204                           	psect	text25
  4205     0389                     __ptext25:	
  4206 ;; *************** function _Lcd_Set_Cursor *****************
  4207 ;; Defined at:
  4208 ;;		line 48 in file "LCD.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;  a               1    wreg     unsigned char 
  4211 ;;  b               1    4[COMMON] unsigned char 
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;  a               1    6[COMMON] unsigned char 
  4214 ;;  temp            1    9[COMMON] unsigned char 
  4215 ;;  y               1    8[COMMON] unsigned char 
  4216 ;;  z               1    7[COMMON] unsigned char 
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      void 
  4219 ;; Registers used:
  4220 ;;		wreg, status,2, status,0, pclath, cstack
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4226 ;;      Params:         1       0       0       0       0
  4227 ;;      Locals:         4       0       0       0       0
  4228 ;;      Temps:          1       0       0       0       0
  4229 ;;      Totals:         6       0       0       0       0
  4230 ;;Total ram usage:        6 bytes
  4231 ;; Hardware stack levels used: 1
  4232 ;; Hardware stack levels required when called: 2
  4233 ;; This function calls:
  4234 ;;		_Lcd_Cmd
  4235 ;; This function is called by:
  4236 ;;		_main
  4237 ;;		_Escribir_dato
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241     0389                     _Lcd_Set_Cursor:	
  4242                           ;psect for function _Lcd_Set_Cursor
  4243                           
  4244                           
  4245                           ;incstack = 0
  4246                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4247                           ;Lcd_Set_Cursor@a stored from wreg
  4248     0389  00F6               	movwf	Lcd_Set_Cursor@a
  4249     038A                     l1515:
  4250                           
  4251                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  4252     038A  0376               	decf	Lcd_Set_Cursor@a,w
  4253     038B  1D03               	btfss	3,2
  4254     038C  2B8E               	goto	u1141
  4255     038D  2B8F               	goto	u1140
  4256     038E                     u1141:
  4257     038E  2BAC               	goto	l1525
  4258     038F                     u1140:
  4259     038F                     l1517:
  4260                           
  4261                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  4262     038F  0874               	movf	Lcd_Set_Cursor@b,w
  4263     0390  3E7F               	addlw	127
  4264     0391  00F9               	movwf	Lcd_Set_Cursor@temp
  4265                           
  4266                           ;LCD.c: 52:         z = temp >> 4;
  4267     0392  0879               	movf	Lcd_Set_Cursor@temp,w
  4268     0393  00F5               	movwf	??_Lcd_Set_Cursor
  4269     0394  3004               	movlw	4
  4270     0395                     u1155:
  4271     0395  1003               	clrc
  4272     0396  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4273     0397  3EFF               	addlw	-1
  4274     0398  1D03               	skipz
  4275     0399  2B95               	goto	u1155
  4276     039A  0875               	movf	??_Lcd_Set_Cursor,w
  4277     039B  00F7               	movwf	Lcd_Set_Cursor@z
  4278     039C                     l1519:
  4279                           
  4280                           ;LCD.c: 53:         y = temp & 0x0F;
  4281     039C  0879               	movf	Lcd_Set_Cursor@temp,w
  4282     039D  390F               	andlw	15
  4283     039E  00F8               	movwf	Lcd_Set_Cursor@y
  4284     039F                     l1521:
  4285                           
  4286                           ;LCD.c: 54:         Lcd_Cmd(z);
  4287     039F  0877               	movf	Lcd_Set_Cursor@z,w
  4288     03A0  120A  118A  219C  120A  118A  	fcall	_Lcd_Cmd
  4289     03A5                     l1523:
  4290                           
  4291                           ;LCD.c: 55:         Lcd_Cmd(y);
  4292     03A5  0878               	movf	Lcd_Set_Cursor@y,w
  4293     03A6  120A  118A  219C  120A  118A  	fcall	_Lcd_Cmd
  4294                           
  4295                           ;LCD.c: 56:     } else if (a == 2) {
  4296     03AB  2BCE               	goto	l224
  4297     03AC                     l1525:
  4298     03AC  3002               	movlw	2
  4299     03AD  0676               	xorwf	Lcd_Set_Cursor@a,w
  4300     03AE  1D03               	btfss	3,2
  4301     03AF  2BB1               	goto	u1161
  4302     03B0  2BB2               	goto	u1160
  4303     03B1                     u1161:
  4304     03B1  2BCE               	goto	l224
  4305     03B2                     u1160:
  4306     03B2                     l1527:
  4307                           
  4308                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  4309     03B2  0874               	movf	Lcd_Set_Cursor@b,w
  4310     03B3  3EBF               	addlw	191
  4311     03B4  00F9               	movwf	Lcd_Set_Cursor@temp
  4312                           
  4313                           ;LCD.c: 58:         z = temp >> 4;
  4314     03B5  0879               	movf	Lcd_Set_Cursor@temp,w
  4315     03B6  00F5               	movwf	??_Lcd_Set_Cursor
  4316     03B7  3004               	movlw	4
  4317     03B8                     u1175:
  4318     03B8  1003               	clrc
  4319     03B9  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4320     03BA  3EFF               	addlw	-1
  4321     03BB  1D03               	skipz
  4322     03BC  2BB8               	goto	u1175
  4323     03BD  0875               	movf	??_Lcd_Set_Cursor,w
  4324     03BE  00F7               	movwf	Lcd_Set_Cursor@z
  4325     03BF                     l1529:
  4326                           
  4327                           ;LCD.c: 59:         y = temp & 0x0F;
  4328     03BF  0879               	movf	Lcd_Set_Cursor@temp,w
  4329     03C0  390F               	andlw	15
  4330     03C1  00F8               	movwf	Lcd_Set_Cursor@y
  4331     03C2                     l1531:
  4332                           
  4333                           ;LCD.c: 60:         Lcd_Cmd(z);
  4334     03C2  0877               	movf	Lcd_Set_Cursor@z,w
  4335     03C3  120A  118A  219C  120A  118A  	fcall	_Lcd_Cmd
  4336     03C8                     l1533:
  4337                           
  4338                           ;LCD.c: 61:         Lcd_Cmd(y);
  4339     03C8  0878               	movf	Lcd_Set_Cursor@y,w
  4340     03C9  120A  118A  219C  120A  118A  	fcall	_Lcd_Cmd
  4341     03CE                     l224:
  4342     03CE  0008               	return
  4343     03CF                     __end_of_Lcd_Set_Cursor:
  4344                           
  4345                           	psect	text26
  4346     019C                     __ptext26:	
  4347 ;; *************** function _Lcd_Cmd *****************
  4348 ;; Defined at:
  4349 ;;		line 35 in file "LCD.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;  a               1    wreg     unsigned char 
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;  a               1    3[COMMON] unsigned char 
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		wreg, status,2, status,0, pclath, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4363 ;;      Params:         0       0       0       0       0
  4364 ;;      Locals:         1       0       0       0       0
  4365 ;;      Temps:          2       0       0       0       0
  4366 ;;      Totals:         3       0       0       0       0
  4367 ;;Total ram usage:        3 bytes
  4368 ;; Hardware stack levels used: 1
  4369 ;; Hardware stack levels required when called: 1
  4370 ;; This function calls:
  4371 ;;		_Lcd_Port
  4372 ;; This function is called by:
  4373 ;;		_Lcd_Clear
  4374 ;;		_Lcd_Set_Cursor
  4375 ;;		_Lcd_Init
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379     019C                     _Lcd_Cmd:	
  4380                           ;psect for function _Lcd_Cmd
  4381                           
  4382                           
  4383                           ;incstack = 0
  4384                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4385                           ;Lcd_Cmd@a stored from wreg
  4386     019C  00F3               	movwf	Lcd_Cmd@a
  4387     019D                     l1385:
  4388                           
  4389                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  4390     019D  1283               	bcf	3,5	;RP0=0, select bank0
  4391     019E  1303               	bcf	3,6	;RP1=0, select bank0
  4392     019F  1108               	bcf	8,2	;volatile
  4393     01A0                     l1387:
  4394                           
  4395                           ;LCD.c: 37:     Lcd_Port(a);
  4396     01A0  0873               	movf	Lcd_Cmd@a,w
  4397     01A1  120A  118A  21D1  120A  118A  	fcall	_Lcd_Port
  4398     01A6                     l1389:
  4399                           
  4400                           ;LCD.c: 38:     RD3 = 1;
  4401     01A6  1283               	bcf	3,5	;RP0=0, select bank0
  4402     01A7  1303               	bcf	3,6	;RP1=0, select bank0
  4403     01A8  1588               	bsf	8,3	;volatile
  4404     01A9                     l1391:
  4405                           
  4406                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4407     01A9  300B               	movlw	11
  4408     01AA  00F2               	movwf	??_Lcd_Cmd+1
  4409     01AB  3062               	movlw	98
  4410     01AC  00F1               	movwf	??_Lcd_Cmd
  4411     01AD                     u1687:
  4412     01AD  0BF1               	decfsz	??_Lcd_Cmd,f
  4413     01AE  29AD               	goto	u1687
  4414     01AF  0BF2               	decfsz	??_Lcd_Cmd+1,f
  4415     01B0  29AD               	goto	u1687
  4416     01B1  0000               	nop
  4417     01B2                     l1393:
  4418                           
  4419                           ;LCD.c: 40:     RD3 = 0;
  4420     01B2  1283               	bcf	3,5	;RP0=0, select bank0
  4421     01B3  1303               	bcf	3,6	;RP1=0, select bank0
  4422     01B4  1188               	bcf	8,3	;volatile
  4423     01B5                     l215:
  4424     01B5  0008               	return
  4425     01B6                     __end_of_Lcd_Cmd:
  4426                           
  4427                           	psect	text27
  4428     01D1                     __ptext27:	
  4429 ;; *************** function _Lcd_Port *****************
  4430 ;; Defined at:
  4431 ;;		line 13 in file "LCD.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  a               1    wreg     unsigned char 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  a               1    0[COMMON] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      void 
  4438 ;; Registers used:
  4439 ;;		wreg
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4445 ;;      Params:         0       0       0       0       0
  4446 ;;      Locals:         1       0       0       0       0
  4447 ;;      Temps:          0       0       0       0       0
  4448 ;;      Totals:         1       0       0       0       0
  4449 ;;Total ram usage:        1 bytes
  4450 ;; Hardware stack levels used: 1
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_Lcd_Cmd
  4455 ;;		_Lcd_Init
  4456 ;;		_Lcd_Write_Char
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460     01D1                     _Lcd_Port:	
  4461                           ;psect for function _Lcd_Port
  4462                           
  4463                           
  4464                           ;incstack = 0
  4465                           ; Regs used in _Lcd_Port: [wreg]
  4466                           ;Lcd_Port@a stored from wreg
  4467     01D1  00F0               	movwf	Lcd_Port@a
  4468     01D2                     l1371:
  4469                           
  4470                           ;LCD.c: 14:     if (a & 1)
  4471     01D2  1C70               	btfss	Lcd_Port@a,0
  4472     01D3  29D5               	goto	u801
  4473     01D4  29D6               	goto	u800
  4474     01D5                     u801:
  4475     01D5  29DA               	goto	l204
  4476     01D6                     u800:
  4477     01D6                     l1373:
  4478                           
  4479                           ;LCD.c: 15:         RD4 = 1;
  4480     01D6  1283               	bcf	3,5	;RP0=0, select bank0
  4481     01D7  1303               	bcf	3,6	;RP1=0, select bank0
  4482     01D8  1608               	bsf	8,4	;volatile
  4483     01D9  29DD               	goto	l205
  4484     01DA                     l204:	
  4485                           ;LCD.c: 16:     else
  4486                           
  4487                           
  4488                           ;LCD.c: 17:         RD4 = 0;
  4489     01DA  1283               	bcf	3,5	;RP0=0, select bank0
  4490     01DB  1303               	bcf	3,6	;RP1=0, select bank0
  4491     01DC  1208               	bcf	8,4	;volatile
  4492     01DD                     l205:
  4493                           
  4494                           ;LCD.c: 19:     if (a & 2)
  4495     01DD  1CF0               	btfss	Lcd_Port@a,1
  4496     01DE  29E0               	goto	u811
  4497     01DF  29E1               	goto	u810
  4498     01E0                     u811:
  4499     01E0  29E3               	goto	l206
  4500     01E1                     u810:
  4501     01E1                     l1375:
  4502                           
  4503                           ;LCD.c: 20:         RD5 = 1;
  4504     01E1  1688               	bsf	8,5	;volatile
  4505     01E2  29E4               	goto	l207
  4506     01E3                     l206:	
  4507                           ;LCD.c: 21:     else
  4508                           
  4509                           
  4510                           ;LCD.c: 22:         RD5 = 0;
  4511     01E3  1288               	bcf	8,5	;volatile
  4512     01E4                     l207:
  4513                           
  4514                           ;LCD.c: 24:     if (a & 4)
  4515     01E4  1D70               	btfss	Lcd_Port@a,2
  4516     01E5  29E7               	goto	u821
  4517     01E6  29E8               	goto	u820
  4518     01E7                     u821:
  4519     01E7  29EA               	goto	l208
  4520     01E8                     u820:
  4521     01E8                     l1377:
  4522                           
  4523                           ;LCD.c: 25:         RD6 = 1;
  4524     01E8  1708               	bsf	8,6	;volatile
  4525     01E9  29EB               	goto	l209
  4526     01EA                     l208:	
  4527                           ;LCD.c: 26:     else
  4528                           
  4529                           
  4530                           ;LCD.c: 27:         RD6 = 0;
  4531     01EA  1308               	bcf	8,6	;volatile
  4532     01EB                     l209:
  4533                           
  4534                           ;LCD.c: 29:     if (a & 8)
  4535     01EB  1DF0               	btfss	Lcd_Port@a,3
  4536     01EC  29EE               	goto	u831
  4537     01ED  29EF               	goto	u830
  4538     01EE                     u831:
  4539     01EE  29F1               	goto	l210
  4540     01EF                     u830:
  4541     01EF                     l1379:
  4542                           
  4543                           ;LCD.c: 30:         RD7 = 1;
  4544     01EF  1788               	bsf	8,7	;volatile
  4545     01F0  29F2               	goto	l212
  4546     01F1                     l210:	
  4547                           ;LCD.c: 31:     else
  4548                           
  4549                           
  4550                           ;LCD.c: 32:         RD7 = 0;
  4551     01F1  1388               	bcf	8,7	;volatile
  4552     01F2                     l212:
  4553     01F2  0008               	return
  4554     01F3                     __end_of_Lcd_Port:
  4555     007E                     btemp	set	126	;btemp
  4556     007E                     wtemp0	set	126
  4557                           
  4558                           	psect	idloc
  4559                           
  4560                           ;Config register IDLOC0 @ 0x2000
  4561                           ;	unspecified, using default values
  4562     2000                     	org	8192
  4563     2000  3FFF               	dw	16383
  4564                           
  4565                           ;Config register IDLOC1 @ 0x2001
  4566                           ;	unspecified, using default values
  4567     2001                     	org	8193
  4568     2001  3FFF               	dw	16383
  4569                           
  4570                           ;Config register IDLOC2 @ 0x2002
  4571                           ;	unspecified, using default values
  4572     2002                     	org	8194
  4573     2002  3FFF               	dw	16383
  4574                           
  4575                           ;Config register IDLOC3 @ 0x2003
  4576                           ;	unspecified, using default values
  4577     2003                     	org	8195
  4578     2003  3FFF               	dw	16383
  4579                           
  4580                           	psect	config
  4581                           
  4582                           ;Config register CONFIG1 @ 0x2007
  4583                           ;	Oscillator Selection bits
  4584                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4585                           ;	Watchdog Timer Enable bit
  4586                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4587                           ;	Power-up Timer Enable bit
  4588                           ;	PWRTE = OFF, PWRT disabled
  4589                           ;	RE3/MCLR pin function select bit
  4590                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4591                           ;	Code Protection bit
  4592                           ;	CP = OFF, Program memory code protection is disabled
  4593                           ;	Data Code Protection bit
  4594                           ;	CPD = OFF, Data memory code protection is disabled
  4595                           ;	Brown Out Reset Selection bits
  4596                           ;	BOREN = OFF, BOR disabled
  4597                           ;	Internal External Switchover bit
  4598                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4599                           ;	Fail-Safe Clock Monitor Enabled bit
  4600                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4601                           ;	Low Voltage Programming Enable bit
  4602                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4603                           ;	In-Circuit Debugger Mode bit
  4604                           ;	DEBUG = 0x1, unprogramme  4605     2007                     	org	8199
  4606     2007  20D4               	dw	8404
  4607                           
  4608                           ;Config register CONFIG2 @ 0x2008
  4609                           ;	Brown-out Reset Selection bit
  4610                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4611                           ;	Flash Program Memory Self Write Enable bits
  4612                           ;	WRT = OFF, Write protection off
  4613     2008                     	org	8200
  4614     2008  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      33
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 6
		 -> STR_3(CODE[5]), STR_2(CODE[6]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_desconvertir
    _I2C_Master_Init->___lldiv
    _leer_x->_convertir
    _convertir->___bmul
    _enviar_x->_I2C_Master_Write
    _desconvertir->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Escribir_dato->_descomponer
    _descomponer->___awdiv
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _portsetup->_I2C_Master_Init
    _Escribir_dato->_descomponer

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9101
                                              8 BANK0      2     2      0
                      _Escribir_dato
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                       _desconvertir
                           _enviar_x
                             _leer_x
                          _portsetup
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _portsetup                                            0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _leer_x                                               4     4      0    1024
                                              9 COMMON     4     4      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _convertir
 ---------------------------------------------------------------------------------
 (2) _convertir                                            5     5      0     281
                                              4 COMMON     5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     121
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _enviar_x                                             4     3      1     826
                                              2 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     554
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _desconvertir                                         5     5      0    1621
                                              9 COMMON     5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     367
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Escribir_dato                                        3     1      2    3607
                                              3 BANK0      3     1      2
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                        _descomponer
                          _inttochar
 ---------------------------------------------------------------------------------
 (2) _inttochar                                            1     1      0     220
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _descomponer                                          8     5      3    2013
                                              9 COMMON     5     2      3
                                              0 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     760
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_dato
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _descomponer
       ___awdiv
       ___awmod
     _inttochar
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_String
     _Lcd_Write_Char
   _desconvertir
     ___awdiv
     ___awmod
   _enviar_x
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _leer_x
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _convertir
       ___bmul
   _portsetup
     _I2C_Master_Init
       ___lldiv
   _setupINTOSC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A      21       5       41.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2F      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 17 12:52:46 2023

                               pc 0002                    ___bmul@product 0072                    ?_Escribir_dato 003A  
                              l96 0736                      ___awdiv@sign 0076                                fsr 0004  
                             l210 01F1                               l122 0244                               l212 01F2  
                             l204 01DA                               l205 01DD                               l125 041A  
                             l141 02A5                               l206 01E3                               l230 02DA  
                             l207 01E4                               l215 01B5                               l208 01EA  
                             l224 03CE                               l240 046A                               l144 0388  
                             l209 01EB                               l401 064A                               l218 0179  
                             l170 0186                               l138 01D0                               l227 0520  
                             l147 030F                               l236 0217                               l164 0347  
                             l253 046A                               l173 0150                               l262 05E4  
                             l182 016C                               l167 017A                               l271 052C  
                             l176 0162                               l272 0538                               l185 026A  
                             l273 0544                               l186 026D                               l274 0550  
                             l531 04C3                               l179 0159                               l187 0272  
                             l275 055C                               l276 0568                               l277 0573  
                             l518 06B1                               l391 019B                               l279 057F  
                             _RD3 0043                               _RD4 0044                               _RD5 0045  
                             _RD6 0046                               _RD7 0047                               u800 01D6  
                             u801 01D5                               u810 01E1                               u811 01E0  
                             u820 01E8                               u900 0609                               u821 01E7  
                             u901 0608                               u830 01EF                               u831 01EE  
                             u840 0180                               u920 0624                               u841 017F  
                             u921 0623                               u850 0186                               u851 0185  
                             u915 060B                               u860 018D                               u940 0642  
                             u861 018C                               u941 0641                               u925 0620  
                             u950 0650                               u870 019A                               u951 064F  
                             u871 0199                               u935 0634                               u960 065B  
                             u880 05F5                               u961 065A                               u881 05F4  
                             u970 066C                               u971 066B                               u990 067E  
                             u991 067D                               u895 05FA                               u985 0670  
                             _hor 002F                               _mes 002B                               _min 0031  
                             _sec 0033                               fsr0 0004                               indf 0000  
                    ___awmod@sign 0076                              l1401 0191                              l1403 0193  
                            l1411 05F5                              l1501 04A2                              l1405 019A  
                            l1421 0624                              l1413 05F8                              l1511 04BF  
                            l1503 04A8                              l1423 0632                              l1415 0605  
                            l1521 039F                              l1441 0657                              l1433 064B  
                            l1505 04AF                              l1425 0633                              l1417 0609  
                            l1409 05E5                              l1371 01D2                              l1531 03C2  
                            l1523 03A5                              l1515 038A                              l1451 066C  
                            l1443 065B                              l1435 064C                              l1507 04B5  
                            l1611 0442                              l1603 043A                              l1427 063C  
                            l1419 0612                              l1373 01D6                              l1533 03C8  
                            l1517 038F                              l1525 03AC                              l1461 068F  
                            l1453 066F                              l1445 0660                              l1437 0650  
                            l1509 04BA                              l1621 0450                              l1613 0448  
                            l1605 0440                              l1381 017A                              l1701 0266  
                            l1429 0642                              l1541 0344                              l1375 01E1  
                            l1391 01A9                              l1527 03B2                              l1519 039C  
                            l1471 06A8                              l1463 0695                              l1455 0676  
                            l1447 0664                              l1439 0655                              l1551 05C3  
                            l1383 0180                              l1703 026E                              l1543 0345  
                            l1535 0310                              l1711 0522                              l1377 01E8  
                            l1393 01B2                              l1385 019D                              l1529 03BF  
                            l1473 06AD                              l1465 0696                              l1457 067A  
                            l1449 0666                              l1481 0470                              l1545 0346  
                            l1537 0314                              l1721 0556                              l1713 0528  
                            l1801 0712                              l1379 01EF                              l1387 01A0  
                            l1651 02AD                              l1467 069D                              l1459 067E  
                            l1491 0486                              l1483 0475                              l1547 0580  
                            l1643 0462                              l1635 045A                              l1627 0452  
                            l1619 044A                              l1571 041C                              l1707 0151  
                            l1395 0188                              l1539 0317                              l1731 0218  
                            l1723 0562                              l1715 0532                              l1811 0744  
                            l1803 071B                              l1389 01A6                              l1661 02C9  
                            l1653 02B0                              l1469 06A3                              l1493 0489  
                            l1485 0477                              l1477 046B                              l1565 05DD  
                            l1557 05C5                              l1549 05BC                              l1645 0468  
                            l1637 0460                              l1629 0458                              l1581 0428  
                            l1573 0421                              l1709 0156                              l1397 0189  
                            l1741 0235                              l1733 0228                              l1725 056D  
                            l1717 053E                              l1821 075F                              l1813 074B  
                            l1805 0725                              l1663 02CF                              l1655 02BE  
                            l1495 0490                              l1487 047B                              l1479 046C  
                            l1567 05E3                              l1559 05CB                              l1751 04E8  
                            l1743 04C4                              l1399 018D                              l1671 01BA  
                            l1735 022C                              l1727 0578                              l1719 054A  
                            l1831 0778                              l1823 0766                              l1815 0750  
                            l1807 072B                              l1665 02D2                              l1657 02C1  
                            l1649 02A7                              l1497 0494                              l1489 0480  
                            l1753 016D                              l1745 04CA                              l1761 020A  
                            l1681 014D                              l1673 01C5                              l1737 0230  
                            l1729 057C                              l1841 0796                              l1833 077E  
                            l1825 076C                              l1809 073A                              l1817 0751  
                            l1667 02D7                              l1659 02C6                              l1499 0498  
                            l1595 0432                              l1587 042A                              l1579 0423  
                            l1771 03D2                              l1747 04D3                              l1755 01F4  
                            l1683 0163                              l1763 02DC                              l1691 0245  
                            l1675 01CF                              l1739 0234                              l1851 07BA  
                            l1835 0783                              l1827 0771                              l1819 0755  
                            l1843 079E                              l1597 0438                              l1589 0430  
                            l1749 04E2                              l1757 01F7                              l1773 0274  
                            l1685 0168                              l1693 024A                              l1669 01B7  
                            l1765 0349                              l1861 07CD                              l1853 07BD  
                            l1845 07A4                              l1837 0784                              l1829 0773  
                            l1781 06B2                              l1759 0204                              l1775 0286  
                            l1679 0148                              l1695 0252                              l1687 015A  
                            l1767 0387                              l1863 07CF                              l1855 07C0  
                            l1847 07AE                              l1839 078D                              l1791 06F1  
                            l1783 06CF                              l1777 0291                              l1697 025B  
                            l1689 015F                              l1865 07D8                              l1857 07C5  
                            l1849 07B5                              l1793 06F4                              l1785 06D5  
                            l1699 0260                              l1867 07E1                              l1859 07CA  
                            l1795 06FB                              l1787 06E3                              l1869 07E9  
                            l1797 06FF                              l1789 06EB                              l1799 0708  
                            STR_1 000F                              STR_2 0009                              STR_3 0014  
                            u1010 068F                              u1011 068E                              u1100 04A2  
                            u1005 067F                              u1101 04A1                              u1030 06A3  
                            u1031 06A2                              u1015 068B                              u1040 06A8  
                            u1120 04B5                              u1200 05CB                              u1041 06A7  
                            u1025 0697                              u1121 04B4                              u1105 049E  
                            u1201 05CA                              u1130 04BA                              u1050 0470  
                            u1210 05E3                              u1131 04B9                              u1115 04A9  
                            u1051 046F                              u1211 05E2                              u1140 038F  
                            u1060 047B                              u1300 0460                              u1220 0421  
                            u1141 038E                              u1061 047A                              u1301 045F  
                            u1221 0420                              u1070 0486                              u1310 0468  
                            u1230 0428                              u1071 0485                              u1311 0467  
                            u1231 0427                              u1160 03B2                              u1240 0430  
                            u1400 0562                              u1161 03B1                              u1241 042F  
                            u1401 0561                              u1090 0498                              u1250 0438  
                            u1410 056D                              u1155 0395                              u1091 0497  
                            u1251 0437                              u1411 056C                              u1260 0440  
                            u1340 0266                              u1180 0327                              u1420 0578  
                            u1500 076C                              u1325 02B3                              u1085 048A  
                            u1261 043F                              u1341 0265                              u1421 0577  
                            u1501 076B                              u1190 05C3                              u1270 0448  
                            u1430 0217                              u1350 0528                              u1510 0778  
                            u1175 03B8                              u1191 05C2                              u1271 0447  
                            u1431 0216                              u1335 01BD                              u1351 0527  
                            u1511 0777                              u1280 0450                              u1360 0532  
                            u1520 077E                              u1281 044F                              u1185 0322  
                            u1361 0531                              u1521 077D                              u1290 0458  
                            u1370 053E                              u1530 07A4                              u1450 072B  
                            u1291 0457                              u1371 053D                              u1531 07A3  
                            u1451 072A                              u1380 054A                              u1540 07B5  
                            u1460 073A                              u1445 0289                              u1381 0549  
                            u1541 07B4                              u1461 0739                              u1390 0556  
                            u1550 07BA                              u1470 074B                              u1391 0555  
                            u1551 07B9                              u1471 074A                              u1607 0740  
                            u1560 07C5                              u1480 0755                              u1561 07C4  
                            u1617 075B                              u1481 0754                              u1570 07CA  
                            u1490 0766                              u1571 07C9                              u1627 07AA  
                            u1491 0765                              u1580 07EF                              u1637 04CE  
                            u1581 07EE                              u1647 04DD                              u1657 04EC  
                            u1667 02C3                              u1677 02D4                              u1597 0731  
                            u1687 01AD                              _WPUB 0095                 ?_Lcd_Write_String 0070  
                            _mes1 002A  __end_of_I2C_Master_RepeatedStart 0163                              _main 06B2  
                            _hora 002E                              _modo 0027                              _year 0029  
                            btemp 007E                              start 0000                ??_Lcd_Write_String 0075  
                 __end_of_Lcd_Cmd 01B6                 ___bmul@multiplier 0073                  ?_I2C_Master_Init 0037  
                ?_I2C_Master_Read 0070                  ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070  
                           ?_main 0070                   __end_of___awdiv 06B2                   __end_of___awmod 04C4  
                           _ANSEL 0188                   __end_of___lldiv 064B                   ___awdiv@divisor 0070  
                 ___awdiv@counter 0075                             _PORTA 0005                             _PORTB 0006  
                           _PORTD 0008                             _TRISA 0085                             _TRISB 0086  
                           _TRISD 0088                             _fecha 002D                             _year1 0028  
                           pclath 000A                             status 0003                             wtemp0 007E  
                     leer_x@valor 007C                  __end_of_Lcd_Init 0521                  __end_of_Lcd_Port 01F3  
                 __initialization 07F3                   ??_Escribir_dato 007E                      __end_of_main 07F3  
                          ??_main 003F              __end_of_desconvertir 02A6                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070                ??_I2C_Master_Write 0072  
                ___awdiv@dividend 0072                            _ANSELH 0189                         ??_Lcd_Cmd 0071  
                          _SSPADD 0093                            _SSPCON 0014                            _SSPBUF 0013  
        _I2C_Master_RepeatedStart 015A                            ___bmul 0187                         ??___awdiv 0074  
                          _lecADC 0036                            _decena 0034                            _fecha1 002C  
                       ??___awmod 0074                         ??___lldiv 0078                  __end_of_enviar_x 0310  
                          _conver 0020                            _leer_x 0348                            _valADC 0024  
                ___awdiv@quotient 0077                            _minuto 0030                   ___awmod@divisor 0070  
                 ___awmod@counter 0075                            _unidad 0035                      ?_setupINTOSC 0070  
                 Lcd_Set_Cursor@a 0076                   Lcd_Set_Cursor@b 0074                   Lcd_Set_Cursor@y 0078  
                 Lcd_Set_Cursor@z 0077           __end_of__initialization 07FC                 __end_of_Lcd_Clear 017A  
             ___bmul@multiplicand 0070                   descomponer@cent 0037                    __pcstackCOMMON 0070  
               desconvertir@valor 007C                    _Lcd_Set_Cursor 0389                    _OPTION_REGbits 0081  
                       ?_Lcd_Init 0070                         ?_Lcd_Port 0070                      enviar_x@val1 0075  
                    enviar_x@val2 0072                        __pbssBANK0 0020                        __pmaintext 06B2  
                         ?___bmul 0070               convertir@conversion 0077                           ?_leer_x 0070  
          __end_of_Lcd_Set_Cursor 03CF                        ??_Lcd_Init 0074                        ??_Lcd_Port 0070  
                         _SSPCON2 0091                           _SSPSTAT 0094                        __stringtab 0003  
                       ?_enviar_x 0072                    _Lcd_Write_Char 02A6                           _Lcd_Cmd 019C  
                    _desconvertir 0273                           ___awdiv 064B                           ___awmod 046B  
                         ___lldiv 05E5                 __end_of_convertir 01D1                   ?_Lcd_Set_Cursor 0074  
                         __ptext1 0521                           __ptext2 0218                           __ptext3 0310  
                         __ptext4 05E5                           __ptext5 0348                           __ptext6 01B6  
                         __ptext7 0187                           __ptext8 015A                           __ptext9 0245  
                ___awmod@dividend 0072                           _segundo 0032                           clrloop0 0141  
               __end_of_inttochar 046B            __end_of_Lcd_Write_Char 02DB              end_of_initialization 07FC  
      ??_I2C_Master_RepeatedStart 0070                        ??_enviar_x 0073                   ___lldiv@divisor 0070  
                 ___lldiv@counter 007D                  I2C_Master_Init@c 0037                  I2C_Master_Read@a 0070  
                   leer_x@address 007B                         Lcd_Port@a 0070                 __end_of_portsetup 0245  
           __end_of_Escribir_dato 041B                         _PORTBbits 0006                         _PORTDbits 0008  
                   ??_descomponer 007C                         _TRISCbits 0087                   ?_Lcd_Write_Char 0070  
               Lcd_Write_String@a 0077                 Lcd_Write_String@i 0075                         _Lcd_Clear 016D  
              desconvertir@decena 007D                    __end_of___bmul 019C                  _Lcd_Write_String 01F3  
              desconvertir@unidad 007B                    __end_of_leer_x 0389               start_initialization 07F3  
             __end_of_descomponer 05E5                 ??_I2C_Master_Init 003B                 ??_I2C_Master_Read 0072  
               ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070                 Escribir_dato@dato 003C  
               Escribir_dato@posx 003A                 Escribir_dato@posy 003B                        ?_Lcd_Clear 0070  
                        ??___bmul 0071                          ??_leer_x 0079                   Lcd_Write_Char@a 0074  
                 Lcd_Write_Char@y 0073                         ___latbits 0002                    descomponer@dec 0039  
                   __pcstackBANK0 0037                    descomponer@num 007B                    descomponer@pos 0079  
                  descomponer@uni 0038                   setupINTOSC@IRCF 0070                          ?_Lcd_Cmd 0070  
                _I2C_Master_Start 0148                  _I2C_Master_Write 0163                  ??_Lcd_Set_Cursor 0075  
                    inttochar@num 0070                          ?___awdiv 0070                          ?___awmod 0070  
                        ?___lldiv 0070                         __pstrings 0003                         _convertir 01B6  
                     _descomponer 0580                         _inttochar 041B                         clear_ram0 0140  
                        Lcd_Cmd@a 0073                       ??_Lcd_Clear 0074                       __stringbase 0008  
                   ??_setupINTOSC 0070                         _portsetup 0218                        ?_convertir 0070  
                ??_Lcd_Write_Char 0071                   convertir@decena 0076                          _Lcd_Init 04C4  
                        _Lcd_Port 01D1               I2C_Master_Read@temp 0074                   convertir@unidad 0075  
        __end_of_Lcd_Write_String 0218                        ?_inttochar 0070         ?_I2C_Master_RepeatedStart 0070  
              __end_of__stringtab 0009                        ?_portsetup 0070                   _I2C_Master_Init 0310  
                 _I2C_Master_Read 0245                   _I2C_Master_Wait 017A                   _I2C_Master_Stop 0151  
                        __ptext10 02DB                          __ptext11 0163                          __ptext20 041B  
                        __ptext12 0151                          __ptext21 0580                          __ptext13 0148  
                        __ptext22 046B                          __ptext14 017A                          __ptext23 064B  
                        __ptext15 0273                          __ptext24 02A6                          __ptext16 01F3  
                        __ptext25 0389                          __ptext17 04C4                          __ptext26 019C  
                        __ptext18 016D                          __ptext27 01D1                          __ptext19 03CF  
             __end_of_setupINTOSC 0580                          _enviar_x 02DB                    convertir@valor 0078  
                     ??_convertir 0074          __end_of_I2C_Master_Start 0151          __end_of_I2C_Master_Write 016D  
              Lcd_Write_Char@temp 0072                  ___lldiv@dividend 0074                       ??_inttochar 0070  
                   ?_desconvertir 0070                         stringcode 0003                        _OSCCONbits 008F  
         __end_of_I2C_Master_Init 0348           __end_of_I2C_Master_Read 0273           __end_of_I2C_Master_Wait 0187  
                   _Escribir_dato 03CF           __end_of_I2C_Master_Stop 015A                Lcd_Set_Cursor@temp 0079  
                     ??_portsetup 007E                       _setupINTOSC 0521                      ?_descomponer 0079  
                ___lldiv@quotient 0079                 I2C_Master_Write@d 0070                          stringdir 0003  
                        stringtab 0003                       _SSPCON2bits 0091                    ??_desconvertir 0079  
