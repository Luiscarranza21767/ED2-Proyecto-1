

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 08 01:15:16 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41     0000                     
    42                           ; Version 2.40
    43                           ; Generated 17/11/2021 GMT
    44                           ; 
    45                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0000                     	;# 
    78     0001                     	;# 
    79     0002                     	;# 
    80     0003                     	;# 
    81     0004                     	;# 
    82     0005                     	;# 
    83     0006                     	;# 
    84     0007                     	;# 
    85     0008                     	;# 
    86     0009                     	;# 
    87     000A                     	;# 
    88     000B                     	;# 
    89     000C                     	;# 
    90     000D                     	;# 
    91     000E                     	;# 
    92     000E                     	;# 
    93     000F                     	;# 
    94     0010                     	;# 
    95     0011                     	;# 
    96     0012                     	;# 
    97     0013                     	;# 
    98     0014                     	;# 
    99     0015                     	;# 
   100     0015                     	;# 
   101     0016                     	;# 
   102     0017                     	;# 
   103     0018                     	;# 
   104     0019                     	;# 
   105     001A                     	;# 
   106     001B                     	;# 
   107     001B                     	;# 
   108     001C                     	;# 
   109     001D                     	;# 
   110     001E                     	;# 
   111     001F                     	;# 
   112     0081                     	;# 
   113     0085                     	;# 
   114     0086                     	;# 
   115     0087                     	;# 
   116     0088                     	;# 
   117     0089                     	;# 
   118     008C                     	;# 
   119     008D                     	;# 
   120     008E                     	;# 
   121     008F                     	;# 
   122     0090                     	;# 
   123     0091                     	;# 
   124     0092                     	;# 
   125     0093                     	;# 
   126     0093                     	;# 
   127     0093                     	;# 
   128     0094                     	;# 
   129     0095                     	;# 
   130     0096                     	;# 
   131     0097                     	;# 
   132     0098                     	;# 
   133     0099                     	;# 
   134     009A                     	;# 
   135     009B                     	;# 
   136     009C                     	;# 
   137     009D                     	;# 
   138     009E                     	;# 
   139     009F                     	;# 
   140     0105                     	;# 
   141     0107                     	;# 
   142     0108                     	;# 
   143     0109                     	;# 
   144     010C                     	;# 
   145     010C                     	;# 
   146     010D                     	;# 
   147     010E                     	;# 
   148     010F                     	;# 
   149     0185                     	;# 
   150     0187                     	;# 
   151     0188                     	;# 
   152     0189                     	;# 
   153     018C                     	;# 
   154     018D                     	;# 
   155     0000                     	;# 
   156     0001                     	;# 
   157     0002                     	;# 
   158     0003                     	;# 
   159     0004                     	;# 
   160     0005                     	;# 
   161     0006                     	;# 
   162     0007                     	;# 
   163     0008                     	;# 
   164     0009                     	;# 
   165     000A                     	;# 
   166     000B                     	;# 
   167     000C                     	;# 
   168     000D                     	;# 
   169     000E                     	;# 
   170     000E                     	;# 
   171     000F                     	;# 
   172     0010                     	;# 
   173     0011                     	;# 
   174     0012                     	;# 
   175     0013                     	;# 
   176     0014                     	;# 
   177     0015                     	;# 
   178     0015                     	;# 
   179     0016                     	;# 
   180     0017                     	;# 
   181     0018                     	;# 
   182     0019                     	;# 
   183     001A                     	;# 
   184     001B                     	;# 
   185     001B                     	;# 
   186     001C                     	;# 
   187     001D                     	;# 
   188     001E                     	;# 
   189     001F                     	;# 
   190     0081                     	;# 
   191     0085                     	;# 
   192     0086                     	;# 
   193     0087                     	;# 
   194     0088                     	;# 
   195     0089                     	;# 
   196     008C                     	;# 
   197     008D                     	;# 
   198     008E                     	;# 
   199     008F                     	;# 
   200     0090                     	;# 
   201     0091                     	;# 
   202     0092                     	;# 
   203     0093                     	;# 
   204     0093                     	;# 
   205     0093                     	;# 
   206     0094                     	;# 
   207     0095                     	;# 
   208     0096                     	;# 
   209     0097                     	;# 
   210     0098                     	;# 
   211     0099                     	;# 
   212     009A                     	;# 
   213     009B                     	;# 
   214     009C                     	;# 
   215     009D                     	;# 
   216     009E                     	;# 
   217     009F                     	;# 
   218     0105                     	;# 
   219     0107                     	;# 
   220     0108                     	;# 
   221     0109                     	;# 
   222     010C                     	;# 
   223     010C                     	;# 
   224     010D                     	;# 
   225     010E                     	;# 
   226     010F                     	;# 
   227     0185                     	;# 
   228     0187                     	;# 
   229     0188                     	;# 
   230     0189                     	;# 
   231     018C                     	;# 
   232     018D                     	;# 
   233     0000                     	;# 
   234     0001                     	;# 
   235     0002                     	;# 
   236     0003                     	;# 
   237     0004                     	;# 
   238     0005                     	;# 
   239     0006                     	;# 
   240     0007                     	;# 
   241     0008                     	;# 
   242     0009                     	;# 
   243     000A                     	;# 
   244     000B                     	;# 
   245     000C                     	;# 
   246     000D                     	;# 
   247     000E                     	;# 
   248     000E                     	;# 
   249     000F                     	;# 
   250     0010                     	;# 
   251     0011                     	;# 
   252     0012                     	;# 
   253     0013                     	;# 
   254     0014                     	;# 
   255     0015                     	;# 
   256     0015                     	;# 
   257     0016                     	;# 
   258     0017                     	;# 
   259     0018                     	;# 
   260     0019                     	;# 
   261     001A                     	;# 
   262     001B                     	;# 
   263     001B                     	;# 
   264     001C                     	;# 
   265     001D                     	;# 
   266     001E                     	;# 
   267     001F                     	;# 
   268     0081                     	;# 
   269     0085                     	;# 
   270     0086                     	;# 
   271     0087                     	;# 
   272     0088                     	;# 
   273     0089                     	;# 
   274     008C                     	;# 
   275     008D                     	;# 
   276     008E                     	;# 
   277     008F                     	;# 
   278     0090                     	;# 
   279     0091                     	;# 
   280     0092                     	;# 
   281     0093                     	;# 
   282     0093                     	;# 
   283     0093                     	;# 
   284     0094                     	;# 
   285     0095                     	;# 
   286     0096                     	;# 
   287     0097                     	;# 
   288     0098                     	;# 
   289     0099                     	;# 
   290     009A                     	;# 
   291     009B                     	;# 
   292     009C                     	;# 
   293     009D                     	;# 
   294     009E                     	;# 
   295     009F                     	;# 
   296     0105                     	;# 
   297     0107                     	;# 
   298     0108                     	;# 
   299     0109                     	;# 
   300     010C                     	;# 
   301     010C                     	;# 
   302     010D                     	;# 
   303     010E                     	;# 
   304     010F                     	;# 
   305     0185                     	;# 
   306     0187                     	;# 
   307     0188                     	;# 
   308     0189                     	;# 
   309     018C                     	;# 
   310     018D                     	;# 
   311     0000                     	;# 
   312     0001                     	;# 
   313     0002                     	;# 
   314     0003                     	;# 
   315     0004                     	;# 
   316     0005                     	;# 
   317     0006                     	;# 
   318     0007                     	;# 
   319     0008                     	;# 
   320     0009                     	;# 
   321     000A                     	;# 
   322     000B                     	;# 
   323     000C                     	;# 
   324     000D                     	;# 
   325     000E                     	;# 
   326     000E                     	;# 
   327     000F                     	;# 
   328     0010                     	;# 
   329     0011                     	;# 
   330     0012                     	;# 
   331     0013                     	;# 
   332     0014                     	;# 
   333     0015                     	;# 
   334     0015                     	;# 
   335     0016                     	;# 
   336     0017                     	;# 
   337     0018                     	;# 
   338     0019                     	;# 
   339     001A                     	;# 
   340     001B                     	;# 
   341     001B                     	;# 
   342     001C                     	;# 
   343     001D                     	;# 
   344     001E                     	;# 
   345     001F                     	;# 
   346     0081                     	;# 
   347     0085                     	;# 
   348     0086                     	;# 
   349     0087                     	;# 
   350     0088                     	;# 
   351     0089                     	;# 
   352     008C                     	;# 
   353     008D                     	;# 
   354     008E                     	;# 
   355     008F                     	;# 
   356     0090                     	;# 
   357     0091                     	;# 
   358     0092                     	;# 
   359     0093                     	;# 
   360     0093                     	;# 
   361     0093                     	;# 
   362     0094                     	;# 
   363     0095                     	;# 
   364     0096                     	;# 
   365     0097                     	;# 
   366     0098                     	;# 
   367     0099                     	;# 
   368     009A                     	;# 
   369     009B                     	;# 
   370     009C                     	;# 
   371     009D                     	;# 
   372     009E                     	;# 
   373     009F                     	;# 
   374     0105                     	;# 
   375     0107                     	;# 
   376     0108                     	;# 
   377     0109                     	;# 
   378     010C                     	;# 
   379     010C                     	;# 
   380     010D                     	;# 
   381     010E                     	;# 
   382     010F                     	;# 
   383     0185                     	;# 
   384     0187                     	;# 
   385     0188                     	;# 
   386     0189                     	;# 
   387     018C                     	;# 
   388     018D                     	;# 
   389     0000                     	;# 
   390     0001                     	;# 
   391     0002                     	;# 
   392     0003                     	;# 
   393     0004                     	;# 
   394     0005                     	;# 
   395     0006                     	;# 
   396     0007                     	;# 
   397     0008                     	;# 
   398     0009                     	;# 
   399     000A                     	;# 
   400     000B                     	;# 
   401     000C                     	;# 
   402     000D                     	;# 
   403     000E                     	;# 
   404     000E                     	;# 
   405     000F                     	;# 
   406     0010                     	;# 
   407     0011                     	;# 
   408     0012                     	;# 
   409     0013                     	;# 
   410     0014                     	;# 
   411     0015                     	;# 
   412     0015                     	;# 
   413     0016                     	;# 
   414     0017                     	;# 
   415     0018                     	;# 
   416     0019                     	;# 
   417     001A                     	;# 
   418     001B                     	;# 
   419     001B                     	;# 
   420     001C                     	;# 
   421     001D                     	;# 
   422     001E                     	;# 
   423     001F                     	;# 
   424     0081                     	;# 
   425     0085                     	;# 
   426     0086                     	;# 
   427     0087                     	;# 
   428     0088                     	;# 
   429     0089                     	;# 
   430     008C                     	;# 
   431     008D                     	;# 
   432     008E                     	;# 
   433     008F                     	;# 
   434     0090                     	;# 
   435     0091                     	;# 
   436     0092                     	;# 
   437     0093                     	;# 
   438     0093                     	;# 
   439     0093                     	;# 
   440     0094                     	;# 
   441     0095                     	;# 
   442     0096                     	;# 
   443     0097                     	;# 
   444     0098                     	;# 
   445     0099                     	;# 
   446     009A                     	;# 
   447     009B                     	;# 
   448     009C                     	;# 
   449     009D                     	;# 
   450     009E                     	;# 
   451     009F                     	;# 
   452     0105                     	;# 
   453     0107                     	;# 
   454     0108                     	;# 
   455     0109                     	;# 
   456     010C                     	;# 
   457     010C                     	;# 
   458     010D                     	;# 
   459     010E                     	;# 
   460     010F                     	;# 
   461     0185                     	;# 
   462     0187                     	;# 
   463     0188                     	;# 
   464     0189                     	;# 
   465     018C                     	;# 
   466     018D                     	;# 
   467     0000                     	;# 
   468     0001                     	;# 
   469     0002                     	;# 
   470     0003                     	;# 
   471     0004                     	;# 
   472     0005                     	;# 
   473     0006                     	;# 
   474     0007                     	;# 
   475     0008                     	;# 
   476     0009                     	;# 
   477     000A                     	;# 
   478     000B                     	;# 
   479     000C                     	;# 
   480     000D                     	;# 
   481     000E                     	;# 
   482     000E                     	;# 
   483     000F                     	;# 
   484     0010                     	;# 
   485     0011                     	;# 
   486     0012                     	;# 
   487     0013                     	;# 
   488     0014                     	;# 
   489     0015                     	;# 
   490     0015                     	;# 
   491     0016                     	;# 
   492     0017                     	;# 
   493     0018                     	;# 
   494     0019                     	;# 
   495     001A                     	;# 
   496     001B                     	;# 
   497     001B                     	;# 
   498     001C                     	;# 
   499     001D                     	;# 
   500     001E                     	;# 
   501     001F                     	;# 
   502     0081                     	;# 
   503     0085                     	;# 
   504     0086                     	;# 
   505     0087                     	;# 
   506     0088                     	;# 
   507     0089                     	;# 
   508     008C                     	;# 
   509     008D                     	;# 
   510     008E                     	;# 
   511     008F                     	;# 
   512     0090                     	;# 
   513     0091                     	;# 
   514     0092                     	;# 
   515     0093                     	;# 
   516     0093                     	;# 
   517     0093                     	;# 
   518     0094                     	;# 
   519     0095                     	;# 
   520     0096                     	;# 
   521     0097                     	;# 
   522     0098                     	;# 
   523     0099                     	;# 
   524     009A                     	;# 
   525     009B                     	;# 
   526     009C                     	;# 
   527     009D                     	;# 
   528     009E                     	;# 
   529     009F                     	;# 
   530     0105                     	;# 
   531     0107                     	;# 
   532     0108                     	;# 
   533     0109                     	;# 
   534     010C                     	;# 
   535     010C                     	;# 
   536     010D                     	;# 
   537     010E                     	;# 
   538     010F                     	;# 
   539     0185                     	;# 
   540     0187                     	;# 
   541     0188                     	;# 
   542     0189                     	;# 
   543     018C                     	;# 
   544     018D                     	;# 
   545     0000                     	;# 
   546     0001                     	;# 
   547     0002                     	;# 
   548     0003                     	;# 
   549     0004                     	;# 
   550     0005                     	;# 
   551     0006                     	;# 
   552     0007                     	;# 
   553     0008                     	;# 
   554     0009                     	;# 
   555     000A                     	;# 
   556     000B                     	;# 
   557     000C                     	;# 
   558     000D                     	;# 
   559     000E                     	;# 
   560     000E                     	;# 
   561     000F                     	;# 
   562     0010                     	;# 
   563     0011                     	;# 
   564     0012                     	;# 
   565     0013                     	;# 
   566     0014                     	;# 
   567     0015                     	;# 
   568     0015                     	;# 
   569     0016                     	;# 
   570     0017                     	;# 
   571     0018                     	;# 
   572     0019                     	;# 
   573     001A                     	;# 
   574     001B                     	;# 
   575     001B                     	;# 
   576     001C                     	;# 
   577     001D                     	;# 
   578     001E                     	;# 
   579     001F                     	;# 
   580     0081                     	;# 
   581     0085                     	;# 
   582     0086                     	;# 
   583     0087                     	;# 
   584     0088                     	;# 
   585     0089                     	;# 
   586     008C                     	;# 
   587     008D                     	;# 
   588     008E                     	;# 
   589     008F                     	;# 
   590     0090                     	;# 
   591     0091                     	;# 
   592     0092                     	;# 
   593     0093                     	;# 
   594     0093                     	;# 
   595     0093                     	;# 
   596     0094                     	;# 
   597     0095                     	;# 
   598     0096                     	;# 
   599     0097                     	;# 
   600     0098                     	;# 
   601     0099                     	;# 
   602     009A                     	;# 
   603     009B                     	;# 
   604     009C                     	;# 
   605     009D                     	;# 
   606     009E                     	;# 
   607     009F                     	;# 
   608     0105                     	;# 
   609     0107                     	;# 
   610     0108                     	;# 
   611     0109                     	;# 
   612     010C                     	;# 
   613     010C                     	;# 
   614     010D                     	;# 
   615     010E                     	;# 
   616     010F                     	;# 
   617     0185                     	;# 
   618     0187                     	;# 
   619     0188                     	;# 
   620     0189                     	;# 
   621     018C                     	;# 
   622     018D                     	;# 
   623     0008                     _PORTDbits	set	8
   624     0013                     _SSPBUF	set	19
   625     0014                     _SSPCON	set	20
   626     0006                     _PORTB	set	6
   627     0008                     _PORTD	set	8
   628     0006                     _PORTBbits	set	6
   629     0043                     _RD3	set	67
   630     0047                     _RD7	set	71
   631     0046                     _RD6	set	70
   632     0045                     _RD5	set	69
   633     0044                     _RD4	set	68
   634     008F                     _OSCCONbits	set	143
   635     0091                     _SSPCON2bits	set	145
   636     0087                     _TRISCbits	set	135
   637     0094                     _SSPSTAT	set	148
   638     0093                     _SSPADD	set	147
   639     0091                     _SSPCON2	set	145
   640     0081                     _OPTION_REGbits	set	129
   641     0095                     _WPUB	set	149
   642     0086                     _TRISB	set	134
   643     0088                     _TRISD	set	136
   644     0189                     _ANSELH	set	393
   645     0188                     _ANSEL	set	392
   646                           
   647                           	psect	strings
   648     0003                     __pstrings:
   649     0003                     stringtab:
   650     0003                     __stringtab:
   651     0003                     stringcode:	
   652                           ;	String table - string pointers are 1 byte each
   653                           
   654     0003                     stringdir:
   655     0003  3000               	movlw	high stringdir
   656     0004  008A               	movwf	10
   657     0005  0804               	movf	4,w
   658     0006  0A84               	incf	4,f
   659     0007  0782               	addwf	2,f
   660     0008                     __stringbase:
   661     0008  3400               	retlw	0
   662     0009                     __end_of__stringtab:
   663     0009                     STR_2:
   664     0009  3454               	retlw	84	;'T'
   665     000A  343A               	retlw	58	;':'
   666     000B  3420               	retlw	32	;' '
   667     000C  3420               	retlw	32	;' '
   668     000D  3420               	retlw	32	;' '
   669     000E  3420               	retlw	32	;' '
   670     000F  3443               	retlw	67	;'C'
   671     0010  3400               	retlw	0
   672     0011                     STR_1:
   673     0011  3453               	retlw	83	;'S'
   674     0012  343A               	retlw	58	;':'
   675     0013  3420               	retlw	32	;' '
   676     0014  3420               	retlw	32	;' '
   677     0015  343A               	retlw	58	;':'
   678     0016  3400               	retlw	0
   679                           
   680                           	psect	cinit
   681     07F5                     start_initialization:	
   682                           ; #config settings
   683                           
   684     07F5                     __initialization:
   685                           
   686                           ; Clear objects allocated to BANK0
   687     07F5  1383               	bcf	3,7	;select IRP bank0
   688     07F6  3020               	movlw	low __pbssBANK0
   689     07F7  0084               	movwf	4
   690     07F8  3033               	movlw	low (__pbssBANK0+19)
   691     07F9  120A  118A  2222   	fcall	clear_ram0
   692     07FC                     end_of_initialization:	
   693                           ;End of C runtime variable initialization code
   694                           
   695     07FC                     __end_of__initialization:
   696     07FC  0183               	clrf	3
   697     07FD  120A  118A  2E3C   	ljmp	_main	;jump to C main() function
   698                           
   699                           	psect	bssBANK0
   700     0020                     __pbssBANK0:
   701     0020                     _conver:
   702     0020                     	ds	4
   703     0024                     _buffer:
   704     0024                     	ds	3
   705     0027                     _valADC:
   706     0027                     	ds	3
   707     002A                     _SERVO:
   708     002A                     	ds	1
   709     002B                     _modo:
   710     002B                     	ds	1
   711     002C                     _minutos:
   712     002C                     	ds	1
   713     002D                     _min:
   714     002D                     	ds	1
   715     002E                     _segundos:
   716     002E                     	ds	1
   717     002F                     _sec:
   718     002F                     	ds	1
   719     0030                     _tempint:
   720     0030                     	ds	1
   721     0031                     _decena:
   722     0031                     	ds	1
   723     0032                     _unidad:
   724     0032                     	ds	1
   725                           
   726                           	psect	clrtext
   727     0222                     clear_ram0:	
   728                           ;	Called with FSR containing the base address, and
   729                           ;	W with the last address+1
   730                           
   731     0222  0064               	clrwdt	;clear the watchdog before getting into this loop
   732     0223                     clrloop0:
   733     0223  0180               	clrf	0	;clear RAM location pointed to by FSR
   734     0224  0A84               	incf	4,f	;increment pointer
   735     0225  0604               	xorwf	4,w	;XOR with final address
   736     0226  1903               	btfsc	3,2	;have we reached the end yet?
   737     0227  3400               	retlw	0	;all done for this memory range, return
   738     0228  0604               	xorwf	4,w	;XOR again to restore value
   739     0229  2A23               	goto	clrloop0	;do the next byte
   740                           
   741                           	psect	cstackCOMMON
   742     0070                     __pcstackCOMMON:
   743     0070                     ?_setupINTOSC:
   744     0070                     ??_setupINTOSC:	
   745                           ; 1 bytes @ 0x0
   746                           
   747     0070                     ?_portsetup:	
   748                           ; 1 bytes @ 0x0
   749                           
   750     0070                     ?_Lcd_Init:	
   751                           ; 1 bytes @ 0x0
   752                           
   753     0070                     ?_Lcd_Clear:	
   754                           ; 1 bytes @ 0x0
   755                           
   756     0070                     ?_Lcd_Write_Char:	
   757                           ; 1 bytes @ 0x0
   758                           
   759     0070                     ?_Lcd_Write_String:	
   760                           ; 1 bytes @ 0x0
   761                           
   762     0070                     ?_leer_temperatura:	
   763                           ; 1 bytes @ 0x0
   764                           
   765     0070                     ?_leer_x:	
   766                           ; 1 bytes @ 0x0
   767                           
   768     0070                     ?_I2C_Master_Start:	
   769                           ; 1 bytes @ 0x0
   770                           
   771     0070                     ??_I2C_Master_Start:	
   772                           ; 1 bytes @ 0x0
   773                           
   774     0070                     ?_I2C_Master_Write:	
   775                           ; 1 bytes @ 0x0
   776                           
   777     0070                     ?_I2C_Master_Stop:	
   778                           ; 1 bytes @ 0x0
   779                           
   780     0070                     ??_I2C_Master_Stop:	
   781                           ; 1 bytes @ 0x0
   782                           
   783     0070                     ?_inttochar:	
   784                           ; 1 bytes @ 0x0
   785                           
   786     0070                     ??_inttochar:	
   787                           ; 1 bytes @ 0x0
   788                           
   789     0070                     ?_I2C_Master_RepeatedStart:	
   790                           ; 1 bytes @ 0x0
   791                           
   792     0070                     ??_I2C_Master_RepeatedStart:	
   793                           ; 1 bytes @ 0x0
   794                           
   795     0070                     ?_main:	
   796                           ; 1 bytes @ 0x0
   797                           
   798     0070                     ?_convertir:	
   799                           ; 1 bytes @ 0x0
   800                           
   801     0070                     ?_I2C_Master_Wait:	
   802                           ; 1 bytes @ 0x0
   803                           
   804     0070                     ??_I2C_Master_Wait:	
   805                           ; 1 bytes @ 0x0
   806                           
   807     0070                     ?_Lcd_Port:	
   808                           ; 1 bytes @ 0x0
   809                           
   810     0070                     ??_Lcd_Port:	
   811                           ; 1 bytes @ 0x0
   812                           
   813     0070                     ?_Lcd_Cmd:	
   814                           ; 1 bytes @ 0x0
   815                           
   816     0070                     ?___bmul:	
   817                           ; 1 bytes @ 0x0
   818                           
   819     0070                     ?___lbdiv:	
   820                           ; 1 bytes @ 0x0
   821                           
   822     0070                     ?___lbmod:	
   823                           ; 1 bytes @ 0x0
   824                           
   825     0070                     ?_I2C_Master_Read:	
   826                           ; 1 bytes @ 0x0
   827                           
   828     0070                     ?___lldiv:	
   829                           ; 2 bytes @ 0x0
   830                           
   831     0070                     Lcd_Port@a:	
   832                           ; 4 bytes @ 0x0
   833                           
   834     0070                     inttochar@num:	
   835                           ; 1 bytes @ 0x0
   836                           
   837     0070                     setupINTOSC@IRCF:	
   838                           ; 1 bytes @ 0x0
   839                           
   840     0070                     ___bmul@multiplicand:	
   841                           ; 1 bytes @ 0x0
   842                           
   843     0070                     ___lbdiv@divisor:	
   844                           ; 1 bytes @ 0x0
   845                           
   846     0070                     ___lbmod@divisor:	
   847                           ; 1 bytes @ 0x0
   848                           
   849     0070                     I2C_Master_Write@d:	
   850                           ; 1 bytes @ 0x0
   851                           
   852     0070                     I2C_Master_Read@a:	
   853                           ; 2 bytes @ 0x0
   854                           
   855     0070                     ___lldiv@divisor:	
   856                           ; 2 bytes @ 0x0
   857                           
   858                           
   859                           ; 4 bytes @ 0x0
   860     0070                     	ds	1
   861     0071                     ??_Lcd_Write_Char:
   862     0071                     ??_Lcd_Cmd:	
   863                           ; 1 bytes @ 0x1
   864                           
   865     0071                     ??___bmul:	
   866                           ; 1 bytes @ 0x1
   867                           
   868     0071                     ??___lbdiv:	
   869                           ; 1 bytes @ 0x1
   870                           
   871     0071                     ??___lbmod:	
   872                           ; 1 bytes @ 0x1
   873                           
   874                           
   875                           ; 1 bytes @ 0x1
   876     0071                     	ds	1
   877     0072                     ?_enviar_x:
   878     0072                     ??_I2C_Master_Write:	
   879                           ; 1 bytes @ 0x2
   880                           
   881     0072                     ??_I2C_Master_Read:	
   882                           ; 1 bytes @ 0x2
   883                           
   884     0072                     enviar_x@val2:	
   885                           ; 1 bytes @ 0x2
   886                           
   887     0072                     Lcd_Write_Char@temp:	
   888                           ; 1 bytes @ 0x2
   889                           
   890     0072                     ___bmul@product:	
   891                           ; 1 bytes @ 0x2
   892                           
   893     0072                     ___lbdiv@dividend:	
   894                           ; 1 bytes @ 0x2
   895                           
   896                           
   897                           ; 1 bytes @ 0x2
   898     0072                     	ds	1
   899     0073                     ??_enviar_x:
   900     0073                     Lcd_Cmd@a:	
   901                           ; 1 bytes @ 0x3
   902                           
   903     0073                     Lcd_Write_Char@y:	
   904                           ; 1 bytes @ 0x3
   905                           
   906     0073                     ___bmul@multiplier:	
   907                           ; 1 bytes @ 0x3
   908                           
   909     0073                     ___lbdiv@counter:	
   910                           ; 1 bytes @ 0x3
   911                           
   912     0073                     ___lbmod@dividend:	
   913                           ; 1 bytes @ 0x3
   914                           
   915                           
   916                           ; 1 bytes @ 0x3
   917     0073                     	ds	1
   918     0074                     ??_Lcd_Init:
   919     0074                     ??_Lcd_Clear:	
   920                           ; 1 bytes @ 0x4
   921                           
   922     0074                     ?_Lcd_Set_Cursor:	
   923                           ; 1 bytes @ 0x4
   924                           
   925     0074                     ??_convertir:	
   926                           ; 1 bytes @ 0x4
   927                           
   928     0074                     Lcd_Set_Cursor@b:	
   929                           ; 1 bytes @ 0x4
   930                           
   931     0074                     Lcd_Write_Char@a:	
   932                           ; 1 bytes @ 0x4
   933                           
   934     0074                     ___lbdiv@quotient:	
   935                           ; 1 bytes @ 0x4
   936                           
   937     0074                     ___lbmod@counter:	
   938                           ; 1 bytes @ 0x4
   939                           
   940     0074                     I2C_Master_Read@temp:	
   941                           ; 1 bytes @ 0x4
   942                           
   943     0074                     ___lldiv@dividend:	
   944                           ; 2 bytes @ 0x4
   945                           
   946                           
   947                           ; 4 bytes @ 0x4
   948     0074                     	ds	1
   949     0075                     ??_Lcd_Set_Cursor:
   950     0075                     ??_Lcd_Write_String:	
   951                           ; 1 bytes @ 0x5
   952                           
   953     0075                     convertir@unidad:	
   954                           ; 1 bytes @ 0x5
   955                           
   956     0075                     enviar_x@val1:	
   957                           ; 1 bytes @ 0x5
   958                           
   959     0075                     ___lbmod@rem:	
   960                           ; 1 bytes @ 0x5
   961                           
   962     0075                     Lcd_Write_String@i:	
   963                           ; 1 bytes @ 0x5
   964                           
   965                           
   966                           ; 2 bytes @ 0x5
   967     0075                     	ds	1
   968     0076                     ?_descomponer:
   969     0076                     convertir@decena:	
   970                           ; 1 bytes @ 0x6
   971                           
   972     0076                     Lcd_Set_Cursor@a:	
   973                           ; 1 bytes @ 0x6
   974                           
   975     0076                     descomponer@pos:	
   976                           ; 1 bytes @ 0x6
   977                           
   978                           
   979                           ; 2 bytes @ 0x6
   980     0076                     	ds	1
   981     0077                     convertir@conversion:
   982     0077                     Lcd_Set_Cursor@z:	
   983                           ; 1 bytes @ 0x7
   984                           
   985     0077                     Lcd_Write_String@a:	
   986                           ; 1 bytes @ 0x7
   987                           
   988                           
   989                           ; 1 bytes @ 0x7
   990     0077                     	ds	1
   991     0078                     ??___lldiv:
   992     0078                     convertir@valor:	
   993                           ; 1 bytes @ 0x8
   994                           
   995     0078                     Lcd_Set_Cursor@y:	
   996                           ; 1 bytes @ 0x8
   997                           
   998     0078                     descomponer@num:	
   999                           ; 1 bytes @ 0x8
  1000                           
  1001                           
  1002                           ; 1 bytes @ 0x8
  1003     0078                     	ds	1
  1004     0079                     ??_leer_x:
  1005     0079                     ??_descomponer:	
  1006                           ; 1 bytes @ 0x9
  1007                           
  1008     0079                     Lcd_Set_Cursor@temp:	
  1009                           ; 1 bytes @ 0x9
  1010                           
  1011     0079                     descomponer@cent:	
  1012                           ; 1 bytes @ 0x9
  1013                           
  1014     0079                     ___lldiv@quotient:	
  1015                           ; 1 bytes @ 0x9
  1016                           
  1017                           
  1018                           ; 4 bytes @ 0x9
  1019     0079                     	ds	1
  1020     007A                     descomponer@uni:
  1021                           
  1022                           ; 1 bytes @ 0xA
  1023     007A                     	ds	1
  1024     007B                     leer_x@address:
  1025     007B                     descomponer@dec:	
  1026                           ; 1 bytes @ 0xB
  1027                           
  1028                           
  1029                           ; 1 bytes @ 0xB
  1030     007B                     	ds	1
  1031     007C                     ?_Escribir_dato:
  1032     007C                     Escribir_dato@posx:	
  1033                           ; 1 bytes @ 0xC
  1034                           
  1035     007C                     leer_x@valor:	
  1036                           ; 1 bytes @ 0xC
  1037                           
  1038                           
  1039                           ; 1 bytes @ 0xC
  1040     007C                     	ds	1
  1041     007D                     Escribir_dato@posy:
  1042     007D                     ___lldiv@counter:	
  1043                           ; 1 bytes @ 0xD
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0xD
  1047     007D                     	ds	1
  1048     007E                     ??_Escribir_dato:
  1049                           
  1050                           	psect	cstackBANK0
  1051     0033                     __pcstackBANK0:	
  1052                           ; 1 bytes @ 0xE
  1053                           
  1054     0033                     ?_I2C_Master_Init:
  1055     0033                     Escribir_dato@dato:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058     0033                     I2C_Master_Init@c:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061                           
  1062                           ; 4 bytes @ 0x0
  1063     0033                     	ds	1
  1064     0034                     ??_leer_temperatura:
  1065                           
  1066                           ; 1 bytes @ 0x1
  1067     0034                     	ds	3
  1068     0037                     ??_I2C_Master_Init:
  1069                           
  1070                           ; 1 bytes @ 0x4
  1071     0037                     	ds	4
  1072     003B                     ??_portsetup:
  1073                           
  1074                           ; 1 bytes @ 0x8
  1075     003B                     	ds	3
  1076     003E                     ??_main:
  1077                           
  1078                           ; 1 bytes @ 0xB
  1079     003E                     	ds	3
  1080     0041                     _main$198:
  1081                           
  1082                           ; 1 bytes @ 0xE
  1083     0041                     	ds	1
  1084                           
  1085                           	psect	maintext
  1086     063C                     __pmaintext:	
  1087 ;;
  1088 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1089 ;;
  1090 ;; *************** function _main *****************
  1091 ;; Defined at:
  1092 ;;		line 70 in file "main.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;		None
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;		None
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : B00/0
  1103 ;;		On exit  : 300/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1106 ;;      Params:         0       0       0       0       0
  1107 ;;      Locals:         0       1       0       0       0
  1108 ;;      Temps:          0       3       0       0       0
  1109 ;;      Totals:         0       4       0       0       0
  1110 ;;Total ram usage:        4 bytes
  1111 ;; Hardware stack levels required when called: 5
  1112 ;; This function calls:
  1113 ;;		_Escribir_dato
  1114 ;;		_I2C_Master_Start
  1115 ;;		_I2C_Master_Stop
  1116 ;;		_I2C_Master_Write
  1117 ;;		_Lcd_Clear
  1118 ;;		_Lcd_Init
  1119 ;;		_Lcd_Set_Cursor
  1120 ;;		_Lcd_Write_Char
  1121 ;;		_Lcd_Write_String
  1122 ;;		_enviar_x
  1123 ;;		_leer_temperatura
  1124 ;;		_leer_x
  1125 ;;		_portsetup
  1126 ;;		_setupINTOSC
  1127 ;; This function is called by:
  1128 ;;		Startup code after reset
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132     063C                     _main:	
  1133                           ;psect for function _main
  1134                           
  1135                           
  1136                           ;main.c: 72:     setupINTOSC(7);
  1137                           
  1138                           ;incstack = 0
  1139                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1140     063C  3007               	movlw	7
  1141     063D  120A  118A  253D  120A  118A  	fcall	_setupINTOSC
  1142                           
  1143                           ;main.c: 74:     portsetup();
  1144     0642  120A  118A  2316  120A  118A  	fcall	_portsetup
  1145                           
  1146                           ;main.c: 77:     Lcd_Init();
  1147     0647  120A  118A  2583  120A  118A  	fcall	_Lcd_Init
  1148                           
  1149                           ;main.c: 78:     Lcd_Clear();
  1150     064C  120A  118A  222A  120A  118A  	fcall	_Lcd_Clear
  1151                           
  1152                           ;main.c: 79:     Lcd_Set_Cursor(1,13);
  1153     0651  300D               	movlw	13
  1154     0652  00F4               	movwf	Lcd_Set_Cursor@b
  1155     0653  3001               	movlw	1
  1156     0654  120A  118A  247A  120A  118A  	fcall	_Lcd_Set_Cursor
  1157                           
  1158                           ;main.c: 80:     Lcd_Write_Char(':');
  1159     0659  303A               	movlw	58
  1160     065A  120A  118A  2343  120A  118A  	fcall	_Lcd_Write_Char
  1161                           
  1162                           ;main.c: 81:     Lcd_Set_Cursor(2,9);
  1163     065F  3009               	movlw	9
  1164     0660  00F4               	movwf	Lcd_Set_Cursor@b
  1165     0661  3002               	movlw	2
  1166     0662  120A  118A  247A  120A  118A  	fcall	_Lcd_Set_Cursor
  1167                           
  1168                           ;main.c: 82:     Lcd_Write_String("S:  :");
  1169     0667  3009               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1170     0668  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_String
  1171                           
  1172                           ;main.c: 83:     Lcd_Set_Cursor(2,1);
  1173     066D  01F4               	clrf	Lcd_Set_Cursor@b
  1174     066E  0AF4               	incf	Lcd_Set_Cursor@b,f
  1175     066F  3002               	movlw	2
  1176     0670  120A  118A  247A  120A  118A  	fcall	_Lcd_Set_Cursor
  1177                           
  1178                           ;main.c: 84:     Lcd_Write_String("T:    C");
  1179     0675  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1180     0676  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_String
  1181                           
  1182                           ;main.c: 87:     modo = 0;
  1183     067B  1283               	bcf	3,5	;RP0=0, select bank0
  1184     067C  1303               	bcf	3,6	;RP1=0, select bank0
  1185     067D  01AB               	clrf	_modo
  1186                           
  1187                           ;main.c: 88:     sec = 0;
  1188     067E  01AF               	clrf	_sec
  1189                           
  1190                           ;main.c: 89:     min = 0;
  1191     067F  01AD               	clrf	_min
  1192                           
  1193                           ;main.c: 91:     enviar_x(0, 0);
  1194     0680  01F2               	clrf	enviar_x@val2
  1195     0681  3000               	movlw	0
  1196     0682  120A  118A  23A5  120A  118A  	fcall	_enviar_x
  1197     0687                     l1749:
  1198                           
  1199                           ;main.c: 95:         leer_temperatura();
  1200     0687  120A  118A  240B  120A  118A  	fcall	_leer_temperatura
  1201                           
  1202                           ;main.c: 97:         enviar_x(0, 0);
  1203     068C  01F2               	clrf	enviar_x@val2
  1204     068D  3000               	movlw	0
  1205     068E  120A  118A  23A5  120A  118A  	fcall	_enviar_x
  1206                           
  1207                           ;main.c: 99:         sec = leer_x(0x00);
  1208     0693  3000               	movlw	0
  1209     0694  120A  118A  24B8  120A  118A  	fcall	_leer_x
  1210     0699  1283               	bcf	3,5	;RP0=0, select bank0
  1211     069A  00AF               	movwf	_sec
  1212                           
  1213                           ;main.c: 100:         Escribir_dato(sec, 14, 1);
  1214     069B  300E               	movlw	14
  1215     069C  00FC               	movwf	Escribir_dato@posx
  1216     069D  01FD               	clrf	Escribir_dato@posy
  1217     069E  0AFD               	incf	Escribir_dato@posy,f
  1218     069F  082F               	movf	_sec,w
  1219     06A0  120A  118A  24F7  120A  118A  	fcall	_Escribir_dato
  1220                           
  1221                           ;main.c: 102:         min = leer_x(0x01);
  1222     06A5  3001               	movlw	1
  1223     06A6  120A  118A  24B8  120A  118A  	fcall	_leer_x
  1224     06AB  1283               	bcf	3,5	;RP0=0, select bank0
  1225     06AC  00AD               	movwf	_min
  1226                           
  1227                           ;main.c: 103:         Escribir_dato(min, 11, 1);
  1228     06AD  300B               	movlw	11
  1229     06AE  00FC               	movwf	Escribir_dato@posx
  1230     06AF  01FD               	clrf	Escribir_dato@posy
  1231     06B0  0AFD               	incf	Escribir_dato@posy,f
  1232     06B1  082D               	movf	_min,w
  1233     06B2  120A  118A  24F7  120A  118A  	fcall	_Escribir_dato
  1234                           
  1235                           ;main.c: 106:         if (!PORTBbits.RB1){
  1236     06B7  1886               	btfsc	6,1	;volatile
  1237     06B8  2EEF               	goto	l1781
  1238                           
  1239                           ;main.c: 107:             if (SERVO != 0){
  1240     06B9  082A               	movf	_SERVO,w
  1241     06BA  1903               	btfsc	3,2
  1242     06BB  2ECE               	goto	l1775
  1243                           
  1244                           ;main.c: 108:                 SERVO = 0;
  1245     06BC  01AA               	clrf	_SERVO
  1246                           
  1247                           ;main.c: 109:                 I2C_Master_Start();
  1248     06BD  120A  118A  2204  120A  118A  	fcall	_I2C_Master_Start
  1249                           
  1250                           ;main.c: 110:                 I2C_Master_Write(0xb0);
  1251     06C2  30B0               	movlw	176
  1252     06C3  00F0               	movwf	I2C_Master_Write@d
  1253     06C4  3000               	movlw	0
  1254     06C5  00F1               	movwf	I2C_Master_Write@d+1
  1255     06C6  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
  1256                           
  1257                           ;main.c: 111:                 I2C_Master_Write(0);
  1258     06CB  3000               	movlw	0
  1259     06CC  00F0               	movwf	I2C_Master_Write@d
  1260     06CD  2EE4               	goto	L1
  1261     06CE                     l1775:	
  1262                           ;main.c: 113:             }
  1263                           
  1264                           ;main.c: 112:                 I2C_Master_Stop();
  1265                           
  1266     06CE  082A               	movf	_SERVO,w
  1267     06CF  1D03               	btfss	3,2
  1268     06D0  2EEF               	goto	l1781
  1269                           
  1270                           ;main.c: 115:                 SERVO = 1;
  1271     06D1  01AA               	clrf	_SERVO
  1272     06D2  0AAA               	incf	_SERVO,f
  1273                           
  1274                           ;main.c: 116:                 I2C_Master_Start();
  1275     06D3  120A  118A  2204  120A  118A  	fcall	_I2C_Master_Start
  1276                           
  1277                           ;main.c: 117:                 I2C_Master_Write(0xb0);
  1278     06D8  30B0               	movlw	176
  1279     06D9  00F0               	movwf	I2C_Master_Write@d
  1280     06DA  3000               	movlw	0
  1281     06DB  00F1               	movwf	I2C_Master_Write@d+1
  1282     06DC  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
  1283                           
  1284                           ;main.c: 118:                 I2C_Master_Write(1);
  1285     06E1  3001               	movlw	1
  1286     06E2  00F0               	movwf	I2C_Master_Write@d
  1287     06E3  3000               	movlw	0
  1288     06E4                     L1:
  1289     06E4  00F1               	movwf	I2C_Master_Write@d+1
  1290     06E5  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
  1291                           
  1292                           ;main.c: 119:                 I2C_Master_Stop();
  1293     06EA  120A  118A  2209  120A  118A  	fcall	_I2C_Master_Stop
  1294     06EF                     l1781:
  1295                           
  1296                           ;main.c: 124:         if(!PORTBbits.RB4){
  1297     06EF  1283               	bcf	3,5	;RP0=0, select bank0
  1298     06F0  1E06               	btfss	6,4	;volatile
  1299     06F1  2F4D               	goto	l1831
  1300     06F2  2E87               	goto	l1749
  1301     06F3                     l1785:
  1302                           
  1303                           ;main.c: 128:                 leer_temperatura();
  1304     06F3  120A  118A  240B  120A  118A  	fcall	_leer_temperatura
  1305                           
  1306                           ;main.c: 130:                 Escribir_dato(sec, 14, 1);
  1307     06F8  300E               	movlw	14
  1308     06F9  00FC               	movwf	Escribir_dato@posx
  1309     06FA  01FD               	clrf	Escribir_dato@posy
  1310     06FB  0AFD               	incf	Escribir_dato@posy,f
  1311     06FC  082F               	movf	_sec,w
  1312     06FD  120A  118A  24F7  120A  118A  	fcall	_Escribir_dato
  1313                           
  1314                           ;main.c: 131:                 Escribir_dato(min, 11, 1);
  1315     0702  300B               	movlw	11
  1316     0703  00FC               	movwf	Escribir_dato@posx
  1317     0704  01FD               	clrf	Escribir_dato@posy
  1318     0705  0AFD               	incf	Escribir_dato@posy,f
  1319     0706  082D               	movf	_min,w
  1320     0707  120A  118A  24F7  120A  118A  	fcall	_Escribir_dato
  1321                           
  1322                           ;main.c: 133:                 if(PORTBbits.RB7 == 0){
  1323     070C  1B86               	btfsc	6,7	;volatile
  1324     070D  2F17               	goto	l1795
  1325                           
  1326                           ;main.c: 135:                     if (modo < 1){
  1327     070E  082B               	movf	_modo,w
  1328     070F  1D03               	btfss	3,2
  1329     0710  2F16               	goto	l1793
  1330                           
  1331                           ;main.c: 136:                         modo += 1;
  1332     0711  3001               	movlw	1
  1333     0712  00BE               	movwf	??_main
  1334     0713  083E               	movf	??_main,w
  1335     0714  07AB               	addwf	_modo,f
  1336                           
  1337                           ;main.c: 137:                     }
  1338     0715  2F17               	goto	l1795
  1339     0716                     l1793:
  1340                           
  1341                           ;main.c: 139:                         modo = 0;
  1342     0716  01AB               	clrf	_modo
  1343     0717                     l1795:
  1344                           
  1345                           ;main.c: 143:                 if(PORTBbits.RB6 == 0){
  1346     0717  1B06               	btfsc	6,6	;volatile
  1347     0718  2F34               	goto	l1813
  1348                           
  1349                           ;main.c: 145:                     if (modo == 0){
  1350     0719  082B               	movf	_modo,w
  1351     071A  1D03               	btfss	3,2
  1352     071B  2F27               	goto	l1805
  1353                           
  1354                           ;main.c: 146:                         if (sec<59){
  1355     071C  303B               	movlw	59
  1356     071D  022F               	subwf	_sec,w
  1357     071E  1803               	skipnc
  1358     071F  2F25               	goto	l1803
  1359                           
  1360                           ;main.c: 147:                             sec ++;
  1361     0720  3001               	movlw	1
  1362     0721  00BE               	movwf	??_main
  1363     0722  083E               	movf	??_main,w
  1364     0723  07AF               	addwf	_sec,f
  1365                           
  1366                           ;main.c: 148:                         }
  1367     0724  2F34               	goto	l1813
  1368     0725                     l1803:
  1369                           
  1370                           ;main.c: 150:                             sec = 0;
  1371     0725  01AF               	clrf	_sec
  1372     0726  2F34               	goto	l1813
  1373     0727                     l1805:
  1374     0727  032B               	decf	_modo,w
  1375     0728  1D03               	btfss	3,2
  1376     0729  2F34               	goto	l1813
  1377                           
  1378                           ;main.c: 154:                         if (min<59){
  1379     072A  303B               	movlw	59
  1380     072B  022D               	subwf	_min,w
  1381     072C  1803               	skipnc
  1382     072D  2F33               	goto	l1811
  1383                           
  1384                           ;main.c: 155:                             min++;
  1385     072E  3001               	movlw	1
  1386     072F  00BE               	movwf	??_main
  1387     0730  083E               	movf	??_main,w
  1388     0731  07AD               	addwf	_min,f
  1389                           
  1390                           ;main.c: 156:                         }
  1391     0732  2F34               	goto	l1813
  1392     0733                     l1811:
  1393                           
  1394                           ;main.c: 158:                             min = 0;
  1395     0733  01AD               	clrf	_min
  1396     0734                     l1813:
  1397                           
  1398                           ;main.c: 165:                 if(PORTBbits.RB5 == 0){
  1399     0734  1A86               	btfsc	6,5	;volatile
  1400     0735  2F4D               	goto	l1831
  1401                           
  1402                           ;main.c: 168:                     if (modo == 0){
  1403     0736  082B               	movf	_modo,w
  1404     0737  1D03               	btfss	3,2
  1405     0738  2F42               	goto	l1823
  1406                           
  1407                           ;main.c: 169:                         if (sec > 0){
  1408     0739  082F               	movf	_sec,w
  1409     073A  1903               	btfsc	3,2
  1410     073B  2F3F               	goto	l1821
  1411                           
  1412                           ;main.c: 170:                             sec--;
  1413     073C  3001               	movlw	1
  1414     073D  02AF               	subwf	_sec,f
  1415                           
  1416                           ;main.c: 171:                         }
  1417     073E  2F4D               	goto	l1831
  1418     073F                     l1821:
  1419                           
  1420                           ;main.c: 173:                             sec = 59;
  1421     073F  303B               	movlw	59
  1422     0740  00AF               	movwf	_sec
  1423     0741  2F4D               	goto	l1831
  1424     0742                     l1823:
  1425     0742  032B               	decf	_modo,w
  1426     0743  1D03               	btfss	3,2
  1427     0744  2F4D               	goto	l1831
  1428                           
  1429                           ;main.c: 177:                         if (min > 0){
  1430     0745  082D               	movf	_min,w
  1431     0746  1903               	btfsc	3,2
  1432     0747  2F4B               	goto	l1829
  1433                           
  1434                           ;main.c: 178:                             min--;
  1435     0748  3001               	movlw	1
  1436     0749  02AD               	subwf	_min,f
  1437                           
  1438                           ;main.c: 179:                         }
  1439     074A  2F4D               	goto	l1831
  1440     074B                     l1829:
  1441                           
  1442                           ;main.c: 181:                             min = 59;
  1443     074B  303B               	movlw	59
  1444     074C  00AD               	movwf	_min
  1445     074D                     l1831:
  1446                           
  1447                           ;main.c: 126:             while(PORTBbits.RB3){
  1448     074D  1986               	btfsc	6,3	;volatile
  1449     074E  2EF3               	goto	l1785
  1450                           
  1451                           ;main.c: 188:             enviar_x(0,0);
  1452     074F  01F2               	clrf	enviar_x@val2
  1453     0750  3000               	movlw	0
  1454     0751  120A  118A  23A5  120A  118A  	fcall	_enviar_x
  1455                           
  1456                           ;main.c: 190:             Escribir_dato(sec, 14, 2);
  1457     0756  300E               	movlw	14
  1458     0757  00FC               	movwf	Escribir_dato@posx
  1459     0758  3002               	movlw	2
  1460     0759  00FD               	movwf	Escribir_dato@posy
  1461     075A  1283               	bcf	3,5	;RP0=0, select bank0
  1462     075B  082F               	movf	_sec,w
  1463     075C  120A  118A  24F7  120A  118A  	fcall	_Escribir_dato
  1464                           
  1465                           ;main.c: 191:             Escribir_dato(min, 11, 2);
  1466     0761  300B               	movlw	11
  1467     0762  00FC               	movwf	Escribir_dato@posx
  1468     0763  3002               	movlw	2
  1469     0764  00FD               	movwf	Escribir_dato@posy
  1470     0765  082D               	movf	_min,w
  1471     0766  120A  118A  24F7  120A  118A  	fcall	_Escribir_dato
  1472                           
  1473                           ;main.c: 194:             I2C_Master_Start();
  1474     076B  120A  118A  2204  120A  118A  	fcall	_I2C_Master_Start
  1475                           
  1476                           ;main.c: 195:             I2C_Master_Write(0xb0);
  1477     0770  30B0               	movlw	176
  1478     0771  00F0               	movwf	I2C_Master_Write@d
  1479     0772  3000               	movlw	0
  1480     0773  00F1               	movwf	I2C_Master_Write@d+1
  1481     0774  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
  1482                           
  1483                           ;main.c: 196:             I2C_Master_Write(0);
  1484     0779  3000               	movlw	0
  1485     077A  00F0               	movwf	I2C_Master_Write@d
  1486     077B  00F1               	movwf	I2C_Master_Write@d+1
  1487     077C  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
  1488                           
  1489                           ;main.c: 197:             I2C_Master_Stop();
  1490     0781  120A  118A  2209  120A  118A  	fcall	_I2C_Master_Stop
  1491                           
  1492                           ;main.c: 198:             SERVO = 0;
  1493     0786  1283               	bcf	3,5	;RP0=0, select bank0
  1494     0787  01AA               	clrf	_SERVO
  1495                           
  1496                           ;main.c: 199:             _delay((unsigned long)((500)*(8000000/4000.0)));
  1497     0788  3006               	movlw	6
  1498     0789  1283               	bcf	3,5	;RP0=0, select bank0
  1499     078A  1303               	bcf	3,6	;RP1=0, select bank0
  1500     078B  00C0               	movwf	??_main+2
  1501     078C  3013               	movlw	19
  1502     078D  00BF               	movwf	??_main+1
  1503     078E  30AD               	movlw	173
  1504     078F  00BE               	movwf	??_main
  1505     0790                     u1457:
  1506     0790  0BBE               	decfsz	??_main,f
  1507     0791  2F90               	goto	u1457
  1508     0792  0BBF               	decfsz	??_main+1,f
  1509     0793  2F90               	goto	u1457
  1510     0794  0BC0               	decfsz	??_main+2,f
  1511     0795  2F90               	goto	u1457
  1512                           
  1513                           ;main.c: 200:             while(PORTBbits.RB3 & !((sec == segundos) & (min == minutos)) 
      +                          ){
  1514     0796  2FCB               	goto	l1843
  1515     0797                     l1839:
  1516                           
  1517                           ;main.c: 202:                 segundos = leer_x(0x00);
  1518     0797  3000               	movlw	0
  1519     0798  120A  118A  24B8  120A  118A  	fcall	_leer_x
  1520     079D  1283               	bcf	3,5	;RP0=0, select bank0
  1521     079E  00AE               	movwf	_segundos
  1522                           
  1523                           ;main.c: 203:                 minutos = leer_x(0x01);
  1524     079F  3001               	movlw	1
  1525     07A0  120A  118A  24B8  120A  118A  	fcall	_leer_x
  1526     07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1527     07A6  00AC               	movwf	_minutos
  1528                           
  1529                           ;main.c: 204:                 Escribir_dato(segundos, 14, 1);
  1530     07A7  300E               	movlw	14
  1531     07A8  00FC               	movwf	Escribir_dato@posx
  1532     07A9  01FD               	clrf	Escribir_dato@posy
  1533     07AA  0AFD               	incf	Escribir_dato@posy,f
  1534     07AB  082E               	movf	_segundos,w
  1535     07AC  120A  118A  24F7  120A  118A  	fcall	_Escribir_dato
  1536                           
  1537                           ;main.c: 205:                 Escribir_dato(minutos, 11, 1);
  1538     07B1  300B               	movlw	11
  1539     07B2  00FC               	movwf	Escribir_dato@posx
  1540     07B3  01FD               	clrf	Escribir_dato@posy
  1541     07B4  0AFD               	incf	Escribir_dato@posy,f
  1542     07B5  082C               	movf	_minutos,w
  1543     07B6  120A  118A  24F7  120A  118A  	fcall	_Escribir_dato
  1544                           
  1545                           ;main.c: 207:                 leer_temperatura();
  1546     07BB  120A  118A  240B  120A  118A  	fcall	_leer_temperatura
  1547                           
  1548                           ;main.c: 208:                 _delay((unsigned long)((10)*(8000000/4000.0)));
  1549     07C0  301A               	movlw	26
  1550     07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1551     07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1552     07C3  00BF               	movwf	??_main+1
  1553     07C4  30F7               	movlw	247
  1554     07C5  00BE               	movwf	??_main
  1555     07C6                     u1467:
  1556     07C6  0BBE               	decfsz	??_main,f
  1557     07C7  2FC6               	goto	u1467
  1558     07C8  0BBF               	decfsz	??_main+1,f
  1559     07C9  2FC6               	goto	u1467
  1560     07CA  2FCB               	nop2
  1561     07CB                     l1843:
  1562                           
  1563                           ;main.c: 200:             while(PORTBbits.RB3 & !((sec == segundos) & (min == minutos)) 
      +                          ){
  1564     07CB  1283               	bcf	3,5	;RP0=0, select bank0
  1565     07CC  1303               	bcf	3,6	;RP1=0, select bank0
  1566     07CD  01C1               	clrf	_main$198
  1567     07CE  0AC1               	incf	_main$198,f
  1568     07CF  082F               	movf	_sec,w
  1569     07D0  062E               	xorwf	_segundos,w
  1570     07D1  1D03               	skipz
  1571     07D2  2FD8               	goto	l1851
  1572     07D3  082D               	movf	_min,w
  1573     07D4  062C               	xorwf	_minutos,w
  1574     07D5  1D03               	skipz
  1575     07D6  2FD8               	goto	l1851
  1576     07D7  01C1               	clrf	_main$198
  1577     07D8                     l1851:
  1578     07D8  0C06               	rrf	6,w	;volatile
  1579     07D9  00BE               	movwf	??_main
  1580     07DA  0CBE               	rrf	??_main,f
  1581     07DB  0C3E               	rrf	??_main,w
  1582     07DC  3901               	andlw	1
  1583     07DD  0541               	andwf	_main$198,w
  1584     07DE  1D03               	btfss	3,2
  1585     07DF  2F97               	goto	l1839
  1586                           
  1587                           ;main.c: 212:             Escribir_dato(0, 14, 2);
  1588     07E0  300E               	movlw	14
  1589     07E1  00FC               	movwf	Escribir_dato@posx
  1590     07E2  3002               	movlw	2
  1591     07E3  00FD               	movwf	Escribir_dato@posy
  1592     07E4  3000               	movlw	0
  1593     07E5  120A  118A  24F7  120A  118A  	fcall	_Escribir_dato
  1594                           
  1595                           ;main.c: 213:             Escribir_dato(0, 11, 2);
  1596     07EA  300B               	movlw	11
  1597     07EB  00FC               	movwf	Escribir_dato@posx
  1598     07EC  3002               	movlw	2
  1599     07ED  00FD               	movwf	Escribir_dato@posy
  1600     07EE  3000               	movlw	0
  1601     07EF  120A  118A  24F7  120A  118A  	fcall	_Escribir_dato
  1602     07F4  2E87               	goto	l1749
  1603     07F5                     __end_of_main:
  1604                           
  1605                           	psect	text1
  1606     053D                     __ptext1:	
  1607 ;; *************** function _setupINTOSC *****************
  1608 ;; Defined at:
  1609 ;;		line 10 in file "oscilador.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  IRCF            1    wreg     unsigned char 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  IRCF            1    0[COMMON] unsigned char 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0
  1618 ;; Tracked objects:
  1619 ;;		On entry : B00/0
  1620 ;;		On exit  : B00/100
  1621 ;;		Unchanged: 800/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1623 ;;      Params:         0       0       0       0       0
  1624 ;;      Locals:         1       0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0
  1626 ;;      Totals:         1       0       0       0       0
  1627 ;;Total ram usage:        1 bytes
  1628 ;; Hardware stack levels used: 1
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_main
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636     053D                     _setupINTOSC:	
  1637                           ;psect for function _setupINTOSC
  1638                           
  1639                           
  1640                           ;incstack = 0
  1641                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  1642                           ;setupINTOSC@IRCF stored from wreg
  1643     053D  00F0               	movwf	setupINTOSC@IRCF
  1644                           
  1645                           ;oscilador.c: 11:     if (IRCF == 7){
  1646     053E  3007               	movlw	7
  1647     053F  0670               	xorwf	setupINTOSC@IRCF,w
  1648     0540  1D03               	btfss	3,2
  1649     0541  2D45               	goto	l275
  1650                           
  1651                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  1652     0542  3070               	movlw	112
  1653     0543  1683               	bsf	3,5	;RP0=1, select bank1
  1654     0544  048F               	iorwf	15,f	;volatile
  1655     0545                     l275:	
  1656                           ;oscilador.c: 13:     }
  1657                           
  1658                           
  1659                           ;oscilador.c: 14:     if (IRCF == 6){
  1660     0545  3006               	movlw	6
  1661     0546  0670               	xorwf	setupINTOSC@IRCF,w
  1662     0547  1D03               	btfss	3,2
  1663     0548  2D4E               	goto	l276
  1664                           
  1665                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  1666     0549  1683               	bsf	3,5	;RP0=1, select bank1
  1667     054A  080F               	movf	15,w	;volatile
  1668     054B  398F               	andlw	-113
  1669     054C  3860               	iorlw	96
  1670     054D  008F               	movwf	15	;volatile
  1671     054E                     l276:	
  1672                           ;oscilador.c: 16:     }
  1673                           
  1674                           
  1675                           ;oscilador.c: 17:     if (IRCF == 5){
  1676     054E  3005               	movlw	5
  1677     054F  0670               	xorwf	setupINTOSC@IRCF,w
  1678     0550  1D03               	btfss	3,2
  1679     0551  2D57               	goto	l277
  1680                           
  1681                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  1682     0552  1683               	bsf	3,5	;RP0=1, select bank1
  1683     0553  080F               	movf	15,w	;volatile
  1684     0554  398F               	andlw	-113
  1685     0555  3850               	iorlw	80
  1686     0556  008F               	movwf	15	;volatile
  1687     0557                     l277:	
  1688                           ;oscilador.c: 19:     }
  1689                           
  1690                           
  1691                           ;oscilador.c: 20:     if (IRCF == 4){
  1692     0557  3004               	movlw	4
  1693     0558  0670               	xorwf	setupINTOSC@IRCF,w
  1694     0559  1D03               	btfss	3,2
  1695     055A  2D60               	goto	l278
  1696                           
  1697                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  1698     055B  1683               	bsf	3,5	;RP0=1, select bank1
  1699     055C  080F               	movf	15,w	;volatile
  1700     055D  398F               	andlw	-113
  1701     055E  3840               	iorlw	64
  1702     055F  008F               	movwf	15	;volatile
  1703     0560                     l278:	
  1704                           ;oscilador.c: 22:     }
  1705                           
  1706                           
  1707                           ;oscilador.c: 23:     if (IRCF == 3){
  1708     0560  3003               	movlw	3
  1709     0561  0670               	xorwf	setupINTOSC@IRCF,w
  1710     0562  1D03               	btfss	3,2
  1711     0563  2D69               	goto	l279
  1712                           
  1713                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  1714     0564  1683               	bsf	3,5	;RP0=1, select bank1
  1715     0565  080F               	movf	15,w	;volatile
  1716     0566  398F               	andlw	-113
  1717     0567  3830               	iorlw	48
  1718     0568  008F               	movwf	15	;volatile
  1719     0569                     l279:	
  1720                           ;oscilador.c: 25:     }
  1721                           
  1722                           
  1723                           ;oscilador.c: 26:     if (IRCF == 2){
  1724     0569  3002               	movlw	2
  1725     056A  0670               	xorwf	setupINTOSC@IRCF,w
  1726     056B  1D03               	btfss	3,2
  1727     056C  2D72               	goto	l280
  1728                           
  1729                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  1730     056D  1683               	bsf	3,5	;RP0=1, select bank1
  1731     056E  080F               	movf	15,w	;volatile
  1732     056F  398F               	andlw	-113
  1733     0570  3820               	iorlw	32
  1734     0571  008F               	movwf	15	;volatile
  1735     0572                     l280:	
  1736                           ;oscilador.c: 28:     }
  1737                           
  1738                           
  1739                           ;oscilador.c: 29:     if (IRCF == 1){
  1740     0572  0370               	decf	setupINTOSC@IRCF,w
  1741     0573  1D03               	btfss	3,2
  1742     0574  2D7A               	goto	l281
  1743                           
  1744                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  1745     0575  1683               	bsf	3,5	;RP0=1, select bank1
  1746     0576  080F               	movf	15,w	;volatile
  1747     0577  398F               	andlw	-113
  1748     0578  3810               	iorlw	16
  1749     0579  008F               	movwf	15	;volatile
  1750     057A                     l281:	
  1751                           ;oscilador.c: 31:     }
  1752                           
  1753                           
  1754                           ;oscilador.c: 32:     if (IRCF == 0){
  1755     057A  0870               	movf	setupINTOSC@IRCF,w
  1756     057B  1D03               	btfss	3,2
  1757     057C  2D80               	goto	l1685
  1758                           
  1759                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  1760     057D  308F               	movlw	-113
  1761     057E  1683               	bsf	3,5	;RP0=1, select bank1
  1762     057F  058F               	andwf	15,f	;volatile
  1763     0580                     l1685:
  1764                           
  1765                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  1766     0580  1683               	bsf	3,5	;RP0=1, select bank1
  1767     0581  140F               	bsf	15,0	;volatile
  1768     0582  0008               	return
  1769     0583                     __end_of_setupINTOSC:
  1770                           
  1771                           	psect	text2
  1772     0316                     __ptext2:	
  1773 ;; *************** function _portsetup *****************
  1774 ;; Defined at:
  1775 ;;		line 218 in file "main.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      void 
  1782 ;; Registers used:
  1783 ;;		wreg, status,2, status,0, pclath, cstack
  1784 ;; Tracked objects:
  1785 ;;		On entry : B00/100
  1786 ;;		On exit  : 300/100
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1789 ;;      Params:         0       0       0       0       0
  1790 ;;      Locals:         0       0       0       0       0
  1791 ;;      Temps:          0       3       0       0       0
  1792 ;;      Totals:         0       3       0       0       0
  1793 ;;Total ram usage:        3 bytes
  1794 ;; Hardware stack levels used: 1
  1795 ;; Hardware stack levels required when called: 2
  1796 ;; This function calls:
  1797 ;;		_I2C_Master_Init
  1798 ;; This function is called by:
  1799 ;;		_main
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803     0316                     _portsetup:	
  1804                           ;psect for function _portsetup
  1805                           
  1806                           
  1807                           ;main.c: 219:     ANSEL = 0;
  1808                           
  1809                           ;incstack = 0
  1810                           ; Regs used in _portsetup: [wreg+status,2+status,0+pclath+cstack]
  1811     0316  1703               	bsf	3,6	;RP1=1, select bank3
  1812     0317  0188               	clrf	8	;volatile
  1813                           
  1814                           ;main.c: 220:     ANSELH = 0;
  1815     0318  0189               	clrf	9	;volatile
  1816                           
  1817                           ;main.c: 221:     TRISD = 0;
  1818     0319  1303               	bcf	3,6	;RP1=0, select bank1
  1819     031A  0188               	clrf	8	;volatile
  1820                           
  1821                           ;main.c: 222:     PORTD = 0;
  1822     031B  1283               	bcf	3,5	;RP0=0, select bank0
  1823     031C  0188               	clrf	8	;volatile
  1824                           
  1825                           ;main.c: 225:     TRISB = 0b11111110;
  1826     031D  30FE               	movlw	254
  1827     031E  1683               	bsf	3,5	;RP0=1, select bank1
  1828     031F  0086               	movwf	6	;volatile
  1829                           
  1830                           ;main.c: 226:     PORTB = 0b11111110;
  1831     0320  30FE               	movlw	254
  1832     0321  1283               	bcf	3,5	;RP0=0, select bank0
  1833     0322  0086               	movwf	6	;volatile
  1834                           
  1835                           ;main.c: 227:     WPUB = 0b11111110;
  1836     0323  30FE               	movlw	254
  1837     0324  1683               	bsf	3,5	;RP0=1, select bank1
  1838     0325  0095               	movwf	21	;volatile
  1839                           
  1840                           ;main.c: 228:     OPTION_REGbits.nRBPU = 0;
  1841     0326  1381               	bcf	1,7	;volatile
  1842                           
  1843                           ;main.c: 229:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1844     0327  300B               	movlw	11
  1845     0328  1283               	bcf	3,5	;RP0=0, select bank0
  1846     0329  1303               	bcf	3,6	;RP1=0, select bank0
  1847     032A  00BD               	movwf	??_portsetup+2
  1848     032B  3026               	movlw	38
  1849     032C  00BC               	movwf	??_portsetup+1
  1850     032D  305D               	movlw	93
  1851     032E  00BB               	movwf	??_portsetup
  1852     032F                     u1477:
  1853     032F  0BBB               	decfsz	??_portsetup,f
  1854     0330  2B2F               	goto	u1477
  1855     0331  0BBC               	decfsz	??_portsetup+1,f
  1856     0332  2B2F               	goto	u1477
  1857     0333  0BBD               	decfsz	??_portsetup+2,f
  1858     0334  2B2F               	goto	u1477
  1859                           
  1860                           ;main.c: 230:     I2C_Master_Init(100000);
  1861     0335  3000               	movlw	0
  1862     0336  1283               	bcf	3,5	;RP0=0, select bank0
  1863     0337  1303               	bcf	3,6	;RP1=0, select bank0
  1864     0338  00B6               	movwf	I2C_Master_Init@c+3
  1865     0339  3001               	movlw	1
  1866     033A  00B5               	movwf	I2C_Master_Init@c+2
  1867     033B  3086               	movlw	134
  1868     033C  00B4               	movwf	I2C_Master_Init@c+1
  1869     033D  30A0               	movlw	160
  1870     033E  00B3               	movwf	I2C_Master_Init@c
  1871     033F  120A  118A  2374   	fcall	_I2C_Master_Init
  1872     0342  0008               	return
  1873     0343                     __end_of_portsetup:
  1874                           
  1875                           	psect	text3
  1876     0374                     __ptext3:	
  1877 ;; *************** function _I2C_Master_Init *****************
  1878 ;; Defined at:
  1879 ;;		line 16 in file "I2C.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  c               4    0[BANK0 ] const unsigned long 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, status,2, status,0, pclath, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 300/0
  1890 ;;		On exit  : 300/100
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1893 ;;      Params:         0       4       0       0       0
  1894 ;;      Locals:         0       0       0       0       0
  1895 ;;      Temps:          0       4       0       0       0
  1896 ;;      Totals:         0       8       0       0       0
  1897 ;;Total ram usage:        8 bytes
  1898 ;; Hardware stack levels used: 1
  1899 ;; Hardware stack levels required when called: 1
  1900 ;; This function calls:
  1901 ;;		___lldiv
  1902 ;; This function is called by:
  1903 ;;		_portsetup
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907     0374                     _I2C_Master_Init:	
  1908                           ;psect for function _I2C_Master_Init
  1909                           
  1910                           
  1911                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1912                           
  1913                           ;incstack = 0
  1914                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1915     0374  3028               	movlw	40
  1916     0375  0094               	movwf	20	;volatile
  1917                           
  1918                           ;I2C.c: 19:     SSPCON2 = 0;
  1919     0376  1683               	bsf	3,5	;RP0=1, select bank1
  1920     0377  0191               	clrf	17	;volatile
  1921                           
  1922                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1923     0378  1283               	bcf	3,5	;RP0=0, select bank0
  1924     0379  0833               	movf	I2C_Master_Init@c,w
  1925     037A  00B7               	movwf	??_I2C_Master_Init
  1926     037B  0834               	movf	I2C_Master_Init@c+1,w
  1927     037C  00B8               	movwf	??_I2C_Master_Init+1
  1928     037D  0835               	movf	I2C_Master_Init@c+2,w
  1929     037E  00B9               	movwf	??_I2C_Master_Init+2
  1930     037F  0836               	movf	I2C_Master_Init@c+3,w
  1931     0380  00BA               	movwf	??_I2C_Master_Init+3
  1932     0381  3002               	movlw	2
  1933     0382                     u1135:
  1934     0382  1003               	clrc
  1935     0383  0DB7               	rlf	??_I2C_Master_Init,f
  1936     0384  0DB8               	rlf	??_I2C_Master_Init+1,f
  1937     0385  0DB9               	rlf	??_I2C_Master_Init+2,f
  1938     0386  0DBA               	rlf	??_I2C_Master_Init+3,f
  1939     0387  3EFF               	addlw	-1
  1940     0388  1D03               	skipz
  1941     0389  2B82               	goto	u1135
  1942     038A  083A               	movf	??_I2C_Master_Init+3,w
  1943     038B  00F3               	movwf	___lldiv@divisor+3
  1944     038C  0839               	movf	??_I2C_Master_Init+2,w
  1945     038D  00F2               	movwf	___lldiv@divisor+2
  1946     038E  0838               	movf	??_I2C_Master_Init+1,w
  1947     038F  00F1               	movwf	___lldiv@divisor+1
  1948     0390  0837               	movf	??_I2C_Master_Init,w
  1949     0391  00F0               	movwf	___lldiv@divisor
  1950     0392  3000               	movlw	0
  1951     0393  00F7               	movwf	___lldiv@dividend+3
  1952     0394  307A               	movlw	122
  1953     0395  00F6               	movwf	___lldiv@dividend+2
  1954     0396  3012               	movlw	18
  1955     0397  00F5               	movwf	___lldiv@dividend+1
  1956     0398  3000               	movlw	0
  1957     0399  00F4               	movwf	___lldiv@dividend
  1958     039A  120A  118A  25DE   	fcall	___lldiv
  1959     039D  0870               	movf	?___lldiv,w
  1960     039E  3EFF               	addlw	255
  1961     039F  1683               	bsf	3,5	;RP0=1, select bank1
  1962     03A0  0093               	movwf	19	;volatile
  1963                           
  1964                           ;I2C.c: 21:     SSPSTAT = 0;
  1965     03A1  0194               	clrf	20	;volatile
  1966                           
  1967                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1968     03A2  1587               	bsf	7,3	;volatile
  1969                           
  1970                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1971     03A3  1607               	bsf	7,4	;volatile
  1972     03A4  0008               	return
  1973     03A5                     __end_of_I2C_Master_Init:
  1974                           
  1975                           	psect	text4
  1976     05DE                     __ptext4:	
  1977 ;; *************** function ___lldiv *****************
  1978 ;; Defined at:
  1979 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  divisor         4    0[COMMON] unsigned long 
  1982 ;;  dividend        4    4[COMMON] unsigned long 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  quotient        4    9[COMMON] unsigned long 
  1985 ;;  counter         1   13[COMMON] unsigned char 
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  4    0[COMMON] unsigned long 
  1988 ;; Registers used:
  1989 ;;		wreg, status,2, status,0
  1990 ;; Tracked objects:
  1991 ;;		On entry : 300/0
  1992 ;;		On exit  : 300/0
  1993 ;;		Unchanged: 300/0
  1994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1995 ;;      Params:         8       0       0       0       0
  1996 ;;      Locals:         5       0       0       0       0
  1997 ;;      Temps:          1       0       0       0       0
  1998 ;;      Totals:        14       0       0       0       0
  1999 ;;Total ram usage:       14 bytes
  2000 ;; Hardware stack levels used: 1
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_I2C_Master_Init
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008     05DE                     ___lldiv:	
  2009                           ;psect for function ___lldiv
  2010                           
  2011                           
  2012                           ;incstack = 0
  2013                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2014     05DE  3000               	movlw	0
  2015     05DF  00FC               	movwf	___lldiv@quotient+3
  2016     05E0  3000               	movlw	0
  2017     05E1  00FB               	movwf	___lldiv@quotient+2
  2018     05E2  3000               	movlw	0
  2019     05E3  00FA               	movwf	___lldiv@quotient+1
  2020     05E4  3000               	movlw	0
  2021     05E5  00F9               	movwf	___lldiv@quotient
  2022     05E6  0873               	movf	___lldiv@divisor+3,w
  2023     05E7  0472               	iorwf	___lldiv@divisor+2,w
  2024     05E8  0471               	iorwf	___lldiv@divisor+1,w
  2025     05E9  0470               	iorwf	___lldiv@divisor,w
  2026     05EA  1903               	skipnz
  2027     05EB  2E33               	goto	l1607
  2028     05EC  01FD               	clrf	___lldiv@counter
  2029     05ED  0AFD               	incf	___lldiv@counter,f
  2030     05EE                     l1593:
  2031     05EE  1BF3               	btfsc	___lldiv@divisor+3,7
  2032     05EF  2DFE               	goto	l1595
  2033     05F0  3001               	movlw	1
  2034     05F1  00F8               	movwf	??___lldiv
  2035     05F2                     u1075:
  2036     05F2  1003               	clrc
  2037     05F3  0DF0               	rlf	___lldiv@divisor,f
  2038     05F4  0DF1               	rlf	___lldiv@divisor+1,f
  2039     05F5  0DF2               	rlf	___lldiv@divisor+2,f
  2040     05F6  0DF3               	rlf	___lldiv@divisor+3,f
  2041     05F7  0BF8               	decfsz	??___lldiv,f
  2042     05F8  2DF2               	goto	u1075
  2043     05F9  3001               	movlw	1
  2044     05FA  00F8               	movwf	??___lldiv
  2045     05FB  0878               	movf	??___lldiv,w
  2046     05FC  07FD               	addwf	___lldiv@counter,f
  2047     05FD  2DEE               	goto	l1593
  2048     05FE                     l1595:
  2049     05FE  3001               	movlw	1
  2050     05FF  00F8               	movwf	??___lldiv
  2051     0600                     u1095:
  2052     0600  1003               	clrc
  2053     0601  0DF9               	rlf	___lldiv@quotient,f
  2054     0602  0DFA               	rlf	___lldiv@quotient+1,f
  2055     0603  0DFB               	rlf	___lldiv@quotient+2,f
  2056     0604  0DFC               	rlf	___lldiv@quotient+3,f
  2057     0605  0BF8               	decfsz	??___lldiv,f
  2058     0606  2E00               	goto	u1095
  2059     0607  0873               	movf	___lldiv@divisor+3,w
  2060     0608  0277               	subwf	___lldiv@dividend+3,w
  2061     0609  1D03               	skipz
  2062     060A  2E15               	goto	u1105
  2063     060B  0872               	movf	___lldiv@divisor+2,w
  2064     060C  0276               	subwf	___lldiv@dividend+2,w
  2065     060D  1D03               	skipz
  2066     060E  2E15               	goto	u1105
  2067     060F  0871               	movf	___lldiv@divisor+1,w
  2068     0610  0275               	subwf	___lldiv@dividend+1,w
  2069     0611  1D03               	skipz
  2070     0612  2E15               	goto	u1105
  2071     0613  0870               	movf	___lldiv@divisor,w
  2072     0614  0274               	subwf	___lldiv@dividend,w
  2073     0615                     u1105:
  2074     0615  1C03               	skipc
  2075     0616  2E26               	goto	l1603
  2076     0617  0870               	movf	___lldiv@divisor,w
  2077     0618  02F4               	subwf	___lldiv@dividend,f
  2078     0619  0871               	movf	___lldiv@divisor+1,w
  2079     061A  1C03               	skipc
  2080     061B  0F71               	incfsz	___lldiv@divisor+1,w
  2081     061C  02F5               	subwf	___lldiv@dividend+1,f
  2082     061D  0872               	movf	___lldiv@divisor+2,w
  2083     061E  1C03               	skipc
  2084     061F  0F72               	incfsz	___lldiv@divisor+2,w
  2085     0620  02F6               	subwf	___lldiv@dividend+2,f
  2086     0621  0873               	movf	___lldiv@divisor+3,w
  2087     0622  1C03               	skipc
  2088     0623  0F73               	incfsz	___lldiv@divisor+3,w
  2089     0624  02F7               	subwf	___lldiv@dividend+3,f
  2090     0625  1479               	bsf	___lldiv@quotient,0
  2091     0626                     l1603:
  2092     0626  3001               	movlw	1
  2093     0627                     u1115:
  2094     0627  1003               	clrc
  2095     0628  0CF3               	rrf	___lldiv@divisor+3,f
  2096     0629  0CF2               	rrf	___lldiv@divisor+2,f
  2097     062A  0CF1               	rrf	___lldiv@divisor+1,f
  2098     062B  0CF0               	rrf	___lldiv@divisor,f
  2099     062C  3EFF               	addlw	-1
  2100     062D  1D03               	skipz
  2101     062E  2E27               	goto	u1115
  2102     062F  3001               	movlw	1
  2103     0630  02FD               	subwf	___lldiv@counter,f
  2104     0631  1D03               	btfss	3,2
  2105     0632  2DFE               	goto	l1595
  2106     0633                     l1607:
  2107     0633  087C               	movf	___lldiv@quotient+3,w
  2108     0634  00F3               	movwf	?___lldiv+3
  2109     0635  087B               	movf	___lldiv@quotient+2,w
  2110     0636  00F2               	movwf	?___lldiv+2
  2111     0637  087A               	movf	___lldiv@quotient+1,w
  2112     0638  00F1               	movwf	?___lldiv+1
  2113     0639  0879               	movf	___lldiv@quotient,w
  2114     063A  00F0               	movwf	?___lldiv
  2115     063B  0008               	return
  2116     063C                     __end_of___lldiv:
  2117                           
  2118                           	psect	text5
  2119     04B8                     __ptext5:	
  2120 ;; *************** function _leer_x *****************
  2121 ;; Defined at:
  2122 ;;		line 24 in file "DS3231.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  address         1    wreg     unsigned char 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  address         1   11[COMMON] unsigned char 
  2127 ;;  valor           1   12[COMMON] unsigned char 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      unsigned char 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0, pclath, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 200/100
  2134 ;;		On exit  : 300/100
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2137 ;;      Params:         0       0       0       0       0
  2138 ;;      Locals:         2       0       0       0       0
  2139 ;;      Temps:          2       0       0       0       0
  2140 ;;      Totals:         4       0       0       0       0
  2141 ;;Total ram usage:        4 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; Hardware stack levels required when called: 2
  2144 ;; This function calls:
  2145 ;;		_I2C_Master_Read
  2146 ;;		_I2C_Master_RepeatedStart
  2147 ;;		_I2C_Master_Start
  2148 ;;		_I2C_Master_Stop
  2149 ;;		_I2C_Master_Write
  2150 ;;		_convertir
  2151 ;; This function is called by:
  2152 ;;		_main
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156     04B8                     _leer_x:	
  2157                           ;psect for function _leer_x
  2158                           
  2159                           
  2160                           ;incstack = 0
  2161                           ; Regs used in _leer_x: [wreg+status,2+status,0+pclath+cstack]
  2162                           ;leer_x@address stored from wreg
  2163     04B8  00FB               	movwf	leer_x@address
  2164                           
  2165                           ;DS3231.c: 25:     uint8_t valor;;DS3231.c: 26:     I2C_Master_Start();
  2166     04B9  120A  118A  2204  120A  118A  	fcall	_I2C_Master_Start
  2167                           
  2168                           ;DS3231.c: 27:     I2C_Master_Write(0xD0);
  2169     04BE  30D0               	movlw	208
  2170     04BF  00F0               	movwf	I2C_Master_Write@d
  2171     04C0  3000               	movlw	0
  2172     04C1  00F1               	movwf	I2C_Master_Write@d+1
  2173     04C2  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
  2174                           
  2175                           ;DS3231.c: 28:     I2C_Master_Write(address);
  2176     04C7  087B               	movf	leer_x@address,w
  2177     04C8  00F9               	movwf	??_leer_x
  2178     04C9  01FA               	clrf	??_leer_x+1
  2179     04CA  0879               	movf	??_leer_x,w
  2180     04CB  00F0               	movwf	I2C_Master_Write@d
  2181     04CC  087A               	movf	??_leer_x+1,w
  2182     04CD  00F1               	movwf	I2C_Master_Write@d+1
  2183     04CE  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
  2184                           
  2185                           ;DS3231.c: 29:     I2C_Master_RepeatedStart();
  2186     04D3  120A  118A  220E  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2187                           
  2188                           ;DS3231.c: 30:     I2C_Master_Write(0xD1);
  2189     04D8  30D1               	movlw	209
  2190     04D9  00F0               	movwf	I2C_Master_Write@d
  2191     04DA  3000               	movlw	0
  2192     04DB  00F1               	movwf	I2C_Master_Write@d+1
  2193     04DC  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
  2194                           
  2195                           ;DS3231.c: 31:     valor = I2C_Master_Read(0);
  2196     04E1  3000               	movlw	0
  2197     04E2  00F0               	movwf	I2C_Master_Read@a
  2198     04E3  00F1               	movwf	I2C_Master_Read@a+1
  2199     04E4  120A  118A  22F1  120A  118A  	fcall	_I2C_Master_Read
  2200     04E9  0870               	movf	?_I2C_Master_Read,w
  2201     04EA  00FC               	movwf	leer_x@valor
  2202                           
  2203                           ;DS3231.c: 32:     I2C_Master_Stop();
  2204     04EB  120A  118A  2209  120A  118A  	fcall	_I2C_Master_Stop
  2205                           
  2206                           ;DS3231.c: 33:     valor = convertir(valor);
  2207     04F0  087C               	movf	leer_x@valor,w
  2208     04F1  120A  118A  2276   	fcall	_convertir
  2209     04F4  00FC               	movwf	leer_x@valor
  2210                           
  2211                           ;DS3231.c: 35:     return valor;
  2212     04F5  087C               	movf	leer_x@valor,w
  2213     04F6  0008               	return
  2214     04F7                     __end_of_leer_x:
  2215                           
  2216                           	psect	text6
  2217     0276                     __ptext6:	
  2218 ;; *************** function _convertir *****************
  2219 ;; Defined at:
  2220 ;;		line 5 in file "DS3231.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  valor           1    wreg     unsigned char 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  valor           1    8[COMMON] unsigned char 
  2225 ;;  conversion      1    7[COMMON] unsigned char 
  2226 ;;  decena          1    6[COMMON] unsigned char 
  2227 ;;  unidad          1    5[COMMON] unsigned char 
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      unsigned char 
  2230 ;; Registers used:
  2231 ;;		wreg, status,2, status,0, pclath, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 300/100
  2234 ;;		On exit  : 300/100
  2235 ;;		Unchanged: 300/0
  2236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2237 ;;      Params:         0       0       0       0       0
  2238 ;;      Locals:         4       0       0       0       0
  2239 ;;      Temps:          1       0       0       0       0
  2240 ;;      Totals:         5       0       0       0       0
  2241 ;;Total ram usage:        5 bytes
  2242 ;; Hardware stack levels used: 1
  2243 ;; Hardware stack levels required when called: 1
  2244 ;; This function calls:
  2245 ;;		___bmul
  2246 ;; This function is called by:
  2247 ;;		_leer_x
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251     0276                     _convertir:	
  2252                           ;psect for function _convertir
  2253                           
  2254                           
  2255                           ;incstack = 0
  2256                           ; Regs used in _convertir: [wreg+status,2+status,0+pclath+cstack]
  2257                           ;convertir@valor stored from wreg
  2258     0276  00F8               	movwf	convertir@valor
  2259                           
  2260                           ;DS3231.c: 6:     uint8_t unidad;;DS3231.c: 7:     uint8_t decena;;DS3231.c: 8:     uint
      +                          8_t conversion;;DS3231.c: 9:     unidad = valor & 0x0F;
  2261     0277  0878               	movf	convertir@valor,w
  2262     0278  390F               	andlw	15
  2263     0279  00F5               	movwf	convertir@unidad
  2264                           
  2265                           ;DS3231.c: 10:     decena = ((valor & 0xF0) >> 4);
  2266     027A  0878               	movf	convertir@valor,w
  2267     027B  00F4               	movwf	??_convertir
  2268     027C  3004               	movlw	4
  2269     027D                     u1155:
  2270     027D  1003               	clrc
  2271     027E  0CF4               	rrf	??_convertir,f
  2272     027F  3EFF               	addlw	-1
  2273     0280  1D03               	skipz
  2274     0281  2A7D               	goto	u1155
  2275     0282  0874               	movf	??_convertir,w
  2276     0283  390F               	andlw	15
  2277     0284  00F6               	movwf	convertir@decena
  2278                           
  2279                           ;DS3231.c: 11:     conversion = unidad+(decena*10);
  2280     0285  300A               	movlw	10
  2281     0286  00F0               	movwf	___bmul@multiplicand
  2282     0287  0876               	movf	convertir@decena,w
  2283     0288  120A  118A  2235   	fcall	___bmul
  2284     028B  0775               	addwf	convertir@unidad,w
  2285     028C  00F7               	movwf	convertir@conversion
  2286                           
  2287                           ;DS3231.c: 12:     return conversion;
  2288     028D  0877               	movf	convertir@conversion,w
  2289     028E  0008               	return
  2290     028F                     __end_of_convertir:
  2291                           
  2292                           	psect	text7
  2293     0235                     __ptext7:	
  2294 ;; *************** function ___bmul *****************
  2295 ;; Defined at:
  2296 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  multiplier      1    wreg     unsigned char 
  2299 ;;  multiplicand    1    0[COMMON] unsigned char 
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;  multiplier      1    3[COMMON] unsigned char 
  2302 ;;  product         1    2[COMMON] unsigned char 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      unsigned char 
  2305 ;; Registers used:
  2306 ;;		wreg, status,2, status,0
  2307 ;; Tracked objects:
  2308 ;;		On entry : 300/100
  2309 ;;		On exit  : 300/100
  2310 ;;		Unchanged: 300/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2312 ;;      Params:         1       0       0       0       0
  2313 ;;      Locals:         2       0       0       0       0
  2314 ;;      Temps:          1       0       0       0       0
  2315 ;;      Totals:         4       0       0       0       0
  2316 ;;Total ram usage:        4 bytes
  2317 ;; Hardware stack levels used: 1
  2318 ;; This function calls:
  2319 ;;		Nothing
  2320 ;; This function is called by:
  2321 ;;		_convertir
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325     0235                     ___bmul:	
  2326                           ;psect for function ___bmul
  2327                           
  2328                           
  2329                           ;incstack = 0
  2330                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2331                           ;___bmul@multiplier stored from wreg
  2332     0235  00F3               	movwf	___bmul@multiplier
  2333     0236  01F2               	clrf	___bmul@product
  2334     0237                     l1575:
  2335     0237  1C73               	btfss	___bmul@multiplier,0
  2336     0238  2A3D               	goto	l1579
  2337     0239  0870               	movf	___bmul@multiplicand,w
  2338     023A  00F1               	movwf	??___bmul
  2339     023B  0871               	movf	??___bmul,w
  2340     023C  07F2               	addwf	___bmul@product,f
  2341     023D                     l1579:
  2342     023D  1003               	clrc
  2343     023E  0DF0               	rlf	___bmul@multiplicand,f
  2344     023F  1003               	clrc
  2345     0240  0CF3               	rrf	___bmul@multiplier,f
  2346     0241  0873               	movf	___bmul@multiplier,w
  2347     0242  1D03               	btfss	3,2
  2348     0243  2A37               	goto	l1575
  2349     0244  0872               	movf	___bmul@product,w
  2350     0245  0008               	return
  2351     0246                     __end_of___bmul:
  2352                           
  2353                           	psect	text8
  2354     020E                     __ptext8:	
  2355 ;; *************** function _I2C_Master_RepeatedStart *****************
  2356 ;; Defined at:
  2357 ;;		line 47 in file "I2C.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2, status,0, pclath, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 300/0
  2368 ;;		On exit  : 300/100
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2371 ;;      Params:         0       0       0       0       0
  2372 ;;      Locals:         0       0       0       0       0
  2373 ;;      Temps:          0       0       0       0       0
  2374 ;;      Totals:         0       0       0       0       0
  2375 ;;Total ram usage:        0 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; Hardware stack levels required when called: 1
  2378 ;; This function calls:
  2379 ;;		_I2C_Master_Wait
  2380 ;; This function is called by:
  2381 ;;		_leer_x
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385     020E                     _I2C_Master_RepeatedStart:	
  2386                           ;psect for function _I2C_Master_RepeatedStart
  2387                           
  2388                           
  2389                           ;I2C.c: 49:     I2C_Master_Wait();
  2390                           
  2391                           ;incstack = 0
  2392                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2393     020E  120A  118A  221A   	fcall	_I2C_Master_Wait
  2394                           
  2395                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2396     0211  1491               	bsf	17,1	;volatile
  2397     0212  0008               	return
  2398     0213                     __end_of_I2C_Master_RepeatedStart:
  2399                           
  2400                           	psect	text9
  2401     040B                     __ptext9:	
  2402 ;; *************** function _leer_temperatura *****************
  2403 ;; Defined at:
  2404 ;;		line 242 in file "main.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;		None
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0, pclath, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 200/100
  2415 ;;		On exit  : 300/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2418 ;;      Params:         0       0       0       0       0
  2419 ;;      Locals:         0       0       0       0       0
  2420 ;;      Temps:          0       2       0       0       0
  2421 ;;      Totals:         0       2       0       0       0
  2422 ;;Total ram usage:        2 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; Hardware stack levels required when called: 4
  2425 ;; This function calls:
  2426 ;;		_Escribir_dato
  2427 ;;		_I2C_Master_Read
  2428 ;;		_I2C_Master_Start
  2429 ;;		_I2C_Master_Stop
  2430 ;;		_I2C_Master_Write
  2431 ;; This function is called by:
  2432 ;;		_main
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436     040B                     _leer_temperatura:	
  2437                           ;psect for function _leer_temperatura
  2438                           
  2439                           
  2440                           ;main.c: 243:     I2C_Master_Start();
  2441                           
  2442                           ;incstack = 0
  2443                           ; Regs used in _leer_temperatura: [wreg+status,2+status,0+pclath+cstack]
  2444     040B  120A  118A  2204  120A  118A  	fcall	_I2C_Master_Start
  2445                           
  2446                           ;main.c: 244:     I2C_Master_Write(0xa1);
  2447     0410  30A1               	movlw	161
  2448     0411  00F0               	movwf	I2C_Master_Write@d
  2449     0412  3000               	movlw	0
  2450     0413  00F1               	movwf	I2C_Master_Write@d+1
  2451     0414  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
  2452                           
  2453                           ;main.c: 245:     tempint = I2C_Master_Read(0);
  2454     0419  3000               	movlw	0
  2455     041A  00F0               	movwf	I2C_Master_Read@a
  2456     041B  00F1               	movwf	I2C_Master_Read@a+1
  2457     041C  120A  118A  22F1  120A  118A  	fcall	_I2C_Master_Read
  2458     0421  0870               	movf	?_I2C_Master_Read,w
  2459     0422  1283               	bcf	3,5	;RP0=0, select bank0
  2460     0423  00B0               	movwf	_tempint
  2461                           
  2462                           ;main.c: 247:     I2C_Master_Stop();
  2463     0424  120A  118A  2209  120A  118A  	fcall	_I2C_Master_Stop
  2464                           
  2465                           ;main.c: 248:     _delay((unsigned long)((30)*(8000000/4000.0)));
  2466     0429  304E               	movlw	78
  2467     042A  1283               	bcf	3,5	;RP0=0, select bank0
  2468     042B  1303               	bcf	3,6	;RP1=0, select bank0
  2469     042C  00B5               	movwf	??_leer_temperatura+1
  2470     042D  30EA               	movlw	234
  2471     042E  00B4               	movwf	??_leer_temperatura
  2472     042F                     u1487:
  2473     042F  0BB4               	decfsz	??_leer_temperatura,f
  2474     0430  2C2F               	goto	u1487
  2475     0431  0BB5               	decfsz	??_leer_temperatura+1,f
  2476     0432  2C2F               	goto	u1487
  2477     0433  0000               	nop
  2478                           
  2479                           ;main.c: 249:     Escribir_dato(tempint, 4, 2);
  2480     0434  3004               	movlw	4
  2481     0435  00FC               	movwf	Escribir_dato@posx
  2482     0436  3002               	movlw	2
  2483     0437  00FD               	movwf	Escribir_dato@posy
  2484     0438  1283               	bcf	3,5	;RP0=0, select bank0
  2485     0439  1303               	bcf	3,6	;RP1=0, select bank0
  2486     043A  0830               	movf	_tempint,w
  2487     043B  120A  118A  24F7   	fcall	_Escribir_dato
  2488     043E  0008               	return
  2489     043F                     __end_of_leer_temperatura:
  2490                           
  2491                           	psect	text10
  2492     02F1                     __ptext10:	
  2493 ;; *************** function _I2C_Master_Read *****************
  2494 ;; Defined at:
  2495 ;;		line 74 in file "I2C.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  a               2    0[COMMON] unsigned short 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  temp            2    4[COMMON] unsigned short 
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  2    0[COMMON] unsigned short 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2, status,0, pclath, cstack
  2504 ;; Tracked objects:
  2505 ;;		On entry : 300/0
  2506 ;;		On exit  : 300/100
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2509 ;;      Params:         2       0       0       0       0
  2510 ;;      Locals:         2       0       0       0       0
  2511 ;;      Temps:          2       0       0       0       0
  2512 ;;      Totals:         6       0       0       0       0
  2513 ;;Total ram usage:        6 bytes
  2514 ;; Hardware stack levels used: 1
  2515 ;; Hardware stack levels required when called: 1
  2516 ;; This function calls:
  2517 ;;		_I2C_Master_Wait
  2518 ;; This function is called by:
  2519 ;;		_leer_temperatura
  2520 ;;		_leer_x
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524     02F1                     _I2C_Master_Read:	
  2525                           ;psect for function _I2C_Master_Read
  2526                           
  2527                           
  2528                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2529                           
  2530                           ;incstack = 0
  2531                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2532     02F1  120A  118A  221A  120A  118A  	fcall	_I2C_Master_Wait
  2533                           
  2534                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2535     02F6  1591               	bsf	17,3	;volatile
  2536                           
  2537                           ;I2C.c: 79:     I2C_Master_Wait();
  2538     02F7  120A  118A  221A  120A  118A  	fcall	_I2C_Master_Wait
  2539                           
  2540                           ;I2C.c: 80:     temp = SSPBUF;
  2541     02FC  1283               	bcf	3,5	;RP0=0, select bank0
  2542     02FD  0813               	movf	19,w	;volatile
  2543     02FE  00F2               	movwf	??_I2C_Master_Read
  2544     02FF  01F3               	clrf	??_I2C_Master_Read+1
  2545     0300  0872               	movf	??_I2C_Master_Read,w
  2546     0301  00F4               	movwf	I2C_Master_Read@temp
  2547     0302  0873               	movf	??_I2C_Master_Read+1,w
  2548     0303  00F5               	movwf	I2C_Master_Read@temp+1
  2549                           
  2550                           ;I2C.c: 81:     I2C_Master_Wait();
  2551     0304  120A  118A  221A  120A  118A  	fcall	_I2C_Master_Wait
  2552                           
  2553                           ;I2C.c: 82:     if(a == 1){
  2554     0309  0370               	decf	I2C_Master_Read@a,w
  2555     030A  0471               	iorwf	I2C_Master_Read@a+1,w
  2556     030B  1D03               	btfss	3,2
  2557     030C  2B0F               	goto	l189
  2558                           
  2559                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2560     030D  1291               	bcf	17,5	;volatile
  2561                           
  2562                           ;I2C.c: 84:     }else{
  2563     030E  2B10               	goto	l190
  2564     030F                     l189:
  2565                           
  2566                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2567     030F  1691               	bsf	17,5	;volatile
  2568     0310                     l190:	
  2569                           ;I2C.c: 86:     }
  2570                           
  2571                           
  2572                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2573     0310  1611               	bsf	17,4	;volatile
  2574                           
  2575                           ;I2C.c: 88:     return temp;
  2576     0311  0875               	movf	I2C_Master_Read@temp+1,w
  2577     0312  00F1               	movwf	?_I2C_Master_Read+1
  2578     0313  0874               	movf	I2C_Master_Read@temp,w
  2579     0314  00F0               	movwf	?_I2C_Master_Read
  2580     0315  0008               	return
  2581     0316                     __end_of_I2C_Master_Read:
  2582                           
  2583                           	psect	text11
  2584     04F7                     __ptext11:	
  2585 ;; *************** function _Escribir_dato *****************
  2586 ;; Defined at:
  2587 ;;		line 233 in file "main.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  dato            1    wreg     unsigned char 
  2590 ;;  posx            1   12[COMMON] unsigned char 
  2591 ;;  posy            1   13[COMMON] unsigned char 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  dato            1    0[BANK0 ] unsigned char 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg, status,2, status,0, pclath, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 300/0
  2600 ;;		On exit  : 300/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2603 ;;      Params:         2       0       0       0       0
  2604 ;;      Locals:         0       1       0       0       0
  2605 ;;      Temps:          0       0       0       0       0
  2606 ;;      Totals:         2       1       0       0       0
  2607 ;;Total ram usage:        3 bytes
  2608 ;; Hardware stack levels used: 1
  2609 ;; Hardware stack levels required when called: 3
  2610 ;; This function calls:
  2611 ;;		_Lcd_Set_Cursor
  2612 ;;		_Lcd_Write_Char
  2613 ;;		_descomponer
  2614 ;;		_inttochar
  2615 ;; This function is called by:
  2616 ;;		_main
  2617 ;;		_leer_temperatura
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621     04F7                     _Escribir_dato:	
  2622                           ;psect for function _Escribir_dato
  2623                           
  2624                           
  2625                           ;incstack = 0
  2626                           ; Regs used in _Escribir_dato: [wreg+status,2+status,0+pclath+cstack]
  2627                           ;Escribir_dato@dato stored from wreg
  2628     04F7  00B3               	movwf	Escribir_dato@dato
  2629                           
  2630                           ;main.c: 234:     Lcd_Set_Cursor(posy, posx+1);
  2631     04F8  087C               	movf	Escribir_dato@posx,w
  2632     04F9  3E01               	addlw	1
  2633     04FA  00F4               	movwf	Lcd_Set_Cursor@b
  2634     04FB  087D               	movf	Escribir_dato@posy,w
  2635     04FC  120A  118A  247A  120A  118A  	fcall	_Lcd_Set_Cursor
  2636                           
  2637                           ;main.c: 235:     unidad = inttochar(descomponer(0, dato));
  2638     0501  3000               	movlw	0
  2639     0502  00F6               	movwf	descomponer@pos
  2640     0503  00F7               	movwf	descomponer@pos+1
  2641     0504  1283               	bcf	3,5	;RP0=0, select bank0
  2642     0505  1303               	bcf	3,6	;RP1=0, select bank0
  2643     0506  0833               	movf	Escribir_dato@dato,w
  2644     0507  00F8               	movwf	descomponer@num
  2645     0508  120A  118A  23D8  120A  118A  	fcall	_descomponer
  2646     050D  120A  118A  243F  120A  118A  	fcall	_inttochar
  2647     0512  1283               	bcf	3,5	;RP0=0, select bank0
  2648     0513  1303               	bcf	3,6	;RP1=0, select bank0
  2649     0514  00B2               	movwf	_unidad
  2650                           
  2651                           ;main.c: 236:     Lcd_Write_Char(unidad);
  2652     0515  0832               	movf	_unidad,w
  2653     0516  120A  118A  2343  120A  118A  	fcall	_Lcd_Write_Char
  2654                           
  2655                           ;main.c: 237:     Lcd_Set_Cursor(posy, posx);
  2656     051B  087C               	movf	Escribir_dato@posx,w
  2657     051C  00F4               	movwf	Lcd_Set_Cursor@b
  2658     051D  087D               	movf	Escribir_dato@posy,w
  2659     051E  120A  118A  247A  120A  118A  	fcall	_Lcd_Set_Cursor
  2660                           
  2661                           ;main.c: 238:     decena = inttochar(descomponer(1, dato));
  2662     0523  3001               	movlw	1
  2663     0524  00F6               	movwf	descomponer@pos
  2664     0525  3000               	movlw	0
  2665     0526  00F7               	movwf	descomponer@pos+1
  2666     0527  1283               	bcf	3,5	;RP0=0, select bank0
  2667     0528  1303               	bcf	3,6	;RP1=0, select bank0
  2668     0529  0833               	movf	Escribir_dato@dato,w
  2669     052A  00F8               	movwf	descomponer@num
  2670     052B  120A  118A  23D8  120A  118A  	fcall	_descomponer
  2671     0530  120A  118A  243F  120A  118A  	fcall	_inttochar
  2672     0535  1283               	bcf	3,5	;RP0=0, select bank0
  2673     0536  1303               	bcf	3,6	;RP1=0, select bank0
  2674     0537  00B1               	movwf	_decena
  2675                           
  2676                           ;main.c: 239:     Lcd_Write_Char(decena);
  2677     0538  0831               	movf	_decena,w
  2678     0539  120A  118A  2343   	fcall	_Lcd_Write_Char
  2679     053C  0008               	return
  2680     053D                     __end_of_Escribir_dato:
  2681                           
  2682                           	psect	text12
  2683     043F                     __ptext12:	
  2684 ;; *************** function _inttochar *****************
  2685 ;; Defined at:
  2686 ;;		line 12 in file "conversiones.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  num             1    wreg     unsigned char 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;  num             1    0[COMMON] unsigned char 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      unsigned char 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2700 ;;      Params:         0       0       0       0       0
  2701 ;;      Locals:         1       0       0       0       0
  2702 ;;      Temps:          0       0       0       0       0
  2703 ;;      Totals:         1       0       0       0       0
  2704 ;;Total ram usage:        1 bytes
  2705 ;; Hardware stack levels used: 1
  2706 ;; This function calls:
  2707 ;;		Nothing
  2708 ;; This function is called by:
  2709 ;;		_Escribir_dato
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713     043F                     _inttochar:	
  2714                           ;psect for function _inttochar
  2715                           
  2716                           
  2717                           ;incstack = 0
  2718                           ; Regs used in _inttochar: [wreg+status,2+status,0]
  2719                           ;inttochar@num stored from wreg
  2720     043F  00F0               	movwf	inttochar@num
  2721                           
  2722                           ;conversiones.c: 13:     if(num == 0){
  2723     0440  0870               	movf	inttochar@num,w
  2724     0441  1D03               	btfss	3,2
  2725     0442  2C45               	goto	l1499
  2726                           
  2727                           ;conversiones.c: 14:         return '0';
  2728     0443  3030               	movlw	48
  2729     0444  0008               	return
  2730     0445                     l1499:
  2731     0445  0370               	decf	inttochar@num,w
  2732     0446  1D03               	btfss	3,2
  2733     0447  2C4A               	goto	l1507
  2734                           
  2735                           ;conversiones.c: 17:         return '1';
  2736     0448  3031               	movlw	49
  2737     0449  0008               	return
  2738     044A                     l1507:
  2739     044A  3002               	movlw	2
  2740     044B  0670               	xorwf	inttochar@num,w
  2741     044C  1D03               	btfss	3,2
  2742     044D  2C50               	goto	l1515
  2743                           
  2744                           ;conversiones.c: 20:         return '2';
  2745     044E  3032               	movlw	50
  2746     044F  0008               	return
  2747     0450                     l1515:
  2748     0450  3003               	movlw	3
  2749     0451  0670               	xorwf	inttochar@num,w
  2750     0452  1D03               	btfss	3,2
  2751     0453  2C56               	goto	l1523
  2752                           
  2753                           ;conversiones.c: 23:         return '3';
  2754     0454  3033               	movlw	51
  2755     0455  0008               	return
  2756     0456                     l1523:
  2757     0456  3004               	movlw	4
  2758     0457  0670               	xorwf	inttochar@num,w
  2759     0458  1D03               	btfss	3,2
  2760     0459  2C5C               	goto	l1531
  2761                           
  2762                           ;conversiones.c: 26:         return '4';
  2763     045A  3034               	movlw	52
  2764     045B  0008               	return
  2765     045C                     l1531:
  2766     045C  3005               	movlw	5
  2767     045D  0670               	xorwf	inttochar@num,w
  2768     045E  1D03               	btfss	3,2
  2769     045F  2C62               	goto	l1539
  2770                           
  2771                           ;conversiones.c: 29:         return '5';
  2772     0460  3035               	movlw	53
  2773     0461  0008               	return
  2774     0462                     l1539:
  2775     0462  3006               	movlw	6
  2776     0463  0670               	xorwf	inttochar@num,w
  2777     0464  1D03               	btfss	3,2
  2778     0465  2C68               	goto	l1547
  2779                           
  2780                           ;conversiones.c: 32:         return '6';
  2781     0466  3036               	movlw	54
  2782     0467  0008               	return
  2783     0468                     l1547:
  2784     0468  3007               	movlw	7
  2785     0469  0670               	xorwf	inttochar@num,w
  2786     046A  1D03               	btfss	3,2
  2787     046B  2C6E               	goto	l1555
  2788                           
  2789                           ;conversiones.c: 35:         return '7';
  2790     046C  3037               	movlw	55
  2791     046D  0008               	return
  2792     046E                     l1555:
  2793     046E  3008               	movlw	8
  2794     046F  0670               	xorwf	inttochar@num,w
  2795     0470  1D03               	btfss	3,2
  2796     0471  2C74               	goto	l1563
  2797                           
  2798                           ;conversiones.c: 38:         return '8';
  2799     0472  3038               	movlw	56
  2800     0473  0008               	return
  2801     0474                     l1563:
  2802     0474  3009               	movlw	9
  2803     0475  0670               	xorwf	inttochar@num,w
  2804     0476  1D03               	btfss	3,2
  2805     0477  0008               	return
  2806                           
  2807                           ;conversiones.c: 41:         return '9';
  2808     0478  3039               	movlw	57
  2809     0479  0008               	return
  2810     047A                     __end_of_inttochar:
  2811                           
  2812                           	psect	text13
  2813     03D8                     __ptext13:	
  2814 ;; *************** function _descomponer *****************
  2815 ;; Defined at:
  2816 ;;		line 45 in file "conversiones.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  pos             2    6[COMMON] int 
  2819 ;;  num             1    8[COMMON] unsigned char 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  dec             1   11[COMMON] unsigned char 
  2822 ;;  uni             1   10[COMMON] unsigned char 
  2823 ;;  cent            1    9[COMMON] unsigned char 
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      unsigned char 
  2826 ;; Registers used:
  2827 ;;		wreg, status,2, status,0, pclath, cstack
  2828 ;; Tracked objects:
  2829 ;;		On entry : 300/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2833 ;;      Params:         3       0       0       0       0
  2834 ;;      Locals:         3       0       0       0       0
  2835 ;;      Temps:          0       0       0       0       0
  2836 ;;      Totals:         6       0       0       0       0
  2837 ;;Total ram usage:        6 bytes
  2838 ;; Hardware stack levels used: 1
  2839 ;; Hardware stack levels required when called: 1
  2840 ;; This function calls:
  2841 ;;		___lbdiv
  2842 ;;		___lbmod
  2843 ;; This function is called by:
  2844 ;;		_Escribir_dato
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848     03D8                     _descomponer:	
  2849                           ;psect for function _descomponer
  2850                           
  2851                           
  2852                           ;conversiones.c: 46:     uint8_t cent;;conversiones.c: 47:     uint8_t dec;;conversiones
      +                          .c: 48:     uint8_t uni;;conversiones.c: 49:     cent = (num/100);
  2853                           
  2854                           ;incstack = 0
  2855                           ; Regs used in _descomponer: [wreg+status,2+status,0+pclath+cstack]
  2856     03D8  3064               	movlw	100
  2857     03D9  00F0               	movwf	___lbdiv@divisor
  2858     03DA  0878               	movf	descomponer@num,w
  2859     03DB  120A  118A  22AE  120A  118A  	fcall	___lbdiv
  2860     03E0  00F9               	movwf	descomponer@cent
  2861                           
  2862                           ;conversiones.c: 50:     dec = (num%100);
  2863     03E1  3064               	movlw	100
  2864     03E2  00F0               	movwf	___lbmod@divisor
  2865     03E3  0878               	movf	descomponer@num,w
  2866     03E4  120A  118A  228F  120A  118A  	fcall	___lbmod
  2867     03E9  00FB               	movwf	descomponer@dec
  2868                           
  2869                           ;conversiones.c: 51:     uni = (dec%10);
  2870     03EA  300A               	movlw	10
  2871     03EB  00F0               	movwf	___lbmod@divisor
  2872     03EC  087B               	movf	descomponer@dec,w
  2873     03ED  120A  118A  228F  120A  118A  	fcall	___lbmod
  2874     03F2  00FA               	movwf	descomponer@uni
  2875                           
  2876                           ;conversiones.c: 52:     if(pos == 2){
  2877     03F3  3002               	movlw	2
  2878     03F4  0676               	xorwf	descomponer@pos,w
  2879     03F5  0477               	iorwf	descomponer@pos+1,w
  2880     03F6  1D03               	btfss	3,2
  2881     03F7  2BFA               	goto	l1477
  2882                           
  2883                           ;conversiones.c: 53:         return cent;
  2884     03F8  0879               	movf	descomponer@cent,w
  2885     03F9  0008               	return
  2886     03FA                     l1477:
  2887     03FA  0376               	decf	descomponer@pos,w
  2888     03FB  0477               	iorwf	descomponer@pos+1,w
  2889     03FC  1D03               	btfss	3,2
  2890     03FD  2C05               	goto	l1485
  2891                           
  2892                           ;conversiones.c: 56:         return (dec/10);
  2893     03FE  300A               	movlw	10
  2894     03FF  00F0               	movwf	___lbdiv@divisor
  2895     0400  087B               	movf	descomponer@dec,w
  2896     0401  120A  118A  22AE   	fcall	___lbdiv
  2897     0404  0008               	return
  2898     0405                     l1485:
  2899     0405  0876               	movf	descomponer@pos,w
  2900     0406  0477               	iorwf	descomponer@pos+1,w
  2901     0407  1D03               	btfss	3,2
  2902     0408  0008               	return
  2903                           
  2904                           ;conversiones.c: 59:         return uni;
  2905     0409  087A               	movf	descomponer@uni,w
  2906     040A  0008               	return
  2907     040B                     __end_of_descomponer:
  2908                           
  2909                           	psect	text14
  2910     028F                     __ptext14:	
  2911 ;; *************** function ___lbmod *****************
  2912 ;; Defined at:
  2913 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  dividend        1    wreg     unsigned char 
  2916 ;;  divisor         1    0[COMMON] unsigned char 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  dividend        1    3[COMMON] unsigned char 
  2919 ;;  rem             1    5[COMMON] unsigned char 
  2920 ;;  counter         1    4[COMMON] unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      unsigned char 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2, status,0
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2930 ;;      Params:         1       0       0       0       0
  2931 ;;      Locals:         3       0       0       0       0
  2932 ;;      Temps:          2       0       0       0       0
  2933 ;;      Totals:         6       0       0       0       0
  2934 ;;Total ram usage:        6 bytes
  2935 ;; Hardware stack levels used: 1
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		_descomponer
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943     028F                     ___lbmod:	
  2944                           ;psect for function ___lbmod
  2945                           
  2946                           
  2947                           ;incstack = 0
  2948                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  2949                           ;___lbmod@dividend stored from wreg
  2950     028F  00F3               	movwf	___lbmod@dividend
  2951     0290  3008               	movlw	8
  2952     0291  00F4               	movwf	___lbmod@counter
  2953     0292  01F5               	clrf	___lbmod@rem
  2954     0293                     l1415:
  2955     0293  0873               	movf	___lbmod@dividend,w
  2956     0294  00F1               	movwf	??___lbmod
  2957     0295  3007               	movlw	7
  2958     0296                     u815:
  2959     0296  1003               	clrc
  2960     0297  0CF1               	rrf	??___lbmod,f
  2961     0298  3EFF               	addlw	-1
  2962     0299  1D03               	skipz
  2963     029A  2A96               	goto	u815
  2964     029B  0875               	movf	___lbmod@rem,w
  2965     029C  00F2               	movwf	??___lbmod+1
  2966     029D  0772               	addwf	??___lbmod+1,w
  2967     029E  0471               	iorwf	??___lbmod,w
  2968     029F  00F5               	movwf	___lbmod@rem
  2969     02A0  1003               	clrc
  2970     02A1  0DF3               	rlf	___lbmod@dividend,f
  2971     02A2  0870               	movf	___lbmod@divisor,w
  2972     02A3  0275               	subwf	___lbmod@rem,w
  2973     02A4  1C03               	skipc
  2974     02A5  2AA8               	goto	l579
  2975     02A6  0870               	movf	___lbmod@divisor,w
  2976     02A7  02F5               	subwf	___lbmod@rem,f
  2977     02A8                     l579:
  2978     02A8  3001               	movlw	1
  2979     02A9  02F4               	subwf	___lbmod@counter,f
  2980     02AA  1D03               	btfss	3,2
  2981     02AB  2A93               	goto	l1415
  2982     02AC  0875               	movf	___lbmod@rem,w
  2983     02AD  0008               	return
  2984     02AE                     __end_of___lbmod:
  2985                           
  2986                           	psect	text15
  2987     02AE                     __ptext15:	
  2988 ;; *************** function ___lbdiv *****************
  2989 ;; Defined at:
  2990 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  dividend        1    wreg     unsigned char 
  2993 ;;  divisor         1    0[COMMON] unsigned char 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  dividend        1    2[COMMON] unsigned char 
  2996 ;;  quotient        1    4[COMMON] unsigned char 
  2997 ;;  counter         1    3[COMMON] unsigned char 
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1    wreg      unsigned char 
  3000 ;; Registers used:
  3001 ;;		wreg, status,2, status,0
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3007 ;;      Params:         1       0       0       0       0
  3008 ;;      Locals:         3       0       0       0       0
  3009 ;;      Temps:          1       0       0       0       0
  3010 ;;      Totals:         5       0       0       0       0
  3011 ;;Total ram usage:        5 bytes
  3012 ;; Hardware stack levels used: 1
  3013 ;; This function calls:
  3014 ;;		Nothing
  3015 ;; This function is called by:
  3016 ;;		_descomponer
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020     02AE                     ___lbdiv:	
  3021                           ;psect for function ___lbdiv
  3022                           
  3023                           
  3024                           ;incstack = 0
  3025                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  3026                           ;___lbdiv@dividend stored from wreg
  3027     02AE  00F2               	movwf	___lbdiv@dividend
  3028     02AF  01F4               	clrf	___lbdiv@quotient
  3029     02B0  0870               	movf	___lbdiv@divisor,w
  3030     02B1  1903               	btfsc	3,2
  3031     02B2  2ACD               	goto	l1407
  3032     02B3  01F3               	clrf	___lbdiv@counter
  3033     02B4  0AF3               	incf	___lbdiv@counter,f
  3034     02B5                     l1395:
  3035     02B5  1BF0               	btfsc	___lbdiv@divisor,7
  3036     02B6  2ABE               	goto	l1397
  3037     02B7  1003               	clrc
  3038     02B8  0DF0               	rlf	___lbdiv@divisor,f
  3039     02B9  3001               	movlw	1
  3040     02BA  00F1               	movwf	??___lbdiv
  3041     02BB  0871               	movf	??___lbdiv,w
  3042     02BC  07F3               	addwf	___lbdiv@counter,f
  3043     02BD  2AB5               	goto	l1395
  3044     02BE                     l1397:
  3045     02BE  1003               	clrc
  3046     02BF  0DF4               	rlf	___lbdiv@quotient,f
  3047     02C0  0870               	movf	___lbdiv@divisor,w
  3048     02C1  0272               	subwf	___lbdiv@dividend,w
  3049     02C2  1C03               	skipc
  3050     02C3  2AC8               	goto	L2
  3051     02C4  0870               	movf	___lbdiv@divisor,w
  3052     02C5  02F2               	subwf	___lbdiv@dividend,f
  3053     02C6  1474               	bsf	___lbdiv@quotient,0
  3054     02C7  1003               	clrc
  3055     02C8                     L2:
  3056     02C8  0CF0               	rrf	___lbdiv@divisor,f
  3057     02C9  3001               	movlw	1
  3058     02CA  02F3               	subwf	___lbdiv@counter,f
  3059     02CB  1D03               	btfss	3,2
  3060     02CC  2ABE               	goto	l1397
  3061     02CD                     l1407:
  3062     02CD  0874               	movf	___lbdiv@quotient,w
  3063     02CE  0008               	return
  3064     02CF                     __end_of___lbdiv:
  3065                           
  3066                           	psect	text16
  3067     047A                     __ptext16:	
  3068 ;; *************** function _Lcd_Set_Cursor *****************
  3069 ;; Defined at:
  3070 ;;		line 48 in file "LCD.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  a               1    wreg     unsigned char 
  3073 ;;  b               1    4[COMMON] unsigned char 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  a               1    6[COMMON] unsigned char 
  3076 ;;  temp            1    9[COMMON] unsigned char 
  3077 ;;  y               1    8[COMMON] unsigned char 
  3078 ;;  z               1    7[COMMON] unsigned char 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg, status,2, status,0, pclath, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3088 ;;      Params:         1       0       0       0       0
  3089 ;;      Locals:         4       0       0       0       0
  3090 ;;      Temps:          1       0       0       0       0
  3091 ;;      Totals:         6       0       0       0       0
  3092 ;;Total ram usage:        6 bytes
  3093 ;; Hardware stack levels used: 1
  3094 ;; Hardware stack levels required when called: 2
  3095 ;; This function calls:
  3096 ;;		_Lcd_Cmd
  3097 ;; This function is called by:
  3098 ;;		_main
  3099 ;;		_Escribir_dato
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103     047A                     _Lcd_Set_Cursor:	
  3104                           ;psect for function _Lcd_Set_Cursor
  3105                           
  3106                           
  3107                           ;incstack = 0
  3108                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3109                           ;Lcd_Set_Cursor@a stored from wreg
  3110     047A  00F6               	movwf	Lcd_Set_Cursor@a
  3111                           
  3112                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  3113     047B  0376               	decf	Lcd_Set_Cursor@a,w
  3114     047C  1D03               	btfss	3,2
  3115     047D  2C99               	goto	l1437
  3116                           
  3117                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  3118     047E  0874               	movf	Lcd_Set_Cursor@b,w
  3119     047F  3E7F               	addlw	127
  3120     0480  00F9               	movwf	Lcd_Set_Cursor@temp
  3121                           
  3122                           ;LCD.c: 52:         z = temp >> 4;
  3123     0481  0879               	movf	Lcd_Set_Cursor@temp,w
  3124     0482  00F5               	movwf	??_Lcd_Set_Cursor
  3125     0483  3004               	movlw	4
  3126     0484                     u855:
  3127     0484  1003               	clrc
  3128     0485  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3129     0486  3EFF               	addlw	-1
  3130     0487  1D03               	skipz
  3131     0488  2C84               	goto	u855
  3132     0489  0875               	movf	??_Lcd_Set_Cursor,w
  3133     048A  00F7               	movwf	Lcd_Set_Cursor@z
  3134                           
  3135                           ;LCD.c: 53:         y = temp & 0x0F;
  3136     048B  0879               	movf	Lcd_Set_Cursor@temp,w
  3137     048C  390F               	andlw	15
  3138     048D  00F8               	movwf	Lcd_Set_Cursor@y
  3139                           
  3140                           ;LCD.c: 54:         Lcd_Cmd(z);
  3141     048E  0877               	movf	Lcd_Set_Cursor@z,w
  3142     048F  120A  118A  225E  120A  118A  	fcall	_Lcd_Cmd
  3143                           
  3144                           ;LCD.c: 55:         Lcd_Cmd(y);
  3145     0494  0878               	movf	Lcd_Set_Cursor@y,w
  3146     0495  120A  118A  225E   	fcall	_Lcd_Cmd
  3147                           
  3148                           ;LCD.c: 56:     } else if (a == 2) {
  3149     0498  0008               	return
  3150     0499                     l1437:
  3151     0499  3002               	movlw	2
  3152     049A  0676               	xorwf	Lcd_Set_Cursor@a,w
  3153     049B  1D03               	btfss	3,2
  3154     049C  0008               	return
  3155                           
  3156                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  3157     049D  0874               	movf	Lcd_Set_Cursor@b,w
  3158     049E  3EBF               	addlw	191
  3159     049F  00F9               	movwf	Lcd_Set_Cursor@temp
  3160                           
  3161                           ;LCD.c: 58:         z = temp >> 4;
  3162     04A0  0879               	movf	Lcd_Set_Cursor@temp,w
  3163     04A1  00F5               	movwf	??_Lcd_Set_Cursor
  3164     04A2  3004               	movlw	4
  3165     04A3                     u875:
  3166     04A3  1003               	clrc
  3167     04A4  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3168     04A5  3EFF               	addlw	-1
  3169     04A6  1D03               	skipz
  3170     04A7  2CA3               	goto	u875
  3171     04A8  0875               	movf	??_Lcd_Set_Cursor,w
  3172     04A9  00F7               	movwf	Lcd_Set_Cursor@z
  3173                           
  3174                           ;LCD.c: 59:         y = temp & 0x0F;
  3175     04AA  0879               	movf	Lcd_Set_Cursor@temp,w
  3176     04AB  390F               	andlw	15
  3177     04AC  00F8               	movwf	Lcd_Set_Cursor@y
  3178                           
  3179                           ;LCD.c: 60:         Lcd_Cmd(z);
  3180     04AD  0877               	movf	Lcd_Set_Cursor@z,w
  3181     04AE  120A  118A  225E  120A  118A  	fcall	_Lcd_Cmd
  3182                           
  3183                           ;LCD.c: 61:         Lcd_Cmd(y);
  3184     04B3  0878               	movf	Lcd_Set_Cursor@y,w
  3185     04B4  120A  118A  225E   	fcall	_Lcd_Cmd
  3186     04B7  0008               	return
  3187     04B8                     __end_of_Lcd_Set_Cursor:
  3188                           
  3189                           	psect	text17
  3190     03A5                     __ptext17:	
  3191 ;; *************** function _enviar_x *****************
  3192 ;; Defined at:
  3193 ;;		line 38 in file "DS3231.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  val1            1    wreg     unsigned char 
  3196 ;;  val2            1    2[COMMON] unsigned char 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;  val1            1    5[COMMON] unsigned char 
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      void 
  3201 ;; Registers used:
  3202 ;;		wreg, status,2, status,0, pclath, cstack
  3203 ;; Tracked objects:
  3204 ;;		On entry : 300/0
  3205 ;;		On exit  : 300/100
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3208 ;;      Params:         1       0       0       0       0
  3209 ;;      Locals:         1       0       0       0       0
  3210 ;;      Temps:          2       0       0       0       0
  3211 ;;      Totals:         4       0       0       0       0
  3212 ;;Total ram usage:        4 bytes
  3213 ;; Hardware stack levels used: 1
  3214 ;; Hardware stack levels required when called: 2
  3215 ;; This function calls:
  3216 ;;		_I2C_Master_Start
  3217 ;;		_I2C_Master_Stop
  3218 ;;		_I2C_Master_Write
  3219 ;; This function is called by:
  3220 ;;		_main
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224     03A5                     _enviar_x:	
  3225                           ;psect for function _enviar_x
  3226                           
  3227                           
  3228                           ;incstack = 0
  3229                           ; Regs used in _enviar_x: [wreg+status,2+status,0+pclath+cstack]
  3230                           ;enviar_x@val1 stored from wreg
  3231     03A5  00F5               	movwf	enviar_x@val1
  3232                           
  3233                           ;DS3231.c: 39:     I2C_Master_Start();
  3234     03A6  120A  118A  2204  120A  118A  	fcall	_I2C_Master_Start
  3235                           
  3236                           ;DS3231.c: 40:     I2C_Master_Write(0xD0);
  3237     03AB  30D0               	movlw	208
  3238     03AC  00F0               	movwf	I2C_Master_Write@d
  3239     03AD  3000               	movlw	0
  3240     03AE  00F1               	movwf	I2C_Master_Write@d+1
  3241     03AF  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
  3242                           
  3243                           ;DS3231.c: 41:     I2C_Master_Write(0);
  3244     03B4  3000               	movlw	0
  3245     03B5  00F0               	movwf	I2C_Master_Write@d
  3246     03B6  00F1               	movwf	I2C_Master_Write@d+1
  3247     03B7  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
  3248                           
  3249                           ;DS3231.c: 42:     I2C_Master_Write(val1);
  3250     03BC  0875               	movf	enviar_x@val1,w
  3251     03BD  00F3               	movwf	??_enviar_x
  3252     03BE  01F4               	clrf	??_enviar_x+1
  3253     03BF  0873               	movf	??_enviar_x,w
  3254     03C0  00F0               	movwf	I2C_Master_Write@d
  3255     03C1  0874               	movf	??_enviar_x+1,w
  3256     03C2  00F1               	movwf	I2C_Master_Write@d+1
  3257     03C3  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
  3258                           
  3259                           ;DS3231.c: 43:     I2C_Master_Write(val2);
  3260     03C8  0872               	movf	enviar_x@val2,w
  3261     03C9  00F3               	movwf	??_enviar_x
  3262     03CA  01F4               	clrf	??_enviar_x+1
  3263     03CB  0873               	movf	??_enviar_x,w
  3264     03CC  00F0               	movwf	I2C_Master_Write@d
  3265     03CD  0874               	movf	??_enviar_x+1,w
  3266     03CE  00F1               	movwf	I2C_Master_Write@d+1
  3267     03CF  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
  3268                           
  3269                           ;DS3231.c: 44:     I2C_Master_Stop();
  3270     03D4  120A  118A  2209   	fcall	_I2C_Master_Stop
  3271     03D7  0008               	return
  3272     03D8                     __end_of_enviar_x:
  3273                           
  3274                           	psect	text18
  3275     0213                     __ptext18:	
  3276 ;; *************** function _I2C_Master_Write *****************
  3277 ;; Defined at:
  3278 ;;		line 65 in file "I2C.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  d               2    0[COMMON] unsigned int 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;		None
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  1    wreg      void 
  3285 ;; Registers used:
  3286 ;;		wreg, status,2, status,0, pclath, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 200/100
  3289 ;;		On exit  : 300/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3292 ;;      Params:         2       0       0       0       0
  3293 ;;      Locals:         0       0       0       0       0
  3294 ;;      Temps:          0       0       0       0       0
  3295 ;;      Totals:         2       0       0       0       0
  3296 ;;Total ram usage:        2 bytes
  3297 ;; Hardware stack levels used: 1
  3298 ;; Hardware stack levels required when called: 1
  3299 ;; This function calls:
  3300 ;;		_I2C_Master_Wait
  3301 ;; This function is called by:
  3302 ;;		_main
  3303 ;;		_leer_temperatura
  3304 ;;		_leer_x
  3305 ;;		_enviar_x
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309     0213                     _I2C_Master_Write:	
  3310                           ;psect for function _I2C_Master_Write
  3311                           
  3312                           
  3313                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3314                           
  3315                           ;incstack = 0
  3316                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3317     0213  120A  118A  221A   	fcall	_I2C_Master_Wait
  3318                           
  3319                           ;I2C.c: 68:     SSPBUF = d;
  3320     0216  0870               	movf	I2C_Master_Write@d,w
  3321     0217  1283               	bcf	3,5	;RP0=0, select bank0
  3322     0218  0093               	movwf	19	;volatile
  3323     0219  0008               	return
  3324     021A                     __end_of_I2C_Master_Write:
  3325                           
  3326                           	psect	text19
  3327     0209                     __ptext19:	
  3328 ;; *************** function _I2C_Master_Stop *****************
  3329 ;; Defined at:
  3330 ;;		line 55 in file "I2C.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;		None
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;		None
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg, status,2, status,0, pclath, cstack
  3339 ;; Tracked objects:
  3340 ;;		On entry : 200/0
  3341 ;;		On exit  : 300/100
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3344 ;;      Params:         0       0       0       0       0
  3345 ;;      Locals:         0       0       0       0       0
  3346 ;;      Temps:          0       0       0       0       0
  3347 ;;      Totals:         0       0       0       0       0
  3348 ;;Total ram usage:        0 bytes
  3349 ;; Hardware stack levels used: 1
  3350 ;; Hardware stack levels required when called: 1
  3351 ;; This function calls:
  3352 ;;		_I2C_Master_Wait
  3353 ;; This function is called by:
  3354 ;;		_main
  3355 ;;		_leer_temperatura
  3356 ;;		_leer_x
  3357 ;;		_enviar_x
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361     0209                     _I2C_Master_Stop:	
  3362                           ;psect for function _I2C_Master_Stop
  3363                           
  3364                           
  3365                           ;I2C.c: 57:     I2C_Master_Wait();
  3366                           
  3367                           ;incstack = 0
  3368                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3369     0209  120A  118A  221A   	fcall	_I2C_Master_Wait
  3370                           
  3371                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3372     020C  1511               	bsf	17,2	;volatile
  3373     020D  0008               	return
  3374     020E                     __end_of_I2C_Master_Stop:
  3375                           
  3376                           	psect	text20
  3377     0204                     __ptext20:	
  3378 ;; *************** function _I2C_Master_Start *****************
  3379 ;; Defined at:
  3380 ;;		line 39 in file "I2C.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1    wreg      void 
  3387 ;; Registers used:
  3388 ;;		wreg, status,2, status,0, pclath, cstack
  3389 ;; Tracked objects:
  3390 ;;		On entry : 200/0
  3391 ;;		On exit  : 300/100
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3394 ;;      Params:         0       0       0       0       0
  3395 ;;      Locals:         0       0       0       0       0
  3396 ;;      Temps:          0       0       0       0       0
  3397 ;;      Totals:         0       0       0       0       0
  3398 ;;Total ram usage:        0 bytes
  3399 ;; Hardware stack levels used: 1
  3400 ;; Hardware stack levels required when called: 1
  3401 ;; This function calls:
  3402 ;;		_I2C_Master_Wait
  3403 ;; This function is called by:
  3404 ;;		_main
  3405 ;;		_leer_temperatura
  3406 ;;		_leer_x
  3407 ;;		_enviar_x
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411     0204                     _I2C_Master_Start:	
  3412                           ;psect for function _I2C_Master_Start
  3413                           
  3414                           
  3415                           ;I2C.c: 41:     I2C_Master_Wait();
  3416                           
  3417                           ;incstack = 0
  3418                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3419     0204  120A  118A  221A   	fcall	_I2C_Master_Wait
  3420                           
  3421                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3422     0207  1411               	bsf	17,0	;volatile
  3423     0208  0008               	return
  3424     0209                     __end_of_I2C_Master_Start:
  3425                           
  3426                           	psect	text21
  3427     021A                     __ptext21:	
  3428 ;; *************** function _I2C_Master_Wait *****************
  3429 ;; Defined at:
  3430 ;;		line 32 in file "I2C.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2
  3439 ;; Tracked objects:
  3440 ;;		On entry : 200/0
  3441 ;;		On exit  : 300/100
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3444 ;;      Params:         0       0       0       0       0
  3445 ;;      Locals:         0       0       0       0       0
  3446 ;;      Temps:          0       0       0       0       0
  3447 ;;      Totals:         0       0       0       0       0
  3448 ;;Total ram usage:        0 bytes
  3449 ;; Hardware stack levels used: 1
  3450 ;; This function calls:
  3451 ;;		Nothing
  3452 ;; This function is called by:
  3453 ;;		_I2C_Master_Start
  3454 ;;		_I2C_Master_RepeatedStart
  3455 ;;		_I2C_Master_Stop
  3456 ;;		_I2C_Master_Write
  3457 ;;		_I2C_Master_Read
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461     021A                     _I2C_Master_Wait:	
  3462                           ;psect for function _I2C_Master_Wait
  3463                           
  3464     021A                     l171:	
  3465                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3466                           
  3467                           ;incstack = 0
  3468                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3469                           
  3470     021A  1683               	bsf	3,5	;RP0=1, select bank1
  3471     021B  1914               	btfsc	20,2	;volatile
  3472     021C  2A1A               	goto	l171
  3473     021D  0811               	movf	17,w	;volatile
  3474     021E  391F               	andlw	31
  3475     021F  1903               	btfsc	3,2
  3476     0220  0008               	return
  3477     0221  2A1A               	goto	l171
  3478     0222                     __end_of_I2C_Master_Wait:
  3479                           
  3480                           	psect	text22
  3481     02CF                     __ptext22:	
  3482 ;; *************** function _Lcd_Write_String *****************
  3483 ;; Defined at:
  3484 ;;		line 98 in file "LCD.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;  a               1    wreg     PTR unsigned char 
  3487 ;;		 -> STR_2(8), STR_1(6), 
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;  a               1    7[COMMON] PTR unsigned char 
  3490 ;;		 -> STR_2(8), STR_1(6), 
  3491 ;;  i               2    5[COMMON] int 
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  1    wreg      void 
  3494 ;; Registers used:
  3495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3501 ;;      Params:         0       0       0       0       0
  3502 ;;      Locals:         3       0       0       0       0
  3503 ;;      Temps:          0       0       0       0       0
  3504 ;;      Totals:         3       0       0       0       0
  3505 ;;Total ram usage:        3 bytes
  3506 ;; Hardware stack levels used: 1
  3507 ;; Hardware stack levels required when called: 2
  3508 ;; This function calls:
  3509 ;;		_Lcd_Write_Char
  3510 ;; This function is called by:
  3511 ;;		_main
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515     02CF                     _Lcd_Write_String:	
  3516                           ;psect for function _Lcd_Write_String
  3517                           
  3518                           
  3519                           ;incstack = 0
  3520                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3521                           ;Lcd_Write_String@a stored from wreg
  3522     02CF  00F7               	movwf	Lcd_Write_String@a
  3523                           
  3524                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  3525     02D0  01F5               	clrf	Lcd_Write_String@i
  3526     02D1  01F6               	clrf	Lcd_Write_String@i+1
  3527     02D2                     l1719:
  3528     02D2  0875               	movf	Lcd_Write_String@i,w
  3529     02D3  0777               	addwf	Lcd_Write_String@a,w
  3530     02D4  0084               	movwf	4
  3531     02D5  120A  118A  2003  120A  118A  	fcall	stringdir
  3532     02DA  3A00               	xorlw	0
  3533     02DB  1903               	btfsc	3,2
  3534     02DC  0008               	return
  3535                           
  3536                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  3537     02DD  0875               	movf	Lcd_Write_String@i,w
  3538     02DE  0777               	addwf	Lcd_Write_String@a,w
  3539     02DF  0084               	movwf	4
  3540     02E0  120A  118A  2003  120A  118A  	fcall	stringdir
  3541     02E5  120A  118A  2343  120A  118A  	fcall	_Lcd_Write_Char
  3542     02EA  3001               	movlw	1
  3543     02EB  07F5               	addwf	Lcd_Write_String@i,f
  3544     02EC  1803               	skipnc
  3545     02ED  0AF6               	incf	Lcd_Write_String@i+1,f
  3546     02EE  3000               	movlw	0
  3547     02EF  07F6               	addwf	Lcd_Write_String@i+1,f
  3548     02F0  2AD2               	goto	l1719
  3549     02F1                     __end_of_Lcd_Write_String:
  3550                           
  3551                           	psect	text23
  3552     0343                     __ptext23:	
  3553 ;; *************** function _Lcd_Write_Char *****************
  3554 ;; Defined at:
  3555 ;;		line 83 in file "LCD.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;  a               1    wreg     unsigned char 
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;  a               1    4[COMMON] unsigned char 
  3560 ;;  y               1    3[COMMON] unsigned char 
  3561 ;;  temp            1    2[COMMON] unsigned char 
  3562 ;; Return value:  Size  Location     Type
  3563 ;;                  1    wreg      void 
  3564 ;; Registers used:
  3565 ;;		wreg, status,2, status,0, pclath, cstack
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 300/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3571 ;;      Params:         0       0       0       0       0
  3572 ;;      Locals:         3       0       0       0       0
  3573 ;;      Temps:          1       0       0       0       0
  3574 ;;      Totals:         4       0       0       0       0
  3575 ;;Total ram usage:        4 bytes
  3576 ;; Hardware stack levels used: 1
  3577 ;; Hardware stack levels required when called: 1
  3578 ;; This function calls:
  3579 ;;		_Lcd_Port
  3580 ;; This function is called by:
  3581 ;;		_main
  3582 ;;		_Escribir_dato
  3583 ;;		_Lcd_Write_String
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587     0343                     _Lcd_Write_Char:	
  3588                           ;psect for function _Lcd_Write_Char
  3589                           
  3590                           
  3591                           ;incstack = 0
  3592                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3593                           ;Lcd_Write_Char@a stored from wreg
  3594     0343  00F4               	movwf	Lcd_Write_Char@a
  3595                           
  3596                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  3597     0344  0874               	movf	Lcd_Write_Char@a,w
  3598     0345  390F               	andlw	15
  3599     0346  00F2               	movwf	Lcd_Write_Char@temp
  3600                           
  3601                           ;LCD.c: 86:     y = a & 0xF0;
  3602     0347  0874               	movf	Lcd_Write_Char@a,w
  3603     0348  39F0               	andlw	240
  3604     0349  00F3               	movwf	Lcd_Write_Char@y
  3605                           
  3606                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  3607     034A  1283               	bcf	3,5	;RP0=0, select bank0
  3608     034B  1303               	bcf	3,6	;RP1=0, select bank0
  3609     034C  1508               	bsf	8,2	;volatile
  3610                           
  3611                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  3612     034D  0873               	movf	Lcd_Write_Char@y,w
  3613     034E  00F1               	movwf	??_Lcd_Write_Char
  3614     034F  3004               	movlw	4
  3615     0350                     u885:
  3616     0350  1003               	clrc
  3617     0351  0CF1               	rrf	??_Lcd_Write_Char,f
  3618     0352  3EFF               	addlw	-1
  3619     0353  1D03               	skipz
  3620     0354  2B50               	goto	u885
  3621     0355  0871               	movf	??_Lcd_Write_Char,w
  3622     0356  120A  118A  2246  120A  118A  	fcall	_Lcd_Port
  3623                           
  3624                           ;LCD.c: 89:     RD3 = 1;
  3625     035B  1588               	bsf	8,3	;volatile
  3626                           
  3627                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3628     035C  301A               	movlw	26
  3629     035D  00F1               	movwf	??_Lcd_Write_Char
  3630     035E                     u1497:
  3631     035E  0BF1               	decfsz	??_Lcd_Write_Char,f
  3632     035F  2B5E               	goto	u1497
  3633     0360  0000               	nop
  3634                           
  3635                           ;LCD.c: 91:     RD3 = 0;
  3636     0361  1283               	bcf	3,5	;RP0=0, select bank0
  3637     0362  1303               	bcf	3,6	;RP1=0, select bank0
  3638     0363  1188               	bcf	8,3	;volatile
  3639                           
  3640                           ;LCD.c: 92:     Lcd_Port(temp);
  3641     0364  0872               	movf	Lcd_Write_Char@temp,w
  3642     0365  120A  118A  2246  120A  118A  	fcall	_Lcd_Port
  3643                           
  3644                           ;LCD.c: 93:     RD3 = 1;
  3645     036A  1588               	bsf	8,3	;volatile
  3646                           
  3647                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3648     036B  301A               	movlw	26
  3649     036C  00F1               	movwf	??_Lcd_Write_Char
  3650     036D                     u1507:
  3651     036D  0BF1               	decfsz	??_Lcd_Write_Char,f
  3652     036E  2B6D               	goto	u1507
  3653     036F  0000               	nop
  3654                           
  3655                           ;LCD.c: 95:     RD3 = 0;
  3656     0370  1283               	bcf	3,5	;RP0=0, select bank0
  3657     0371  1303               	bcf	3,6	;RP1=0, select bank0
  3658     0372  1188               	bcf	8,3	;volatile
  3659     0373  0008               	return
  3660     0374                     __end_of_Lcd_Write_Char:
  3661                           
  3662                           	psect	text24
  3663     0583                     __ptext24:	
  3664 ;; *************** function _Lcd_Init *****************
  3665 ;; Defined at:
  3666 ;;		line 65 in file "LCD.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;		None
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;		None
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  1    wreg      void 
  3673 ;; Registers used:
  3674 ;;		wreg, status,2, status,0, pclath, cstack
  3675 ;; Tracked objects:
  3676 ;;		On entry : 300/100
  3677 ;;		On exit  : 300/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3680 ;;      Params:         0       0       0       0       0
  3681 ;;      Locals:         0       0       0       0       0
  3682 ;;      Temps:          2       0       0       0       0
  3683 ;;      Totals:         2       0       0       0       0
  3684 ;;Total ram usage:        2 bytes
  3685 ;; Hardware stack levels used: 1
  3686 ;; Hardware stack levels required when called: 2
  3687 ;; This function calls:
  3688 ;;		_Lcd_Cmd
  3689 ;;		_Lcd_Port
  3690 ;; This function is called by:
  3691 ;;		_main
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695     0583                     _Lcd_Init:	
  3696                           ;psect for function _Lcd_Init
  3697                           
  3698                           
  3699                           ;LCD.c: 66:     Lcd_Port(0x00);
  3700                           
  3701                           ;incstack = 0
  3702                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3703     0583  3000               	movlw	0
  3704     0584  120A  118A  2246  120A  118A  	fcall	_Lcd_Port
  3705                           
  3706                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3707     0589  3034               	movlw	52
  3708     058A  00F5               	movwf	??_Lcd_Init+1
  3709     058B  30F1               	movlw	241
  3710     058C  00F4               	movwf	??_Lcd_Init
  3711     058D                     u1517:
  3712     058D  0BF4               	decfsz	??_Lcd_Init,f
  3713     058E  2D8D               	goto	u1517
  3714     058F  0BF5               	decfsz	??_Lcd_Init+1,f
  3715     0590  2D8D               	goto	u1517
  3716     0591  2D92               	nop2
  3717                           
  3718                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  3719     0592  3003               	movlw	3
  3720     0593  120A  118A  225E  120A  118A  	fcall	_Lcd_Cmd
  3721                           
  3722                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3723     0598  300D               	movlw	13
  3724     0599  00F5               	movwf	??_Lcd_Init+1
  3725     059A  30FB               	movlw	251
  3726     059B  00F4               	movwf	??_Lcd_Init
  3727     059C                     u1527:
  3728     059C  0BF4               	decfsz	??_Lcd_Init,f
  3729     059D  2D9C               	goto	u1527
  3730     059E  0BF5               	decfsz	??_Lcd_Init+1,f
  3731     059F  2D9C               	goto	u1527
  3732     05A0  2DA1               	nop2
  3733                           
  3734                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  3735     05A1  3003               	movlw	3
  3736     05A2  120A  118A  225E  120A  118A  	fcall	_Lcd_Cmd
  3737                           
  3738                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3739     05A7  301D               	movlw	29
  3740     05A8  00F5               	movwf	??_Lcd_Init+1
  3741     05A9  3091               	movlw	145
  3742     05AA  00F4               	movwf	??_Lcd_Init
  3743     05AB                     u1537:
  3744     05AB  0BF4               	decfsz	??_Lcd_Init,f
  3745     05AC  2DAB               	goto	u1537
  3746     05AD  0BF5               	decfsz	??_Lcd_Init+1,f
  3747     05AE  2DAB               	goto	u1537
  3748                           
  3749                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  3750     05AF  3003               	movlw	3
  3751     05B0  120A  118A  225E  120A  118A  	fcall	_Lcd_Cmd
  3752                           
  3753                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  3754     05B5  3002               	movlw	2
  3755     05B6  120A  118A  225E  120A  118A  	fcall	_Lcd_Cmd
  3756                           
  3757                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  3758     05BB  3002               	movlw	2
  3759     05BC  120A  118A  225E  120A  118A  	fcall	_Lcd_Cmd
  3760                           
  3761                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  3762     05C1  3008               	movlw	8
  3763     05C2  120A  118A  225E  120A  118A  	fcall	_Lcd_Cmd
  3764                           
  3765                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  3766     05C7  3000               	movlw	0
  3767     05C8  120A  118A  225E  120A  118A  	fcall	_Lcd_Cmd
  3768                           
  3769                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  3770     05CD  300C               	movlw	12
  3771     05CE  120A  118A  225E  120A  118A  	fcall	_Lcd_Cmd
  3772                           
  3773                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  3774     05D3  3000               	movlw	0
  3775     05D4  120A  118A  225E  120A  118A  	fcall	_Lcd_Cmd
  3776                           
  3777                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  3778     05D9  3006               	movlw	6
  3779     05DA  120A  118A  225E   	fcall	_Lcd_Cmd
  3780     05DD  0008               	return
  3781     05DE                     __end_of_Lcd_Init:
  3782                           
  3783                           	psect	text25
  3784     022A                     __ptext25:	
  3785 ;; *************** function _Lcd_Clear *****************
  3786 ;; Defined at:
  3787 ;;		line 43 in file "LCD.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;		None
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;		None
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      void 
  3794 ;; Registers used:
  3795 ;;		wreg, status,2, status,0, pclath, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 300/0
  3798 ;;		On exit  : 300/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3801 ;;      Params:         0       0       0       0       0
  3802 ;;      Locals:         0       0       0       0       0
  3803 ;;      Temps:          0       0       0       0       0
  3804 ;;      Totals:         0       0       0       0       0
  3805 ;;Total ram usage:        0 bytes
  3806 ;; Hardware stack levels used: 1
  3807 ;; Hardware stack levels required when called: 2
  3808 ;; This function calls:
  3809 ;;		_Lcd_Cmd
  3810 ;; This function is called by:
  3811 ;;		_main
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815     022A                     _Lcd_Clear:	
  3816                           ;psect for function _Lcd_Clear
  3817                           
  3818                           
  3819                           ;LCD.c: 44:     Lcd_Cmd(0);
  3820                           
  3821                           ;incstack = 0
  3822                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3823     022A  3000               	movlw	0
  3824     022B  120A  118A  225E  120A  118A  	fcall	_Lcd_Cmd
  3825                           
  3826                           ;LCD.c: 45:     Lcd_Cmd(1);
  3827     0230  3001               	movlw	1
  3828     0231  120A  118A  225E   	fcall	_Lcd_Cmd
  3829     0234  0008               	return
  3830     0235                     __end_of_Lcd_Clear:
  3831                           
  3832                           	psect	text26
  3833     025E                     __ptext26:	
  3834 ;; *************** function _Lcd_Cmd *****************
  3835 ;; Defined at:
  3836 ;;		line 35 in file "LCD.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  a               1    wreg     unsigned char 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  a               1    3[COMMON] unsigned char 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, status,2, status,0, pclath, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 300/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3850 ;;      Params:         0       0       0       0       0
  3851 ;;      Locals:         1       0       0       0       0
  3852 ;;      Temps:          2       0       0       0       0
  3853 ;;      Totals:         3       0       0       0       0
  3854 ;;Total ram usage:        3 bytes
  3855 ;; Hardware stack levels used: 1
  3856 ;; Hardware stack levels required when called: 1
  3857 ;; This function calls:
  3858 ;;		_Lcd_Port
  3859 ;; This function is called by:
  3860 ;;		_Lcd_Clear
  3861 ;;		_Lcd_Set_Cursor
  3862 ;;		_Lcd_Init
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866     025E                     _Lcd_Cmd:	
  3867                           ;psect for function _Lcd_Cmd
  3868                           
  3869                           
  3870                           ;incstack = 0
  3871                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3872                           ;Lcd_Cmd@a stored from wreg
  3873     025E  00F3               	movwf	Lcd_Cmd@a
  3874                           
  3875                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  3876     025F  1283               	bcf	3,5	;RP0=0, select bank0
  3877     0260  1303               	bcf	3,6	;RP1=0, select bank0
  3878     0261  1108               	bcf	8,2	;volatile
  3879                           
  3880                           ;LCD.c: 37:     Lcd_Port(a);
  3881     0262  0873               	movf	Lcd_Cmd@a,w
  3882     0263  120A  118A  2246  120A  118A  	fcall	_Lcd_Port
  3883                           
  3884                           ;LCD.c: 38:     RD3 = 1;
  3885     0268  1588               	bsf	8,3	;volatile
  3886                           
  3887                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3888     0269  300B               	movlw	11
  3889     026A  00F2               	movwf	??_Lcd_Cmd+1
  3890     026B  3062               	movlw	98
  3891     026C  00F1               	movwf	??_Lcd_Cmd
  3892     026D                     u1547:
  3893     026D  0BF1               	decfsz	??_Lcd_Cmd,f
  3894     026E  2A6D               	goto	u1547
  3895     026F  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3896     0270  2A6D               	goto	u1547
  3897     0271  0000               	nop
  3898                           
  3899                           ;LCD.c: 40:     RD3 = 0;
  3900     0272  1283               	bcf	3,5	;RP0=0, select bank0
  3901     0273  1303               	bcf	3,6	;RP1=0, select bank0
  3902     0274  1188               	bcf	8,3	;volatile
  3903     0275  0008               	return
  3904     0276                     __end_of_Lcd_Cmd:
  3905                           
  3906                           	psect	text27
  3907     0246                     __ptext27:	
  3908 ;; *************** function _Lcd_Port *****************
  3909 ;; Defined at:
  3910 ;;		line 13 in file "LCD.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  a               1    wreg     unsigned char 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  a               1    0[COMMON] unsigned char 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      void 
  3917 ;; Registers used:
  3918 ;;		wreg
  3919 ;; Tracked objects:
  3920 ;;		On entry : 200/0
  3921 ;;		On exit  : 300/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3924 ;;      Params:         0       0       0       0       0
  3925 ;;      Locals:         1       0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0
  3927 ;;      Totals:         1       0       0       0       0
  3928 ;;Total ram usage:        1 bytes
  3929 ;; Hardware stack levels used: 1
  3930 ;; This function calls:
  3931 ;;		Nothing
  3932 ;; This function is called by:
  3933 ;;		_Lcd_Cmd
  3934 ;;		_Lcd_Init
  3935 ;;		_Lcd_Write_Char
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939     0246                     _Lcd_Port:	
  3940                           ;psect for function _Lcd_Port
  3941                           
  3942                           
  3943                           ;incstack = 0
  3944                           ; Regs used in _Lcd_Port: [wreg]
  3945                           ;Lcd_Port@a stored from wreg
  3946     0246  00F0               	movwf	Lcd_Port@a
  3947                           
  3948                           ;LCD.c: 14:     if (a & 1)
  3949     0247  1C70               	btfss	Lcd_Port@a,0
  3950     0248  2A4C               	goto	l208
  3951                           
  3952                           ;LCD.c: 15:         RD4 = 1;
  3953     0249  1283               	bcf	3,5	;RP0=0, select bank0
  3954     024A  1608               	bsf	8,4	;volatile
  3955     024B  2A4E               	goto	l209
  3956     024C                     l208:	
  3957                           ;LCD.c: 16:     else
  3958                           
  3959                           
  3960                           ;LCD.c: 17:         RD4 = 0;
  3961     024C  1283               	bcf	3,5	;RP0=0, select bank0
  3962     024D  1208               	bcf	8,4	;volatile
  3963     024E                     l209:
  3964                           
  3965                           ;LCD.c: 19:     if (a & 2)
  3966     024E  1CF0               	btfss	Lcd_Port@a,1
  3967     024F  2A52               	goto	l210
  3968                           
  3969                           ;LCD.c: 20:         RD5 = 1;
  3970     0250  1688               	bsf	8,5	;volatile
  3971     0251  2A53               	goto	l211
  3972     0252                     l210:	
  3973                           ;LCD.c: 21:     else
  3974                           
  3975                           
  3976                           ;LCD.c: 22:         RD5 = 0;
  3977     0252  1288               	bcf	8,5	;volatile
  3978     0253                     l211:
  3979                           
  3980                           ;LCD.c: 24:     if (a & 4)
  3981     0253  1D70               	btfss	Lcd_Port@a,2
  3982     0254  2A57               	goto	l212
  3983                           
  3984                           ;LCD.c: 25:         RD6 = 1;
  3985     0255  1708               	bsf	8,6	;volatile
  3986     0256  2A58               	goto	l213
  3987     0257                     l212:	
  3988                           ;LCD.c: 26:     else
  3989                           
  3990                           
  3991                           ;LCD.c: 27:         RD6 = 0;
  3992     0257  1308               	bcf	8,6	;volatile
  3993     0258                     l213:
  3994                           
  3995                           ;LCD.c: 29:     if (a & 8)
  3996     0258  1DF0               	btfss	Lcd_Port@a,3
  3997     0259  2A5C               	goto	l214
  3998                           
  3999                           ;LCD.c: 30:         RD7 = 1;
  4000     025A  1788               	bsf	8,7	;volatile
  4001     025B  0008               	return
  4002     025C                     l214:	
  4003                           ;LCD.c: 31:     else
  4004                           
  4005                           
  4006                           ;LCD.c: 32:         RD7 = 0;
  4007     025C  1388               	bcf	8,7	;volatile
  4008     025D  0008               	return
  4009     025E                     __end_of_Lcd_Port:
  4010     007E                     btemp	set	126	;btemp
  4011     007E                     wtemp0	set	126
  4012                           
  4013                           	psect	idloc
  4014                           
  4015                           ;Config register IDLOC0 @ 0x2000
  4016                           ;	unspecified, using default values
  4017     2000                     	org	8192
  4018     2000  3FFF               	dw	16383
  4019                           
  4020                           ;Config register IDLOC1 @ 0x2001
  4021                           ;	unspecified, using default values
  4022     2001                     	org	8193
  4023     2001  3FFF               	dw	16383
  4024                           
  4025                           ;Config register IDLOC2 @ 0x2002
  4026                           ;	unspecified, using default values
  4027     2002                     	org	8194
  4028     2002  3FFF               	dw	16383
  4029                           
  4030                           ;Config register IDLOC3 @ 0x2003
  4031                           ;	unspecified, using default values
  4032     2003                     	org	8195
  4033     2003  3FFF               	dw	16383
  4034                           
  4035                           	psect	config
  4036                           
  4037                           ;Config register CONFIG1 @ 0x2007
  4038                           ;	Oscillator Selection bits
  4039                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4040                           ;	Watchdog Timer Enable bit
  4041                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4042                           ;	Power-up Timer Enable bit
  4043                           ;	PWRTE = OFF, PWRT disabled
  4044                           ;	RE3/MCLR pin function select bit
  4045                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4046                           ;	Code Protection bit
  4047                           ;	CP = OFF, Program memory code protection is disabled
  4048                           ;	Data Code Protection bit
  4049                           ;	CPD = OFF, Data memory code protection is disabled
  4050                           ;	Brown Out Reset Selection bits
  4051                           ;	BOREN = OFF, BOR disabled
  4052                           ;	Internal External Switchover bit
  4053                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4054                           ;	Fail-Safe Clock Monitor Enabled bit
  4055                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4056                           ;	Low Voltage Programming Enable bit
  4057                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4058                           ;	In-Circuit Debugger Mode bit
  4059                           ;	DEBUG = 0x1, unprogramme  4060     2007                     	org	8199
  4061     2007  20D4               	dw	8404
  4062                           
  4063                           ;Config register CONFIG2 @ 0x2008
  4064                           ;	Brown-out Reset Selection bit
  4065                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4066                           ;	Flash Program Memory Self Write Enable bits
  4067                           ;	WRT = OFF, Write protection off
  4068     2008                     	org	8200
  4069     2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     15      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_Escribir_dato
    _I2C_Master_Init->___lldiv
    _leer_x->_convertir
    _convertir->___bmul
    _leer_temperatura->_Escribir_dato
    _Escribir_dato->_descomponer
    _descomponer->___lbmod
    _Lcd_Set_Cursor->_Lcd_Cmd
    _enviar_x->_I2C_Master_Write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_portsetup
    _portsetup->_I2C_Master_Init
    _leer_temperatura->_Escribir_dato

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   15987
                                             11 BANK0      4     4      0
                      _Escribir_dato
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _enviar_x
                   _leer_temperatura
                             _leer_x
                          _portsetup
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _portsetup                                            3     3      0     412
                                              8 BANK0      3     3      0
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _leer_x                                               4     4      0    1632
                                              9 COMMON     4     4      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _convertir
 ---------------------------------------------------------------------------------
 (2) _convertir                                            5     5      0     281
                                              4 COMMON     5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _leer_temperatura                                     2     2      0    5501
                                              1 BANK0      2     2      0
                      _Escribir_dato
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _Escribir_dato                                        3     1      2    4218
                                             12 COMMON     2     0      2
                                              0 BANK0      1     1      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                        _descomponer
                          _inttochar
 ---------------------------------------------------------------------------------
 (3) _inttochar                                            1     1      0     220
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _descomponer                                          6     3      3    1256
                                              6 COMMON     6     3      3
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              6     5      1     374
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              5     4      1     377
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       6     5      1     760
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _enviar_x                                             4     3      1    1358
                                              2 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1086
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     334
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_dato
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _descomponer
       ___lbdiv
       ___lbmod
     _inttochar
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_Char
   _Lcd_Write_String
     _Lcd_Write_Char
   _enviar_x
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _leer_temperatura
     _Escribir_dato
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _leer_x
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _convertir
       ___bmul
   _portsetup
     _I2C_Master_Init
       ___lldiv
   _setupINTOSC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      30       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      22       5       42.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      30      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 08 01:15:16 2023

                               pc 0002                    ___bmul@product 0072                    ?_Escribir_dato 007C  
                              fsr 0004                               l210 0252                               l211 0253  
                             l212 0257                               l213 0258                               l214 025C  
                             l208 024C                               l209 024E                               l171 021A  
                             l190 0310                               l280 0572                               l281 057A  
                             l275 0545                               l276 054E                               l189 030F  
                             l277 0557                               l278 0560                               l279 0569  
                             l579 02A8                               _RD3 0043                               _RD4 0044  
                             _RD5 0045                               _RD6 0046                               _RD7 0047  
                             u815 0296                               u855 0484                               u875 04A3  
                             u885 0350                               _min 002D                               _sec 002F  
                             fsr0 0004                               indf 0000                              l1407 02CD  
                            l1415 0293                              l1531 045C                              l1523 0456  
                            l1515 0450                              l1507 044A                              l1603 0626  
                            l1437 0499                              l1607 0633                              l1395 02B5  
                            l1563 0474                              l1555 046E                              l1547 0468  
                            l1539 0462                              l1811 0733                              l1803 0725  
                            l1397 02BE                              l1485 0405                              l1477 03FA  
                            l1821 073F                              l1805 0727                              l1813 0734  
                            l1719 02D2                              l1575 0237                              l1823 0742  
                            l1831 074D                              l1593 05EE                              l1499 0445  
                            l1579 023D                              l1595 05FE                              l1851 07D8  
                            l1843 07CB                              l1685 0580                              l1829 074B  
                            l1781 06EF                              l1749 0687                              l1839 0797  
                            l1775 06CE                              l1793 0716                              l1785 06F3  
                            l1795 0717                              STR_1 0011                              STR_2 0009  
                            u1105 0615                              u1115 0627                              u1135 0382  
                            u1155 027D                              u1075 05F2                              u1095 0600  
                            u1507 036D                              u1517 058D                              u1527 059C  
                            u1537 05AB                              u1457 0790                              u1547 026D  
                            u1467 07C6                              u1477 032F                              u1487 042F  
                            u1497 035E                              _WPUB 0095                 ?_Lcd_Write_String 0070  
__end_of_I2C_Master_RepeatedStart 0213                              _main 063C                              _modo 002B  
                            btemp 007E                              start 0000                ??_Lcd_Write_String 0075  
                 __end_of_Lcd_Cmd 0276                 ___bmul@multiplier 0073                  ?_I2C_Master_Init 0033  
                ?_I2C_Master_Read 0070                  ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070  
                           ?_main 0070                   __end_of___lbdiv 02CF                   __end_of___lbmod 02AE  
                           _ANSEL 0188                   __end_of___lldiv 063C                             _SERVO 002A  
                           _PORTB 0006                             _PORTD 0008                             _TRISB 0086  
                           _TRISD 0088                             pclath 000A                             status 0003  
                           wtemp0 007E                   ___lbdiv@divisor 0070                       leer_x@valor 007C  
                 ___lbdiv@counter 0073                  _leer_temperatura 040B                  __end_of_Lcd_Init 05DE  
                __end_of_Lcd_Port 025E                   __initialization 07F5                   ??_Escribir_dato 007E  
                    __end_of_main 07F5                            ??_main 003E                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070                ??_I2C_Master_Write 0072  
                          _ANSELH 0189                         ??_Lcd_Cmd 0071                            _SSPADD 0093  
                          _SSPCON 0014                            _SSPBUF 0013          _I2C_Master_RepeatedStart 020E  
                          ___bmul 0235                            _decena 0031                         ??___lbdiv 0071  
                       ??___lbmod 0071                         ??___lldiv 0078                  __end_of_enviar_x 03D8  
                          _buffer 0024                            _conver 0020                            _leer_x 04B8  
                          _valADC 0027                            _unidad 0032                      ?_setupINTOSC 0070  
                ___lbdiv@dividend 0072                   Lcd_Set_Cursor@a 0076                   Lcd_Set_Cursor@b 0074  
                 Lcd_Set_Cursor@y 0078                   Lcd_Set_Cursor@z 0077                   ___lbmod@divisor 0070  
         __end_of__initialization 07FC                   ___lbmod@counter 0074                 __end_of_Lcd_Clear 0235  
             ___bmul@multiplicand 0070                   descomponer@cent 0079                    __pcstackCOMMON 0070  
                ___lbdiv@quotient 0074                    _Lcd_Set_Cursor 047A                    _OPTION_REGbits 0081  
                       ?_Lcd_Init 0070                         ?_Lcd_Port 0070                      enviar_x@val1 0075  
                    enviar_x@val2 0072                        __pbssBANK0 0020                        __pmaintext 063C  
                         ?___bmul 0070               convertir@conversion 0077                           ?_leer_x 0070  
          __end_of_Lcd_Set_Cursor 04B8          __end_of_leer_temperatura 043F                        ??_Lcd_Init 0074  
                      ??_Lcd_Port 0070                           _SSPCON2 0091                           _SSPSTAT 0094  
                      __stringtab 0003                         ?_enviar_x 0072                    _Lcd_Write_Char 0343  
                         _Lcd_Cmd 025E                           ___lbdiv 02AE                           ___lbmod 028F  
                         ___lldiv 05DE                 __end_of_convertir 028F                   ?_Lcd_Set_Cursor 0074  
                         __ptext1 053D                           __ptext2 0316                           __ptext3 0374  
                         __ptext4 05DE                           __ptext5 04B8                           __ptext6 0276  
                         __ptext7 0235                           __ptext8 020E                           __ptext9 040B  
                         _minutos 002C                           _tempint 0030                           clrloop0 0223  
               __end_of_inttochar 047A            __end_of_Lcd_Write_Char 0374              end_of_initialization 07FC  
      ??_I2C_Master_RepeatedStart 0070                        ??_enviar_x 0073                   ___lldiv@divisor 0070  
                 ___lldiv@counter 007D                  I2C_Master_Init@c 0033                  I2C_Master_Read@a 0070  
                   leer_x@address 007B                         Lcd_Port@a 0070                 __end_of_portsetup 0343  
           __end_of_Escribir_dato 053D                         _PORTBbits 0006                         _PORTDbits 0008  
                   ??_descomponer 0079                  ___lbmod@dividend 0073                         _TRISCbits 0087  
                 ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0077                 Lcd_Write_String@i 0075  
                     ___lbmod@rem 0075                         _Lcd_Clear 022A                    __end_of___bmul 0246  
                _Lcd_Write_String 02CF                    __end_of_leer_x 04F7               start_initialization 07F5  
             __end_of_descomponer 040B                 ??_I2C_Master_Init 0037                 ??_I2C_Master_Read 0072  
               ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070                 Escribir_dato@dato 0033  
               Escribir_dato@posx 007C                 Escribir_dato@posy 007D                        ?_Lcd_Clear 0070  
                        ??___bmul 0071                          ??_leer_x 0079                   Lcd_Write_Char@a 0074  
                 Lcd_Write_Char@y 0073                         ___latbits 0002                    descomponer@dec 007B  
                   __pcstackBANK0 0033                 ?_leer_temperatura 0070                    descomponer@num 0078  
                  descomponer@pos 0076                    descomponer@uni 007A                ??_leer_temperatura 0034  
                 setupINTOSC@IRCF 0070                          ?_Lcd_Cmd 0070                  _I2C_Master_Start 0204  
                _I2C_Master_Write 0213                  ??_Lcd_Set_Cursor 0075                      inttochar@num 0070  
                        ?___lbdiv 0070                          ?___lbmod 0070                          ?___lldiv 0070  
                       __pstrings 0003                         _convertir 0276                       _descomponer 03D8  
                       _inttochar 043F                         clear_ram0 0222                          Lcd_Cmd@a 0073  
                     ??_Lcd_Clear 0074                       __stringbase 0008                     ??_setupINTOSC 0070  
                       _portsetup 0316                        ?_convertir 0070                  ??_Lcd_Write_Char 0071  
                 convertir@decena 0076                          _Lcd_Init 0583                          _Lcd_Port 0246  
             I2C_Master_Read@temp 0074                   convertir@unidad 0075          __end_of_Lcd_Write_String 02F1  
                      ?_inttochar 0070         ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0009  
                      ?_portsetup 0070                   _I2C_Master_Init 0374                   _I2C_Master_Read 02F1  
                 _I2C_Master_Wait 021A                   _I2C_Master_Stop 0209                          _main$198 0041  
                        __ptext10 02F1                          __ptext11 04F7                          __ptext20 0204  
                        __ptext12 043F                          __ptext21 021A                          __ptext13 03D8  
                        __ptext22 02CF                          __ptext14 028F                          __ptext23 0343  
                        __ptext15 02AE                          __ptext24 0583                          __ptext16 047A  
                        __ptext25 022A                          __ptext17 03A5                          __ptext26 025E  
                        __ptext18 0213                          __ptext27 0246                          __ptext19 0209  
             __end_of_setupINTOSC 0583                          _enviar_x 03A5                          _segundos 002E  
                  convertir@valor 0078                       ??_convertir 0074          __end_of_I2C_Master_Start 0209  
        __end_of_I2C_Master_Write 021A                Lcd_Write_Char@temp 0072                  ___lldiv@dividend 0074  
                     ??_inttochar 0070                         stringcode 0003                        _OSCCONbits 008F  
         __end_of_I2C_Master_Init 03A5           __end_of_I2C_Master_Read 0316           __end_of_I2C_Master_Wait 0222  
                   _Escribir_dato 04F7           __end_of_I2C_Master_Stop 020E                Lcd_Set_Cursor@temp 0079  
                     ??_portsetup 003B                       _setupINTOSC 053D                      ?_descomponer 0076  
                ___lldiv@quotient 0079                 I2C_Master_Write@d 0070                          stringdir 0003  
                        stringtab 0003                       _SSPCON2bits 0091  
